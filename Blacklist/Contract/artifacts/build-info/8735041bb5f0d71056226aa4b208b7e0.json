{
	"id": "8735041bb5f0d71056226aa4b208b7e0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"Contract/Mytoken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\nimport \"./ERC20.sol\";\r\nimport \"./Ownable.sol\";\r\n\r\ncontract Mytoken is ERC20, Ownable {\r\nuint256 public tokensPerEth = 10;\r\n    event BuyTokens(address buyer, uint256 amountOfETH, uint256 amountOfTokens);\r\nMytoken mytoken;\r\n    constructor()ERC20(\"Mytoken\",\"MYT\") Ownable(msg.sender) {\r\n\r\n        _mint(msg.sender,5000* (10**18));\r\n    }\r\n\r\n     // Function to mint new tokens\r\n    function mint(address account, uint256 amount) public onlyOwner {\r\n        require(account != address(0), \"Invalid address\");\r\n        require(amount > 0, \"Amount must be greater than 0\");\r\n        _mint(account, amount);\r\n    }\r\n\r\n    // Function to burn token\r\n    function burn(address useradd, uint256 amount) public {\r\n        _burn(useradd, amount);\r\n    }\r\n    \r\n}"
			},
			"Contract/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {Context} from \"./Context.sol\";\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * The initial owner is set to the address provided by the deployer. This can\r\n * later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    /**\r\n     * @dev The caller account is not authorized to perform an operation.\r\n     */\r\n    error OwnableUnauthorizedAccount(address account);\r\n\r\n    /**\r\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\r\n     */\r\n    error OwnableInvalidOwner(address owner);\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\r\n     */\r\n    constructor(address initialOwner) {\r\n        _transferOwnership(initialOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        _checkOwner();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if the sender is not the owner.\r\n     */\r\n    function _checkOwner() internal view virtual {\r\n        if (owner() != _msgSender()) {\r\n            revert OwnableUnauthorizedAccount(_msgSender());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby disabling any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        if (newOwner == address(0)) {\r\n            revert OwnableInvalidOwner(address(0));\r\n        }\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}"
			},
			"Contract/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {IERC20} from \"./IERC20.sol\";\r\nimport {IERC20Metadata} from \"./IERC20Metadata.sol\";\r\nimport {Context} from \"./Context.sol\";\r\nimport {IERC20Errors} from \"./draft-IERC6093.sol\";\r\n\r\n/**\r\n * @dev Implementation of the {IERC20} interface.\r\n *\r\n * This implementation is agnostic to the way tokens are created. This means\r\n * that a supply mechanism has to be added in a derived contract using {_mint}.\r\n *\r\n * TIP: For a detailed writeup see our guide\r\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\r\n * to implement supply mechanisms].\r\n *\r\n * The default value of {decimals} is 18. To change this, you should override\r\n * this function so it returns a different value.\r\n *\r\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\r\n * instead returning `false` on failure. This behavior is nonetheless\r\n * conventional and does not conflict with the expectations of ERC20\r\n * applications.\r\n *\r\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\r\n * This allows applications to reconstruct the allowance for all accounts just\r\n * by listening to said events. Other implementations of the EIP may not emit\r\n * these events, as it isn't required by the specification.\r\n *\r\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\r\n * functions have been added to mitigate the well-known issues around setting\r\n * allowances. See {IERC20-approve}.\r\n */\r\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\r\n    mapping(address account => uint256) private _balances;\r\n\r\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\r\n\r\n    uint256 private _totalSupply;\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n\r\n    /**\r\n     * @dev Indicates a failed `decreaseAllowance` request.\r\n     */\r\n    error ERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\r\n\r\n    /**\r\n     * @dev Sets the values for {name} and {symbol}.\r\n     *\r\n     * All two of these values are immutable: they can only be set once during\r\n     * construction.\r\n     */\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() public view virtual returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token, usually a shorter version of the\r\n     * name.\r\n     */\r\n    function symbol() public view virtual returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of decimals used to get its user representation.\r\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\r\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\r\n     *\r\n     * Tokens usually opt for a value of 18, imitating the relationship between\r\n     * Ether and Wei. This is the default value returned by this function, unless\r\n     * it's overridden.\r\n     *\r\n     * NOTE: This information is only used for _display_ purposes: it in\r\n     * no way affects any of the arithmetic of the contract, including\r\n     * {IERC20-balanceOf} and {IERC20-transfer}.\r\n     */\r\n    function decimals() public view virtual returns (uint8) {\r\n        return 18;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-totalSupply}.\r\n     */\r\n    function totalSupply() public view virtual returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-balanceOf}.\r\n     */\r\n    function balanceOf(address account) public view virtual returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transfer}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - the caller must have a balance of at least `value`.\r\n     */\r\n    function transfer(address to, uint256 value) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        _transfer(owner, to, value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-allowance}.\r\n     */\r\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-approve}.\r\n     *\r\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\r\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function approve(address spender, uint256 value) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transferFrom}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance. This is not\r\n     * required by the EIP. See the note at the beginning of {ERC20}.\r\n     *\r\n     * NOTE: Does not update the allowance if the current allowance\r\n     * is the maximum `uint256`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` and `to` cannot be the zero address.\r\n     * - `from` must have a balance of at least `value`.\r\n     * - the caller must have allowance for ``from``'s tokens of at least\r\n     * `value`.\r\n     */\r\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\r\n        address spender = _msgSender();\r\n        _spendAllowance(from, spender, value);\r\n        _transfer(from, to, value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `spender` must have allowance for the caller of at least\r\n     * `requestedDecrease`.\r\n     *\r\n     * NOTE: Although this function is designed to avoid double spending with {approval},\r\n     * it can still be frontrunned, preventing any attempt of allowance reduction.\r\n     */\r\n    function decreaseAllowance(address spender, uint256 requestedDecrease) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        uint256 currentAllowance = allowance(owner, spender);\r\n        if (currentAllowance < requestedDecrease) {\r\n            revert ERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\r\n        }\r\n        unchecked {\r\n            _approve(owner, spender, currentAllowance - requestedDecrease);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\r\n     *\r\n     * This internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\r\n     */\r\n    function _transfer(address from, address to, uint256 value) internal {\r\n        if (from == address(0)) {\r\n            revert ERC20InvalidSender(address(0));\r\n        }\r\n        if (to == address(0)) {\r\n            revert ERC20InvalidReceiver(address(0));\r\n        }\r\n        _update(from, to, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from` (or `to`) is\r\n     * the zero address. All customizations to transfers, mints, and burns should be done by overriding this function.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _update(address from, address to, uint256 value) internal virtual {\r\n        if (from == address(0)) {\r\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\r\n            _totalSupply += value;\r\n        } else {\r\n            uint256 fromBalance = _balances[from];\r\n            if (fromBalance < value) {\r\n                revert ERC20InsufficientBalance(from, fromBalance, value);\r\n            }\r\n            unchecked {\r\n                // Overflow not possible: value <= fromBalance <= totalSupply.\r\n                _balances[from] = fromBalance - value;\r\n            }\r\n        }\r\n\r\n        if (to == address(0)) {\r\n            unchecked {\r\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\r\n                _totalSupply -= value;\r\n            }\r\n        } else {\r\n            unchecked {\r\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\r\n                _balances[to] += value;\r\n            }\r\n        }\r\n\r\n        emit Transfer(from, to, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\r\n     * Relies on the `_update` mechanism\r\n     *\r\n     * Emits a {Transfer} event with `from` set to the zero address.\r\n     *\r\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\r\n     */\r\n    function _mint(address account, uint256 value) internal {\r\n        if (account == address(0)) {\r\n            revert ERC20InvalidReceiver(address(0));\r\n        }\r\n        _update(address(0), account, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys a `value` amount of tokens from `account`, by transferring it to address(0).\r\n     * Relies on the `_update` mechanism.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * NOTE: This function is not virtual, {_update} should be overridden instead\r\n     */\r\n    function _burn(address account, uint256 value) internal {\r\n        if (account == address(0)) {\r\n            revert ERC20InvalidSender(address(0));\r\n        }\r\n        _update(account, address(0), value);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\r\n     *\r\n     * This internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `owner` cannot be the zero address.\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function _approve(address owner, address spender, uint256 value) internal virtual {\r\n        _approve(owner, spender, value, true);\r\n    }\r\n\r\n    /**\r\n     * @dev Alternative version of {_approve} with an optional flag that can enable or disable the Approval event.\r\n     *\r\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\r\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\r\n     * `Approval` event during `transferFrom` operations.\r\n     *\r\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to true\r\n     * using the following override:\r\n     * ```\r\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\r\n     *     super._approve(owner, spender, value, true);\r\n     * }\r\n     * ```\r\n     *\r\n     * Requirements are the same as {_approve}.\r\n     */\r\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\r\n        if (owner == address(0)) {\r\n            revert ERC20InvalidApprover(address(0));\r\n        }\r\n        if (spender == address(0)) {\r\n            revert ERC20InvalidSpender(address(0));\r\n        }\r\n        _allowances[owner][spender] = value;\r\n        if (emitEvent) {\r\n            emit Approval(owner, spender, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\r\n     *\r\n     * Does not update the allowance value in case of infinite allowance.\r\n     * Revert if not enough allowance is available.\r\n     *\r\n     * Might emit an {Approval} event.\r\n     */\r\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\r\n        uint256 currentAllowance = allowance(owner, spender);\r\n        if (currentAllowance != type(uint256).max) {\r\n            if (currentAllowance < value) {\r\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\r\n            }\r\n            unchecked {\r\n                _approve(owner, spender, currentAllowance - value, false);\r\n            }\r\n        }\r\n    }\r\n}"
			},
			"Contract/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}"
			},
			"Contract/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Standard ERC20 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\r\n */\r\ninterface IERC20Errors {\r\n    /**\r\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param balance Current balance for the interacting account.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     */\r\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC20InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC20InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\r\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\r\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     */\r\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC20InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\r\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC20InvalidSpender(address spender);\r\n}\r\n\r\n/**\r\n * @dev Standard ERC721 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\r\n */\r\ninterface IERC721Errors {\r\n    /**\r\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\r\n     * Used in balance queries.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC721InvalidOwner(address owner);\r\n\r\n    /**\r\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC721NonexistentToken(uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param tokenId Identifier number of a token.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC721InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC721InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC721InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC721InvalidOperator(address operator);\r\n}\r\n\r\n/**\r\n * @dev Standard ERC1155 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\r\n */\r\ninterface IERC1155Errors {\r\n    /**\r\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param balance Current balance for the interacting account.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC1155InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC1155InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC1155MissingApprovalForAll(address operator, address owner);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC1155InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC1155InvalidOperator(address operator);\r\n\r\n    /**\r\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\r\n     * Used in batch transfers.\r\n     * @param idsLength Length of the array of token identifiers\r\n     * @param valuesLength Length of the array of token amounts\r\n     */\r\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\r\n}"
			},
			"Contract/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {IERC20} from \"./IERC20.sol\";\r\n\r\n/**\r\n * @dev Interface for the optional metadata functions from the ERC20 standard.\r\n */\r\ninterface IERC20Metadata is IERC20 {\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the decimals places of the token.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n}"
			},
			"Contract/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    /**\r\n     * @dev Returns the value of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the value of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\r\n     * caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 value) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\r\n     * allowance mechanism. `value` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Contract/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contract/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contract/Context.sol\":{\"keccak256\":\"0x3cd212092a3b2272c0b9eca9e7f64160e63e2aeb323df43cdff962938c6246fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d815d61901925dce73ed79508c260e588c4d68a4e46a2b6994a04af70581f493\",\"dweb:/ipfs/Qmc121ZKzmsAdndWaoXsNc4G7jtYUMK2ZTBuYJjj3m6qdg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Contract/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "ERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"errors": {
							"ERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `requestedDecrease`. NOTE: Although this function is designed to avoid double spending with {approval}, it can still be frontrunned, preventing any attempt of allowance reduction."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"ERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"errors\":{\"ERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `requestedDecrease`. NOTE: Although this function is designed to avoid double spending with {approval}, it can still be frontrunned, preventing any attempt of allowance reduction.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contract/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contract/Context.sol\":{\"keccak256\":\"0x3cd212092a3b2272c0b9eca9e7f64160e63e2aeb323df43cdff962938c6246fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d815d61901925dce73ed79508c260e588c4d68a4e46a2b6994a04af70581f493\",\"dweb:/ipfs/Qmc121ZKzmsAdndWaoXsNc4G7jtYUMK2ZTBuYJjj3m6qdg\"]},\"Contract/ERC20.sol\":{\"keccak256\":\"0xa32b1d99c6115118555e039e5fbcdb176a5f3ed52cba87dce3bcda588c1b298f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc783797e9cee3f0fbdd59dd1fbbec4c6aa230712d798d8892b37b9c54b5bbbc\",\"dweb:/ipfs/QmboeDfzBQ8xyh4nS1BVRBmbZDBx8Mme5eoX9hNc2jLkLb\"]},\"Contract/IERC20.sol\":{\"keccak256\":\"0x052ce219bfeae109b7ad02f083ca7f1f47525e7faf79521305a30fcf40a08a89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75db5c33888c4cd26d6fef902d64b444ceb99e31fa8042466037e01530c9c7eb\",\"dweb:/ipfs/QmZ2MWSXhSCXAvyY4xLWsABjc93Tq4psYudt4PRR9dAXeD\"]},\"Contract/IERC20Metadata.sol\":{\"keccak256\":\"0x3be45cda784d1142bf36aa2306800d11333d447922b6907f811d187eb45e7d41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb96fb7bedc5edcc5335ac0831ae00004e6bb9fc2ca3a914d1cd9f7bfe37349a\",\"dweb:/ipfs/QmePrDpmaTMye6c6wJA9u9qL6d4pP4F6PK7Ws8Y2d5dxFn\"]},\"Contract/draft-IERC6093.sol\":{\"keccak256\":\"0x28f9065ac5ac49eec762f5e09d83ad395fcc788ed9e8684fb111d64b3e2d8f7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d8cb32744155f6f9531fbaaf2c022157be77052b64e7a9bdc55ef8d17e3e67b\",\"dweb:/ipfs/QmWda2bAAzvahMATWyNSLUFy7WUorq6q2316YGPMVN8t7Z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 44,
								"contract": "Contract/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 50,
								"contract": "Contract/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 52,
								"contract": "Contract/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 54,
								"contract": "Contract/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 56,
								"contract": "Contract/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Contract/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contract/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contract/IERC20.sol\":{\"keccak256\":\"0x052ce219bfeae109b7ad02f083ca7f1f47525e7faf79521305a30fcf40a08a89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75db5c33888c4cd26d6fef902d64b444ceb99e31fa8042466037e01530c9c7eb\",\"dweb:/ipfs/QmZ2MWSXhSCXAvyY4xLWsABjc93Tq4psYudt4PRR9dAXeD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Contract/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contract/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contract/IERC20.sol\":{\"keccak256\":\"0x052ce219bfeae109b7ad02f083ca7f1f47525e7faf79521305a30fcf40a08a89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75db5c33888c4cd26d6fef902d64b444ceb99e31fa8042466037e01530c9c7eb\",\"dweb:/ipfs/QmZ2MWSXhSCXAvyY4xLWsABjc93Tq4psYudt4PRR9dAXeD\"]},\"Contract/IERC20Metadata.sol\":{\"keccak256\":\"0x3be45cda784d1142bf36aa2306800d11333d447922b6907f811d187eb45e7d41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb96fb7bedc5edcc5335ac0831ae00004e6bb9fc2ca3a914d1cd9f7bfe37349a\",\"dweb:/ipfs/QmePrDpmaTMye6c6wJA9u9qL6d4pP4F6PK7Ws8Y2d5dxFn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Contract/Mytoken.sol": {
				"Mytoken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "ERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountOfETH",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountOfTokens",
									"type": "uint256"
								}
							],
							"name": "BuyTokens",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "useradd",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokensPerEth",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `requestedDecrease`. NOTE: Although this function is designed to avoid double spending with {approval}, it can still be frontrunned, preventing any attempt of allowance reduction."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Contract/Mytoken.sol\":109:811  contract Mytoken is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"Contract/Mytoken.sol\":177:179  10 */\n  0x0a\n    /* \"Contract/Mytoken.sol\":147:179  uint256 public tokensPerEth = 10 */\n  0x06\n  sstore\n    /* \"Contract/Mytoken.sol\":286:395  constructor()ERC20(\"Mytoken\",\"MYT\") Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Contract/Mytoken.sol\":330:340  msg.sender */\n  caller\n    /* \"Contract/ERC20.sol\":2296:2412  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x07\n  dup2\n  mstore\n  0x20\n  add\n  0x4d79746f6b656e00000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x4d59540000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"Contract/ERC20.sol\":2371:2376  name_ */\n  dup2\n    /* \"Contract/ERC20.sol\":2363:2368  _name */\n  0x03\n    /* \"Contract/ERC20.sol\":2363:2376  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"Contract/ERC20.sol\":2397:2404  symbol_ */\n  dup1\n    /* \"Contract/ERC20.sol\":2387:2394  _symbol */\n  0x04\n    /* \"Contract/ERC20.sol\":2387:2404  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"Contract/ERC20.sol\":2296:2412  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"Contract/Ownable.sol\":1300:1332  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"Contract/Ownable.sol\":1319:1331  initialOwner */\n  dup2\n    /* \"Contract/Ownable.sol\":1300:1318  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"Contract/Ownable.sol\":1300:1332  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"Contract/Ownable.sol\":1255:1340  constructor(address initialOwner) {... */\n  pop\n    /* \"Contract/Mytoken.sol\":355:387  _mint(msg.sender,5000* (10**18)) */\n  tag_13\n    /* \"Contract/Mytoken.sol\":361:371  msg.sender */\n  caller\n    /* \"Contract/Mytoken.sol\":372:386  5000* (10**18) */\n  0x010f0cf064dd59200000\n    /* \"Contract/Mytoken.sol\":355:360  _mint */\n  shl(0x20, tag_14)\n    /* \"Contract/Mytoken.sol\":355:387  _mint(msg.sender,5000* (10**18)) */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"Contract/Mytoken.sol\":109:811  contract Mytoken is ERC20, Ownable {... */\n  jump(tag_15)\n    /* \"Contract/Ownable.sol\":2892:3083  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"Contract/Ownable.sol\":2966:2982  address oldOwner */\n  0x00\n    /* \"Contract/Ownable.sol\":2985:2991  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Contract/Ownable.sol\":2966:2991  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"Contract/Ownable.sol\":3011:3019  newOwner */\n  dup2\n    /* \"Contract/Ownable.sol\":3002:3008  _owner */\n  0x05\n  0x00\n    /* \"Contract/Ownable.sol\":3002:3019  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Contract/Ownable.sol\":3066:3074  newOwner */\n  dup2\n    /* \"Contract/Ownable.sol\":3035:3075  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Contract/Ownable.sol\":3056:3064  oldOwner */\n  dup2\n    /* \"Contract/Ownable.sol\":3035:3075  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"Contract/Ownable.sol\":2955:3083  {... */\n  pop\n    /* \"Contract/Ownable.sol\":2892:3083  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"Contract/ERC20.sol\":10128:10341  function _mint(address account, uint256 value) internal {... */\ntag_14:\n    /* \"Contract/ERC20.sol\":10218:10219  0 */\n  0x00\n    /* \"Contract/ERC20.sol\":10199:10220  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Contract/ERC20.sol\":10199:10206  account */\n  dup3\n    /* \"Contract/ERC20.sol\":10199:10220  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"Contract/ERC20.sol\":10195:10288  if (account == address(0)) {... */\n  tag_18\n  jumpi\n    /* \"Contract/ERC20.sol\":10273:10274  0 */\n  0x00\n    /* \"Contract/ERC20.sol\":10244:10276  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"Contract/ERC20.sol\":10195:10288  if (account == address(0)) {... */\ntag_18:\n    /* \"Contract/ERC20.sol\":10298:10333  _update(address(0), account, value) */\n  tag_21\n    /* \"Contract/ERC20.sol\":10314:10315  0 */\n  0x00\n    /* \"Contract/ERC20.sol\":10318:10325  account */\n  dup4\n    /* \"Contract/ERC20.sol\":10327:10332  value */\n  dup4\n    /* \"Contract/ERC20.sol\":10298:10305  _update */\n  shl(0x20, tag_22)\n    /* \"Contract/ERC20.sol\":10298:10333  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_21:\n    /* \"Contract/ERC20.sol\":10128:10341  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"Contract/ERC20.sol\":8640:9775  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_22:\n    /* \"Contract/ERC20.sol\":8746:8747  0 */\n  0x00\n    /* \"Contract/ERC20.sol\":8730:8748  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Contract/ERC20.sol\":8730:8734  from */\n  dup4\n    /* \"Contract/ERC20.sol\":8730:8748  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"Contract/ERC20.sol\":8726:9278  if (from == address(0)) {... */\n  tag_24\n  jumpi\n    /* \"Contract/ERC20.sol\":8884:8889  value */\n  dup1\n    /* \"Contract/ERC20.sol\":8868:8880  _totalSupply */\n  0x02\n  0x00\n    /* \"Contract/ERC20.sol\":8868:8889  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_25\n  swap2\n  swap1\n  tag_26\n  jump\t// in\ntag_25:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Contract/ERC20.sol\":8726:9278  if (from == address(0)) {... */\n  jump(tag_27)\ntag_24:\n    /* \"Contract/ERC20.sol\":8922:8941  uint256 fromBalance */\n  0x00\n    /* \"Contract/ERC20.sol\":8944:8953  _balances */\n  dup1\n    /* \"Contract/ERC20.sol\":8944:8959  _balances[from] */\n  0x00\n    /* \"Contract/ERC20.sol\":8954:8958  from */\n  dup6\n    /* \"Contract/ERC20.sol\":8944:8959  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"Contract/ERC20.sol\":8922:8959  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"Contract/ERC20.sol\":8992:8997  value */\n  dup2\n    /* \"Contract/ERC20.sol\":8978:8989  fromBalance */\n  dup2\n    /* \"Contract/ERC20.sol\":8978:8997  fromBalance < value */\n  lt\n    /* \"Contract/ERC20.sol\":8974:9091  if (fromBalance < value) {... */\n  iszero\n  tag_28\n  jumpi\n    /* \"Contract/ERC20.sol\":9050:9054  from */\n  dup4\n    /* \"Contract/ERC20.sol\":9056:9067  fromBalance */\n  dup2\n    /* \"Contract/ERC20.sol\":9069:9074  value */\n  dup4\n    /* \"Contract/ERC20.sol\":9025:9075  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_29\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_30\n  jump\t// in\ntag_29:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"Contract/ERC20.sol\":8974:9091  if (fromBalance < value) {... */\ntag_28:\n    /* \"Contract/ERC20.sol\":9246:9251  value */\n  dup2\n    /* \"Contract/ERC20.sol\":9232:9243  fromBalance */\n  dup2\n    /* \"Contract/ERC20.sol\":9232:9251  fromBalance - value */\n  sub\n    /* \"Contract/ERC20.sol\":9214:9223  _balances */\n  0x00\n    /* \"Contract/ERC20.sol\":9214:9229  _balances[from] */\n  dup1\n    /* \"Contract/ERC20.sol\":9224:9228  from */\n  dup7\n    /* \"Contract/ERC20.sol\":9214:9229  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"Contract/ERC20.sol\":9214:9251  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Contract/ERC20.sol\":8907:9278  {... */\n  pop\n    /* \"Contract/ERC20.sol\":8726:9278  if (from == address(0)) {... */\ntag_27:\n    /* \"Contract/ERC20.sol\":9308:9309  0 */\n  0x00\n    /* \"Contract/ERC20.sol\":9294:9310  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Contract/ERC20.sol\":9294:9296  to */\n  dup3\n    /* \"Contract/ERC20.sol\":9294:9310  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"Contract/ERC20.sol\":9290:9725  if (to == address(0)) {... */\n  tag_31\n  jumpi\n    /* \"Contract/ERC20.sol\":9476:9481  value */\n  dup1\n    /* \"Contract/ERC20.sol\":9460:9472  _totalSupply */\n  0x02\n  0x00\n    /* \"Contract/ERC20.sol\":9460:9481  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Contract/ERC20.sol\":9290:9725  if (to == address(0)) {... */\n  jump(tag_32)\ntag_31:\n    /* \"Contract/ERC20.sol\":9693:9698  value */\n  dup1\n    /* \"Contract/ERC20.sol\":9676:9685  _balances */\n  0x00\n    /* \"Contract/ERC20.sol\":9676:9689  _balances[to] */\n  dup1\n    /* \"Contract/ERC20.sol\":9686:9688  to */\n  dup5\n    /* \"Contract/ERC20.sol\":9676:9689  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"Contract/ERC20.sol\":9676:9698  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Contract/ERC20.sol\":9290:9725  if (to == address(0)) {... */\ntag_32:\n    /* \"Contract/ERC20.sol\":9757:9759  to */\n  dup2\n    /* \"Contract/ERC20.sol\":9742:9767  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Contract/ERC20.sol\":9751:9755  from */\n  dup4\n    /* \"Contract/ERC20.sol\":9742:9767  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"Contract/ERC20.sol\":9761:9766  value */\n  dup4\n    /* \"Contract/ERC20.sol\":9742:9767  Transfer(from, to, value) */\n  mload(0x40)\n  tag_33\n  swap2\n  swap1\n  tag_34\n  jump\t// in\ntag_33:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"Contract/ERC20.sol\":8640:9775  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_35:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_36:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_37:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_38:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_65\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_65:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_66\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_67\n  tag_37\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":714:798   */\ntag_66:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_39:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_40:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_41:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_42:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_72\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_41\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":1429:1468   */\n  tag_73\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_41\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_43:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_44:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_45:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_77\n    /* \"#utility.yul\":1818:1852   */\n  tag_78\n    /* \"#utility.yul\":1827:1851   */\n  tag_79\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_43\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":1818:1852   */\n  tag_44\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":1800:1853   */\n  tag_43\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_46:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_47:\n    /* \"#utility.yul\":2056:2095   */\n  tag_82\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_45\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":2117:2208   */\n  tag_83\n    /* \"#utility.yul\":2166:2207   */\n  tag_84\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_46\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_42\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_48:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_49:\n    /* \"#utility.yul\":2377:2409   */\n  tag_87\n  tag_48\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":2418:2483   */\n  tag_88\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_47\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_50:\n    /* \"#utility.yul\":2555:2675   */\ntag_90:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_92\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_93\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_49\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_90)\ntag_92:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_51:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_96\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_39\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":2906:2935   */\n  tag_97\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_40\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_98\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_98:\n    /* \"#utility.yul\":3133:3213   */\n  tag_99\n    /* \"#utility.yul\":3189:3211   */\n  tag_100\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_40\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_50\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_95:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_52:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_53:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_103\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_52\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_54:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_105\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_53\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_7:\n    /* \"#utility.yul\":3950:3987   */\n  tag_107\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_35\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_108\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_109\n  tag_36\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":4038:4094   */\ntag_108:\n    /* \"#utility.yul\":4118:4156   */\n  tag_110\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_38\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":4203:4270   */\n  tag_111\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_51\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_113\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_114:\n    /* \"#utility.yul\":5144:5211   */\n  tag_115\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_54\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_112)\n    /* \"#utility.yul\":4365:4983   */\ntag_113:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_116\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_39\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_117:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_119\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_117)\ntag_119:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_120\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_121\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_53\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_120:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_112:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5360   */\ntag_55:\n    /* \"#utility.yul\":5271:5278   */\n  0x00\n    /* \"#utility.yul\":5311:5353   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5304:5309   */\n  dup3\n    /* \"#utility.yul\":5300:5354   */\n  and\n    /* \"#utility.yul\":5289:5354   */\n  swap1\n  pop\n    /* \"#utility.yul\":5234:5360   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5366:5462   */\ntag_56:\n    /* \"#utility.yul\":5403:5410   */\n  0x00\n    /* \"#utility.yul\":5432:5456   */\n  tag_124\n    /* \"#utility.yul\":5450:5455   */\n  dup3\n    /* \"#utility.yul\":5432:5456   */\n  tag_55\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":5421:5456   */\n  swap1\n  pop\n    /* \"#utility.yul\":5366:5462   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5468:5586   */\ntag_57:\n    /* \"#utility.yul\":5555:5579   */\n  tag_126\n    /* \"#utility.yul\":5573:5578   */\n  dup2\n    /* \"#utility.yul\":5555:5579   */\n  tag_56\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":5550:5553   */\n  dup3\n    /* \"#utility.yul\":5543:5580   */\n  mstore\n    /* \"#utility.yul\":5468:5586   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5592:5814   */\ntag_20:\n    /* \"#utility.yul\":5685:5689   */\n  0x00\n    /* \"#utility.yul\":5723:5725   */\n  0x20\n    /* \"#utility.yul\":5712:5721   */\n  dup3\n    /* \"#utility.yul\":5708:5726   */\n  add\n    /* \"#utility.yul\":5700:5726   */\n  swap1\n  pop\n    /* \"#utility.yul\":5736:5807   */\n  tag_128\n    /* \"#utility.yul\":5804:5805   */\n  0x00\n    /* \"#utility.yul\":5793:5802   */\n  dup4\n    /* \"#utility.yul\":5789:5806   */\n  add\n    /* \"#utility.yul\":5780:5786   */\n  dup5\n    /* \"#utility.yul\":5736:5807   */\n  tag_57\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":5592:5814   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5820:6000   */\ntag_58:\n    /* \"#utility.yul\":5868:5945   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":5865:5866   */\n  0x00\n    /* \"#utility.yul\":5858:5946   */\n  mstore\n    /* \"#utility.yul\":5965:5969   */\n  0x11\n    /* \"#utility.yul\":5962:5963   */\n  0x04\n    /* \"#utility.yul\":5955:5970   */\n  mstore\n    /* \"#utility.yul\":5989:5993   */\n  0x24\n    /* \"#utility.yul\":5986:5987   */\n  0x00\n    /* \"#utility.yul\":5979:5994   */\n  revert\n    /* \"#utility.yul\":6006:6197   */\ntag_26:\n    /* \"#utility.yul\":6046:6049   */\n  0x00\n    /* \"#utility.yul\":6065:6085   */\n  tag_131\n    /* \"#utility.yul\":6083:6084   */\n  dup3\n    /* \"#utility.yul\":6065:6085   */\n  tag_43\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":6060:6085   */\n  swap2\n  pop\n    /* \"#utility.yul\":6099:6119   */\n  tag_132\n    /* \"#utility.yul\":6117:6118   */\n  dup4\n    /* \"#utility.yul\":6099:6119   */\n  tag_43\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":6094:6119   */\n  swap3\n  pop\n    /* \"#utility.yul\":6142:6143   */\n  dup3\n    /* \"#utility.yul\":6139:6140   */\n  dup3\n    /* \"#utility.yul\":6135:6144   */\n  add\n    /* \"#utility.yul\":6128:6144   */\n  swap1\n  pop\n    /* \"#utility.yul\":6163:6166   */\n  dup1\n    /* \"#utility.yul\":6160:6161   */\n  dup3\n    /* \"#utility.yul\":6157:6167   */\n  gt\n    /* \"#utility.yul\":6154:6190   */\n  iszero\n  tag_133\n  jumpi\n    /* \"#utility.yul\":6170:6188   */\n  tag_134\n  tag_58\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":6154:6190   */\ntag_133:\n    /* \"#utility.yul\":6006:6197   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6203:6321   */\ntag_59:\n    /* \"#utility.yul\":6290:6314   */\n  tag_136\n    /* \"#utility.yul\":6308:6313   */\n  dup2\n    /* \"#utility.yul\":6290:6314   */\n  tag_43\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":6285:6288   */\n  dup3\n    /* \"#utility.yul\":6278:6315   */\n  mstore\n    /* \"#utility.yul\":6203:6321   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6327:6769   */\ntag_30:\n    /* \"#utility.yul\":6476:6480   */\n  0x00\n    /* \"#utility.yul\":6514:6516   */\n  0x60\n    /* \"#utility.yul\":6503:6512   */\n  dup3\n    /* \"#utility.yul\":6499:6517   */\n  add\n    /* \"#utility.yul\":6491:6517   */\n  swap1\n  pop\n    /* \"#utility.yul\":6527:6598   */\n  tag_138\n    /* \"#utility.yul\":6595:6596   */\n  0x00\n    /* \"#utility.yul\":6584:6593   */\n  dup4\n    /* \"#utility.yul\":6580:6597   */\n  add\n    /* \"#utility.yul\":6571:6577   */\n  dup7\n    /* \"#utility.yul\":6527:6598   */\n  tag_57\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":6608:6680   */\n  tag_139\n    /* \"#utility.yul\":6676:6678   */\n  0x20\n    /* \"#utility.yul\":6665:6674   */\n  dup4\n    /* \"#utility.yul\":6661:6679   */\n  add\n    /* \"#utility.yul\":6652:6658   */\n  dup6\n    /* \"#utility.yul\":6608:6680   */\n  tag_59\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":6690:6762   */\n  tag_140\n    /* \"#utility.yul\":6758:6760   */\n  0x40\n    /* \"#utility.yul\":6747:6756   */\n  dup4\n    /* \"#utility.yul\":6743:6761   */\n  add\n    /* \"#utility.yul\":6734:6740   */\n  dup5\n    /* \"#utility.yul\":6690:6762   */\n  tag_59\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":6327:6769   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6775:6997   */\ntag_34:\n    /* \"#utility.yul\":6868:6872   */\n  0x00\n    /* \"#utility.yul\":6906:6908   */\n  0x20\n    /* \"#utility.yul\":6895:6904   */\n  dup3\n    /* \"#utility.yul\":6891:6909   */\n  add\n    /* \"#utility.yul\":6883:6909   */\n  swap1\n  pop\n    /* \"#utility.yul\":6919:6990   */\n  tag_142\n    /* \"#utility.yul\":6987:6988   */\n  0x00\n    /* \"#utility.yul\":6976:6985   */\n  dup4\n    /* \"#utility.yul\":6972:6989   */\n  add\n    /* \"#utility.yul\":6963:6969   */\n  dup5\n    /* \"#utility.yul\":6919:6990   */\n  tag_59\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":6775:6997   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"Contract/Mytoken.sol\":109:811  contract Mytoken is ERC20, Ownable {... */\ntag_15:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Contract/Mytoken.sol\":109:811  contract Mytoken is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xcbdd69b5\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x9dc29fac\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x313ce567\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Contract/ERC20.sol\":2482:2573  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contract/ERC20.sol\":4775:4965  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contract/ERC20.sol\":3584:3683  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contract/ERC20.sol\":5543:5792  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contract/ERC20.sol\":3435:3519  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contract/ERC20.sol\":6201:6439  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_47:\n      tag_48\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contract/Mytoken.sol\":440:668  function mint(address account, uint256 amount) public onlyOwner {... */\n    tag_9:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      stop\n        /* \"Contract/ERC20.sol\":3746:3864  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_10:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contract/Ownable.sol\":2254:2357  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      stop\n        /* \"Contract/Ownable.sol\":1579:1666  function owner() public view virtual returns (address) {... */\n    tag_12:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contract/ERC20.sol\":2692:2787  function symbol() public view virtual returns (string memory) {... */\n    tag_13:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contract/Mytoken.sol\":707:802  function burn(address useradd, uint256 amount) public {... */\n    tag_14:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n    tag_67:\n      stop\n        /* \"Contract/ERC20.sol\":7127:7631  function decreaseAllowance(address spender, uint256 requestedDecrease) public virtual returns (bool) {... */\n    tag_15:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contract/ERC20.sol\":4069:4251  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_16:\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contract/Mytoken.sol\":147:179  uint256 public tokensPerEth = 10 */\n    tag_17:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contract/ERC20.sol\":4314:4456  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_18:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      tag_84\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contract/Ownable.sol\":2512:2732  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_19:\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n    tag_86:\n      stop\n        /* \"Contract/ERC20.sol\":2482:2573  function name() public view virtual returns (string memory) {... */\n    tag_24:\n        /* \"Contract/ERC20.sol\":2527:2540  string memory */\n      0x60\n        /* \"Contract/ERC20.sol\":2560:2565  _name */\n      0x03\n        /* \"Contract/ERC20.sol\":2553:2565  return _name */\n      dup1\n      sload\n      tag_90\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_92\n      swap1\n      tag_91\n      jump\t// in\n    tag_92:\n      dup1\n      iszero\n      tag_93\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_94\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_93)\n    tag_94:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_95:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_95\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"Contract/ERC20.sol\":2482:2573  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"Contract/ERC20.sol\":4775:4965  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_30:\n        /* \"Contract/ERC20.sol\":4848:4852  bool */\n      0x00\n        /* \"Contract/ERC20.sol\":4865:4878  address owner */\n      dup1\n        /* \"Contract/ERC20.sol\":4881:4893  _msgSender() */\n      tag_97\n        /* \"Contract/ERC20.sol\":4881:4891  _msgSender */\n      tag_98\n        /* \"Contract/ERC20.sol\":4881:4893  _msgSender() */\n      jump\t// in\n    tag_97:\n        /* \"Contract/ERC20.sol\":4865:4893  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"Contract/ERC20.sol\":4904:4935  _approve(owner, spender, value) */\n      tag_99\n        /* \"Contract/ERC20.sol\":4913:4918  owner */\n      dup2\n        /* \"Contract/ERC20.sol\":4920:4927  spender */\n      dup6\n        /* \"Contract/ERC20.sol\":4929:4934  value */\n      dup6\n        /* \"Contract/ERC20.sol\":4904:4912  _approve */\n      tag_100\n        /* \"Contract/ERC20.sol\":4904:4935  _approve(owner, spender, value) */\n      jump\t// in\n    tag_99:\n        /* \"Contract/ERC20.sol\":4953:4957  true */\n      0x01\n        /* \"Contract/ERC20.sol\":4946:4957  return true */\n      swap2\n      pop\n      pop\n        /* \"Contract/ERC20.sol\":4775:4965  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Contract/ERC20.sol\":3584:3683  function totalSupply() public view virtual returns (uint256) {... */\n    tag_34:\n        /* \"Contract/ERC20.sol\":3636:3643  uint256 */\n      0x00\n        /* \"Contract/ERC20.sol\":3663:3675  _totalSupply */\n      sload(0x02)\n        /* \"Contract/ERC20.sol\":3656:3675  return _totalSupply */\n      swap1\n      pop\n        /* \"Contract/ERC20.sol\":3584:3683  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Contract/ERC20.sol\":5543:5792  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_40:\n        /* \"Contract/ERC20.sol\":5630:5634  bool */\n      0x00\n        /* \"Contract/ERC20.sol\":5647:5662  address spender */\n      dup1\n        /* \"Contract/ERC20.sol\":5665:5677  _msgSender() */\n      tag_103\n        /* \"Contract/ERC20.sol\":5665:5675  _msgSender */\n      tag_98\n        /* \"Contract/ERC20.sol\":5665:5677  _msgSender() */\n      jump\t// in\n    tag_103:\n        /* \"Contract/ERC20.sol\":5647:5677  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"Contract/ERC20.sol\":5688:5725  _spendAllowance(from, spender, value) */\n      tag_104\n        /* \"Contract/ERC20.sol\":5704:5708  from */\n      dup6\n        /* \"Contract/ERC20.sol\":5710:5717  spender */\n      dup3\n        /* \"Contract/ERC20.sol\":5719:5724  value */\n      dup6\n        /* \"Contract/ERC20.sol\":5688:5703  _spendAllowance */\n      tag_105\n        /* \"Contract/ERC20.sol\":5688:5725  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_104:\n        /* \"Contract/ERC20.sol\":5736:5762  _transfer(from, to, value) */\n      tag_106\n        /* \"Contract/ERC20.sol\":5746:5750  from */\n      dup6\n        /* \"Contract/ERC20.sol\":5752:5754  to */\n      dup6\n        /* \"Contract/ERC20.sol\":5756:5761  value */\n      dup6\n        /* \"Contract/ERC20.sol\":5736:5745  _transfer */\n      tag_107\n        /* \"Contract/ERC20.sol\":5736:5762  _transfer(from, to, value) */\n      jump\t// in\n    tag_106:\n        /* \"Contract/ERC20.sol\":5780:5784  true */\n      0x01\n        /* \"Contract/ERC20.sol\":5773:5784  return true */\n      swap2\n      pop\n      pop\n        /* \"Contract/ERC20.sol\":5543:5792  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Contract/ERC20.sol\":3435:3519  function decimals() public view virtual returns (uint8) {... */\n    tag_43:\n        /* \"Contract/ERC20.sol\":3484:3489  uint8 */\n      0x00\n        /* \"Contract/ERC20.sol\":3509:3511  18 */\n      0x12\n        /* \"Contract/ERC20.sol\":3502:3511  return 18 */\n      swap1\n      pop\n        /* \"Contract/ERC20.sol\":3435:3519  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"Contract/ERC20.sol\":6201:6439  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_48:\n        /* \"Contract/ERC20.sol\":6289:6293  bool */\n      0x00\n        /* \"Contract/ERC20.sol\":6306:6319  address owner */\n      dup1\n        /* \"Contract/ERC20.sol\":6322:6334  _msgSender() */\n      tag_110\n        /* \"Contract/ERC20.sol\":6322:6332  _msgSender */\n      tag_98\n        /* \"Contract/ERC20.sol\":6322:6334  _msgSender() */\n      jump\t// in\n    tag_110:\n        /* \"Contract/ERC20.sol\":6306:6334  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"Contract/ERC20.sol\":6345:6409  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_111\n        /* \"Contract/ERC20.sol\":6354:6359  owner */\n      dup2\n        /* \"Contract/ERC20.sol\":6361:6368  spender */\n      dup6\n        /* \"Contract/ERC20.sol\":6398:6408  addedValue */\n      dup6\n        /* \"Contract/ERC20.sol\":6370:6395  allowance(owner, spender) */\n      tag_112\n        /* \"Contract/ERC20.sol\":6380:6385  owner */\n      dup6\n        /* \"Contract/ERC20.sol\":6387:6394  spender */\n      dup10\n        /* \"Contract/ERC20.sol\":6370:6379  allowance */\n      tag_84\n        /* \"Contract/ERC20.sol\":6370:6395  allowance(owner, spender) */\n      jump\t// in\n    tag_112:\n        /* \"Contract/ERC20.sol\":6370:6408  allowance(owner, spender) + addedValue */\n      tag_113\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n        /* \"Contract/ERC20.sol\":6345:6353  _approve */\n      tag_100\n        /* \"Contract/ERC20.sol\":6345:6409  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n    tag_111:\n        /* \"Contract/ERC20.sol\":6427:6431  true */\n      0x01\n        /* \"Contract/ERC20.sol\":6420:6431  return true */\n      swap2\n      pop\n      pop\n        /* \"Contract/ERC20.sol\":6201:6439  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Contract/Mytoken.sol\":440:668  function mint(address account, uint256 amount) public onlyOwner {... */\n    tag_52:\n        /* \"Contract/Ownable.sol\":1465:1478  _checkOwner() */\n      tag_116\n        /* \"Contract/Ownable.sol\":1465:1476  _checkOwner */\n      tag_117\n        /* \"Contract/Ownable.sol\":1465:1478  _checkOwner() */\n      jump\t// in\n    tag_116:\n        /* \"Contract/Mytoken.sol\":542:543  0 */\n      0x00\n        /* \"Contract/Mytoken.sol\":523:544  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contract/Mytoken.sol\":523:530  account */\n      dup3\n        /* \"Contract/Mytoken.sol\":523:544  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Contract/Mytoken.sol\":515:564  require(account != address(0), \"Invalid address\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_119:\n        /* \"Contract/Mytoken.sol\":592:593  0 */\n      0x00\n        /* \"Contract/Mytoken.sol\":583:589  amount */\n      dup2\n        /* \"Contract/Mytoken.sol\":583:593  amount > 0 */\n      gt\n        /* \"Contract/Mytoken.sol\":575:627  require(amount > 0, \"Amount must be greater than 0\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_122:\n        /* \"Contract/Mytoken.sol\":638:660  _mint(account, amount) */\n      tag_125\n        /* \"Contract/Mytoken.sol\":644:651  account */\n      dup3\n        /* \"Contract/Mytoken.sol\":653:659  amount */\n      dup3\n        /* \"Contract/Mytoken.sol\":638:643  _mint */\n      tag_126\n        /* \"Contract/Mytoken.sol\":638:660  _mint(account, amount) */\n      jump\t// in\n    tag_125:\n        /* \"Contract/Mytoken.sol\":440:668  function mint(address account, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Contract/ERC20.sol\":3746:3864  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_56:\n        /* \"Contract/ERC20.sol\":3811:3818  uint256 */\n      0x00\n        /* \"Contract/ERC20.sol\":3838:3847  _balances */\n      dup1\n        /* \"Contract/ERC20.sol\":3838:3856  _balances[account] */\n      0x00\n        /* \"Contract/ERC20.sol\":3848:3855  account */\n      dup4\n        /* \"Contract/ERC20.sol\":3838:3856  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Contract/ERC20.sol\":3831:3856  return _balances[account] */\n      swap1\n      pop\n        /* \"Contract/ERC20.sol\":3746:3864  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Contract/Ownable.sol\":2254:2357  function renounceOwnership() public virtual onlyOwner {... */\n    tag_59:\n        /* \"Contract/Ownable.sol\":1465:1478  _checkOwner() */\n      tag_129\n        /* \"Contract/Ownable.sol\":1465:1476  _checkOwner */\n      tag_117\n        /* \"Contract/Ownable.sol\":1465:1478  _checkOwner() */\n      jump\t// in\n    tag_129:\n        /* \"Contract/Ownable.sol\":2319:2349  _transferOwnership(address(0)) */\n      tag_131\n        /* \"Contract/Ownable.sol\":2346:2347  0 */\n      0x00\n        /* \"Contract/Ownable.sol\":2319:2337  _transferOwnership */\n      tag_132\n        /* \"Contract/Ownable.sol\":2319:2349  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_131:\n        /* \"Contract/Ownable.sol\":2254:2357  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"Contract/Ownable.sol\":1579:1666  function owner() public view virtual returns (address) {... */\n    tag_61:\n        /* \"Contract/Ownable.sol\":1625:1632  address */\n      0x00\n        /* \"Contract/Ownable.sol\":1652:1658  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contract/Ownable.sol\":1645:1658  return _owner */\n      swap1\n      pop\n        /* \"Contract/Ownable.sol\":1579:1666  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Contract/ERC20.sol\":2692:2787  function symbol() public view virtual returns (string memory) {... */\n    tag_65:\n        /* \"Contract/ERC20.sol\":2739:2752  string memory */\n      0x60\n        /* \"Contract/ERC20.sol\":2772:2779  _symbol */\n      0x04\n        /* \"Contract/ERC20.sol\":2765:2779  return _symbol */\n      dup1\n      sload\n      tag_135\n      swap1\n      tag_91\n      jump\t// in\n    tag_135:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_136\n      swap1\n      tag_91\n      jump\t// in\n    tag_136:\n      dup1\n      iszero\n      tag_137\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_138\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_137)\n    tag_138:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_139:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_139\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_137:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"Contract/ERC20.sol\":2692:2787  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"Contract/Mytoken.sol\":707:802  function burn(address useradd, uint256 amount) public {... */\n    tag_69:\n        /* \"Contract/Mytoken.sol\":772:794  _burn(useradd, amount) */\n      tag_141\n        /* \"Contract/Mytoken.sol\":778:785  useradd */\n      dup3\n        /* \"Contract/Mytoken.sol\":787:793  amount */\n      dup3\n        /* \"Contract/Mytoken.sol\":772:777  _burn */\n      tag_142\n        /* \"Contract/Mytoken.sol\":772:794  _burn(useradd, amount) */\n      jump\t// in\n    tag_141:\n        /* \"Contract/Mytoken.sol\":707:802  function burn(address useradd, uint256 amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Contract/ERC20.sol\":7127:7631  function decreaseAllowance(address spender, uint256 requestedDecrease) public virtual returns (bool) {... */\n    tag_72:\n        /* \"Contract/ERC20.sol\":7222:7226  bool */\n      0x00\n        /* \"Contract/ERC20.sol\":7239:7252  address owner */\n      dup1\n        /* \"Contract/ERC20.sol\":7255:7267  _msgSender() */\n      tag_144\n        /* \"Contract/ERC20.sol\":7255:7265  _msgSender */\n      tag_98\n        /* \"Contract/ERC20.sol\":7255:7267  _msgSender() */\n      jump\t// in\n    tag_144:\n        /* \"Contract/ERC20.sol\":7239:7267  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"Contract/ERC20.sol\":7278:7302  uint256 currentAllowance */\n      0x00\n        /* \"Contract/ERC20.sol\":7305:7330  allowance(owner, spender) */\n      tag_145\n        /* \"Contract/ERC20.sol\":7315:7320  owner */\n      dup3\n        /* \"Contract/ERC20.sol\":7322:7329  spender */\n      dup7\n        /* \"Contract/ERC20.sol\":7305:7314  allowance */\n      tag_84\n        /* \"Contract/ERC20.sol\":7305:7330  allowance(owner, spender) */\n      jump\t// in\n    tag_145:\n        /* \"Contract/ERC20.sol\":7278:7330  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"Contract/ERC20.sol\":7364:7381  requestedDecrease */\n      dup4\n        /* \"Contract/ERC20.sol\":7345:7361  currentAllowance */\n      dup2\n        /* \"Contract/ERC20.sol\":7345:7381  currentAllowance < requestedDecrease */\n      lt\n        /* \"Contract/ERC20.sol\":7341:7491  if (currentAllowance < requestedDecrease) {... */\n      iszero\n      tag_146\n      jumpi\n        /* \"Contract/ERC20.sol\":7434:7441  spender */\n      dup5\n        /* \"Contract/ERC20.sol\":7443:7459  currentAllowance */\n      dup2\n        /* \"Contract/ERC20.sol\":7461:7478  requestedDecrease */\n      dup6\n        /* \"Contract/ERC20.sol\":7405:7479  ERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease) */\n      mload(0x40)\n      0xa60f030c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_147\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Contract/ERC20.sol\":7341:7491  if (currentAllowance < requestedDecrease) {... */\n    tag_146:\n        /* \"Contract/ERC20.sol\":7526:7588  _approve(owner, spender, currentAllowance - requestedDecrease) */\n      tag_149\n        /* \"Contract/ERC20.sol\":7535:7540  owner */\n      dup3\n        /* \"Contract/ERC20.sol\":7542:7549  spender */\n      dup7\n        /* \"Contract/ERC20.sol\":7570:7587  requestedDecrease */\n      dup7\n        /* \"Contract/ERC20.sol\":7551:7567  currentAllowance */\n      dup5\n        /* \"Contract/ERC20.sol\":7551:7587  currentAllowance - requestedDecrease */\n      sub\n        /* \"Contract/ERC20.sol\":7526:7534  _approve */\n      tag_100\n        /* \"Contract/ERC20.sol\":7526:7588  _approve(owner, spender, currentAllowance - requestedDecrease) */\n      jump\t// in\n    tag_149:\n        /* \"Contract/ERC20.sol\":7619:7623  true */\n      0x01\n        /* \"Contract/ERC20.sol\":7612:7623  return true */\n      swap3\n      pop\n      pop\n      pop\n        /* \"Contract/ERC20.sol\":7127:7631  function decreaseAllowance(address spender, uint256 requestedDecrease) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Contract/ERC20.sol\":4069:4251  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_76:\n        /* \"Contract/ERC20.sol\":4138:4142  bool */\n      0x00\n        /* \"Contract/ERC20.sol\":4155:4168  address owner */\n      dup1\n        /* \"Contract/ERC20.sol\":4171:4183  _msgSender() */\n      tag_151\n        /* \"Contract/ERC20.sol\":4171:4181  _msgSender */\n      tag_98\n        /* \"Contract/ERC20.sol\":4171:4183  _msgSender() */\n      jump\t// in\n    tag_151:\n        /* \"Contract/ERC20.sol\":4155:4183  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"Contract/ERC20.sol\":4194:4221  _transfer(owner, to, value) */\n      tag_152\n        /* \"Contract/ERC20.sol\":4204:4209  owner */\n      dup2\n        /* \"Contract/ERC20.sol\":4211:4213  to */\n      dup6\n        /* \"Contract/ERC20.sol\":4215:4220  value */\n      dup6\n        /* \"Contract/ERC20.sol\":4194:4203  _transfer */\n      tag_107\n        /* \"Contract/ERC20.sol\":4194:4221  _transfer(owner, to, value) */\n      jump\t// in\n    tag_152:\n        /* \"Contract/ERC20.sol\":4239:4243  true */\n      0x01\n        /* \"Contract/ERC20.sol\":4232:4243  return true */\n      swap2\n      pop\n      pop\n        /* \"Contract/ERC20.sol\":4069:4251  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Contract/Mytoken.sol\":147:179  uint256 public tokensPerEth = 10 */\n    tag_79:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"Contract/ERC20.sol\":4314:4456  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_84:\n        /* \"Contract/ERC20.sol\":4394:4401  uint256 */\n      0x00\n        /* \"Contract/ERC20.sol\":4421:4432  _allowances */\n      0x01\n        /* \"Contract/ERC20.sol\":4421:4439  _allowances[owner] */\n      0x00\n        /* \"Contract/ERC20.sol\":4433:4438  owner */\n      dup5\n        /* \"Contract/ERC20.sol\":4421:4439  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Contract/ERC20.sol\":4421:4448  _allowances[owner][spender] */\n      0x00\n        /* \"Contract/ERC20.sol\":4440:4447  spender */\n      dup4\n        /* \"Contract/ERC20.sol\":4421:4448  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Contract/ERC20.sol\":4414:4448  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"Contract/ERC20.sol\":4314:4456  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Contract/Ownable.sol\":2512:2732  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_88:\n        /* \"Contract/Ownable.sol\":1465:1478  _checkOwner() */\n      tag_155\n        /* \"Contract/Ownable.sol\":1465:1476  _checkOwner */\n      tag_117\n        /* \"Contract/Ownable.sol\":1465:1478  _checkOwner() */\n      jump\t// in\n    tag_155:\n        /* \"Contract/Ownable.sol\":2617:2618  0 */\n      0x00\n        /* \"Contract/Ownable.sol\":2597:2619  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contract/Ownable.sol\":2597:2605  newOwner */\n      dup2\n        /* \"Contract/Ownable.sol\":2597:2619  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Contract/Ownable.sol\":2593:2686  if (newOwner == address(0)) {... */\n      tag_157\n      jumpi\n        /* \"Contract/Ownable.sol\":2671:2672  0 */\n      0x00\n        /* \"Contract/Ownable.sol\":2643:2674  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_158\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Contract/Ownable.sol\":2593:2686  if (newOwner == address(0)) {... */\n    tag_157:\n        /* \"Contract/Ownable.sol\":2696:2724  _transferOwnership(newOwner) */\n      tag_159\n        /* \"Contract/Ownable.sol\":2715:2723  newOwner */\n      dup2\n        /* \"Contract/Ownable.sol\":2696:2714  _transferOwnership */\n      tag_132\n        /* \"Contract/Ownable.sol\":2696:2724  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_159:\n        /* \"Contract/Ownable.sol\":2512:2732  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Contract/Context.sol\":657:755  function _msgSender() internal view virtual returns (address) {... */\n    tag_98:\n        /* \"Contract/Context.sol\":710:717  address */\n      0x00\n        /* \"Contract/Context.sol\":737:747  msg.sender */\n      caller\n        /* \"Contract/Context.sol\":730:747  return msg.sender */\n      swap1\n      pop\n        /* \"Contract/Context.sol\":657:755  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Contract/ERC20.sol\":11324:11462  function _approve(address owner, address spender, uint256 value) internal virtual {... */\n    tag_100:\n        /* \"Contract/ERC20.sol\":11417:11454  _approve(owner, spender, value, true) */\n      tag_162\n        /* \"Contract/ERC20.sol\":11426:11431  owner */\n      dup4\n        /* \"Contract/ERC20.sol\":11433:11440  spender */\n      dup4\n        /* \"Contract/ERC20.sol\":11442:11447  value */\n      dup4\n        /* \"Contract/ERC20.sol\":11449:11453  true */\n      0x01\n        /* \"Contract/ERC20.sol\":11417:11425  _approve */\n      tag_163\n        /* \"Contract/ERC20.sol\":11417:11454  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_162:\n        /* \"Contract/ERC20.sol\":11324:11462  function _approve(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Contract/ERC20.sol\":13061:13548  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_105:\n        /* \"Contract/ERC20.sol\":13161:13185  uint256 currentAllowance */\n      0x00\n        /* \"Contract/ERC20.sol\":13188:13213  allowance(owner, spender) */\n      tag_165\n        /* \"Contract/ERC20.sol\":13198:13203  owner */\n      dup5\n        /* \"Contract/ERC20.sol\":13205:13212  spender */\n      dup5\n        /* \"Contract/ERC20.sol\":13188:13197  allowance */\n      tag_84\n        /* \"Contract/ERC20.sol\":13188:13213  allowance(owner, spender) */\n      jump\t// in\n    tag_165:\n        /* \"Contract/ERC20.sol\":13161:13213  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"Contract/ERC20.sol\":13248:13265  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"Contract/ERC20.sol\":13228:13244  currentAllowance */\n      dup2\n        /* \"Contract/ERC20.sol\":13228:13265  currentAllowance != type(uint256).max */\n      eq\n        /* \"Contract/ERC20.sol\":13224:13541  if (currentAllowance != type(uint256).max) {... */\n      tag_166\n      jumpi\n        /* \"Contract/ERC20.sol\":13305:13310  value */\n      dup2\n        /* \"Contract/ERC20.sol\":13286:13302  currentAllowance */\n      dup2\n        /* \"Contract/ERC20.sol\":13286:13310  currentAllowance < value */\n      lt\n        /* \"Contract/ERC20.sol\":13282:13414  if (currentAllowance < value) {... */\n      iszero\n      tag_167\n      jumpi\n        /* \"Contract/ERC20.sol\":13365:13372  spender */\n      dup3\n        /* \"Contract/ERC20.sol\":13374:13390  currentAllowance */\n      dup2\n        /* \"Contract/ERC20.sol\":13392:13397  value */\n      dup4\n        /* \"Contract/ERC20.sol\":13338:13398  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Contract/ERC20.sol\":13282:13414  if (currentAllowance < value) {... */\n    tag_167:\n        /* \"Contract/ERC20.sol\":13457:13514  _approve(owner, spender, currentAllowance - value, false) */\n      tag_169\n        /* \"Contract/ERC20.sol\":13466:13471  owner */\n      dup5\n        /* \"Contract/ERC20.sol\":13473:13480  spender */\n      dup5\n        /* \"Contract/ERC20.sol\":13501:13506  value */\n      dup5\n        /* \"Contract/ERC20.sol\":13482:13498  currentAllowance */\n      dup5\n        /* \"Contract/ERC20.sol\":13482:13506  currentAllowance - value */\n      sub\n        /* \"Contract/ERC20.sol\":13508:13513  false */\n      0x00\n        /* \"Contract/ERC20.sol\":13457:13465  _approve */\n      tag_163\n        /* \"Contract/ERC20.sol\":13457:13514  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_169:\n        /* \"Contract/ERC20.sol\":13224:13541  if (currentAllowance != type(uint256).max) {... */\n    tag_166:\n        /* \"Contract/ERC20.sol\":13150:13548  {... */\n      pop\n        /* \"Contract/ERC20.sol\":13061:13548  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Contract/ERC20.sol\":8016:8324  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_107:\n        /* \"Contract/ERC20.sol\":8116:8117  0 */\n      0x00\n        /* \"Contract/ERC20.sol\":8100:8118  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contract/ERC20.sol\":8100:8104  from */\n      dup4\n        /* \"Contract/ERC20.sol\":8100:8118  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Contract/ERC20.sol\":8096:8184  if (from == address(0)) {... */\n      tag_171\n      jumpi\n        /* \"Contract/ERC20.sol\":8169:8170  0 */\n      0x00\n        /* \"Contract/ERC20.sol\":8142:8172  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_172\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Contract/ERC20.sol\":8096:8184  if (from == address(0)) {... */\n    tag_171:\n        /* \"Contract/ERC20.sol\":8212:8213  0 */\n      0x00\n        /* \"Contract/ERC20.sol\":8198:8214  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contract/ERC20.sol\":8198:8200  to */\n      dup3\n        /* \"Contract/ERC20.sol\":8198:8214  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Contract/ERC20.sol\":8194:8282  if (to == address(0)) {... */\n      tag_173\n      jumpi\n        /* \"Contract/ERC20.sol\":8267:8268  0 */\n      0x00\n        /* \"Contract/ERC20.sol\":8238:8270  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Contract/ERC20.sol\":8194:8282  if (to == address(0)) {... */\n    tag_173:\n        /* \"Contract/ERC20.sol\":8292:8316  _update(from, to, value) */\n      tag_175\n        /* \"Contract/ERC20.sol\":8300:8304  from */\n      dup4\n        /* \"Contract/ERC20.sol\":8306:8308  to */\n      dup4\n        /* \"Contract/ERC20.sol\":8310:8315  value */\n      dup4\n        /* \"Contract/ERC20.sol\":8292:8299  _update */\n      tag_176\n        /* \"Contract/ERC20.sol\":8292:8316  _update(from, to, value) */\n      jump\t// in\n    tag_175:\n        /* \"Contract/ERC20.sol\":8016:8324  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Contract/Ownable.sol\":1744:1910  function _checkOwner() internal view virtual {... */\n    tag_117:\n        /* \"Contract/Ownable.sol\":1815:1827  _msgSender() */\n      tag_178\n        /* \"Contract/Ownable.sol\":1815:1825  _msgSender */\n      tag_98\n        /* \"Contract/Ownable.sol\":1815:1827  _msgSender() */\n      jump\t// in\n    tag_178:\n        /* \"Contract/Ownable.sol\":1804:1827  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contract/Ownable.sol\":1804:1811  owner() */\n      tag_179\n        /* \"Contract/Ownable.sol\":1804:1809  owner */\n      tag_61\n        /* \"Contract/Ownable.sol\":1804:1811  owner() */\n      jump\t// in\n    tag_179:\n        /* \"Contract/Ownable.sol\":1804:1827  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Contract/Ownable.sol\":1800:1903  if (owner() != _msgSender()) {... */\n      tag_180\n      jumpi\n        /* \"Contract/Ownable.sol\":1878:1890  _msgSender() */\n      tag_181\n        /* \"Contract/Ownable.sol\":1878:1888  _msgSender */\n      tag_98\n        /* \"Contract/Ownable.sol\":1878:1890  _msgSender() */\n      jump\t// in\n    tag_181:\n        /* \"Contract/Ownable.sol\":1851:1891  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_182\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Contract/Ownable.sol\":1800:1903  if (owner() != _msgSender()) {... */\n    tag_180:\n        /* \"Contract/Ownable.sol\":1744:1910  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"Contract/ERC20.sol\":10128:10341  function _mint(address account, uint256 value) internal {... */\n    tag_126:\n        /* \"Contract/ERC20.sol\":10218:10219  0 */\n      0x00\n        /* \"Contract/ERC20.sol\":10199:10220  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contract/ERC20.sol\":10199:10206  account */\n      dup3\n        /* \"Contract/ERC20.sol\":10199:10220  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Contract/ERC20.sol\":10195:10288  if (account == address(0)) {... */\n      tag_184\n      jumpi\n        /* \"Contract/ERC20.sol\":10273:10274  0 */\n      0x00\n        /* \"Contract/ERC20.sol\":10244:10276  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Contract/ERC20.sol\":10195:10288  if (account == address(0)) {... */\n    tag_184:\n        /* \"Contract/ERC20.sol\":10298:10333  _update(address(0), account, value) */\n      tag_186\n        /* \"Contract/ERC20.sol\":10314:10315  0 */\n      0x00\n        /* \"Contract/ERC20.sol\":10318:10325  account */\n      dup4\n        /* \"Contract/ERC20.sol\":10327:10332  value */\n      dup4\n        /* \"Contract/ERC20.sol\":10298:10305  _update */\n      tag_176\n        /* \"Contract/ERC20.sol\":10298:10333  _update(address(0), account, value) */\n      jump\t// in\n    tag_186:\n        /* \"Contract/ERC20.sol\":10128:10341  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Contract/Ownable.sol\":2892:3083  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_132:\n        /* \"Contract/Ownable.sol\":2966:2982  address oldOwner */\n      0x00\n        /* \"Contract/Ownable.sol\":2985:2991  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contract/Ownable.sol\":2966:2991  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"Contract/Ownable.sol\":3011:3019  newOwner */\n      dup2\n        /* \"Contract/Ownable.sol\":3002:3008  _owner */\n      0x05\n      0x00\n        /* \"Contract/Ownable.sol\":3002:3019  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Contract/Ownable.sol\":3066:3074  newOwner */\n      dup2\n        /* \"Contract/Ownable.sol\":3035:3075  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contract/Ownable.sol\":3056:3064  oldOwner */\n      dup2\n        /* \"Contract/Ownable.sol\":3035:3075  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Contract/Ownable.sol\":2955:3083  {... */\n      pop\n        /* \"Contract/Ownable.sol\":2892:3083  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"Contract/ERC20.sol\":10676:10887  function _burn(address account, uint256 value) internal {... */\n    tag_142:\n        /* \"Contract/ERC20.sol\":10766:10767  0 */\n      0x00\n        /* \"Contract/ERC20.sol\":10747:10768  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contract/ERC20.sol\":10747:10754  account */\n      dup3\n        /* \"Contract/ERC20.sol\":10747:10768  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Contract/ERC20.sol\":10743:10834  if (account == address(0)) {... */\n      tag_189\n      jumpi\n        /* \"Contract/ERC20.sol\":10819:10820  0 */\n      0x00\n        /* \"Contract/ERC20.sol\":10792:10822  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_190\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Contract/ERC20.sol\":10743:10834  if (account == address(0)) {... */\n    tag_189:\n        /* \"Contract/ERC20.sol\":10844:10879  _update(account, address(0), value) */\n      tag_191\n        /* \"Contract/ERC20.sol\":10852:10859  account */\n      dup3\n        /* \"Contract/ERC20.sol\":10869:10870  0 */\n      0x00\n        /* \"Contract/ERC20.sol\":10873:10878  value */\n      dup4\n        /* \"Contract/ERC20.sol\":10844:10851  _update */\n      tag_176\n        /* \"Contract/ERC20.sol\":10844:10879  _update(account, address(0), value) */\n      jump\t// in\n    tag_191:\n        /* \"Contract/ERC20.sol\":10676:10887  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Contract/ERC20.sol\":12329:12772  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_163:\n        /* \"Contract/ERC20.sol\":12459:12460  0 */\n      0x00\n        /* \"Contract/ERC20.sol\":12442:12461  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contract/ERC20.sol\":12442:12447  owner */\n      dup5\n        /* \"Contract/ERC20.sol\":12442:12461  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Contract/ERC20.sol\":12438:12529  if (owner == address(0)) {... */\n      tag_193\n      jumpi\n        /* \"Contract/ERC20.sol\":12514:12515  0 */\n      0x00\n        /* \"Contract/ERC20.sol\":12485:12517  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_194\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_194:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Contract/ERC20.sol\":12438:12529  if (owner == address(0)) {... */\n    tag_193:\n        /* \"Contract/ERC20.sol\":12562:12563  0 */\n      0x00\n        /* \"Contract/ERC20.sol\":12543:12564  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contract/ERC20.sol\":12543:12550  spender */\n      dup4\n        /* \"Contract/ERC20.sol\":12543:12564  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Contract/ERC20.sol\":12539:12631  if (spender == address(0)) {... */\n      tag_195\n      jumpi\n        /* \"Contract/ERC20.sol\":12616:12617  0 */\n      0x00\n        /* \"Contract/ERC20.sol\":12588:12619  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_196\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Contract/ERC20.sol\":12539:12631  if (spender == address(0)) {... */\n    tag_195:\n        /* \"Contract/ERC20.sol\":12671:12676  value */\n      dup2\n        /* \"Contract/ERC20.sol\":12641:12652  _allowances */\n      0x01\n        /* \"Contract/ERC20.sol\":12641:12659  _allowances[owner] */\n      0x00\n        /* \"Contract/ERC20.sol\":12653:12658  owner */\n      dup7\n        /* \"Contract/ERC20.sol\":12641:12659  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Contract/ERC20.sol\":12641:12668  _allowances[owner][spender] */\n      0x00\n        /* \"Contract/ERC20.sol\":12660:12667  spender */\n      dup6\n        /* \"Contract/ERC20.sol\":12641:12668  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Contract/ERC20.sol\":12641:12676  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Contract/ERC20.sol\":12691:12700  emitEvent */\n      dup1\n        /* \"Contract/ERC20.sol\":12687:12765  if (emitEvent) {... */\n      iszero\n      tag_197\n      jumpi\n        /* \"Contract/ERC20.sol\":12738:12745  spender */\n      dup3\n        /* \"Contract/ERC20.sol\":12722:12753  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contract/ERC20.sol\":12731:12736  owner */\n      dup5\n        /* \"Contract/ERC20.sol\":12722:12753  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"Contract/ERC20.sol\":12747:12752  value */\n      dup5\n        /* \"Contract/ERC20.sol\":12722:12753  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_198\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Contract/ERC20.sol\":12687:12765  if (emitEvent) {... */\n    tag_197:\n        /* \"Contract/ERC20.sol\":12329:12772  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Contract/ERC20.sol\":8640:9775  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_176:\n        /* \"Contract/ERC20.sol\":8746:8747  0 */\n      0x00\n        /* \"Contract/ERC20.sol\":8730:8748  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contract/ERC20.sol\":8730:8734  from */\n      dup4\n        /* \"Contract/ERC20.sol\":8730:8748  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Contract/ERC20.sol\":8726:9278  if (from == address(0)) {... */\n      tag_200\n      jumpi\n        /* \"Contract/ERC20.sol\":8884:8889  value */\n      dup1\n        /* \"Contract/ERC20.sol\":8868:8880  _totalSupply */\n      0x02\n      0x00\n        /* \"Contract/ERC20.sol\":8868:8889  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_201\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_201:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Contract/ERC20.sol\":8726:9278  if (from == address(0)) {... */\n      jump(tag_202)\n    tag_200:\n        /* \"Contract/ERC20.sol\":8922:8941  uint256 fromBalance */\n      0x00\n        /* \"Contract/ERC20.sol\":8944:8953  _balances */\n      dup1\n        /* \"Contract/ERC20.sol\":8944:8959  _balances[from] */\n      0x00\n        /* \"Contract/ERC20.sol\":8954:8958  from */\n      dup6\n        /* \"Contract/ERC20.sol\":8944:8959  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Contract/ERC20.sol\":8922:8959  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"Contract/ERC20.sol\":8992:8997  value */\n      dup2\n        /* \"Contract/ERC20.sol\":8978:8989  fromBalance */\n      dup2\n        /* \"Contract/ERC20.sol\":8978:8997  fromBalance < value */\n      lt\n        /* \"Contract/ERC20.sol\":8974:9091  if (fromBalance < value) {... */\n      iszero\n      tag_203\n      jumpi\n        /* \"Contract/ERC20.sol\":9050:9054  from */\n      dup4\n        /* \"Contract/ERC20.sol\":9056:9067  fromBalance */\n      dup2\n        /* \"Contract/ERC20.sol\":9069:9074  value */\n      dup4\n        /* \"Contract/ERC20.sol\":9025:9075  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Contract/ERC20.sol\":8974:9091  if (fromBalance < value) {... */\n    tag_203:\n        /* \"Contract/ERC20.sol\":9246:9251  value */\n      dup2\n        /* \"Contract/ERC20.sol\":9232:9243  fromBalance */\n      dup2\n        /* \"Contract/ERC20.sol\":9232:9251  fromBalance - value */\n      sub\n        /* \"Contract/ERC20.sol\":9214:9223  _balances */\n      0x00\n        /* \"Contract/ERC20.sol\":9214:9229  _balances[from] */\n      dup1\n        /* \"Contract/ERC20.sol\":9224:9228  from */\n      dup7\n        /* \"Contract/ERC20.sol\":9214:9229  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Contract/ERC20.sol\":9214:9251  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Contract/ERC20.sol\":8907:9278  {... */\n      pop\n        /* \"Contract/ERC20.sol\":8726:9278  if (from == address(0)) {... */\n    tag_202:\n        /* \"Contract/ERC20.sol\":9308:9309  0 */\n      0x00\n        /* \"Contract/ERC20.sol\":9294:9310  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contract/ERC20.sol\":9294:9296  to */\n      dup3\n        /* \"Contract/ERC20.sol\":9294:9310  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Contract/ERC20.sol\":9290:9725  if (to == address(0)) {... */\n      tag_205\n      jumpi\n        /* \"Contract/ERC20.sol\":9476:9481  value */\n      dup1\n        /* \"Contract/ERC20.sol\":9460:9472  _totalSupply */\n      0x02\n      0x00\n        /* \"Contract/ERC20.sol\":9460:9481  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Contract/ERC20.sol\":9290:9725  if (to == address(0)) {... */\n      jump(tag_206)\n    tag_205:\n        /* \"Contract/ERC20.sol\":9693:9698  value */\n      dup1\n        /* \"Contract/ERC20.sol\":9676:9685  _balances */\n      0x00\n        /* \"Contract/ERC20.sol\":9676:9689  _balances[to] */\n      dup1\n        /* \"Contract/ERC20.sol\":9686:9688  to */\n      dup5\n        /* \"Contract/ERC20.sol\":9676:9689  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Contract/ERC20.sol\":9676:9698  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Contract/ERC20.sol\":9290:9725  if (to == address(0)) {... */\n    tag_206:\n        /* \"Contract/ERC20.sol\":9757:9759  to */\n      dup2\n        /* \"Contract/ERC20.sol\":9742:9767  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contract/ERC20.sol\":9751:9755  from */\n      dup4\n        /* \"Contract/ERC20.sol\":9742:9767  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"Contract/ERC20.sol\":9761:9766  value */\n      dup4\n        /* \"Contract/ERC20.sol\":9742:9767  Transfer(from, to, value) */\n      mload(0x40)\n      tag_207\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Contract/ERC20.sol\":8640:9775  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_208:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_209:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_210:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_239:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_241\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_239)\n    tag_241:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_211:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_212:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_244\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_208\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":818:889   */\n      tag_245\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_209\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_246\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_210\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":988:1017   */\n      tag_247\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_211\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_26:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_249\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_212\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_214:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_216:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_217:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_255\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_216\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_218:\n        /* \"#utility.yul\":1983:2007   */\n      tag_257\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_217\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_258\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_258:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_219:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_260\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_218\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_220:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_221:\n        /* \"#utility.yul\":2339:2363   */\n      tag_263\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_220\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_264\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_264:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_222:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_266\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_221\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_29:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_268\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_269\n      tag_214\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":2632:2751   */\n    tag_268:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_270\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_219\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_271\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_222\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_223:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_224:\n        /* \"#utility.yul\":3196:3217   */\n      tag_274\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_223\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_32:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_276\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_224\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3564   */\n    tag_225:\n        /* \"#utility.yul\":3533:3557   */\n      tag_278\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3533:3557   */\n      tag_220\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":3528:3531   */\n      dup3\n        /* \"#utility.yul\":3521:3558   */\n      mstore\n        /* \"#utility.yul\":3446:3564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3792   */\n    tag_36:\n        /* \"#utility.yul\":3663:3667   */\n      0x00\n        /* \"#utility.yul\":3701:3703   */\n      0x20\n        /* \"#utility.yul\":3690:3699   */\n      dup3\n        /* \"#utility.yul\":3686:3704   */\n      add\n        /* \"#utility.yul\":3678:3704   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3785   */\n      tag_280\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3714:3785   */\n      tag_225\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":3570:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4417   */\n    tag_39:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup1\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x60\n        /* \"#utility.yul\":3928:3937   */\n      dup5\n        /* \"#utility.yul\":3919:3926   */\n      dup7\n        /* \"#utility.yul\":3915:3938   */\n      sub\n        /* \"#utility.yul\":3911:3943   */\n      slt\n        /* \"#utility.yul\":3908:4027   */\n      iszero\n      tag_282\n      jumpi\n        /* \"#utility.yul\":3946:4025   */\n      tag_283\n      tag_214\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":3908:4027   */\n    tag_282:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4091:4144   */\n      tag_284\n        /* \"#utility.yul\":4136:4143   */\n      dup7\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup8\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4091:4144   */\n      tag_219\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":4081:4144   */\n      swap4\n      pop\n        /* \"#utility.yul\":4037:4154   */\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4219:4272   */\n      tag_285\n        /* \"#utility.yul\":4264:4271   */\n      dup7\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup8\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_219\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4164:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4347:4400   */\n      tag_286\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup8\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_222\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3798:4417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4423:4509   */\n    tag_226:\n        /* \"#utility.yul\":4458:4465   */\n      0x00\n        /* \"#utility.yul\":4498:4502   */\n      0xff\n        /* \"#utility.yul\":4491:4496   */\n      dup3\n        /* \"#utility.yul\":4487:4503   */\n      and\n        /* \"#utility.yul\":4476:4503   */\n      swap1\n      pop\n        /* \"#utility.yul\":4423:4509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4515:4627   */\n    tag_227:\n        /* \"#utility.yul\":4598:4620   */\n      tag_289\n        /* \"#utility.yul\":4614:4619   */\n      dup2\n        /* \"#utility.yul\":4598:4620   */\n      tag_226\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":4593:4596   */\n      dup3\n        /* \"#utility.yul\":4586:4621   */\n      mstore\n        /* \"#utility.yul\":4515:4627   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4633:4847   */\n    tag_45:\n        /* \"#utility.yul\":4722:4726   */\n      0x00\n        /* \"#utility.yul\":4760:4762   */\n      0x20\n        /* \"#utility.yul\":4749:4758   */\n      dup3\n        /* \"#utility.yul\":4745:4763   */\n      add\n        /* \"#utility.yul\":4737:4763   */\n      swap1\n      pop\n        /* \"#utility.yul\":4773:4840   */\n      tag_291\n        /* \"#utility.yul\":4837:4838   */\n      0x00\n        /* \"#utility.yul\":4826:4835   */\n      dup4\n        /* \"#utility.yul\":4822:4839   */\n      add\n        /* \"#utility.yul\":4813:4819   */\n      dup5\n        /* \"#utility.yul\":4773:4840   */\n      tag_227\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":4633:4847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4853:5182   */\n    tag_55:\n        /* \"#utility.yul\":4912:4918   */\n      0x00\n        /* \"#utility.yul\":4961:4963   */\n      0x20\n        /* \"#utility.yul\":4949:4958   */\n      dup3\n        /* \"#utility.yul\":4940:4947   */\n      dup5\n        /* \"#utility.yul\":4936:4959   */\n      sub\n        /* \"#utility.yul\":4932:4964   */\n      slt\n        /* \"#utility.yul\":4929:5048   */\n      iszero\n      tag_293\n      jumpi\n        /* \"#utility.yul\":4967:5046   */\n      tag_294\n      tag_214\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":4929:5048   */\n    tag_293:\n        /* \"#utility.yul\":5087:5088   */\n      0x00\n        /* \"#utility.yul\":5112:5165   */\n      tag_295\n        /* \"#utility.yul\":5157:5164   */\n      dup5\n        /* \"#utility.yul\":5148:5154   */\n      dup3\n        /* \"#utility.yul\":5137:5146   */\n      dup6\n        /* \"#utility.yul\":5133:5155   */\n      add\n        /* \"#utility.yul\":5112:5165   */\n      tag_219\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":5102:5165   */\n      swap2\n      pop\n        /* \"#utility.yul\":5058:5175   */\n      pop\n        /* \"#utility.yul\":4853:5182   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5188:5306   */\n    tag_228:\n        /* \"#utility.yul\":5275:5299   */\n      tag_297\n        /* \"#utility.yul\":5293:5298   */\n      dup2\n        /* \"#utility.yul\":5275:5299   */\n      tag_217\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":5270:5273   */\n      dup3\n        /* \"#utility.yul\":5263:5300   */\n      mstore\n        /* \"#utility.yul\":5188:5306   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5312:5534   */\n    tag_63:\n        /* \"#utility.yul\":5405:5409   */\n      0x00\n        /* \"#utility.yul\":5443:5445   */\n      0x20\n        /* \"#utility.yul\":5432:5441   */\n      dup3\n        /* \"#utility.yul\":5428:5446   */\n      add\n        /* \"#utility.yul\":5420:5446   */\n      swap1\n      pop\n        /* \"#utility.yul\":5456:5527   */\n      tag_299\n        /* \"#utility.yul\":5524:5525   */\n      0x00\n        /* \"#utility.yul\":5513:5522   */\n      dup4\n        /* \"#utility.yul\":5509:5526   */\n      add\n        /* \"#utility.yul\":5500:5506   */\n      dup5\n        /* \"#utility.yul\":5456:5527   */\n      tag_228\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":5312:5534   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5540:6014   */\n    tag_83:\n        /* \"#utility.yul\":5608:5614   */\n      0x00\n        /* \"#utility.yul\":5616:5622   */\n      dup1\n        /* \"#utility.yul\":5665:5667   */\n      0x40\n        /* \"#utility.yul\":5653:5662   */\n      dup4\n        /* \"#utility.yul\":5644:5651   */\n      dup6\n        /* \"#utility.yul\":5640:5663   */\n      sub\n        /* \"#utility.yul\":5636:5668   */\n      slt\n        /* \"#utility.yul\":5633:5752   */\n      iszero\n      tag_301\n      jumpi\n        /* \"#utility.yul\":5671:5750   */\n      tag_302\n      tag_214\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":5633:5752   */\n    tag_301:\n        /* \"#utility.yul\":5791:5792   */\n      0x00\n        /* \"#utility.yul\":5816:5869   */\n      tag_303\n        /* \"#utility.yul\":5861:5868   */\n      dup6\n        /* \"#utility.yul\":5852:5858   */\n      dup3\n        /* \"#utility.yul\":5841:5850   */\n      dup7\n        /* \"#utility.yul\":5837:5859   */\n      add\n        /* \"#utility.yul\":5816:5869   */\n      tag_219\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":5806:5869   */\n      swap3\n      pop\n        /* \"#utility.yul\":5762:5879   */\n      pop\n        /* \"#utility.yul\":5918:5920   */\n      0x20\n        /* \"#utility.yul\":5944:5997   */\n      tag_304\n        /* \"#utility.yul\":5989:5996   */\n      dup6\n        /* \"#utility.yul\":5980:5986   */\n      dup3\n        /* \"#utility.yul\":5969:5978   */\n      dup7\n        /* \"#utility.yul\":5965:5987   */\n      add\n        /* \"#utility.yul\":5944:5997   */\n      tag_219\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":5934:5997   */\n      swap2\n      pop\n        /* \"#utility.yul\":5889:6007   */\n      pop\n        /* \"#utility.yul\":5540:6014   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6020:6200   */\n    tag_229:\n        /* \"#utility.yul\":6068:6145   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6065:6066   */\n      0x00\n        /* \"#utility.yul\":6058:6146   */\n      mstore\n        /* \"#utility.yul\":6165:6169   */\n      0x22\n        /* \"#utility.yul\":6162:6163   */\n      0x04\n        /* \"#utility.yul\":6155:6170   */\n      mstore\n        /* \"#utility.yul\":6189:6193   */\n      0x24\n        /* \"#utility.yul\":6186:6187   */\n      0x00\n        /* \"#utility.yul\":6179:6194   */\n      revert\n        /* \"#utility.yul\":6206:6526   */\n    tag_91:\n        /* \"#utility.yul\":6250:6256   */\n      0x00\n        /* \"#utility.yul\":6287:6288   */\n      0x02\n        /* \"#utility.yul\":6281:6285   */\n      dup3\n        /* \"#utility.yul\":6277:6289   */\n      div\n        /* \"#utility.yul\":6267:6289   */\n      swap1\n      pop\n        /* \"#utility.yul\":6334:6335   */\n      0x01\n        /* \"#utility.yul\":6328:6332   */\n      dup3\n        /* \"#utility.yul\":6324:6336   */\n      and\n        /* \"#utility.yul\":6355:6373   */\n      dup1\n        /* \"#utility.yul\":6345:6426   */\n      tag_307\n      jumpi\n        /* \"#utility.yul\":6411:6415   */\n      0x7f\n        /* \"#utility.yul\":6403:6409   */\n      dup3\n        /* \"#utility.yul\":6399:6416   */\n      and\n        /* \"#utility.yul\":6389:6416   */\n      swap2\n      pop\n        /* \"#utility.yul\":6345:6426   */\n    tag_307:\n        /* \"#utility.yul\":6473:6475   */\n      0x20\n        /* \"#utility.yul\":6465:6471   */\n      dup3\n        /* \"#utility.yul\":6462:6476   */\n      lt\n        /* \"#utility.yul\":6442:6460   */\n      dup2\n        /* \"#utility.yul\":6439:6477   */\n      sub\n        /* \"#utility.yul\":6436:6520   */\n      tag_308\n      jumpi\n        /* \"#utility.yul\":6492:6510   */\n      tag_309\n      tag_229\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":6436:6520   */\n    tag_308:\n        /* \"#utility.yul\":6257:6526   */\n      pop\n        /* \"#utility.yul\":6206:6526   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6532:6712   */\n    tag_230:\n        /* \"#utility.yul\":6580:6657   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6577:6578   */\n      0x00\n        /* \"#utility.yul\":6570:6658   */\n      mstore\n        /* \"#utility.yul\":6677:6681   */\n      0x11\n        /* \"#utility.yul\":6674:6675   */\n      0x04\n        /* \"#utility.yul\":6667:6682   */\n      mstore\n        /* \"#utility.yul\":6701:6705   */\n      0x24\n        /* \"#utility.yul\":6698:6699   */\n      0x00\n        /* \"#utility.yul\":6691:6706   */\n      revert\n        /* \"#utility.yul\":6718:6909   */\n    tag_114:\n        /* \"#utility.yul\":6758:6761   */\n      0x00\n        /* \"#utility.yul\":6777:6797   */\n      tag_312\n        /* \"#utility.yul\":6795:6796   */\n      dup3\n        /* \"#utility.yul\":6777:6797   */\n      tag_220\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":6772:6797   */\n      swap2\n      pop\n        /* \"#utility.yul\":6811:6831   */\n      tag_313\n        /* \"#utility.yul\":6829:6830   */\n      dup4\n        /* \"#utility.yul\":6811:6831   */\n      tag_220\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":6806:6831   */\n      swap3\n      pop\n        /* \"#utility.yul\":6854:6855   */\n      dup3\n        /* \"#utility.yul\":6851:6852   */\n      dup3\n        /* \"#utility.yul\":6847:6856   */\n      add\n        /* \"#utility.yul\":6840:6856   */\n      swap1\n      pop\n        /* \"#utility.yul\":6875:6878   */\n      dup1\n        /* \"#utility.yul\":6872:6873   */\n      dup3\n        /* \"#utility.yul\":6869:6879   */\n      gt\n        /* \"#utility.yul\":6866:6902   */\n      iszero\n      tag_314\n      jumpi\n        /* \"#utility.yul\":6882:6900   */\n      tag_315\n      tag_230\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":6866:6902   */\n    tag_314:\n        /* \"#utility.yul\":6718:6909   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6915:7080   */\n    tag_231:\n        /* \"#utility.yul\":7055:7072   */\n      0x496e76616c696420616464726573730000000000000000000000000000000000\n        /* \"#utility.yul\":7051:7052   */\n      0x00\n        /* \"#utility.yul\":7043:7049   */\n      dup3\n        /* \"#utility.yul\":7039:7053   */\n      add\n        /* \"#utility.yul\":7032:7073   */\n      mstore\n        /* \"#utility.yul\":6915:7080   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7086:7452   */\n    tag_232:\n        /* \"#utility.yul\":7228:7231   */\n      0x00\n        /* \"#utility.yul\":7249:7316   */\n      tag_318\n        /* \"#utility.yul\":7313:7315   */\n      0x0f\n        /* \"#utility.yul\":7308:7311   */\n      dup4\n        /* \"#utility.yul\":7249:7316   */\n      tag_209\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":7242:7316   */\n      swap2\n      pop\n        /* \"#utility.yul\":7325:7418   */\n      tag_319\n        /* \"#utility.yul\":7414:7417   */\n      dup3\n        /* \"#utility.yul\":7325:7418   */\n      tag_231\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":7443:7445   */\n      0x20\n        /* \"#utility.yul\":7438:7441   */\n      dup3\n        /* \"#utility.yul\":7434:7446   */\n      add\n        /* \"#utility.yul\":7427:7446   */\n      swap1\n      pop\n        /* \"#utility.yul\":7086:7452   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7458:7877   */\n    tag_121:\n        /* \"#utility.yul\":7624:7628   */\n      0x00\n        /* \"#utility.yul\":7662:7664   */\n      0x20\n        /* \"#utility.yul\":7651:7660   */\n      dup3\n        /* \"#utility.yul\":7647:7665   */\n      add\n        /* \"#utility.yul\":7639:7665   */\n      swap1\n      pop\n        /* \"#utility.yul\":7711:7720   */\n      dup2\n        /* \"#utility.yul\":7705:7709   */\n      dup2\n        /* \"#utility.yul\":7701:7721   */\n      sub\n        /* \"#utility.yul\":7697:7698   */\n      0x00\n        /* \"#utility.yul\":7686:7695   */\n      dup4\n        /* \"#utility.yul\":7682:7699   */\n      add\n        /* \"#utility.yul\":7675:7722   */\n      mstore\n        /* \"#utility.yul\":7739:7870   */\n      tag_321\n        /* \"#utility.yul\":7865:7869   */\n      dup2\n        /* \"#utility.yul\":7739:7870   */\n      tag_232\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":7731:7870   */\n      swap1\n      pop\n        /* \"#utility.yul\":7458:7877   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7883:8062   */\n    tag_233:\n        /* \"#utility.yul\":8023:8054   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e2030000000\n        /* \"#utility.yul\":8019:8020   */\n      0x00\n        /* \"#utility.yul\":8011:8017   */\n      dup3\n        /* \"#utility.yul\":8007:8021   */\n      add\n        /* \"#utility.yul\":8000:8055   */\n      mstore\n        /* \"#utility.yul\":7883:8062   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8068:8434   */\n    tag_234:\n        /* \"#utility.yul\":8210:8213   */\n      0x00\n        /* \"#utility.yul\":8231:8298   */\n      tag_324\n        /* \"#utility.yul\":8295:8297   */\n      0x1d\n        /* \"#utility.yul\":8290:8293   */\n      dup4\n        /* \"#utility.yul\":8231:8298   */\n      tag_209\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":8224:8298   */\n      swap2\n      pop\n        /* \"#utility.yul\":8307:8400   */\n      tag_325\n        /* \"#utility.yul\":8396:8399   */\n      dup3\n        /* \"#utility.yul\":8307:8400   */\n      tag_233\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":8425:8427   */\n      0x20\n        /* \"#utility.yul\":8420:8423   */\n      dup3\n        /* \"#utility.yul\":8416:8428   */\n      add\n        /* \"#utility.yul\":8409:8428   */\n      swap1\n      pop\n        /* \"#utility.yul\":8068:8434   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8440:8859   */\n    tag_124:\n        /* \"#utility.yul\":8606:8610   */\n      0x00\n        /* \"#utility.yul\":8644:8646   */\n      0x20\n        /* \"#utility.yul\":8633:8642   */\n      dup3\n        /* \"#utility.yul\":8629:8647   */\n      add\n        /* \"#utility.yul\":8621:8647   */\n      swap1\n      pop\n        /* \"#utility.yul\":8693:8702   */\n      dup2\n        /* \"#utility.yul\":8687:8691   */\n      dup2\n        /* \"#utility.yul\":8683:8703   */\n      sub\n        /* \"#utility.yul\":8679:8680   */\n      0x00\n        /* \"#utility.yul\":8668:8677   */\n      dup4\n        /* \"#utility.yul\":8664:8681   */\n      add\n        /* \"#utility.yul\":8657:8704   */\n      mstore\n        /* \"#utility.yul\":8721:8852   */\n      tag_327\n        /* \"#utility.yul\":8847:8851   */\n      dup2\n        /* \"#utility.yul\":8721:8852   */\n      tag_234\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":8713:8852   */\n      swap1\n      pop\n        /* \"#utility.yul\":8440:8859   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8865:9307   */\n    tag_148:\n        /* \"#utility.yul\":9014:9018   */\n      0x00\n        /* \"#utility.yul\":9052:9054   */\n      0x60\n        /* \"#utility.yul\":9041:9050   */\n      dup3\n        /* \"#utility.yul\":9037:9055   */\n      add\n        /* \"#utility.yul\":9029:9055   */\n      swap1\n      pop\n        /* \"#utility.yul\":9065:9136   */\n      tag_329\n        /* \"#utility.yul\":9133:9134   */\n      0x00\n        /* \"#utility.yul\":9122:9131   */\n      dup4\n        /* \"#utility.yul\":9118:9135   */\n      add\n        /* \"#utility.yul\":9109:9115   */\n      dup7\n        /* \"#utility.yul\":9065:9136   */\n      tag_228\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":9146:9218   */\n      tag_330\n        /* \"#utility.yul\":9214:9216   */\n      0x20\n        /* \"#utility.yul\":9203:9212   */\n      dup4\n        /* \"#utility.yul\":9199:9217   */\n      add\n        /* \"#utility.yul\":9190:9196   */\n      dup6\n        /* \"#utility.yul\":9146:9218   */\n      tag_225\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":9228:9300   */\n      tag_331\n        /* \"#utility.yul\":9296:9298   */\n      0x40\n        /* \"#utility.yul\":9285:9294   */\n      dup4\n        /* \"#utility.yul\":9281:9299   */\n      add\n        /* \"#utility.yul\":9272:9278   */\n      dup5\n        /* \"#utility.yul\":9228:9300   */\n      tag_225\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":8865:9307   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122062ba5783b84c2e4d606ee33ef7deeaa9bced78b0be4a8b70dc98c66c46cefb7c64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_768": {
									"entryPoint": null,
									"id": 768,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_82": {
									"entryPoint": null,
									"id": 82,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_850": {
									"entryPoint": null,
									"id": 850,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_459": {
									"entryPoint": 416,
									"id": 459,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_946": {
									"entryPoint": 221,
									"id": 946,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_426": {
									"entryPoint": 554,
									"id": 426,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1992,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2139,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2009,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2156,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2215,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1254,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1102,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2081,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1563,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1973,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1525,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1402,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1714,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1272,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1202,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1685,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1655,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2036,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1157,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1112,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1441,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1643,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1497,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1299,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1450,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1493,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7000:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:7",
														"type": ""
													}
												],
												"src": "7:99:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "140:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "157:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "160:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "150:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "150:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "254:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "257:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "247:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "247:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "278:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "281:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "271:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "271:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "326:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "343:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "346:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "336:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "336:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "464:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "467:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "457:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "457:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "535:269:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "545:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "565:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "555:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "612:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "602:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "580:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "653:51:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "667:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "689:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "626:26:7"
															},
															"nodeType": "YulIf",
															"src": "623:81:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "756:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "751:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "717:38:7"
															},
															"nodeType": "YulIf",
															"src": "714:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "519:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "528:6:7",
														"type": ""
													}
												],
												"src": "484:320:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "864:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "874:11:7",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "882:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "902:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "895:14:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "895:14:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "918:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "936:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "939:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "926:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "851:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "859:4:7",
														"type": ""
													}
												],
												"src": "810:141:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1001:49:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1011:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1021:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "984:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "994:6:7",
														"type": ""
													}
												],
												"src": "957:93:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1109:54:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1119:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:7"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1140:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "1084:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1090:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "1100:8:7",
														"type": ""
													}
												],
												"src": "1056:107:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1245:317:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1272:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1311:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1417:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1429:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1477:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1486:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1516:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:7"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1526:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1206:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "1213:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "1225:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1238:6:7",
														"type": ""
													}
												],
												"src": "1169:393:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1613:32:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1623:16:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1634:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1595:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1605:7:7",
														"type": ""
													}
												],
												"src": "1568:77:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1683:28:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1693:12:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1700:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1669:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1679:3:7",
														"type": ""
													}
												],
												"src": "1651:60:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1777:82:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1787:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1800:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1757:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1767:9:7",
														"type": ""
													}
												],
												"src": "1717:142:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1912:28:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1922:12:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1929:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1898:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1908:3:7",
														"type": ""
													}
												],
												"src": "1865:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2022:193:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2056:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:7"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2104:105:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "1999:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2005:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "2013:7:7",
														"type": ""
													}
												],
												"src": "1946:269:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2270:24:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2280:8:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2287:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2266:3:7",
														"type": ""
													}
												],
												"src": "2221:73:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2353:136:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2377:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:7"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2418:65:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2339:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2345:6:7",
														"type": ""
													}
												],
												"src": "2300:189:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2545:136:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2612:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2562:14:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2577:26:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2579:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2559:2:7",
																"statements": []
															},
															"src": "2555:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "2533:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2540:3:7",
														"type": ""
													}
												],
												"src": "2495:186:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2766:464:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2792:431:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3093:27:7",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "3095:23:7",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:7"
																		},
																		"nodeType": "YulIf",
																		"src": "3071:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2780:11:7"
															},
															"nodeType": "YulIf",
															"src": "2777:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2742:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2749:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2754:10:7",
														"type": ""
													}
												],
												"src": "2687:543:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3299:54:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3309:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:7"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3330:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "3274:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3280:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "3290:8:7",
														"type": ""
													}
												],
												"src": "3236:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3410:118:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3432:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3497:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:7"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3507:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3387:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "3393:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "3403:6:7",
														"type": ""
													}
												],
												"src": "3359:169:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3614:214:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3747:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:7"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3755:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3793:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3801:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3595:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "3601:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "3609:4:7",
														"type": ""
													}
												],
												"src": "3533:295:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3925:1303:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3950:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4072:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4041:30:7"
															},
															"nodeType": "YulIf",
															"src": "4038:56:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4118:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:7"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4203:67:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4297:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4308:17:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4321:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4372:611:7",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:7",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4569:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:7"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:7"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:7"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4646:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:7"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:7"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4687:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:7"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:7"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "4547:21:7",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "4549:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:7"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "4528:3:7",
																					"statements": []
																				},
																				"src": "4524:208:7"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4768:156:7",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:7"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:7"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:7"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:7"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:7"
																				},
																				"nodeType": "YulIf",
																				"src": "4745:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:7"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:7"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4365:618:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5000:222:7",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:7",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5051:67:7",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "5069:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:7"
																				},
																				"nodeType": "YulIf",
																				"src": "5041:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:7"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:7"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4992:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4342:14:7"
															},
															"nodeType": "YulSwitch",
															"src": "4335:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3914:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3920:3:7",
														"type": ""
													}
												],
												"src": "3833:1395:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5279:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5289:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5304:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5311:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5300:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5300:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5289:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5261:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5271:7:7",
														"type": ""
													}
												],
												"src": "5234:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5411:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5421:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5450:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5432:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5432:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5421:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5393:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5403:7:7",
														"type": ""
													}
												],
												"src": "5366:96:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5533:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5550:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5573:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5555:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5555:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5543:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5543:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5543:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5521:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5528:3:7",
														"type": ""
													}
												],
												"src": "5468:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5690:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5700:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5712:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5723:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5708:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5708:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5700:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5780:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5793:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5804:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5789:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5789:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5736:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5736:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5736:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5662:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5674:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5685:4:7",
														"type": ""
													}
												],
												"src": "5592:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5848:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5865:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5868:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5858:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5858:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5858:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5962:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5965:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5955:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5955:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5955:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5986:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5989:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5979:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5979:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5979:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "5820:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6050:147:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6060:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6083:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6065:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6065:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6060:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6094:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6117:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6099:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6099:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6094:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6128:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6139:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6142:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6135:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6135:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "6128:3:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6168:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6170:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6170:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6170:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6160:1:7"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "6163:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6157:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6157:10:7"
															},
															"nodeType": "YulIf",
															"src": "6154:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6037:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6040:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "6046:3:7",
														"type": ""
													}
												],
												"src": "6006:191:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6268:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6285:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6308:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6290:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6290:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6278:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6278:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6278:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6256:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6263:3:7",
														"type": ""
													}
												],
												"src": "6203:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6481:288:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6491:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6503:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6514:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6499:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6499:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6491:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6571:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6584:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6595:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6580:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6580:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6527:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6527:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6527:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6652:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6665:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6676:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6661:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6661:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6608:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6608:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6608:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6734:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6747:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6758:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6743:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6743:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6690:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6690:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6690:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6437:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6449:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6457:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6465:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6476:4:7",
														"type": ""
													}
												],
												"src": "6327:442:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6873:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6883:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6895:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6906:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6891:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6891:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6883:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6963:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6976:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6987:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6972:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6972:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6919:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6919:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6919:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6845:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6857:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6868:4:7",
														"type": ""
													}
												],
												"src": "6775:222:7"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052600a60065534801562000015575f80fd5b50336040518060400160405280600781526020017f4d79746f6b656e000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4d595400000000000000000000000000000000000000000000000000000000008152508160039081620000949190620006b2565b508060049081620000a69190620006b2565b505050620000ba81620000dd60201b60201c565b50620000d73369010f0cf064dd59200000620001a060201b60201c565b620008c2565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000213575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016200020a9190620007d9565b60405180910390fd5b620002265f83836200022a60201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036200027e578060025f82825462000271919062000821565b925050819055506200034f565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156200030a578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040162000301939291906200086c565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000398578060025f8282540392505081905550620003e2565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620004419190620008a7565b60405180910390a3505050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680620004ca57607f821691505b602082108103620004e057620004df62000485565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620005447fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000507565b62000550868362000507565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6200059a620005946200058e8462000568565b62000571565b62000568565b9050919050565b5f819050919050565b620005b5836200057a565b620005cd620005c482620005a1565b84845462000513565b825550505050565b5f90565b620005e3620005d5565b620005f0818484620005aa565b505050565b5b8181101562000617576200060b5f82620005d9565b600181019050620005f6565b5050565b601f82111562000666576200063081620004e6565b6200063b84620004f8565b810160208510156200064b578190505b620006636200065a85620004f8565b830182620005f5565b50505b505050565b5f82821c905092915050565b5f620006885f19846008026200066b565b1980831691505092915050565b5f620006a2838362000677565b9150826002028217905092915050565b620006bd826200044e565b67ffffffffffffffff811115620006d957620006d862000458565b5b620006e58254620004b2565b620006f28282856200061b565b5f60209050601f83116001811462000728575f841562000713578287015190505b6200071f858262000695565b8655506200078e565b601f1984166200073886620004e6565b5f5b8281101562000761578489015182556001820191506020850194506020810190506200073a565b868310156200078157848901516200077d601f89168262000677565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620007c18262000796565b9050919050565b620007d381620007b5565b82525050565b5f602082019050620007ee5f830184620007c8565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6200082d8262000568565b91506200083a8362000568565b9250828201905080821115620008555762000854620007f4565b5b92915050565b620008668162000568565b82525050565b5f606082019050620008815f830186620007c8565b6200089060208301856200085b565b6200089f60408301846200085b565b949350505050565b5f602082019050620008bc5f8301846200085b565b92915050565b6114cf80620008d05f395ff3fe608060405234801561000f575f80fd5b5060043610610109575f3560e01c8063715018a6116100a0578063a457c2d71161006f578063a457c2d7146102a5578063a9059cbb146102d5578063cbdd69b514610305578063dd62ed3e14610323578063f2fde38b1461035357610109565b8063715018a6146102435780638da5cb5b1461024d57806395d89b411461026b5780639dc29fac1461028957610109565b8063313ce567116100dc578063313ce567146101a957806339509351146101c757806340c10f19146101f757806370a082311461021357610109565b806306fdde031461010d578063095ea7b31461012b57806318160ddd1461015b57806323b872dd14610179575b5f80fd5b61011561036f565b6040516101229190611078565b60405180910390f35b61014560048036038101906101409190611129565b6103ff565b6040516101529190611181565b60405180910390f35b610163610421565b60405161017091906111a9565b60405180910390f35b610193600480360381019061018e91906111c2565b61042a565b6040516101a09190611181565b60405180910390f35b6101b1610458565b6040516101be919061122d565b60405180910390f35b6101e160048036038101906101dc9190611129565b610460565b6040516101ee9190611181565b60405180910390f35b610211600480360381019061020c9190611129565b610496565b005b61022d60048036038101906102289190611246565b61055c565b60405161023a91906111a9565b60405180910390f35b61024b6105a1565b005b6102556105b4565b6040516102629190611280565b60405180910390f35b6102736105dc565b6040516102809190611078565b60405180910390f35b6102a3600480360381019061029e9190611129565b61066c565b005b6102bf60048036038101906102ba9190611129565b61067a565b6040516102cc9190611181565b60405180910390f35b6102ef60048036038101906102ea9190611129565b6106f5565b6040516102fc9190611181565b60405180910390f35b61030d610717565b60405161031a91906111a9565b60405180910390f35b61033d60048036038101906103389190611299565b61071d565b60405161034a91906111a9565b60405180910390f35b61036d60048036038101906103689190611246565b61079f565b005b60606003805461037e90611304565b80601f01602080910402602001604051908101604052809291908181526020018280546103aa90611304565b80156103f55780601f106103cc576101008083540402835291602001916103f5565b820191905f5260205f20905b8154815290600101906020018083116103d857829003601f168201915b5050505050905090565b5f80610409610823565b905061041681858561082a565b600191505092915050565b5f600254905090565b5f80610434610823565b905061044185828561083c565b61044c8585856108ce565b60019150509392505050565b5f6012905090565b5f8061046a610823565b905061048b81858561047c858961071d565b6104869190611361565b61082a565b600191505092915050565b61049e6109be565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361050c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610503906113de565b60405180910390fd5b5f811161054e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054590611446565b60405180910390fd5b6105588282610a45565b5050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6105a96109be565b6105b25f610ac4565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546105eb90611304565b80601f016020809104026020016040519081016040528092919081815260200182805461061790611304565b80156106625780601f1061063957610100808354040283529160200191610662565b820191905f5260205f20905b81548152906001019060200180831161064557829003601f168201915b5050505050905090565b6106768282610b87565b5050565b5f80610684610823565b90505f610691828661071d565b9050838110156106dc578481856040517fa60f030c0000000000000000000000000000000000000000000000000000000081526004016106d393929190611464565b60405180910390fd5b6106e9828686840361082a565b60019250505092915050565b5f806106ff610823565b905061070c8185856108ce565b600191505092915050565b60065481565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6107a76109be565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610817575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161080e9190611280565b60405180910390fd5b61082081610ac4565b50565b5f33905090565b6108378383836001610c06565b505050565b5f610847848461071d565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146108c857818110156108b9578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016108b093929190611464565b60405180910390fd5b6108c784848484035f610c06565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361093e575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016109359190611280565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109ae575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016109a59190611280565b60405180910390fd5b6109b9838383610dd5565b505050565b6109c6610823565b73ffffffffffffffffffffffffffffffffffffffff166109e46105b4565b73ffffffffffffffffffffffffffffffffffffffff1614610a4357610a07610823565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610a3a9190611280565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ab5575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610aac9190611280565b60405180910390fd5b610ac05f8383610dd5565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bf7575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610bee9190611280565b60405180910390fd5b610c02825f83610dd5565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610c76575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610c6d9190611280565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ce6575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610cdd9190611280565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610dcf578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610dc691906111a9565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e25578060025f828254610e199190611361565b92505081905550610ef3565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610eae578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610ea593929190611464565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f3a578060025f8282540392505081905550610f84565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610fe191906111a9565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561102557808201518184015260208101905061100a565b5f8484015250505050565b5f601f19601f8301169050919050565b5f61104a82610fee565b6110548185610ff8565b9350611064818560208601611008565b61106d81611030565b840191505092915050565b5f6020820190508181035f8301526110908184611040565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6110c58261109c565b9050919050565b6110d5816110bb565b81146110df575f80fd5b50565b5f813590506110f0816110cc565b92915050565b5f819050919050565b611108816110f6565b8114611112575f80fd5b50565b5f81359050611123816110ff565b92915050565b5f806040838503121561113f5761113e611098565b5b5f61114c858286016110e2565b925050602061115d85828601611115565b9150509250929050565b5f8115159050919050565b61117b81611167565b82525050565b5f6020820190506111945f830184611172565b92915050565b6111a3816110f6565b82525050565b5f6020820190506111bc5f83018461119a565b92915050565b5f805f606084860312156111d9576111d8611098565b5b5f6111e6868287016110e2565b93505060206111f7868287016110e2565b925050604061120886828701611115565b9150509250925092565b5f60ff82169050919050565b61122781611212565b82525050565b5f6020820190506112405f83018461121e565b92915050565b5f6020828403121561125b5761125a611098565b5b5f611268848285016110e2565b91505092915050565b61127a816110bb565b82525050565b5f6020820190506112935f830184611271565b92915050565b5f80604083850312156112af576112ae611098565b5b5f6112bc858286016110e2565b92505060206112cd858286016110e2565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061131b57607f821691505b60208210810361132e5761132d6112d7565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61136b826110f6565b9150611376836110f6565b925082820190508082111561138e5761138d611334565b5b92915050565b7f496e76616c6964206164647265737300000000000000000000000000000000005f82015250565b5f6113c8600f83610ff8565b91506113d382611394565b602082019050919050565b5f6020820190508181035f8301526113f5816113bc565b9050919050565b7f416d6f756e74206d7573742062652067726561746572207468616e20300000005f82015250565b5f611430601d83610ff8565b915061143b826113fc565b602082019050919050565b5f6020820190508181035f83015261145d81611424565b9050919050565b5f6060820190506114775f830186611271565b611484602083018561119a565b611491604083018461119a565b94935050505056fea264697066735822122062ba5783b84c2e4d606ee33ef7deeaa9bced78b0be4a8b70dc98c66c46cefb7c64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0x6 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x15 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D79746F6B656E00000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D59540000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x94 SWAP2 SWAP1 PUSH3 0x6B2 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0xA6 SWAP2 SWAP1 PUSH3 0x6B2 JUMP JUMPDEST POP POP POP PUSH3 0xBA DUP2 PUSH3 0xDD PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0xD7 CALLER PUSH10 0x10F0CF064DD59200000 PUSH3 0x1A0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x8C2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x213 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x20A SWAP2 SWAP1 PUSH3 0x7D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x226 PUSH0 DUP4 DUP4 PUSH3 0x22A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x27E JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x271 SWAP2 SWAP1 PUSH3 0x821 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x34F JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x30A JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x301 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x86C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x398 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x3E2 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x441 SWAP2 SWAP1 PUSH3 0x8A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x4CA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x4E0 JUMPI PUSH3 0x4DF PUSH3 0x485 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x544 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x507 JUMP JUMPDEST PUSH3 0x550 DUP7 DUP4 PUSH3 0x507 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x59A PUSH3 0x594 PUSH3 0x58E DUP5 PUSH3 0x568 JUMP JUMPDEST PUSH3 0x571 JUMP JUMPDEST PUSH3 0x568 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x5B5 DUP4 PUSH3 0x57A JUMP JUMPDEST PUSH3 0x5CD PUSH3 0x5C4 DUP3 PUSH3 0x5A1 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x513 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x5E3 PUSH3 0x5D5 JUMP JUMPDEST PUSH3 0x5F0 DUP2 DUP5 DUP5 PUSH3 0x5AA JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x617 JUMPI PUSH3 0x60B PUSH0 DUP3 PUSH3 0x5D9 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x5F6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x666 JUMPI PUSH3 0x630 DUP2 PUSH3 0x4E6 JUMP JUMPDEST PUSH3 0x63B DUP5 PUSH3 0x4F8 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x64B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x663 PUSH3 0x65A DUP6 PUSH3 0x4F8 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x5F5 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x688 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x66B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x6A2 DUP4 DUP4 PUSH3 0x677 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x6BD DUP3 PUSH3 0x44E JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x6D9 JUMPI PUSH3 0x6D8 PUSH3 0x458 JUMP JUMPDEST JUMPDEST PUSH3 0x6E5 DUP3 SLOAD PUSH3 0x4B2 JUMP JUMPDEST PUSH3 0x6F2 DUP3 DUP3 DUP6 PUSH3 0x61B JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x728 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x713 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x71F DUP6 DUP3 PUSH3 0x695 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x78E JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x738 DUP7 PUSH3 0x4E6 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x761 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x73A JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x781 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x77D PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x677 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x7C1 DUP3 PUSH3 0x796 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x7D3 DUP2 PUSH3 0x7B5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x7EE PUSH0 DUP4 ADD DUP5 PUSH3 0x7C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH3 0x82D DUP3 PUSH3 0x568 JUMP JUMPDEST SWAP2 POP PUSH3 0x83A DUP4 PUSH3 0x568 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0x855 JUMPI PUSH3 0x854 PUSH3 0x7F4 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x866 DUP2 PUSH3 0x568 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0x881 PUSH0 DUP4 ADD DUP7 PUSH3 0x7C8 JUMP JUMPDEST PUSH3 0x890 PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0x85B JUMP JUMPDEST PUSH3 0x89F PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0x85B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x8BC PUSH0 DUP4 ADD DUP5 PUSH3 0x85B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14CF DUP1 PUSH3 0x8D0 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0xCBDD69B5 EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x353 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x289 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x213 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x179 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x115 PUSH2 0x36F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x1078 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x1129 JUMP JUMPDEST PUSH2 0x3FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x1181 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x163 PUSH2 0x421 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x11C2 JUMP JUMPDEST PUSH2 0x42A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x1181 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B1 PUSH2 0x458 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x122D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0x1129 JUMP JUMPDEST PUSH2 0x460 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x1181 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x211 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x1129 JUMP JUMPDEST PUSH2 0x496 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x1246 JUMP JUMPDEST PUSH2 0x55C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24B PUSH2 0x5A1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x255 PUSH2 0x5B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x273 PUSH2 0x5DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x1078 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x1129 JUMP JUMPDEST PUSH2 0x66C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x1129 JUMP JUMPDEST PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x1181 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0x1129 JUMP JUMPDEST PUSH2 0x6F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FC SWAP2 SWAP1 PUSH2 0x1181 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30D PUSH2 0x717 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31A SWAP2 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x338 SWAP2 SWAP1 PUSH2 0x1299 JUMP JUMPDEST PUSH2 0x71D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34A SWAP2 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x368 SWAP2 SWAP1 PUSH2 0x1246 JUMP JUMPDEST PUSH2 0x79F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x37E SWAP1 PUSH2 0x1304 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3AA SWAP1 PUSH2 0x1304 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3F5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3CC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3F5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3D8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x409 PUSH2 0x823 JUMP JUMPDEST SWAP1 POP PUSH2 0x416 DUP2 DUP6 DUP6 PUSH2 0x82A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x434 PUSH2 0x823 JUMP JUMPDEST SWAP1 POP PUSH2 0x441 DUP6 DUP3 DUP6 PUSH2 0x83C JUMP JUMPDEST PUSH2 0x44C DUP6 DUP6 DUP6 PUSH2 0x8CE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x46A PUSH2 0x823 JUMP JUMPDEST SWAP1 POP PUSH2 0x48B DUP2 DUP6 DUP6 PUSH2 0x47C DUP6 DUP10 PUSH2 0x71D JUMP JUMPDEST PUSH2 0x486 SWAP2 SWAP1 PUSH2 0x1361 JUMP JUMPDEST PUSH2 0x82A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x49E PUSH2 0x9BE JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x50C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x503 SWAP1 PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x54E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x545 SWAP1 PUSH2 0x1446 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x558 DUP3 DUP3 PUSH2 0xA45 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5A9 PUSH2 0x9BE JUMP JUMPDEST PUSH2 0x5B2 PUSH0 PUSH2 0xAC4 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x5EB SWAP1 PUSH2 0x1304 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x617 SWAP1 PUSH2 0x1304 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x662 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x639 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x662 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x645 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x676 DUP3 DUP3 PUSH2 0xB87 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x684 PUSH2 0x823 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x691 DUP3 DUP7 PUSH2 0x71D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x6DC JUMPI DUP5 DUP2 DUP6 PUSH1 0x40 MLOAD PUSH32 0xA60F030C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1464 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x82A JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6FF PUSH2 0x823 JUMP JUMPDEST SWAP1 POP PUSH2 0x70C DUP2 DUP6 DUP6 PUSH2 0x8CE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7A7 PUSH2 0x9BE JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x817 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x80E SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x820 DUP2 PUSH2 0xAC4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x837 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xC06 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x847 DUP5 DUP5 PUSH2 0x71D JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x8C8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x8B9 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1464 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8C7 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xC06 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x93E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x935 SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9AE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A5 SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9B9 DUP4 DUP4 DUP4 PUSH2 0xDD5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x9C6 PUSH2 0x823 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9E4 PUSH2 0x5B4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA43 JUMPI PUSH2 0xA07 PUSH2 0x823 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3A SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAB5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAAC SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAC0 PUSH0 DUP4 DUP4 PUSH2 0xDD5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBF7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEE SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC02 DUP3 PUSH0 DUP4 PUSH2 0xDD5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC76 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC6D SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCE6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCDD SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xDCF JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xDC6 SWAP2 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE25 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE19 SWAP2 SWAP1 PUSH2 0x1361 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xEF3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xEAE JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEA5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1464 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF3A JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xF84 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xFE1 SWAP2 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1025 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x100A JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x104A DUP3 PUSH2 0xFEE JUMP JUMPDEST PUSH2 0x1054 DUP2 DUP6 PUSH2 0xFF8 JUMP JUMPDEST SWAP4 POP PUSH2 0x1064 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1008 JUMP JUMPDEST PUSH2 0x106D DUP2 PUSH2 0x1030 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1090 DUP2 DUP5 PUSH2 0x1040 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x10C5 DUP3 PUSH2 0x109C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10D5 DUP2 PUSH2 0x10BB JUMP JUMPDEST DUP2 EQ PUSH2 0x10DF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10F0 DUP2 PUSH2 0x10CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1108 DUP2 PUSH2 0x10F6 JUMP JUMPDEST DUP2 EQ PUSH2 0x1112 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1123 DUP2 PUSH2 0x10FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x113F JUMPI PUSH2 0x113E PUSH2 0x1098 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x114C DUP6 DUP3 DUP7 ADD PUSH2 0x10E2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x115D DUP6 DUP3 DUP7 ADD PUSH2 0x1115 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x117B DUP2 PUSH2 0x1167 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1194 PUSH0 DUP4 ADD DUP5 PUSH2 0x1172 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11A3 DUP2 PUSH2 0x10F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11BC PUSH0 DUP4 ADD DUP5 PUSH2 0x119A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x11D9 JUMPI PUSH2 0x11D8 PUSH2 0x1098 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11E6 DUP7 DUP3 DUP8 ADD PUSH2 0x10E2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x11F7 DUP7 DUP3 DUP8 ADD PUSH2 0x10E2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1208 DUP7 DUP3 DUP8 ADD PUSH2 0x1115 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1227 DUP2 PUSH2 0x1212 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1240 PUSH0 DUP4 ADD DUP5 PUSH2 0x121E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x125B JUMPI PUSH2 0x125A PUSH2 0x1098 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1268 DUP5 DUP3 DUP6 ADD PUSH2 0x10E2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x127A DUP2 PUSH2 0x10BB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1293 PUSH0 DUP4 ADD DUP5 PUSH2 0x1271 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12AF JUMPI PUSH2 0x12AE PUSH2 0x1098 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12BC DUP6 DUP3 DUP7 ADD PUSH2 0x10E2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12CD DUP6 DUP3 DUP7 ADD PUSH2 0x10E2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x131B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x132E JUMPI PUSH2 0x132D PUSH2 0x12D7 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x136B DUP3 PUSH2 0x10F6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1376 DUP4 PUSH2 0x10F6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x138E JUMPI PUSH2 0x138D PUSH2 0x1334 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x13C8 PUSH1 0xF DUP4 PUSH2 0xFF8 JUMP JUMPDEST SWAP2 POP PUSH2 0x13D3 DUP3 PUSH2 0x1394 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13F5 DUP2 PUSH2 0x13BC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1430 PUSH1 0x1D DUP4 PUSH2 0xFF8 JUMP JUMPDEST SWAP2 POP PUSH2 0x143B DUP3 PUSH2 0x13FC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x145D DUP2 PUSH2 0x1424 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1477 PUSH0 DUP4 ADD DUP7 PUSH2 0x1271 JUMP JUMPDEST PUSH2 0x1484 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x119A JUMP JUMPDEST PUSH2 0x1491 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x119A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH3 0xBA5783 0xB8 0x4C 0x2E 0x4D PUSH1 0x6E 0xE3 RETURNDATACOPY 0xF7 0xDE 0xEA 0xA9 0xBC 0xED PUSH25 0xB0BE4A8B70DC98C66C46CEFB7C64736F6C6343000814003300 ",
							"sourceMap": "109:702:4:-:0;;;177:2;147:32;;286:109;;;;;;;;;;330:10;2296:116:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2371:5;2363;:13;;;;;;:::i;:::-;;2397:7;2387;:17;;;;;;:::i;:::-;;2296:116;;1300:32:5;1319:12;1300:18;;;:32;;:::i;:::-;1255:85;355:32:4::2;361:10;372:14;355:5;;;:32;;:::i;:::-;109:702:::0;;2892:191:5;2966:16;2985:6;;;;;;;;;;;2966:25;;3011:8;3002:6;;:17;;;;;;;;;;;;;;;;;;3066:8;3035:40;;3056:8;3035:40;;;;;;;;;;;;2955:128;2892:191;:::o;10128:213:1:-;10218:1;10199:21;;:7;:21;;;10195:93;;10273:1;10244:32;;;;;;;;;;;:::i;:::-;;;;;;;;10195:93;10298:35;10314:1;10318:7;10327:5;10298:7;;;:35;;:::i;:::-;10128:213;;:::o;8640:1135::-;8746:1;8730:18;;:4;:18;;;8726:552;;8884:5;8868:12;;:21;;;;;;;:::i;:::-;;;;;;;;8726:552;;;8922:19;8944:9;:15;8954:4;8944:15;;;;;;;;;;;;;;;;8922:37;;8992:5;8978:11;:19;8974:117;;;9050:4;9056:11;9069:5;9025:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;8974:117;9246:5;9232:11;:19;9214:9;:15;9224:4;9214:15;;;;;;;;;;;;;;;:37;;;;8907:371;8726:552;9308:1;9294:16;;:2;:16;;;9290:435;;9476:5;9460:12;;:21;;;;;;;;;;;9290:435;;;9693:5;9676:9;:13;9686:2;9676:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;9290:435;9757:2;9742:25;;9751:4;9742:25;;;9761:5;9742:25;;;;;;:::i;:::-;;;;;;;;8640:1135;;;:::o;7:99:7:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:126::-;5271:7;5311:42;5304:5;5300:54;5289:65;;5234:126;;;:::o;5366:96::-;5403:7;5432:24;5450:5;5432:24;:::i;:::-;5421:35;;5366:96;;;:::o;5468:118::-;5555:24;5573:5;5555:24;:::i;:::-;5550:3;5543:37;5468:118;;:::o;5592:222::-;5685:4;5723:2;5712:9;5708:18;5700:26;;5736:71;5804:1;5793:9;5789:17;5780:6;5736:71;:::i;:::-;5592:222;;;;:::o;5820:180::-;5868:77;5865:1;5858:88;5965:4;5962:1;5955:15;5989:4;5986:1;5979:15;6006:191;6046:3;6065:20;6083:1;6065:20;:::i;:::-;6060:25;;6099:20;6117:1;6099:20;:::i;:::-;6094:25;;6142:1;6139;6135:9;6128:16;;6163:3;6160:1;6157:10;6154:36;;;6170:18;;:::i;:::-;6154:36;6006:191;;;;:::o;6203:118::-;6290:24;6308:5;6290:24;:::i;:::-;6285:3;6278:37;6203:118;;:::o;6327:442::-;6476:4;6514:2;6503:9;6499:18;6491:26;;6527:71;6595:1;6584:9;6580:17;6571:6;6527:71;:::i;:::-;6608:72;6676:2;6665:9;6661:18;6652:6;6608:72;:::i;:::-;6690;6758:2;6747:9;6743:18;6734:6;6690:72;:::i;:::-;6327:442;;;;;;:::o;6775:222::-;6868:4;6906:2;6895:9;6891:18;6883:26;;6919:71;6987:1;6976:9;6972:17;6963:6;6919:71;:::i;:::-;6775:222;;;;:::o;109:702:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_510": {
									"entryPoint": 2090,
									"id": 510,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_570": {
									"entryPoint": 3078,
									"id": 570,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_492": {
									"entryPoint": 2951,
									"id": 492,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_884": {
									"entryPoint": 2494,
									"id": 884,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_459": {
									"entryPoint": 2629,
									"id": 459,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": 2083,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_618": {
									"entryPoint": 2108,
									"id": 618,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_946": {
									"entryPoint": 2756,
									"id": 946,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_349": {
									"entryPoint": 2254,
									"id": 349,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_426": {
									"entryPoint": 3541,
									"id": 426,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_172": {
									"entryPoint": 1821,
									"id": 172,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_196": {
									"entryPoint": 1023,
									"id": 196,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_131": {
									"entryPoint": 1372,
									"id": 131,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_813": {
									"entryPoint": 1644,
									"id": 813,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@decimals_109": {
									"entryPoint": 1112,
									"id": 109,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_302": {
									"entryPoint": 1658,
									"id": 302,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_257": {
									"entryPoint": 1120,
									"id": 257,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_800": {
									"entryPoint": 1174,
									"id": 800,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_91": {
									"entryPoint": 879,
									"id": 91,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_867": {
									"entryPoint": 1460,
									"id": 867,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_898": {
									"entryPoint": 1441,
									"id": 898,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_100": {
									"entryPoint": 1500,
									"id": 100,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokensPerEth_734": {
									"entryPoint": 1815,
									"id": 734,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_118": {
									"entryPoint": 1057,
									"id": 118,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_228": {
									"entryPoint": 1066,
									"id": 228,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_926": {
									"entryPoint": 1951,
									"id": 926,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_155": {
									"entryPoint": 1781,
									"id": 155,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4322,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4373,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4678,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4761,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4546,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4393,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4721,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4466,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4160,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5052,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5156,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4506,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4638,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4736,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5220,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4481,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4216,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5086,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5190,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4521,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 4653,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4078,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4088,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4961,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4283,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4455,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4252,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4342,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4626,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4104,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4868,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4916,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 4823,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4248,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4144,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226": {
									"entryPoint": 5012,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296": {
									"entryPoint": 5116,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4300,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4351,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9310:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:7",
														"type": ""
													}
												],
												"src": "7:99:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:7",
														"type": ""
													}
												],
												"src": "112:169:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "349:184:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "368:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "363:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "428:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:7"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "400:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "402:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "414:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "382:3:7",
																"statements": []
															},
															"src": "378:113:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:7"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "525:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:27:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "500:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "331:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "336:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "341:6:7",
														"type": ""
													}
												],
												"src": "287:246:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:54:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "597:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "622:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "631:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "570:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "580:6:7",
														"type": ""
													}
												],
												"src": "539:102:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:285:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "753:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "811:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "944:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "898:65:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "898:65:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "972:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "720:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "727:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "735:3:7",
														"type": ""
													}
												],
												"src": "647:377:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:195:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1250:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:7"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1258:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1120:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1132:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1143:4:7",
														"type": ""
													}
												],
												"src": "1030:313:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1389:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1399:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1409:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1382:6:7",
														"type": ""
													}
												],
												"src": "1349:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1519:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1642:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1721:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1731:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1742:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1703:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1713:7:7",
														"type": ""
													}
												],
												"src": "1676:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1853:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1863:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1874:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1835:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1845:7:7",
														"type": ""
													}
												],
												"src": "1808:96:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1953:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2010:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1966:43:7"
															},
															"nodeType": "YulIf",
															"src": "1963:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1946:5:7",
														"type": ""
													}
												],
												"src": "1910:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2090:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2100:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2109:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2138:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2068:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2076:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2084:5:7",
														"type": ""
													}
												],
												"src": "2038:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2228:32:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2238:16:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2249:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2210:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2220:7:7",
														"type": ""
													}
												],
												"src": "2183:77:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2309:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2366:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2322:43:7"
															},
															"nodeType": "YulIf",
															"src": "2319:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2302:5:7",
														"type": ""
													}
												],
												"src": "2266:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2446:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2456:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2465:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2494:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2424:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2432:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2440:5:7",
														"type": ""
													}
												],
												"src": "2394:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2622:391:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2635:32:7"
															},
															"nodeType": "YulIf",
															"src": "2632:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "2761:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2805:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2888:118:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2933:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2584:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2595:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2607:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2615:6:7",
														"type": ""
													}
												],
												"src": "2539:474:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3061:48:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3071:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3082:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3043:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3053:7:7",
														"type": ""
													}
												],
												"src": "3019:90:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3174:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3184:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3162:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3169:3:7",
														"type": ""
													}
												],
												"src": "3115:109:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3322:118:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3332:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3340:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3368:65:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3294:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3306:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3317:4:7",
														"type": ""
													}
												],
												"src": "3230:210:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3511:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3528:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3551:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3533:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3533:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3521:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3521:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3499:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3506:3:7",
														"type": ""
													}
												],
												"src": "3446:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3668:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3678:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3690:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3701:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3686:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3678:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3714:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3714:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3714:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3640:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3652:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3663:4:7",
														"type": ""
													}
												],
												"src": "3570:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3898:519:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3944:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3946:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3946:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3946:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3915:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3911:32:7"
															},
															"nodeType": "YulIf",
															"src": "3908:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "4037:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4052:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4056:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4081:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4091:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4091:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4164:118:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4179:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4183:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4209:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4292:118:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4337:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3852:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3863:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3875:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3883:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3891:6:7",
														"type": ""
													}
												],
												"src": "3798:619:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4466:43:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4476:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4491:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4498:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4487:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4476:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4448:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4458:7:7",
														"type": ""
													}
												],
												"src": "4423:86:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4576:51:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4593:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4614:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "4598:15:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4598:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4586:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4586:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4586:35:7"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4564:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4571:3:7",
														"type": ""
													}
												],
												"src": "4515:112:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4727:120:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4737:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4749:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4760:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4745:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4745:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4737:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4813:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4837:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4822:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4773:39:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4773:67:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4773:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4699:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4711:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4722:4:7",
														"type": ""
													}
												],
												"src": "4633:214:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4919:263:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4965:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4967:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4967:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4967:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4940:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4949:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4936:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4936:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4961:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4932:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4932:32:7"
															},
															"nodeType": "YulIf",
															"src": "4929:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "5058:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5073:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5087:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5077:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5102:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5137:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5148:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5133:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5133:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5157:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5112:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5112:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5102:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4889:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4900:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4912:6:7",
														"type": ""
													}
												],
												"src": "4853:329:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5253:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5270:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5293:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5275:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5275:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5263:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5263:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5263:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5241:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5248:3:7",
														"type": ""
													}
												],
												"src": "5188:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5410:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5420:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5432:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5443:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5428:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5428:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5420:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5500:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5513:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5524:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5509:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5509:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5456:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5456:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5456:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5382:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5394:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5405:4:7",
														"type": ""
													}
												],
												"src": "5312:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5623:391:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5669:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5671:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5671:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5671:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5644:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5653:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5640:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5640:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5665:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5636:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5636:32:7"
															},
															"nodeType": "YulIf",
															"src": "5633:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "5762:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5777:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5791:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5781:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5806:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5841:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5852:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5837:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5837:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5861:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5816:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5816:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5806:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5889:118:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5904:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5918:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5908:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5934:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5969:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5980:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5965:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5965:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5989:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5944:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5944:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5934:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5585:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5596:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5608:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5616:6:7",
														"type": ""
													}
												],
												"src": "5540:474:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6048:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6065:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6068:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6058:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6058:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6058:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6162:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6165:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6155:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6155:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6155:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6186:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6189:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6179:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6179:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6179:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "6020:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6257:269:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6267:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6281:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6287:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "6277:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6277:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6267:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6298:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6328:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6334:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6324:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6324:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "6302:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6375:51:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6389:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "6403:6:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6411:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6399:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6399:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6389:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6355:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6348:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6348:26:7"
															},
															"nodeType": "YulIf",
															"src": "6345:81:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6478:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "6492:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6492:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6492:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6442:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6465:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6473:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6462:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6462:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6439:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6439:38:7"
															},
															"nodeType": "YulIf",
															"src": "6436:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6241:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6250:6:7",
														"type": ""
													}
												],
												"src": "6206:320:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6560:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6577:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6580:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6570:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6570:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6570:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6674:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6677:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6667:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6667:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6667:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6698:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6701:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6691:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6691:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6691:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6532:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6762:147:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6772:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6795:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6777:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6777:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6772:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6806:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6829:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6811:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6811:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6806:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6840:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6851:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6854:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6847:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6847:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "6840:3:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6880:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6882:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6882:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6882:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6872:1:7"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "6875:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6869:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6869:10:7"
															},
															"nodeType": "YulIf",
															"src": "6866:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6749:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6752:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "6758:3:7",
														"type": ""
													}
												],
												"src": "6718:191:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7021:59:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7043:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7051:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7039:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7039:14:7"
																	},
																	{
																		"hexValue": "496e76616c69642061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7055:17:7",
																		"type": "",
																		"value": "Invalid address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7032:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7032:41:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7032:41:7"
														}
													]
												},
												"name": "store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7013:6:7",
														"type": ""
													}
												],
												"src": "6915:165:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7232:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7242:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7308:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7313:2:7",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7249:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7249:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7242:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7414:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																	"nodeType": "YulIdentifier",
																	"src": "7325:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7325:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7325:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7427:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7438:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7443:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7434:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7434:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7427:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7220:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7228:3:7",
														"type": ""
													}
												],
												"src": "7086:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7629:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7639:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7651:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7662:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7647:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7647:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7639:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7686:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7697:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7682:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7682:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7705:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7711:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7701:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7701:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7675:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7675:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7675:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7731:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7865:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7739:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7739:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7731:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7609:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7624:4:7",
														"type": ""
													}
												],
												"src": "7458:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7989:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8011:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8019:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8007:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8007:14:7"
																	},
																	{
																		"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8023:31:7",
																		"type": "",
																		"value": "Amount must be greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8000:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8000:55:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8000:55:7"
														}
													]
												},
												"name": "store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7981:6:7",
														"type": ""
													}
												],
												"src": "7883:179:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8214:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8224:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8290:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8295:2:7",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8231:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8231:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8224:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8396:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																	"nodeType": "YulIdentifier",
																	"src": "8307:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8307:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8307:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8409:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8420:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8425:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8416:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8416:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8409:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8202:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8210:3:7",
														"type": ""
													}
												],
												"src": "8068:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8611:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8621:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8633:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8644:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8629:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8629:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8621:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8668:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8679:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8664:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8664:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8687:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8693:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8683:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8683:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8657:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8657:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8657:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8713:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8847:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8721:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8721:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8713:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8591:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8606:4:7",
														"type": ""
													}
												],
												"src": "8440:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9019:288:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9029:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9041:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9052:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9037:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9037:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9029:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9109:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9122:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9133:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9118:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9118:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9065:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9065:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9065:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9190:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9203:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9214:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9199:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9199:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9146:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9146:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9146:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "9272:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9285:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9296:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9281:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9281:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9228:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9228:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9228:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8975:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8987:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8995:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9003:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9014:4:7",
														"type": ""
													}
												],
												"src": "8865:442:7"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid address\")\n\n    }\n\n    function abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be greater than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610109575f3560e01c8063715018a6116100a0578063a457c2d71161006f578063a457c2d7146102a5578063a9059cbb146102d5578063cbdd69b514610305578063dd62ed3e14610323578063f2fde38b1461035357610109565b8063715018a6146102435780638da5cb5b1461024d57806395d89b411461026b5780639dc29fac1461028957610109565b8063313ce567116100dc578063313ce567146101a957806339509351146101c757806340c10f19146101f757806370a082311461021357610109565b806306fdde031461010d578063095ea7b31461012b57806318160ddd1461015b57806323b872dd14610179575b5f80fd5b61011561036f565b6040516101229190611078565b60405180910390f35b61014560048036038101906101409190611129565b6103ff565b6040516101529190611181565b60405180910390f35b610163610421565b60405161017091906111a9565b60405180910390f35b610193600480360381019061018e91906111c2565b61042a565b6040516101a09190611181565b60405180910390f35b6101b1610458565b6040516101be919061122d565b60405180910390f35b6101e160048036038101906101dc9190611129565b610460565b6040516101ee9190611181565b60405180910390f35b610211600480360381019061020c9190611129565b610496565b005b61022d60048036038101906102289190611246565b61055c565b60405161023a91906111a9565b60405180910390f35b61024b6105a1565b005b6102556105b4565b6040516102629190611280565b60405180910390f35b6102736105dc565b6040516102809190611078565b60405180910390f35b6102a3600480360381019061029e9190611129565b61066c565b005b6102bf60048036038101906102ba9190611129565b61067a565b6040516102cc9190611181565b60405180910390f35b6102ef60048036038101906102ea9190611129565b6106f5565b6040516102fc9190611181565b60405180910390f35b61030d610717565b60405161031a91906111a9565b60405180910390f35b61033d60048036038101906103389190611299565b61071d565b60405161034a91906111a9565b60405180910390f35b61036d60048036038101906103689190611246565b61079f565b005b60606003805461037e90611304565b80601f01602080910402602001604051908101604052809291908181526020018280546103aa90611304565b80156103f55780601f106103cc576101008083540402835291602001916103f5565b820191905f5260205f20905b8154815290600101906020018083116103d857829003601f168201915b5050505050905090565b5f80610409610823565b905061041681858561082a565b600191505092915050565b5f600254905090565b5f80610434610823565b905061044185828561083c565b61044c8585856108ce565b60019150509392505050565b5f6012905090565b5f8061046a610823565b905061048b81858561047c858961071d565b6104869190611361565b61082a565b600191505092915050565b61049e6109be565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361050c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610503906113de565b60405180910390fd5b5f811161054e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054590611446565b60405180910390fd5b6105588282610a45565b5050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6105a96109be565b6105b25f610ac4565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546105eb90611304565b80601f016020809104026020016040519081016040528092919081815260200182805461061790611304565b80156106625780601f1061063957610100808354040283529160200191610662565b820191905f5260205f20905b81548152906001019060200180831161064557829003601f168201915b5050505050905090565b6106768282610b87565b5050565b5f80610684610823565b90505f610691828661071d565b9050838110156106dc578481856040517fa60f030c0000000000000000000000000000000000000000000000000000000081526004016106d393929190611464565b60405180910390fd5b6106e9828686840361082a565b60019250505092915050565b5f806106ff610823565b905061070c8185856108ce565b600191505092915050565b60065481565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6107a76109be565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610817575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161080e9190611280565b60405180910390fd5b61082081610ac4565b50565b5f33905090565b6108378383836001610c06565b505050565b5f610847848461071d565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146108c857818110156108b9578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016108b093929190611464565b60405180910390fd5b6108c784848484035f610c06565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361093e575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016109359190611280565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109ae575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016109a59190611280565b60405180910390fd5b6109b9838383610dd5565b505050565b6109c6610823565b73ffffffffffffffffffffffffffffffffffffffff166109e46105b4565b73ffffffffffffffffffffffffffffffffffffffff1614610a4357610a07610823565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610a3a9190611280565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ab5575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610aac9190611280565b60405180910390fd5b610ac05f8383610dd5565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bf7575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610bee9190611280565b60405180910390fd5b610c02825f83610dd5565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610c76575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610c6d9190611280565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ce6575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610cdd9190611280565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610dcf578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610dc691906111a9565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e25578060025f828254610e199190611361565b92505081905550610ef3565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610eae578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610ea593929190611464565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f3a578060025f8282540392505081905550610f84565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610fe191906111a9565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561102557808201518184015260208101905061100a565b5f8484015250505050565b5f601f19601f8301169050919050565b5f61104a82610fee565b6110548185610ff8565b9350611064818560208601611008565b61106d81611030565b840191505092915050565b5f6020820190508181035f8301526110908184611040565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6110c58261109c565b9050919050565b6110d5816110bb565b81146110df575f80fd5b50565b5f813590506110f0816110cc565b92915050565b5f819050919050565b611108816110f6565b8114611112575f80fd5b50565b5f81359050611123816110ff565b92915050565b5f806040838503121561113f5761113e611098565b5b5f61114c858286016110e2565b925050602061115d85828601611115565b9150509250929050565b5f8115159050919050565b61117b81611167565b82525050565b5f6020820190506111945f830184611172565b92915050565b6111a3816110f6565b82525050565b5f6020820190506111bc5f83018461119a565b92915050565b5f805f606084860312156111d9576111d8611098565b5b5f6111e6868287016110e2565b93505060206111f7868287016110e2565b925050604061120886828701611115565b9150509250925092565b5f60ff82169050919050565b61122781611212565b82525050565b5f6020820190506112405f83018461121e565b92915050565b5f6020828403121561125b5761125a611098565b5b5f611268848285016110e2565b91505092915050565b61127a816110bb565b82525050565b5f6020820190506112935f830184611271565b92915050565b5f80604083850312156112af576112ae611098565b5b5f6112bc858286016110e2565b92505060206112cd858286016110e2565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061131b57607f821691505b60208210810361132e5761132d6112d7565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61136b826110f6565b9150611376836110f6565b925082820190508082111561138e5761138d611334565b5b92915050565b7f496e76616c6964206164647265737300000000000000000000000000000000005f82015250565b5f6113c8600f83610ff8565b91506113d382611394565b602082019050919050565b5f6020820190508181035f8301526113f5816113bc565b9050919050565b7f416d6f756e74206d7573742062652067726561746572207468616e20300000005f82015250565b5f611430601d83610ff8565b915061143b826113fc565b602082019050919050565b5f6020820190508181035f83015261145d81611424565b9050919050565b5f6060820190506114775f830186611271565b611484602083018561119a565b611491604083018461119a565b94935050505056fea264697066735822122062ba5783b84c2e4d606ee33ef7deeaa9bced78b0be4a8b70dc98c66c46cefb7c64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0xCBDD69B5 EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x353 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x289 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x213 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x179 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x115 PUSH2 0x36F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x1078 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x1129 JUMP JUMPDEST PUSH2 0x3FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x1181 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x163 PUSH2 0x421 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x11C2 JUMP JUMPDEST PUSH2 0x42A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x1181 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B1 PUSH2 0x458 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x122D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0x1129 JUMP JUMPDEST PUSH2 0x460 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x1181 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x211 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x1129 JUMP JUMPDEST PUSH2 0x496 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x1246 JUMP JUMPDEST PUSH2 0x55C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24B PUSH2 0x5A1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x255 PUSH2 0x5B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x273 PUSH2 0x5DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x1078 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x1129 JUMP JUMPDEST PUSH2 0x66C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x1129 JUMP JUMPDEST PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x1181 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0x1129 JUMP JUMPDEST PUSH2 0x6F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FC SWAP2 SWAP1 PUSH2 0x1181 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30D PUSH2 0x717 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31A SWAP2 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x338 SWAP2 SWAP1 PUSH2 0x1299 JUMP JUMPDEST PUSH2 0x71D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34A SWAP2 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x368 SWAP2 SWAP1 PUSH2 0x1246 JUMP JUMPDEST PUSH2 0x79F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x37E SWAP1 PUSH2 0x1304 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3AA SWAP1 PUSH2 0x1304 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3F5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3CC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3F5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3D8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x409 PUSH2 0x823 JUMP JUMPDEST SWAP1 POP PUSH2 0x416 DUP2 DUP6 DUP6 PUSH2 0x82A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x434 PUSH2 0x823 JUMP JUMPDEST SWAP1 POP PUSH2 0x441 DUP6 DUP3 DUP6 PUSH2 0x83C JUMP JUMPDEST PUSH2 0x44C DUP6 DUP6 DUP6 PUSH2 0x8CE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x46A PUSH2 0x823 JUMP JUMPDEST SWAP1 POP PUSH2 0x48B DUP2 DUP6 DUP6 PUSH2 0x47C DUP6 DUP10 PUSH2 0x71D JUMP JUMPDEST PUSH2 0x486 SWAP2 SWAP1 PUSH2 0x1361 JUMP JUMPDEST PUSH2 0x82A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x49E PUSH2 0x9BE JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x50C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x503 SWAP1 PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x54E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x545 SWAP1 PUSH2 0x1446 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x558 DUP3 DUP3 PUSH2 0xA45 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5A9 PUSH2 0x9BE JUMP JUMPDEST PUSH2 0x5B2 PUSH0 PUSH2 0xAC4 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x5EB SWAP1 PUSH2 0x1304 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x617 SWAP1 PUSH2 0x1304 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x662 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x639 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x662 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x645 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x676 DUP3 DUP3 PUSH2 0xB87 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x684 PUSH2 0x823 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x691 DUP3 DUP7 PUSH2 0x71D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x6DC JUMPI DUP5 DUP2 DUP6 PUSH1 0x40 MLOAD PUSH32 0xA60F030C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1464 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x82A JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6FF PUSH2 0x823 JUMP JUMPDEST SWAP1 POP PUSH2 0x70C DUP2 DUP6 DUP6 PUSH2 0x8CE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7A7 PUSH2 0x9BE JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x817 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x80E SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x820 DUP2 PUSH2 0xAC4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x837 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xC06 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x847 DUP5 DUP5 PUSH2 0x71D JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x8C8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x8B9 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1464 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8C7 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xC06 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x93E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x935 SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9AE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A5 SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9B9 DUP4 DUP4 DUP4 PUSH2 0xDD5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x9C6 PUSH2 0x823 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9E4 PUSH2 0x5B4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA43 JUMPI PUSH2 0xA07 PUSH2 0x823 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3A SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAB5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAAC SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAC0 PUSH0 DUP4 DUP4 PUSH2 0xDD5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBF7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEE SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC02 DUP3 PUSH0 DUP4 PUSH2 0xDD5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC76 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC6D SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCE6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCDD SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xDCF JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xDC6 SWAP2 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE25 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE19 SWAP2 SWAP1 PUSH2 0x1361 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xEF3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xEAE JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEA5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1464 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF3A JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xF84 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xFE1 SWAP2 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1025 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x100A JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x104A DUP3 PUSH2 0xFEE JUMP JUMPDEST PUSH2 0x1054 DUP2 DUP6 PUSH2 0xFF8 JUMP JUMPDEST SWAP4 POP PUSH2 0x1064 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1008 JUMP JUMPDEST PUSH2 0x106D DUP2 PUSH2 0x1030 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1090 DUP2 DUP5 PUSH2 0x1040 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x10C5 DUP3 PUSH2 0x109C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10D5 DUP2 PUSH2 0x10BB JUMP JUMPDEST DUP2 EQ PUSH2 0x10DF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10F0 DUP2 PUSH2 0x10CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1108 DUP2 PUSH2 0x10F6 JUMP JUMPDEST DUP2 EQ PUSH2 0x1112 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1123 DUP2 PUSH2 0x10FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x113F JUMPI PUSH2 0x113E PUSH2 0x1098 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x114C DUP6 DUP3 DUP7 ADD PUSH2 0x10E2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x115D DUP6 DUP3 DUP7 ADD PUSH2 0x1115 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x117B DUP2 PUSH2 0x1167 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1194 PUSH0 DUP4 ADD DUP5 PUSH2 0x1172 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11A3 DUP2 PUSH2 0x10F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11BC PUSH0 DUP4 ADD DUP5 PUSH2 0x119A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x11D9 JUMPI PUSH2 0x11D8 PUSH2 0x1098 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11E6 DUP7 DUP3 DUP8 ADD PUSH2 0x10E2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x11F7 DUP7 DUP3 DUP8 ADD PUSH2 0x10E2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1208 DUP7 DUP3 DUP8 ADD PUSH2 0x1115 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1227 DUP2 PUSH2 0x1212 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1240 PUSH0 DUP4 ADD DUP5 PUSH2 0x121E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x125B JUMPI PUSH2 0x125A PUSH2 0x1098 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1268 DUP5 DUP3 DUP6 ADD PUSH2 0x10E2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x127A DUP2 PUSH2 0x10BB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1293 PUSH0 DUP4 ADD DUP5 PUSH2 0x1271 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12AF JUMPI PUSH2 0x12AE PUSH2 0x1098 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12BC DUP6 DUP3 DUP7 ADD PUSH2 0x10E2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12CD DUP6 DUP3 DUP7 ADD PUSH2 0x10E2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x131B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x132E JUMPI PUSH2 0x132D PUSH2 0x12D7 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x136B DUP3 PUSH2 0x10F6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1376 DUP4 PUSH2 0x10F6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x138E JUMPI PUSH2 0x138D PUSH2 0x1334 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x13C8 PUSH1 0xF DUP4 PUSH2 0xFF8 JUMP JUMPDEST SWAP2 POP PUSH2 0x13D3 DUP3 PUSH2 0x1394 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13F5 DUP2 PUSH2 0x13BC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1430 PUSH1 0x1D DUP4 PUSH2 0xFF8 JUMP JUMPDEST SWAP2 POP PUSH2 0x143B DUP3 PUSH2 0x13FC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x145D DUP2 PUSH2 0x1424 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1477 PUSH0 DUP4 ADD DUP7 PUSH2 0x1271 JUMP JUMPDEST PUSH2 0x1484 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x119A JUMP JUMPDEST PUSH2 0x1491 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x119A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH3 0xBA5783 0xB8 0x4C 0x2E 0x4D PUSH1 0x6E 0xE3 RETURNDATACOPY 0xF7 0xDE 0xEA 0xA9 0xBC 0xED PUSH25 0xB0BE4A8B70DC98C66C46CEFB7C64736F6C6343000814003300 ",
							"sourceMap": "109:702:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2482:91:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4775:190;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3584:99;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5543:249;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3435:84;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6201:238;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;440:228:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3746:118:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2254:103:5;;;:::i;:::-;;1579:87;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2692:95:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;707::4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7127:504:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4069:182;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;147:32:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4314:142:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2512:220:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2482:91:1;2527:13;2560:5;2553:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2482:91;:::o;4775:190::-;4848:4;4865:13;4881:12;:10;:12::i;:::-;4865:28;;4904:31;4913:5;4920:7;4929:5;4904:8;:31::i;:::-;4953:4;4946:11;;;4775:190;;;;:::o;3584:99::-;3636:7;3663:12;;3656:19;;3584:99;:::o;5543:249::-;5630:4;5647:15;5665:12;:10;:12::i;:::-;5647:30;;5688:37;5704:4;5710:7;5719:5;5688:15;:37::i;:::-;5736:26;5746:4;5752:2;5756:5;5736:9;:26::i;:::-;5780:4;5773:11;;;5543:249;;;;;:::o;3435:84::-;3484:5;3509:2;3502:9;;3435:84;:::o;6201:238::-;6289:4;6306:13;6322:12;:10;:12::i;:::-;6306:28;;6345:64;6354:5;6361:7;6398:10;6370:25;6380:5;6387:7;6370:9;:25::i;:::-;:38;;;;:::i;:::-;6345:8;:64::i;:::-;6427:4;6420:11;;;6201:238;;;;:::o;440:228:4:-;1465:13:5;:11;:13::i;:::-;542:1:4::1;523:21;;:7;:21;;::::0;515:49:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;592:1;583:6;:10;575:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;638:22;644:7;653:6;638:5;:22::i;:::-;440:228:::0;;:::o;3746:118:1:-;3811:7;3838:9;:18;3848:7;3838:18;;;;;;;;;;;;;;;;3831:25;;3746:118;;;:::o;2254:103:5:-;1465:13;:11;:13::i;:::-;2319:30:::1;2346:1;2319:18;:30::i;:::-;2254:103::o:0;1579:87::-;1625:7;1652:6;;;;;;;;;;;1645:13;;1579:87;:::o;2692:95:1:-;2739:13;2772:7;2765:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2692:95;:::o;707::4:-;772:22;778:7;787:6;772:5;:22::i;:::-;707:95;;:::o;7127:504:1:-;7222:4;7239:13;7255:12;:10;:12::i;:::-;7239:28;;7278:24;7305:25;7315:5;7322:7;7305:9;:25::i;:::-;7278:52;;7364:17;7345:16;:36;7341:150;;;7434:7;7443:16;7461:17;7405:74;;;;;;;;;;;;;:::i;:::-;;;;;;;;7341:150;7526:62;7535:5;7542:7;7570:17;7551:16;:36;7526:8;:62::i;:::-;7619:4;7612:11;;;;7127:504;;;;:::o;4069:182::-;4138:4;4155:13;4171:12;:10;:12::i;:::-;4155:28;;4194:27;4204:5;4211:2;4215:5;4194:9;:27::i;:::-;4239:4;4232:11;;;4069:182;;;;:::o;147:32:4:-;;;;:::o;4314:142:1:-;4394:7;4421:11;:18;4433:5;4421:18;;;;;;;;;;;;;;;:27;4440:7;4421:27;;;;;;;;;;;;;;;;4414:34;;4314:142;;;;:::o;2512:220:5:-;1465:13;:11;:13::i;:::-;2617:1:::1;2597:22;;:8;:22;;::::0;2593:93:::1;;2671:1;2643:31;;;;;;;;;;;:::i;:::-;;;;;;;;2593:93;2696:28;2715:8;2696:18;:28::i;:::-;2512:220:::0;:::o;657:98:0:-;710:7;737:10;730:17;;657:98;:::o;11324:138:1:-;11417:37;11426:5;11433:7;11442:5;11449:4;11417:8;:37::i;:::-;11324:138;;;:::o;13061:487::-;13161:24;13188:25;13198:5;13205:7;13188:9;:25::i;:::-;13161:52;;13248:17;13228:16;:37;13224:317;;13305:5;13286:16;:24;13282:132;;;13365:7;13374:16;13392:5;13338:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;13282:132;13457:57;13466:5;13473:7;13501:5;13482:16;:24;13508:5;13457:8;:57::i;:::-;13224:317;13150:398;13061:487;;;:::o;8016:308::-;8116:1;8100:18;;:4;:18;;;8096:88;;8169:1;8142:30;;;;;;;;;;;:::i;:::-;;;;;;;;8096:88;8212:1;8198:16;;:2;:16;;;8194:88;;8267:1;8238:32;;;;;;;;;;;:::i;:::-;;;;;;;;8194:88;8292:24;8300:4;8306:2;8310:5;8292:7;:24::i;:::-;8016:308;;;:::o;1744:166:5:-;1815:12;:10;:12::i;:::-;1804:23;;:7;:5;:7::i;:::-;:23;;;1800:103;;1878:12;:10;:12::i;:::-;1851:40;;;;;;;;;;;:::i;:::-;;;;;;;;1800:103;1744:166::o;10128:213:1:-;10218:1;10199:21;;:7;:21;;;10195:93;;10273:1;10244:32;;;;;;;;;;;:::i;:::-;;;;;;;;10195:93;10298:35;10314:1;10318:7;10327:5;10298:7;:35::i;:::-;10128:213;;:::o;2892:191:5:-;2966:16;2985:6;;;;;;;;;;;2966:25;;3011:8;3002:6;;:17;;;;;;;;;;;;;;;;;;3066:8;3035:40;;3056:8;3035:40;;;;;;;;;;;;2955:128;2892:191;:::o;10676:211:1:-;10766:1;10747:21;;:7;:21;;;10743:91;;10819:1;10792:30;;;;;;;;;;;:::i;:::-;;;;;;;;10743:91;10844:35;10852:7;10869:1;10873:5;10844:7;:35::i;:::-;10676:211;;:::o;12329:443::-;12459:1;12442:19;;:5;:19;;;12438:91;;12514:1;12485:32;;;;;;;;;;;:::i;:::-;;;;;;;;12438:91;12562:1;12543:21;;:7;:21;;;12539:92;;12616:1;12588:31;;;;;;;;;;;:::i;:::-;;;;;;;;12539:92;12671:5;12641:11;:18;12653:5;12641:18;;;;;;;;;;;;;;;:27;12660:7;12641:27;;;;;;;;;;;;;;;:35;;;;12691:9;12687:78;;;12738:7;12722:31;;12731:5;12722:31;;;12747:5;12722:31;;;;;;:::i;:::-;;;;;;;;12687:78;12329:443;;;;:::o;8640:1135::-;8746:1;8730:18;;:4;:18;;;8726:552;;8884:5;8868:12;;:21;;;;;;;:::i;:::-;;;;;;;;8726:552;;;8922:19;8944:9;:15;8954:4;8944:15;;;;;;;;;;;;;;;;8922:37;;8992:5;8978:11;:19;8974:117;;;9050:4;9056:11;9069:5;9025:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;8974:117;9246:5;9232:11;:19;9214:9;:15;9224:4;9214:15;;;;;;;;;;;;;;;:37;;;;8907:371;8726:552;9308:1;9294:16;;:2;:16;;;9290:435;;9476:5;9460:12;;:21;;;;;;;;;;;9290:435;;;9693:5;9676:9;:13;9686:2;9676:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;9290:435;9757:2;9742:25;;9751:4;9742:25;;;9761:5;9742:25;;;;;;:::i;:::-;;;;;;;;8640:1135;;;:::o;7:99:7:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:118::-;5275:24;5293:5;5275:24;:::i;:::-;5270:3;5263:37;5188:118;;:::o;5312:222::-;5405:4;5443:2;5432:9;5428:18;5420:26;;5456:71;5524:1;5513:9;5509:17;5500:6;5456:71;:::i;:::-;5312:222;;;;:::o;5540:474::-;5608:6;5616;5665:2;5653:9;5644:7;5640:23;5636:32;5633:119;;;5671:79;;:::i;:::-;5633:119;5791:1;5816:53;5861:7;5852:6;5841:9;5837:22;5816:53;:::i;:::-;5806:63;;5762:117;5918:2;5944:53;5989:7;5980:6;5969:9;5965:22;5944:53;:::i;:::-;5934:63;;5889:118;5540:474;;;;;:::o;6020:180::-;6068:77;6065:1;6058:88;6165:4;6162:1;6155:15;6189:4;6186:1;6179:15;6206:320;6250:6;6287:1;6281:4;6277:12;6267:22;;6334:1;6328:4;6324:12;6355:18;6345:81;;6411:4;6403:6;6399:17;6389:27;;6345:81;6473:2;6465:6;6462:14;6442:18;6439:38;6436:84;;6492:18;;:::i;:::-;6436:84;6257:269;6206:320;;;:::o;6532:180::-;6580:77;6577:1;6570:88;6677:4;6674:1;6667:15;6701:4;6698:1;6691:15;6718:191;6758:3;6777:20;6795:1;6777:20;:::i;:::-;6772:25;;6811:20;6829:1;6811:20;:::i;:::-;6806:25;;6854:1;6851;6847:9;6840:16;;6875:3;6872:1;6869:10;6866:36;;;6882:18;;:::i;:::-;6866:36;6718:191;;;;:::o;6915:165::-;7055:17;7051:1;7043:6;7039:14;7032:41;6915:165;:::o;7086:366::-;7228:3;7249:67;7313:2;7308:3;7249:67;:::i;:::-;7242:74;;7325:93;7414:3;7325:93;:::i;:::-;7443:2;7438:3;7434:12;7427:19;;7086:366;;;:::o;7458:419::-;7624:4;7662:2;7651:9;7647:18;7639:26;;7711:9;7705:4;7701:20;7697:1;7686:9;7682:17;7675:47;7739:131;7865:4;7739:131;:::i;:::-;7731:139;;7458:419;;;:::o;7883:179::-;8023:31;8019:1;8011:6;8007:14;8000:55;7883:179;:::o;8068:366::-;8210:3;8231:67;8295:2;8290:3;8231:67;:::i;:::-;8224:74;;8307:93;8396:3;8307:93;:::i;:::-;8425:2;8420:3;8416:12;8409:19;;8068:366;;;:::o;8440:419::-;8606:4;8644:2;8633:9;8629:18;8621:26;;8693:9;8687:4;8683:20;8679:1;8668:9;8664:17;8657:47;8721:131;8847:4;8721:131;:::i;:::-;8713:139;;8440:419;;;:::o;8865:442::-;9014:4;9052:2;9041:9;9037:18;9029:26;;9065:71;9133:1;9122:9;9118:17;9109:6;9065:71;:::i;:::-;9146:72;9214:2;9203:9;9199:18;9190:6;9146:72;:::i;:::-;9228;9296:2;9285:9;9281:18;9272:6;9228:72;:::i;:::-;8865:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1065400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2918",
								"burn(address,uint256)": "infinite",
								"decimals()": "361",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2560",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"tokensPerEth()": "2491",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 109,
									"end": 811,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 109,
									"end": 811,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 109,
									"end": 811,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 177,
									"end": 179,
									"name": "PUSH",
									"source": 4,
									"value": "A"
								},
								{
									"begin": 147,
									"end": 179,
									"name": "PUSH",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 147,
									"end": 179,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 286,
									"end": 395,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 286,
									"end": 395,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 286,
									"end": 395,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 286,
									"end": 395,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 286,
									"end": 395,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 286,
									"end": 395,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 286,
									"end": 395,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 286,
									"end": 395,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 286,
									"end": 395,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 286,
									"end": 395,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 286,
									"end": 395,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 330,
									"end": 340,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 2296,
									"end": 2412,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2296,
									"end": 2412,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2296,
									"end": 2412,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2296,
									"end": 2412,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2296,
									"end": 2412,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2296,
									"end": 2412,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2296,
									"end": 2412,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2296,
									"end": 2412,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2296,
									"end": 2412,
									"name": "PUSH",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2296,
									"end": 2412,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2296,
									"end": 2412,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2296,
									"end": 2412,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2296,
									"end": 2412,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2296,
									"end": 2412,
									"name": "PUSH",
									"source": 1,
									"value": "4D79746F6B656E00000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2296,
									"end": 2412,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2296,
									"end": 2412,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2296,
									"end": 2412,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2296,
									"end": 2412,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2296,
									"end": 2412,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2296,
									"end": 2412,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2296,
									"end": 2412,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2296,
									"end": 2412,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2296,
									"end": 2412,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2296,
									"end": 2412,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2296,
									"end": 2412,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2296,
									"end": 2412,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2296,
									"end": 2412,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2296,
									"end": 2412,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2296,
									"end": 2412,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2296,
									"end": 2412,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2296,
									"end": 2412,
									"name": "PUSH",
									"source": 1,
									"value": "4D59540000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2296,
									"end": 2412,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2296,
									"end": 2412,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2296,
									"end": 2412,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2371,
									"end": 2376,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2363,
									"end": 2368,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2363,
									"end": 2376,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2363,
									"end": 2376,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2363,
									"end": 2376,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2363,
									"end": 2376,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2363,
									"end": 2376,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2363,
									"end": 2376,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2363,
									"end": 2376,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2363,
									"end": 2376,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2363,
									"end": 2376,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2363,
									"end": 2376,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2397,
									"end": 2404,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2387,
									"end": 2394,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2387,
									"end": 2404,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2387,
									"end": 2404,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2387,
									"end": 2404,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2387,
									"end": 2404,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2387,
									"end": 2404,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2387,
									"end": 2404,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2387,
									"end": 2404,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2387,
									"end": 2404,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2387,
									"end": 2404,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2387,
									"end": 2404,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2296,
									"end": 2412,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2296,
									"end": 2412,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1300,
									"end": 1332,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 1319,
									"end": 1331,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1300,
									"end": 1318,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1300,
									"end": 1318,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1300,
									"end": 1318,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1300,
									"end": 1332,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1300,
									"end": 1332,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 1300,
									"end": 1332,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1300,
									"end": 1332,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 1300,
									"end": 1332,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1255,
									"end": 1340,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 355,
									"end": 387,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 361,
									"end": 371,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 372,
									"end": 386,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "10F0CF064DD59200000"
								},
								{
									"begin": 355,
									"end": 360,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 355,
									"end": 360,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 355,
									"end": 360,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 355,
									"end": 387,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 355,
									"end": 387,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 355,
									"end": 387,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 355,
									"end": 387,
									"modifierDepth": 2,
									"name": "tag",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 355,
									"end": 387,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 109,
									"end": 811,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 109,
									"end": 811,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2892,
									"end": 3083,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 2892,
									"end": 3083,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2966,
									"end": 2982,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2985,
									"end": 2991,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 2985,
									"end": 2991,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2985,
									"end": 2991,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2985,
									"end": 2991,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 2985,
									"end": 2991,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2985,
									"end": 2991,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 2985,
									"end": 2991,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 2985,
									"end": 2991,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2985,
									"end": 2991,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 2985,
									"end": 2991,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2985,
									"end": 2991,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2966,
									"end": 2991,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2966,
									"end": 2991,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3011,
									"end": 3019,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3002,
									"end": 3008,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 3002,
									"end": 3008,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3002,
									"end": 3019,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 3002,
									"end": 3019,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 3002,
									"end": 3019,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3002,
									"end": 3019,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 3002,
									"end": 3019,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3002,
									"end": 3019,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3002,
									"end": 3019,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 3002,
									"end": 3019,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 3002,
									"end": 3019,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3002,
									"end": 3019,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3002,
									"end": 3019,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 3002,
									"end": 3019,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3002,
									"end": 3019,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3002,
									"end": 3019,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 3002,
									"end": 3019,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 3002,
									"end": 3019,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3002,
									"end": 3019,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3002,
									"end": 3019,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3066,
									"end": 3074,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3035,
									"end": 3075,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3035,
									"end": 3075,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3056,
									"end": 3064,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3035,
									"end": 3075,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3035,
									"end": 3075,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3035,
									"end": 3075,
									"name": "PUSH",
									"source": 5,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3035,
									"end": 3075,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 3035,
									"end": 3075,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 3035,
									"end": 3075,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 3035,
									"end": 3075,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 3035,
									"end": 3075,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 3035,
									"end": 3075,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3035,
									"end": 3075,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 3035,
									"end": 3075,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3035,
									"end": 3075,
									"name": "LOG3",
									"source": 5
								},
								{
									"begin": 2955,
									"end": 3083,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2892,
									"end": 3083,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2892,
									"end": 3083,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 10128,
									"end": 10341,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 10128,
									"end": 10341,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10218,
									"end": 10219,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 10199,
									"end": 10220,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10199,
									"end": 10220,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 10199,
									"end": 10206,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 10199,
									"end": 10220,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10199,
									"end": 10220,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 10199,
									"end": 10220,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 10195,
									"end": 10288,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 10195,
									"end": 10288,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 10273,
									"end": 10274,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 10244,
									"end": 10276,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 10244,
									"end": 10276,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 10244,
									"end": 10276,
									"name": "PUSH",
									"source": 1,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10244,
									"end": 10276,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 10244,
									"end": 10276,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 10244,
									"end": 10276,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 10244,
									"end": 10276,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10244,
									"end": 10276,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 10244,
									"end": 10276,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 10244,
									"end": 10276,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 10244,
									"end": 10276,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 10244,
									"end": 10276,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10244,
									"end": 10276,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 10244,
									"end": 10276,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10244,
									"end": 10276,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 10244,
									"end": 10276,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 10244,
									"end": 10276,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 10244,
									"end": 10276,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 10244,
									"end": 10276,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 10244,
									"end": 10276,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 10244,
									"end": 10276,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 10195,
									"end": 10288,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 10195,
									"end": 10288,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10298,
									"end": 10333,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 10314,
									"end": 10315,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 10318,
									"end": 10325,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 10327,
									"end": 10332,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 10298,
									"end": 10305,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 10298,
									"end": 10305,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 10298,
									"end": 10305,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 10298,
									"end": 10333,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 10298,
									"end": 10333,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 10298,
									"end": 10333,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10298,
									"end": 10333,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 10298,
									"end": 10333,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10128,
									"end": 10341,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10128,
									"end": 10341,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10128,
									"end": 10341,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8640,
									"end": 9775,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 8640,
									"end": 9775,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8746,
									"end": 8747,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8730,
									"end": 8748,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8730,
									"end": 8748,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8730,
									"end": 8734,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8730,
									"end": 8748,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8730,
									"end": 8748,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8730,
									"end": 8748,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 8726,
									"end": 9278,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 8726,
									"end": 9278,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8884,
									"end": 8889,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8868,
									"end": 8880,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 8868,
									"end": 8880,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8868,
									"end": 8889,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8868,
									"end": 8889,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8868,
									"end": 8889,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 8868,
									"end": 8889,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 8868,
									"end": 8889,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8868,
									"end": 8889,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8868,
									"end": 8889,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 8868,
									"end": 8889,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8868,
									"end": 8889,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 8868,
									"end": 8889,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8868,
									"end": 8889,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 8868,
									"end": 8889,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8868,
									"end": 8889,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8868,
									"end": 8889,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8868,
									"end": 8889,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8868,
									"end": 8889,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 8868,
									"end": 8889,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8726,
									"end": 9278,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 8726,
									"end": 9278,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8726,
									"end": 9278,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 8726,
									"end": 9278,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8922,
									"end": 8941,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8944,
									"end": 8953,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8944,
									"end": 8959,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8954,
									"end": 8958,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 8944,
									"end": 8959,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8944,
									"end": 8959,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8944,
									"end": 8959,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8944,
									"end": 8959,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8944,
									"end": 8959,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8944,
									"end": 8959,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 8944,
									"end": 8959,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8944,
									"end": 8959,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8944,
									"end": 8959,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8944,
									"end": 8959,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8944,
									"end": 8959,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 8944,
									"end": 8959,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8944,
									"end": 8959,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8944,
									"end": 8959,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8944,
									"end": 8959,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 8944,
									"end": 8959,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 8922,
									"end": 8959,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8922,
									"end": 8959,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8992,
									"end": 8997,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8978,
									"end": 8989,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8978,
									"end": 8997,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 8974,
									"end": 9091,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8974,
									"end": 9091,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 8974,
									"end": 9091,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 9050,
									"end": 9054,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9056,
									"end": 9067,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 9069,
									"end": 9074,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9025,
									"end": 9075,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 9025,
									"end": 9075,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 9025,
									"end": 9075,
									"name": "PUSH",
									"source": 1,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9025,
									"end": 9075,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 9025,
									"end": 9075,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 9025,
									"end": 9075,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 9025,
									"end": 9075,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 9025,
									"end": 9075,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 9025,
									"end": 9075,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 9025,
									"end": 9075,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 9025,
									"end": 9075,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9025,
									"end": 9075,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9025,
									"end": 9075,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 9025,
									"end": 9075,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9025,
									"end": 9075,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 9025,
									"end": 9075,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9025,
									"end": 9075,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 9025,
									"end": 9075,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 9025,
									"end": 9075,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 9025,
									"end": 9075,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9025,
									"end": 9075,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 9025,
									"end": 9075,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9025,
									"end": 9075,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 8974,
									"end": 9091,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 8974,
									"end": 9091,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9246,
									"end": 9251,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 9232,
									"end": 9243,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 9232,
									"end": 9251,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 9214,
									"end": 9223,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9214,
									"end": 9229,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 9224,
									"end": 9228,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 9214,
									"end": 9229,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9214,
									"end": 9229,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 9214,
									"end": 9229,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9214,
									"end": 9229,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 9214,
									"end": 9229,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 9214,
									"end": 9229,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 9214,
									"end": 9229,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 9214,
									"end": 9229,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 9214,
									"end": 9229,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9214,
									"end": 9229,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 9214,
									"end": 9229,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 9214,
									"end": 9229,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 9214,
									"end": 9229,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 9214,
									"end": 9229,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9214,
									"end": 9229,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 9214,
									"end": 9251,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 9214,
									"end": 9251,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9214,
									"end": 9251,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 9214,
									"end": 9251,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8907,
									"end": 9278,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8726,
									"end": 9278,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 8726,
									"end": 9278,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9308,
									"end": 9309,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9294,
									"end": 9310,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9294,
									"end": 9310,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 9294,
									"end": 9296,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9294,
									"end": 9310,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9294,
									"end": 9310,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 9294,
									"end": 9310,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 9290,
									"end": 9725,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 9290,
									"end": 9725,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 9476,
									"end": 9481,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 9460,
									"end": 9472,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 9460,
									"end": 9472,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9460,
									"end": 9481,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9460,
									"end": 9481,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9460,
									"end": 9481,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 9460,
									"end": 9481,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 9460,
									"end": 9481,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 9460,
									"end": 9481,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9460,
									"end": 9481,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9460,
									"end": 9481,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 9460,
									"end": 9481,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9460,
									"end": 9481,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 9460,
									"end": 9481,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9290,
									"end": 9725,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 9290,
									"end": 9725,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9290,
									"end": 9725,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 9290,
									"end": 9725,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9693,
									"end": 9698,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 9676,
									"end": 9685,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9676,
									"end": 9689,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 9686,
									"end": 9688,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 9676,
									"end": 9689,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9676,
									"end": 9689,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 9676,
									"end": 9689,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9676,
									"end": 9689,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 9676,
									"end": 9689,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 9676,
									"end": 9689,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 9676,
									"end": 9689,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 9676,
									"end": 9689,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 9676,
									"end": 9689,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9676,
									"end": 9689,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 9676,
									"end": 9689,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 9676,
									"end": 9689,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 9676,
									"end": 9689,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 9676,
									"end": 9689,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9676,
									"end": 9689,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 9676,
									"end": 9689,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9676,
									"end": 9698,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9676,
									"end": 9698,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9676,
									"end": 9698,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 9676,
									"end": 9698,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 9676,
									"end": 9698,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 9676,
									"end": 9698,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9676,
									"end": 9698,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9676,
									"end": 9698,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 9676,
									"end": 9698,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9676,
									"end": 9698,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 9676,
									"end": 9698,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9290,
									"end": 9725,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 9290,
									"end": 9725,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9757,
									"end": 9759,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 9742,
									"end": 9767,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9742,
									"end": 9767,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 9751,
									"end": 9755,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9742,
									"end": 9767,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9742,
									"end": 9767,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 9742,
									"end": 9767,
									"name": "PUSH",
									"source": 1,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 9761,
									"end": 9766,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9742,
									"end": 9767,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 9742,
									"end": 9767,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 9742,
									"end": 9767,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 9742,
									"end": 9767,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9742,
									"end": 9767,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9742,
									"end": 9767,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 9742,
									"end": 9767,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9742,
									"end": 9767,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 9742,
									"end": 9767,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9742,
									"end": 9767,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 9742,
									"end": 9767,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 9742,
									"end": 9767,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 9742,
									"end": 9767,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9742,
									"end": 9767,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 9742,
									"end": 9767,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9742,
									"end": 9767,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 8640,
									"end": 9775,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8640,
									"end": 9775,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8640,
									"end": 9775,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8640,
									"end": 9775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "110"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 7,
									"value": "110"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "112"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 7,
									"value": "112"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5271,
									"end": 5278,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5311,
									"end": 5353,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5304,
									"end": 5309,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5300,
									"end": 5354,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5234,
									"end": 5360,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5403,
									"end": 5410,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 5450,
									"end": 5455,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 5432,
									"end": 5456,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "tag",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5366,
									"end": 5462,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "126"
								},
								{
									"begin": 5573,
									"end": 5578,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 5555,
									"end": 5579,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "tag",
									"source": 7,
									"value": "126"
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5550,
									"end": 5553,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5543,
									"end": 5580,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5468,
									"end": 5586,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5685,
									"end": 5689,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5723,
									"end": 5725,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5712,
									"end": 5721,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5708,
									"end": 5726,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 5804,
									"end": 5805,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5793,
									"end": 5802,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5789,
									"end": 5806,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5780,
									"end": 5786,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 5736,
									"end": 5807,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "tag",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5592,
									"end": 5814,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5820,
									"end": 6000,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 5820,
									"end": 6000,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5868,
									"end": 5945,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5865,
									"end": 5866,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5858,
									"end": 5946,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5965,
									"end": 5969,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 5962,
									"end": 5963,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 5955,
									"end": 5970,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5989,
									"end": 5993,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 5986,
									"end": 5987,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5979,
									"end": 5994,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6046,
									"end": 6049,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6065,
									"end": 6085,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 6083,
									"end": 6084,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6065,
									"end": 6085,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 6065,
									"end": 6085,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6065,
									"end": 6085,
									"name": "tag",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 6065,
									"end": 6085,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6060,
									"end": 6085,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6060,
									"end": 6085,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6099,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 6117,
									"end": 6118,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6099,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 6099,
									"end": 6119,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6099,
									"end": 6119,
									"name": "tag",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 6099,
									"end": 6119,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6094,
									"end": 6119,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 6094,
									"end": 6119,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6142,
									"end": 6143,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6139,
									"end": 6140,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6135,
									"end": 6144,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6128,
									"end": 6144,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6128,
									"end": 6144,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6163,
									"end": 6166,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 6160,
									"end": 6161,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6157,
									"end": 6167,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 6154,
									"end": 6190,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6154,
									"end": 6190,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 6154,
									"end": 6190,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6170,
									"end": 6188,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 6170,
									"end": 6188,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 6170,
									"end": 6188,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6170,
									"end": 6188,
									"name": "tag",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 6170,
									"end": 6188,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6154,
									"end": 6190,
									"name": "tag",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 6154,
									"end": 6190,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6006,
									"end": 6197,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6203,
									"end": 6321,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 6203,
									"end": 6321,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6290,
									"end": 6314,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "136"
								},
								{
									"begin": 6308,
									"end": 6313,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6290,
									"end": 6314,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 6290,
									"end": 6314,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6290,
									"end": 6314,
									"name": "tag",
									"source": 7,
									"value": "136"
								},
								{
									"begin": 6290,
									"end": 6314,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6285,
									"end": 6288,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6278,
									"end": 6315,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6203,
									"end": 6321,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6203,
									"end": 6321,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6203,
									"end": 6321,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6476,
									"end": 6480,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6514,
									"end": 6516,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 6503,
									"end": 6512,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6499,
									"end": 6517,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6491,
									"end": 6517,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6491,
									"end": 6517,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6527,
									"end": 6598,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "138"
								},
								{
									"begin": 6595,
									"end": 6596,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6584,
									"end": 6593,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6580,
									"end": 6597,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6571,
									"end": 6577,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 6527,
									"end": 6598,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 6527,
									"end": 6598,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6527,
									"end": 6598,
									"name": "tag",
									"source": 7,
									"value": "138"
								},
								{
									"begin": 6527,
									"end": 6598,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6608,
									"end": 6680,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "139"
								},
								{
									"begin": 6676,
									"end": 6678,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6665,
									"end": 6674,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6661,
									"end": 6679,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6652,
									"end": 6658,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 6608,
									"end": 6680,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 6608,
									"end": 6680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6608,
									"end": 6680,
									"name": "tag",
									"source": 7,
									"value": "139"
								},
								{
									"begin": 6608,
									"end": 6680,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6690,
									"end": 6762,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "140"
								},
								{
									"begin": 6758,
									"end": 6760,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 6747,
									"end": 6756,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6743,
									"end": 6761,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6734,
									"end": 6740,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6690,
									"end": 6762,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 6690,
									"end": 6762,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6690,
									"end": 6762,
									"name": "tag",
									"source": 7,
									"value": "140"
								},
								{
									"begin": 6690,
									"end": 6762,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6327,
									"end": 6769,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6868,
									"end": 6872,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6906,
									"end": 6908,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6895,
									"end": 6904,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6891,
									"end": 6909,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6883,
									"end": 6909,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6883,
									"end": 6909,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6919,
									"end": 6990,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 6987,
									"end": 6988,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6976,
									"end": 6985,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6972,
									"end": 6989,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6963,
									"end": 6969,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6919,
									"end": 6990,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 6919,
									"end": 6990,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6919,
									"end": 6990,
									"name": "tag",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 6919,
									"end": 6990,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6775,
									"end": 6997,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 109,
									"end": 811,
									"name": "tag",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 109,
									"end": 811,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 109,
									"end": 811,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 109,
									"end": 811,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 109,
									"end": 811,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 109,
									"end": 811,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 109,
									"end": 811,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 109,
									"end": 811,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 109,
									"end": 811,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122062ba5783b84c2e4d606ee33ef7deeaa9bced78b0be4a8b70dc98c66c46cefb7c64736f6c63430008140033",
									".code": [
										{
											"begin": 109,
											"end": 811,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 109,
											"end": 811,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 109,
											"end": 811,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 109,
											"end": 811,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 811,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 109,
											"end": 811,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 109,
											"end": 811,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 109,
											"end": 811,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 811,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 109,
											"end": 811,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 109,
											"end": 811,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 109,
											"end": 811,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "PUSH",
											"source": 4,
											"value": "A457C2D7"
										},
										{
											"begin": 109,
											"end": 811,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 109,
											"end": 811,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "PUSH",
											"source": 4,
											"value": "A457C2D7"
										},
										{
											"begin": 109,
											"end": 811,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 109,
											"end": 811,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 109,
											"end": 811,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 109,
											"end": 811,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "PUSH",
											"source": 4,
											"value": "CBDD69B5"
										},
										{
											"begin": 109,
											"end": 811,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 109,
											"end": 811,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "PUSH",
											"source": 4,
											"value": "DD62ED3E"
										},
										{
											"begin": 109,
											"end": 811,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 109,
											"end": 811,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 109,
											"end": 811,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 109,
											"end": 811,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 109,
											"end": 811,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 109,
											"end": 811,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 109,
											"end": 811,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 109,
											"end": 811,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 109,
											"end": 811,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 109,
											"end": 811,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "PUSH",
											"source": 4,
											"value": "95D89B41"
										},
										{
											"begin": 109,
											"end": 811,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 109,
											"end": 811,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "PUSH",
											"source": 4,
											"value": "9DC29FAC"
										},
										{
											"begin": 109,
											"end": 811,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 109,
											"end": 811,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 109,
											"end": 811,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 109,
											"end": 811,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "PUSH",
											"source": 4,
											"value": "313CE567"
										},
										{
											"begin": 109,
											"end": 811,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 109,
											"end": 811,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "PUSH",
											"source": 4,
											"value": "313CE567"
										},
										{
											"begin": 109,
											"end": 811,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 109,
											"end": 811,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "PUSH",
											"source": 4,
											"value": "39509351"
										},
										{
											"begin": 109,
											"end": 811,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 109,
											"end": 811,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "PUSH",
											"source": 4,
											"value": "40C10F19"
										},
										{
											"begin": 109,
											"end": 811,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 109,
											"end": 811,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 109,
											"end": 811,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 109,
											"end": 811,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 109,
											"end": 811,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 109,
											"end": 811,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "PUSH",
											"source": 4,
											"value": "6FDDE03"
										},
										{
											"begin": 109,
											"end": 811,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 109,
											"end": 811,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "PUSH",
											"source": 4,
											"value": "95EA7B3"
										},
										{
											"begin": 109,
											"end": 811,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 109,
											"end": 811,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "PUSH",
											"source": 4,
											"value": "18160DDD"
										},
										{
											"begin": 109,
											"end": 811,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 109,
											"end": 811,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 109,
											"end": 811,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 109,
											"end": 811,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 109,
											"end": 811,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 811,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 109,
											"end": 811,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2482,
											"end": 2573,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2482,
											"end": 2573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2482,
											"end": 2573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2482,
											"end": 2573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2482,
											"end": 2573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2482,
											"end": 2573,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2482,
											"end": 2573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2482,
											"end": 2573,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2482,
											"end": 2573,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2482,
											"end": 2573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2482,
											"end": 2573,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2482,
											"end": 2573,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2482,
											"end": 2573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2482,
											"end": 2573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2482,
											"end": 2573,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2482,
											"end": 2573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2482,
											"end": 2573,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2482,
											"end": 2573,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2482,
											"end": 2573,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2482,
											"end": 2573,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2482,
											"end": 2573,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2482,
											"end": 2573,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2482,
											"end": 2573,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4775,
											"end": 4965,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4775,
											"end": 4965,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4775,
											"end": 4965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 4775,
											"end": 4965,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4775,
											"end": 4965,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4775,
											"end": 4965,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4775,
											"end": 4965,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4775,
											"end": 4965,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4775,
											"end": 4965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4775,
											"end": 4965,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4775,
											"end": 4965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 4775,
											"end": 4965,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4775,
											"end": 4965,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4775,
											"end": 4965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 4775,
											"end": 4965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4775,
											"end": 4965,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 4775,
											"end": 4965,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4775,
											"end": 4965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4775,
											"end": 4965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4775,
											"end": 4965,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 4775,
											"end": 4965,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4775,
											"end": 4965,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4775,
											"end": 4965,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4775,
											"end": 4965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4775,
											"end": 4965,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4775,
											"end": 4965,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4775,
											"end": 4965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4775,
											"end": 4965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4775,
											"end": 4965,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4775,
											"end": 4965,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4775,
											"end": 4965,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4775,
											"end": 4965,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4775,
											"end": 4965,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4775,
											"end": 4965,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4775,
											"end": 4965,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4775,
											"end": 4965,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4775,
											"end": 4965,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3584,
											"end": 3683,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3584,
											"end": 3683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3584,
											"end": 3683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 3584,
											"end": 3683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3584,
											"end": 3683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3584,
											"end": 3683,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 3584,
											"end": 3683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3584,
											"end": 3683,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3584,
											"end": 3683,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3584,
											"end": 3683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3584,
											"end": 3683,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3584,
											"end": 3683,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3584,
											"end": 3683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3584,
											"end": 3683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3584,
											"end": 3683,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3584,
											"end": 3683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3584,
											"end": 3683,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3584,
											"end": 3683,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3584,
											"end": 3683,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3584,
											"end": 3683,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3584,
											"end": 3683,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3584,
											"end": 3683,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3584,
											"end": 3683,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5543,
											"end": 5792,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5543,
											"end": 5792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5543,
											"end": 5792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 5543,
											"end": 5792,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5543,
											"end": 5792,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5543,
											"end": 5792,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5543,
											"end": 5792,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5543,
											"end": 5792,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5543,
											"end": 5792,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5543,
											"end": 5792,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5543,
											"end": 5792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 5543,
											"end": 5792,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5543,
											"end": 5792,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5543,
											"end": 5792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5543,
											"end": 5792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5543,
											"end": 5792,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 5543,
											"end": 5792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5543,
											"end": 5792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5543,
											"end": 5792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5543,
											"end": 5792,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 5543,
											"end": 5792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5543,
											"end": 5792,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5543,
											"end": 5792,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5543,
											"end": 5792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 5543,
											"end": 5792,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5543,
											"end": 5792,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5543,
											"end": 5792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5543,
											"end": 5792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5543,
											"end": 5792,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 5543,
											"end": 5792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5543,
											"end": 5792,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5543,
											"end": 5792,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5543,
											"end": 5792,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5543,
											"end": 5792,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5543,
											"end": 5792,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5543,
											"end": 5792,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5543,
											"end": 5792,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3435,
											"end": 3519,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3435,
											"end": 3519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3435,
											"end": 3519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3435,
											"end": 3519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3435,
											"end": 3519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3435,
											"end": 3519,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3435,
											"end": 3519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3435,
											"end": 3519,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3435,
											"end": 3519,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3435,
											"end": 3519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3435,
											"end": 3519,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3435,
											"end": 3519,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3435,
											"end": 3519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3435,
											"end": 3519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3435,
											"end": 3519,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3435,
											"end": 3519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3435,
											"end": 3519,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3435,
											"end": 3519,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3435,
											"end": 3519,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3435,
											"end": 3519,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3435,
											"end": 3519,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3435,
											"end": 3519,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3435,
											"end": 3519,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 6201,
											"end": 6439,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 6201,
											"end": 6439,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6201,
											"end": 6439,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 6201,
											"end": 6439,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6201,
											"end": 6439,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6201,
											"end": 6439,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6201,
											"end": 6439,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6201,
											"end": 6439,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6201,
											"end": 6439,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6201,
											"end": 6439,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6201,
											"end": 6439,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 6201,
											"end": 6439,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6201,
											"end": 6439,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6201,
											"end": 6439,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 6201,
											"end": 6439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6201,
											"end": 6439,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 6201,
											"end": 6439,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6201,
											"end": 6439,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 6201,
											"end": 6439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6201,
											"end": 6439,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 6201,
											"end": 6439,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6201,
											"end": 6439,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6201,
											"end": 6439,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6201,
											"end": 6439,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 6201,
											"end": 6439,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6201,
											"end": 6439,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6201,
											"end": 6439,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 6201,
											"end": 6439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6201,
											"end": 6439,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 6201,
											"end": 6439,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6201,
											"end": 6439,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6201,
											"end": 6439,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6201,
											"end": 6439,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6201,
											"end": 6439,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6201,
											"end": 6439,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6201,
											"end": 6439,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6201,
											"end": 6439,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 440,
											"end": 668,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 440,
											"end": 668,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 440,
											"end": 668,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 440,
											"end": 668,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 440,
											"end": 668,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 440,
											"end": 668,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 440,
											"end": 668,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 440,
											"end": 668,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 440,
											"end": 668,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 440,
											"end": 668,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 440,
											"end": 668,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 440,
											"end": 668,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 440,
											"end": 668,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 440,
											"end": 668,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 440,
											"end": 668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 440,
											"end": 668,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 440,
											"end": 668,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 440,
											"end": 668,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 440,
											"end": 668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 440,
											"end": 668,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 440,
											"end": 668,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 440,
											"end": 668,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 3746,
											"end": 3864,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 3746,
											"end": 3864,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3746,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3746,
											"end": 3864,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3746,
											"end": 3864,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3746,
											"end": 3864,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3746,
											"end": 3864,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3746,
											"end": 3864,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3746,
											"end": 3864,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3746,
											"end": 3864,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3746,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3746,
											"end": 3864,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3746,
											"end": 3864,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3746,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3746,
											"end": 3864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3746,
											"end": 3864,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3746,
											"end": 3864,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3746,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3746,
											"end": 3864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3746,
											"end": 3864,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3746,
											"end": 3864,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3746,
											"end": 3864,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3746,
											"end": 3864,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3746,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3746,
											"end": 3864,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3746,
											"end": 3864,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3746,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3746,
											"end": 3864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3746,
											"end": 3864,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3746,
											"end": 3864,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3746,
											"end": 3864,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3746,
											"end": 3864,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3746,
											"end": 3864,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3746,
											"end": 3864,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3746,
											"end": 3864,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3746,
											"end": 3864,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3746,
											"end": 3864,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2254,
											"end": 2357,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 2254,
											"end": 2357,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2254,
											"end": 2357,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 2254,
											"end": 2357,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 2254,
											"end": 2357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2254,
											"end": 2357,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 2254,
											"end": 2357,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2254,
											"end": 2357,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1666,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 1579,
											"end": 1666,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1666,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1579,
											"end": 1666,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 1579,
											"end": 1666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1666,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1579,
											"end": 1666,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1666,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1579,
											"end": 1666,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1666,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1579,
											"end": 1666,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1666,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1666,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1579,
											"end": 1666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1666,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1579,
											"end": 1666,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1666,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1579,
											"end": 1666,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1666,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1666,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1666,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1666,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1666,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2692,
											"end": 2787,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2692,
											"end": 2787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2692,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2692,
											"end": 2787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2787,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2692,
											"end": 2787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2787,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2692,
											"end": 2787,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2692,
											"end": 2787,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2692,
											"end": 2787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2787,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2692,
											"end": 2787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2787,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2692,
											"end": 2787,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2787,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2787,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2787,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2787,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 707,
											"end": 802,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 707,
											"end": 802,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 707,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 707,
											"end": 802,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 707,
											"end": 802,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 707,
											"end": 802,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 707,
											"end": 802,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 707,
											"end": 802,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 707,
											"end": 802,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 707,
											"end": 802,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 707,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 707,
											"end": 802,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 707,
											"end": 802,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 707,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 707,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 707,
											"end": 802,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 707,
											"end": 802,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 707,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 707,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 707,
											"end": 802,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 707,
											"end": 802,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 707,
											"end": 802,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 7127,
											"end": 7631,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 7127,
											"end": 7631,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7127,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 7127,
											"end": 7631,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7127,
											"end": 7631,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7127,
											"end": 7631,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 7127,
											"end": 7631,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7127,
											"end": 7631,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7127,
											"end": 7631,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7127,
											"end": 7631,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7127,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 7127,
											"end": 7631,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7127,
											"end": 7631,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7127,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 7127,
											"end": 7631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7127,
											"end": 7631,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 7127,
											"end": 7631,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7127,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 7127,
											"end": 7631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7127,
											"end": 7631,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 7127,
											"end": 7631,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7127,
											"end": 7631,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7127,
											"end": 7631,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7127,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 7127,
											"end": 7631,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7127,
											"end": 7631,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7127,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 7127,
											"end": 7631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7127,
											"end": 7631,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 7127,
											"end": 7631,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7127,
											"end": 7631,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7127,
											"end": 7631,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7127,
											"end": 7631,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7127,
											"end": 7631,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7127,
											"end": 7631,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7127,
											"end": 7631,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7127,
											"end": 7631,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4069,
											"end": 4251,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 4069,
											"end": 4251,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4069,
											"end": 4251,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4069,
											"end": 4251,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4069,
											"end": 4251,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4069,
											"end": 4251,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4069,
											"end": 4251,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4069,
											"end": 4251,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4069,
											"end": 4251,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4069,
											"end": 4251,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4069,
											"end": 4251,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 4069,
											"end": 4251,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4069,
											"end": 4251,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4069,
											"end": 4251,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 4069,
											"end": 4251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4069,
											"end": 4251,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 4069,
											"end": 4251,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4069,
											"end": 4251,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 4069,
											"end": 4251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4069,
											"end": 4251,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4069,
											"end": 4251,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4069,
											"end": 4251,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4069,
											"end": 4251,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4069,
											"end": 4251,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4069,
											"end": 4251,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4069,
											"end": 4251,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4069,
											"end": 4251,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4069,
											"end": 4251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4069,
											"end": 4251,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4069,
											"end": 4251,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4069,
											"end": 4251,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4069,
											"end": 4251,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4069,
											"end": 4251,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4069,
											"end": 4251,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4069,
											"end": 4251,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4069,
											"end": 4251,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4069,
											"end": 4251,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 147,
											"end": 179,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 147,
											"end": 179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 147,
											"end": 179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 147,
											"end": 179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 147,
											"end": 179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 147,
											"end": 179,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 147,
											"end": 179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 147,
											"end": 179,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 147,
											"end": 179,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 147,
											"end": 179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 147,
											"end": 179,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 147,
											"end": 179,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 147,
											"end": 179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 147,
											"end": 179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 147,
											"end": 179,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 147,
											"end": 179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 147,
											"end": 179,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 147,
											"end": 179,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 147,
											"end": 179,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 147,
											"end": 179,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 147,
											"end": 179,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 147,
											"end": 179,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 147,
											"end": 179,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4314,
											"end": 4456,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 4314,
											"end": 4456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 4314,
											"end": 4456,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4314,
											"end": 4456,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4456,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4456,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4456,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4456,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4456,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 4314,
											"end": 4456,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4456,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 4314,
											"end": 4456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4456,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 4314,
											"end": 4456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4314,
											"end": 4456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4456,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 4314,
											"end": 4456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4456,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4314,
											"end": 4456,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 4314,
											"end": 4456,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4456,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4314,
											"end": 4456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4456,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 4314,
											"end": 4456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4456,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4314,
											"end": 4456,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4456,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4456,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4456,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4456,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4456,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2512,
											"end": 2732,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 2512,
											"end": 2732,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2732,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 2512,
											"end": 2732,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2512,
											"end": 2732,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2732,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2732,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2732,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2732,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2732,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2732,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 2512,
											"end": 2732,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2732,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2732,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 2512,
											"end": 2732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2732,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 2512,
											"end": 2732,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2732,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 2512,
											"end": 2732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2732,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 2512,
											"end": 2732,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2732,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 2482,
											"end": 2573,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2482,
											"end": 2573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2527,
											"end": 2540,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2560,
											"end": 2565,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2553,
											"end": 2565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2553,
											"end": 2565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2482,
											"end": 2573,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2482,
											"end": 2573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4775,
											"end": 4965,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4775,
											"end": 4965,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 4852,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4865,
											"end": 4878,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4881,
											"end": 4893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4881,
											"end": 4891,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 4881,
											"end": 4893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4881,
											"end": 4893,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4881,
											"end": 4893,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4865,
											"end": 4893,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4865,
											"end": 4893,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4904,
											"end": 4935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 4913,
											"end": 4918,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4920,
											"end": 4927,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4929,
											"end": 4934,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4904,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4904,
											"end": 4935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4904,
											"end": 4935,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 4904,
											"end": 4935,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4953,
											"end": 4957,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4946,
											"end": 4957,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4946,
											"end": 4957,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4946,
											"end": 4957,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4775,
											"end": 4965,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4775,
											"end": 4965,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4775,
											"end": 4965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4775,
											"end": 4965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4775,
											"end": 4965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3584,
											"end": 3683,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3584,
											"end": 3683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3636,
											"end": 3643,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3663,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3663,
											"end": 3675,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3656,
											"end": 3675,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3656,
											"end": 3675,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3584,
											"end": 3683,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3584,
											"end": 3683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5543,
											"end": 5792,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5543,
											"end": 5792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5634,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5647,
											"end": 5662,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5665,
											"end": 5677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 5665,
											"end": 5675,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 5665,
											"end": 5677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5665,
											"end": 5677,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 5665,
											"end": 5677,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5647,
											"end": 5677,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5647,
											"end": 5677,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5688,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 5704,
											"end": 5708,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5710,
											"end": 5717,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5719,
											"end": 5724,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5688,
											"end": 5703,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 5688,
											"end": 5725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5688,
											"end": 5725,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 5688,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5736,
											"end": 5762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 5746,
											"end": 5750,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5752,
											"end": 5754,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5756,
											"end": 5761,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5736,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 5736,
											"end": 5762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5736,
											"end": 5762,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 5736,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5784,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5773,
											"end": 5784,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5773,
											"end": 5784,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5773,
											"end": 5784,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5543,
											"end": 5792,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5543,
											"end": 5792,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5543,
											"end": 5792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5543,
											"end": 5792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5543,
											"end": 5792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5543,
											"end": 5792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3435,
											"end": 3519,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3435,
											"end": 3519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3484,
											"end": 3489,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3509,
											"end": 3511,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3502,
											"end": 3511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3502,
											"end": 3511,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3435,
											"end": 3519,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3435,
											"end": 3519,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6201,
											"end": 6439,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 6201,
											"end": 6439,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6289,
											"end": 6293,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6306,
											"end": 6319,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6322,
											"end": 6334,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 6322,
											"end": 6332,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 6322,
											"end": 6334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6322,
											"end": 6334,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 6322,
											"end": 6334,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6306,
											"end": 6334,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6306,
											"end": 6334,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6345,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6361,
											"end": 6368,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6398,
											"end": 6408,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6370,
											"end": 6395,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 6380,
											"end": 6385,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6387,
											"end": 6394,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 6370,
											"end": 6379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6370,
											"end": 6395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6370,
											"end": 6395,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 6370,
											"end": 6395,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6370,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 6370,
											"end": 6408,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6370,
											"end": 6408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6370,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 6370,
											"end": 6408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6370,
											"end": 6408,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 6370,
											"end": 6408,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6345,
											"end": 6353,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6345,
											"end": 6409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6345,
											"end": 6409,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 6345,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6427,
											"end": 6431,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6420,
											"end": 6431,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6420,
											"end": 6431,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6420,
											"end": 6431,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6201,
											"end": 6439,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6201,
											"end": 6439,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6201,
											"end": 6439,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6201,
											"end": 6439,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6201,
											"end": 6439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 440,
											"end": 668,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 440,
											"end": 668,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 1465,
											"end": 1476,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 1465,
											"end": 1478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1478,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 1465,
											"end": 1478,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 542,
											"end": 543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 523,
											"end": 544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 523,
											"end": 544,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 523,
											"end": 530,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 523,
											"end": 544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 523,
											"end": 544,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 523,
											"end": 544,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 515,
											"end": 564,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 515,
											"end": 564,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 515,
											"end": 564,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 515,
											"end": 564,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 515,
											"end": 564,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 515,
											"end": 564,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 515,
											"end": 564,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 515,
											"end": 564,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 515,
											"end": 564,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 515,
											"end": 564,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 515,
											"end": 564,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 515,
											"end": 564,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 515,
											"end": 564,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 515,
											"end": 564,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 515,
											"end": 564,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 515,
											"end": 564,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 515,
											"end": 564,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 515,
											"end": 564,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 515,
											"end": 564,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 515,
											"end": 564,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 515,
											"end": 564,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 515,
											"end": 564,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 515,
											"end": 564,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 515,
											"end": 564,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 592,
											"end": 593,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 583,
											"end": 589,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 583,
											"end": 593,
											"modifierDepth": 1,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 575,
											"end": 627,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 575,
											"end": 627,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 575,
											"end": 627,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 575,
											"end": 627,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 575,
											"end": 627,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 575,
											"end": 627,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 575,
											"end": 627,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 575,
											"end": 627,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 575,
											"end": 627,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 575,
											"end": 627,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 575,
											"end": 627,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 575,
											"end": 627,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 575,
											"end": 627,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 575,
											"end": 627,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 575,
											"end": 627,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 575,
											"end": 627,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 575,
											"end": 627,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 575,
											"end": 627,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 575,
											"end": 627,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 575,
											"end": 627,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 575,
											"end": 627,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 575,
											"end": 627,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 575,
											"end": 627,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 575,
											"end": 627,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 638,
											"end": 660,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 644,
											"end": 651,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 653,
											"end": 659,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 638,
											"end": 643,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 638,
											"end": 660,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 638,
											"end": 660,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 638,
											"end": 660,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 440,
											"end": 668,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 440,
											"end": 668,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 440,
											"end": 668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3746,
											"end": 3864,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3746,
											"end": 3864,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3811,
											"end": 3818,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3838,
											"end": 3847,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3838,
											"end": 3856,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3848,
											"end": 3855,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3838,
											"end": 3856,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3838,
											"end": 3856,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3838,
											"end": 3856,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3838,
											"end": 3856,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3838,
											"end": 3856,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3838,
											"end": 3856,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3838,
											"end": 3856,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3838,
											"end": 3856,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3838,
											"end": 3856,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3838,
											"end": 3856,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3838,
											"end": 3856,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3838,
											"end": 3856,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3838,
											"end": 3856,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3838,
											"end": 3856,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3838,
											"end": 3856,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3838,
											"end": 3856,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3831,
											"end": 3856,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3831,
											"end": 3856,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3746,
											"end": 3864,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3746,
											"end": 3864,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3746,
											"end": 3864,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3746,
											"end": 3864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2254,
											"end": 2357,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 2254,
											"end": 2357,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 1465,
											"end": 1476,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 1465,
											"end": 1478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1478,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 1465,
											"end": 1478,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2349,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 2346,
											"end": 2347,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2319,
											"end": 2337,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 2319,
											"end": 2349,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2349,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 2319,
											"end": 2349,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2254,
											"end": 2357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1666,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 1579,
											"end": 1666,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 1632,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1652,
											"end": 1658,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1652,
											"end": 1658,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1652,
											"end": 1658,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1652,
											"end": 1658,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1652,
											"end": 1658,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1652,
											"end": 1658,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1652,
											"end": 1658,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1652,
											"end": 1658,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1652,
											"end": 1658,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1652,
											"end": 1658,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1652,
											"end": 1658,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1645,
											"end": 1658,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1645,
											"end": 1658,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1666,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2692,
											"end": 2787,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2692,
											"end": 2787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2739,
											"end": 2752,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2772,
											"end": 2779,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2765,
											"end": 2779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2765,
											"end": 2779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 707,
											"end": 802,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 707,
											"end": 802,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 772,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 778,
											"end": 785,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 787,
											"end": 793,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 772,
											"end": 777,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 772,
											"end": 794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 772,
											"end": 794,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 772,
											"end": 794,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 707,
											"end": 802,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 707,
											"end": 802,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 707,
											"end": 802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7127,
											"end": 7631,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 7127,
											"end": 7631,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7222,
											"end": 7226,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7239,
											"end": 7252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7255,
											"end": 7267,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 7255,
											"end": 7265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 7255,
											"end": 7267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7255,
											"end": 7267,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 7255,
											"end": 7267,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7239,
											"end": 7267,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7239,
											"end": 7267,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7278,
											"end": 7302,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7305,
											"end": 7330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 7315,
											"end": 7320,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7322,
											"end": 7329,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7305,
											"end": 7314,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 7305,
											"end": 7330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7305,
											"end": 7330,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 7305,
											"end": 7330,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7278,
											"end": 7330,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7278,
											"end": 7330,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7364,
											"end": 7381,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7345,
											"end": 7361,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7345,
											"end": 7381,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7341,
											"end": 7491,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7341,
											"end": 7491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 7341,
											"end": 7491,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7434,
											"end": 7441,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7443,
											"end": 7459,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7461,
											"end": 7478,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7405,
											"end": 7479,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7405,
											"end": 7479,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7405,
											"end": 7479,
											"name": "PUSH",
											"source": 1,
											"value": "A60F030C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7405,
											"end": 7479,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7405,
											"end": 7479,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7405,
											"end": 7479,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7405,
											"end": 7479,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7405,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 7405,
											"end": 7479,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7405,
											"end": 7479,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7405,
											"end": 7479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7405,
											"end": 7479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7405,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 7405,
											"end": 7479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7405,
											"end": 7479,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 7405,
											"end": 7479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7405,
											"end": 7479,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7405,
											"end": 7479,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7405,
											"end": 7479,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7405,
											"end": 7479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7405,
											"end": 7479,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7405,
											"end": 7479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7405,
											"end": 7479,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7341,
											"end": 7491,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 7341,
											"end": 7491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7526,
											"end": 7588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 7535,
											"end": 7540,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7542,
											"end": 7549,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7570,
											"end": 7587,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7551,
											"end": 7567,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7551,
											"end": 7587,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7526,
											"end": 7534,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 7526,
											"end": 7588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7526,
											"end": 7588,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 7526,
											"end": 7588,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7619,
											"end": 7623,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7612,
											"end": 7623,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7612,
											"end": 7623,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7612,
											"end": 7623,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7612,
											"end": 7623,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7127,
											"end": 7631,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7127,
											"end": 7631,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7127,
											"end": 7631,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7127,
											"end": 7631,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7127,
											"end": 7631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4069,
											"end": 4251,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 4069,
											"end": 4251,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4138,
											"end": 4142,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4155,
											"end": 4168,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4183,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 4171,
											"end": 4181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 4171,
											"end": 4183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4183,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 4171,
											"end": 4183,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4155,
											"end": 4183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4155,
											"end": 4183,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4194,
											"end": 4221,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 4204,
											"end": 4209,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4211,
											"end": 4213,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4220,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4194,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 4194,
											"end": 4221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4194,
											"end": 4221,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 4194,
											"end": 4221,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4239,
											"end": 4243,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4232,
											"end": 4243,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4243,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4243,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4069,
											"end": 4251,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4069,
											"end": 4251,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4069,
											"end": 4251,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4069,
											"end": 4251,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4069,
											"end": 4251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 147,
											"end": 179,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 147,
											"end": 179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 147,
											"end": 179,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 147,
											"end": 179,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 147,
											"end": 179,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 147,
											"end": 179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4314,
											"end": 4456,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4314,
											"end": 4456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4394,
											"end": 4401,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4421,
											"end": 4432,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4421,
											"end": 4439,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4433,
											"end": 4438,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4439,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4421,
											"end": 4439,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4439,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4421,
											"end": 4439,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4439,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4439,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4439,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4421,
											"end": 4439,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4439,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4439,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4439,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4439,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4421,
											"end": 4439,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4439,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4421,
											"end": 4439,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4448,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4440,
											"end": 4447,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4448,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4421,
											"end": 4448,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4448,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4421,
											"end": 4448,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4448,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4448,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4448,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4421,
											"end": 4448,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4448,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4448,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4448,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4448,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4421,
											"end": 4448,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4448,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4421,
											"end": 4448,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4448,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4414,
											"end": 4448,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4414,
											"end": 4448,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4456,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4456,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4456,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4456,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4456,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2512,
											"end": 2732,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 2512,
											"end": 2732,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 1465,
											"end": 1476,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 1465,
											"end": 1478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1478,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 1465,
											"end": 1478,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2617,
											"end": 2618,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2597,
											"end": 2619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2597,
											"end": 2619,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2597,
											"end": 2605,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2597,
											"end": 2619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2597,
											"end": 2619,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2597,
											"end": 2619,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2593,
											"end": 2686,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 2593,
											"end": 2686,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2671,
											"end": 2672,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2643,
											"end": 2674,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2643,
											"end": 2674,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2643,
											"end": 2674,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2643,
											"end": 2674,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2643,
											"end": 2674,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2643,
											"end": 2674,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2643,
											"end": 2674,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2643,
											"end": 2674,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 2643,
											"end": 2674,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2643,
											"end": 2674,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2643,
											"end": 2674,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 2643,
											"end": 2674,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2643,
											"end": 2674,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 2643,
											"end": 2674,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2643,
											"end": 2674,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2643,
											"end": 2674,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2643,
											"end": 2674,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2643,
											"end": 2674,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2643,
											"end": 2674,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2643,
											"end": 2674,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2643,
											"end": 2674,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2593,
											"end": 2686,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 2593,
											"end": 2686,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2696,
											"end": 2724,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 2715,
											"end": 2723,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2696,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 2696,
											"end": 2724,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2696,
											"end": 2724,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 2696,
											"end": 2724,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2732,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 657,
											"end": 755,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 657,
											"end": 755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 710,
											"end": 717,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 737,
											"end": 747,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 730,
											"end": 747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 730,
											"end": 747,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 657,
											"end": 755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 657,
											"end": 755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11324,
											"end": 11462,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 11324,
											"end": 11462,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11417,
											"end": 11454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 11426,
											"end": 11431,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11433,
											"end": 11440,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11442,
											"end": 11447,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11449,
											"end": 11453,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11417,
											"end": 11425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 11417,
											"end": 11454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11417,
											"end": 11454,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 11417,
											"end": 11454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11324,
											"end": 11462,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11324,
											"end": 11462,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11324,
											"end": 11462,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11324,
											"end": 11462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13061,
											"end": 13548,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 13061,
											"end": 13548,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13161,
											"end": 13185,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13188,
											"end": 13213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 13198,
											"end": 13203,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13205,
											"end": 13212,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13188,
											"end": 13197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 13188,
											"end": 13213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13188,
											"end": 13213,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 13188,
											"end": 13213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13161,
											"end": 13213,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13161,
											"end": 13213,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13248,
											"end": 13265,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13228,
											"end": 13244,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13228,
											"end": 13265,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 13224,
											"end": 13541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 13224,
											"end": 13541,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13305,
											"end": 13310,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13286,
											"end": 13302,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13286,
											"end": 13310,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 13282,
											"end": 13414,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13282,
											"end": 13414,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 13282,
											"end": 13414,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13365,
											"end": 13372,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13374,
											"end": 13390,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13392,
											"end": 13397,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13338,
											"end": 13398,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13338,
											"end": 13398,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13338,
											"end": 13398,
											"name": "PUSH",
											"source": 1,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13338,
											"end": 13398,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13338,
											"end": 13398,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13338,
											"end": 13398,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13338,
											"end": 13398,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13338,
											"end": 13398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 13338,
											"end": 13398,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 13338,
											"end": 13398,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13338,
											"end": 13398,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13338,
											"end": 13398,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13338,
											"end": 13398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 13338,
											"end": 13398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13338,
											"end": 13398,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 13338,
											"end": 13398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13338,
											"end": 13398,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13338,
											"end": 13398,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13338,
											"end": 13398,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13338,
											"end": 13398,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13338,
											"end": 13398,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13338,
											"end": 13398,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13338,
											"end": 13398,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13282,
											"end": 13414,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 13282,
											"end": 13414,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13457,
											"end": 13514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 13466,
											"end": 13471,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13473,
											"end": 13480,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13501,
											"end": 13506,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13482,
											"end": 13498,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13482,
											"end": 13506,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13508,
											"end": 13513,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13457,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 13457,
											"end": 13514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13457,
											"end": 13514,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 13457,
											"end": 13514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13224,
											"end": 13541,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 13224,
											"end": 13541,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13150,
											"end": 13548,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13061,
											"end": 13548,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13061,
											"end": 13548,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13061,
											"end": 13548,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13061,
											"end": 13548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8016,
											"end": 8324,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 8016,
											"end": 8324,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8116,
											"end": 8117,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8100,
											"end": 8118,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8100,
											"end": 8118,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8100,
											"end": 8104,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8100,
											"end": 8118,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8100,
											"end": 8118,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8100,
											"end": 8118,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8096,
											"end": 8184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 8096,
											"end": 8184,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8169,
											"end": 8170,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8142,
											"end": 8172,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8142,
											"end": 8172,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8142,
											"end": 8172,
											"name": "PUSH",
											"source": 1,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8142,
											"end": 8172,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8142,
											"end": 8172,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8142,
											"end": 8172,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8142,
											"end": 8172,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8142,
											"end": 8172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 8142,
											"end": 8172,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8142,
											"end": 8172,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8142,
											"end": 8172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 8142,
											"end": 8172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8142,
											"end": 8172,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 8142,
											"end": 8172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8142,
											"end": 8172,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8142,
											"end": 8172,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8142,
											"end": 8172,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8142,
											"end": 8172,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8142,
											"end": 8172,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8142,
											"end": 8172,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8142,
											"end": 8172,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8096,
											"end": 8184,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 8096,
											"end": 8184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8212,
											"end": 8213,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8198,
											"end": 8214,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8198,
											"end": 8214,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8198,
											"end": 8200,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8198,
											"end": 8214,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8198,
											"end": 8214,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8198,
											"end": 8214,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8194,
											"end": 8282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 8194,
											"end": 8282,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8267,
											"end": 8268,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8238,
											"end": 8270,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8238,
											"end": 8270,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8238,
											"end": 8270,
											"name": "PUSH",
											"source": 1,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8238,
											"end": 8270,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8238,
											"end": 8270,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8238,
											"end": 8270,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8238,
											"end": 8270,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8238,
											"end": 8270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 8238,
											"end": 8270,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8238,
											"end": 8270,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8238,
											"end": 8270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 8238,
											"end": 8270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8238,
											"end": 8270,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 8238,
											"end": 8270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8238,
											"end": 8270,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8238,
											"end": 8270,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8238,
											"end": 8270,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8238,
											"end": 8270,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8238,
											"end": 8270,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8238,
											"end": 8270,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8238,
											"end": 8270,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8194,
											"end": 8282,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 8194,
											"end": 8282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8292,
											"end": 8316,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 8300,
											"end": 8304,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8306,
											"end": 8308,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8310,
											"end": 8315,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8292,
											"end": 8299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 8292,
											"end": 8316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8292,
											"end": 8316,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 8292,
											"end": 8316,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8016,
											"end": 8324,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8016,
											"end": 8324,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8016,
											"end": 8324,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8016,
											"end": 8324,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1910,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 1744,
											"end": 1910,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1815,
											"end": 1827,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 1815,
											"end": 1825,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 1815,
											"end": 1827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1815,
											"end": 1827,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 1815,
											"end": 1827,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1804,
											"end": 1827,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1804,
											"end": 1827,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1804,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 1804,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 1804,
											"end": 1811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1804,
											"end": 1811,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 1804,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1804,
											"end": 1827,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1804,
											"end": 1827,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1804,
											"end": 1827,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1800,
											"end": 1903,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 1800,
											"end": 1903,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1878,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 1878,
											"end": 1888,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 1878,
											"end": 1890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1878,
											"end": 1890,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 1878,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1851,
											"end": 1891,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1851,
											"end": 1891,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1851,
											"end": 1891,
											"name": "PUSH",
											"source": 5,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1851,
											"end": 1891,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1851,
											"end": 1891,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1851,
											"end": 1891,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1851,
											"end": 1891,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1851,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 1851,
											"end": 1891,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1851,
											"end": 1891,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1851,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1851,
											"end": 1891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1851,
											"end": 1891,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 1851,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1851,
											"end": 1891,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1851,
											"end": 1891,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1851,
											"end": 1891,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1851,
											"end": 1891,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1851,
											"end": 1891,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1851,
											"end": 1891,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1851,
											"end": 1891,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1800,
											"end": 1903,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 1800,
											"end": 1903,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1744,
											"end": 1910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10128,
											"end": 10341,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 10128,
											"end": 10341,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10218,
											"end": 10219,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10199,
											"end": 10220,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10199,
											"end": 10220,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10199,
											"end": 10206,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10199,
											"end": 10220,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10199,
											"end": 10220,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10199,
											"end": 10220,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10195,
											"end": 10288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 10195,
											"end": 10288,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10273,
											"end": 10274,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10244,
											"end": 10276,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10244,
											"end": 10276,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10244,
											"end": 10276,
											"name": "PUSH",
											"source": 1,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10244,
											"end": 10276,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10244,
											"end": 10276,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10244,
											"end": 10276,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10244,
											"end": 10276,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10244,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 10244,
											"end": 10276,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10244,
											"end": 10276,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10244,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 10244,
											"end": 10276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10244,
											"end": 10276,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 10244,
											"end": 10276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10244,
											"end": 10276,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10244,
											"end": 10276,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10244,
											"end": 10276,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10244,
											"end": 10276,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10244,
											"end": 10276,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10244,
											"end": 10276,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10244,
											"end": 10276,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10195,
											"end": 10288,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 10195,
											"end": 10288,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10298,
											"end": 10333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 10314,
											"end": 10315,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10318,
											"end": 10325,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10327,
											"end": 10332,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10298,
											"end": 10305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 10298,
											"end": 10333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10298,
											"end": 10333,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 10298,
											"end": 10333,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10128,
											"end": 10341,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10128,
											"end": 10341,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10128,
											"end": 10341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 3083,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 2892,
											"end": 3083,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 2991,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2985,
											"end": 2991,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 2991,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2985,
											"end": 2991,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2985,
											"end": 2991,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2985,
											"end": 2991,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2985,
											"end": 2991,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2985,
											"end": 2991,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2985,
											"end": 2991,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2985,
											"end": 2991,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2985,
											"end": 2991,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2966,
											"end": 2991,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2966,
											"end": 2991,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3011,
											"end": 3019,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3008,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3002,
											"end": 3008,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3002,
											"end": 3019,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3002,
											"end": 3019,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3019,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3019,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3019,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3019,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3002,
											"end": 3019,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3019,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3019,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3019,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3019,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3019,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3002,
											"end": 3019,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3019,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3019,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3019,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3019,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3019,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3066,
											"end": 3074,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3075,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3035,
											"end": 3075,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3056,
											"end": 3064,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3075,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3035,
											"end": 3075,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3075,
											"name": "PUSH",
											"source": 5,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3035,
											"end": 3075,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3035,
											"end": 3075,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3075,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3035,
											"end": 3075,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3075,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3075,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3075,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3075,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3075,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 2955,
											"end": 3083,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2892,
											"end": 3083,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2892,
											"end": 3083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10676,
											"end": 10887,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 10676,
											"end": 10887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10766,
											"end": 10767,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10747,
											"end": 10768,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10747,
											"end": 10768,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10747,
											"end": 10754,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10747,
											"end": 10768,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10747,
											"end": 10768,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10747,
											"end": 10768,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10743,
											"end": 10834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 10743,
											"end": 10834,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10819,
											"end": 10820,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10792,
											"end": 10822,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10792,
											"end": 10822,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10792,
											"end": 10822,
											"name": "PUSH",
											"source": 1,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10792,
											"end": 10822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10792,
											"end": 10822,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10792,
											"end": 10822,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10792,
											"end": 10822,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10792,
											"end": 10822,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 10792,
											"end": 10822,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10792,
											"end": 10822,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10792,
											"end": 10822,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 10792,
											"end": 10822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10792,
											"end": 10822,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 10792,
											"end": 10822,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10792,
											"end": 10822,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10792,
											"end": 10822,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10792,
											"end": 10822,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10792,
											"end": 10822,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10792,
											"end": 10822,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10792,
											"end": 10822,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10792,
											"end": 10822,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10743,
											"end": 10834,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 10743,
											"end": 10834,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10844,
											"end": 10879,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 10852,
											"end": 10859,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10869,
											"end": 10870,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10873,
											"end": 10878,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10844,
											"end": 10851,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 10844,
											"end": 10879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10844,
											"end": 10879,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 10844,
											"end": 10879,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10676,
											"end": 10887,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10676,
											"end": 10887,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10676,
											"end": 10887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12329,
											"end": 12772,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 12329,
											"end": 12772,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12459,
											"end": 12460,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12442,
											"end": 12461,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12442,
											"end": 12461,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12442,
											"end": 12447,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12442,
											"end": 12461,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12442,
											"end": 12461,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12442,
											"end": 12461,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12438,
											"end": 12529,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 12438,
											"end": 12529,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12514,
											"end": 12515,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12485,
											"end": 12517,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12485,
											"end": 12517,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12485,
											"end": 12517,
											"name": "PUSH",
											"source": 1,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12485,
											"end": 12517,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12485,
											"end": 12517,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12485,
											"end": 12517,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12485,
											"end": 12517,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12485,
											"end": 12517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 12485,
											"end": 12517,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12485,
											"end": 12517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12485,
											"end": 12517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 12485,
											"end": 12517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12485,
											"end": 12517,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 12485,
											"end": 12517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12485,
											"end": 12517,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12485,
											"end": 12517,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12485,
											"end": 12517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12485,
											"end": 12517,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12485,
											"end": 12517,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12485,
											"end": 12517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12485,
											"end": 12517,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12438,
											"end": 12529,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 12438,
											"end": 12529,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12562,
											"end": 12563,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12543,
											"end": 12564,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12543,
											"end": 12564,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12543,
											"end": 12550,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12543,
											"end": 12564,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12543,
											"end": 12564,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12543,
											"end": 12564,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12539,
											"end": 12631,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 12539,
											"end": 12631,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12616,
											"end": 12617,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12588,
											"end": 12619,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12588,
											"end": 12619,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12588,
											"end": 12619,
											"name": "PUSH",
											"source": 1,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12588,
											"end": 12619,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12588,
											"end": 12619,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12588,
											"end": 12619,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12588,
											"end": 12619,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12588,
											"end": 12619,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 12588,
											"end": 12619,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12588,
											"end": 12619,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12588,
											"end": 12619,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 12588,
											"end": 12619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12588,
											"end": 12619,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 12588,
											"end": 12619,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12588,
											"end": 12619,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12588,
											"end": 12619,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12588,
											"end": 12619,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12588,
											"end": 12619,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12588,
											"end": 12619,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12588,
											"end": 12619,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12588,
											"end": 12619,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12539,
											"end": 12631,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 12539,
											"end": 12631,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12671,
											"end": 12676,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12641,
											"end": 12652,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 12641,
											"end": 12659,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12653,
											"end": 12658,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12641,
											"end": 12659,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12641,
											"end": 12659,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12641,
											"end": 12659,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12641,
											"end": 12659,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12641,
											"end": 12659,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12641,
											"end": 12659,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12641,
											"end": 12659,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12641,
											"end": 12659,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12641,
											"end": 12659,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12641,
											"end": 12659,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12641,
											"end": 12659,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12641,
											"end": 12659,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12641,
											"end": 12659,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12641,
											"end": 12659,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12641,
											"end": 12659,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 12641,
											"end": 12668,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12660,
											"end": 12667,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12641,
											"end": 12668,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12641,
											"end": 12668,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12641,
											"end": 12668,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12641,
											"end": 12668,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12641,
											"end": 12668,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12641,
											"end": 12668,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12641,
											"end": 12668,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12641,
											"end": 12668,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12641,
											"end": 12668,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12641,
											"end": 12668,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12641,
											"end": 12668,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12641,
											"end": 12668,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12641,
											"end": 12668,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12641,
											"end": 12668,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12641,
											"end": 12668,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 12641,
											"end": 12676,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12641,
											"end": 12676,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12641,
											"end": 12676,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 12641,
											"end": 12676,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12691,
											"end": 12700,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12687,
											"end": 12765,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12687,
											"end": 12765,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 12687,
											"end": 12765,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12738,
											"end": 12745,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12722,
											"end": 12753,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12722,
											"end": 12753,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12731,
											"end": 12736,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12722,
											"end": 12753,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12722,
											"end": 12753,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12722,
											"end": 12753,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 12747,
											"end": 12752,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12722,
											"end": 12753,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12722,
											"end": 12753,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12722,
											"end": 12753,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 12722,
											"end": 12753,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12722,
											"end": 12753,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12722,
											"end": 12753,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 12722,
											"end": 12753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12722,
											"end": 12753,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 12722,
											"end": 12753,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12722,
											"end": 12753,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12722,
											"end": 12753,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12722,
											"end": 12753,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12722,
											"end": 12753,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12722,
											"end": 12753,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12722,
											"end": 12753,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12722,
											"end": 12753,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 12687,
											"end": 12765,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 12687,
											"end": 12765,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12329,
											"end": 12772,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12329,
											"end": 12772,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12329,
											"end": 12772,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12329,
											"end": 12772,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12329,
											"end": 12772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8640,
											"end": 9775,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 8640,
											"end": 9775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8746,
											"end": 8747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8730,
											"end": 8748,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8730,
											"end": 8748,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8730,
											"end": 8734,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8730,
											"end": 8748,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8730,
											"end": 8748,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8730,
											"end": 8748,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8726,
											"end": 9278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 8726,
											"end": 9278,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8884,
											"end": 8889,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8868,
											"end": 8880,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 8868,
											"end": 8880,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8868,
											"end": 8889,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8868,
											"end": 8889,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8868,
											"end": 8889,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8868,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 8868,
											"end": 8889,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8868,
											"end": 8889,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8868,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 8868,
											"end": 8889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8868,
											"end": 8889,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 8868,
											"end": 8889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8868,
											"end": 8889,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8868,
											"end": 8889,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8868,
											"end": 8889,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8868,
											"end": 8889,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8868,
											"end": 8889,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8868,
											"end": 8889,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8868,
											"end": 8889,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8726,
											"end": 9278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 8726,
											"end": 9278,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8726,
											"end": 9278,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 8726,
											"end": 9278,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8922,
											"end": 8941,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8944,
											"end": 8953,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 8959,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8954,
											"end": 8958,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 8959,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8944,
											"end": 8959,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 8959,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8944,
											"end": 8959,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 8959,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 8959,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 8959,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8944,
											"end": 8959,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 8959,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 8959,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 8959,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 8959,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8944,
											"end": 8959,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 8959,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8944,
											"end": 8959,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 8959,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8922,
											"end": 8959,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8922,
											"end": 8959,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8992,
											"end": 8997,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8978,
											"end": 8989,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8978,
											"end": 8997,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8974,
											"end": 9091,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8974,
											"end": 9091,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 8974,
											"end": 9091,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9050,
											"end": 9054,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9056,
											"end": 9067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9069,
											"end": 9074,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9025,
											"end": 9075,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9025,
											"end": 9075,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9025,
											"end": 9075,
											"name": "PUSH",
											"source": 1,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9025,
											"end": 9075,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9025,
											"end": 9075,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9025,
											"end": 9075,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9025,
											"end": 9075,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9025,
											"end": 9075,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 9025,
											"end": 9075,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 9025,
											"end": 9075,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9025,
											"end": 9075,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9025,
											"end": 9075,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9025,
											"end": 9075,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 9025,
											"end": 9075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9025,
											"end": 9075,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 9025,
											"end": 9075,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9025,
											"end": 9075,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9025,
											"end": 9075,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9025,
											"end": 9075,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9025,
											"end": 9075,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9025,
											"end": 9075,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9025,
											"end": 9075,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9025,
											"end": 9075,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8974,
											"end": 9091,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 8974,
											"end": 9091,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9246,
											"end": 9251,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9232,
											"end": 9243,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9232,
											"end": 9251,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9214,
											"end": 9223,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9214,
											"end": 9229,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9224,
											"end": 9228,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9214,
											"end": 9229,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9214,
											"end": 9229,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9214,
											"end": 9229,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9214,
											"end": 9229,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9214,
											"end": 9229,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9214,
											"end": 9229,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9214,
											"end": 9229,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9214,
											"end": 9229,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9214,
											"end": 9229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9214,
											"end": 9229,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9214,
											"end": 9229,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9214,
											"end": 9229,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9214,
											"end": 9229,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9214,
											"end": 9229,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9214,
											"end": 9229,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9214,
											"end": 9251,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9214,
											"end": 9251,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9214,
											"end": 9251,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9214,
											"end": 9251,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8907,
											"end": 9278,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8726,
											"end": 9278,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 8726,
											"end": 9278,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9308,
											"end": 9309,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9294,
											"end": 9310,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9294,
											"end": 9310,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9294,
											"end": 9296,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9294,
											"end": 9310,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9294,
											"end": 9310,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9294,
											"end": 9310,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9290,
											"end": 9725,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 9290,
											"end": 9725,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9476,
											"end": 9481,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9460,
											"end": 9472,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9460,
											"end": 9472,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9460,
											"end": 9481,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9460,
											"end": 9481,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9460,
											"end": 9481,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9460,
											"end": 9481,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9460,
											"end": 9481,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9460,
											"end": 9481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9460,
											"end": 9481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9460,
											"end": 9481,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9460,
											"end": 9481,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9460,
											"end": 9481,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9460,
											"end": 9481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9290,
											"end": 9725,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 9290,
											"end": 9725,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9290,
											"end": 9725,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 9290,
											"end": 9725,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9693,
											"end": 9698,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9676,
											"end": 9685,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9676,
											"end": 9689,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9686,
											"end": 9688,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9676,
											"end": 9689,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9676,
											"end": 9689,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9676,
											"end": 9689,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9676,
											"end": 9689,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9676,
											"end": 9689,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9676,
											"end": 9689,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9676,
											"end": 9689,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9676,
											"end": 9689,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9676,
											"end": 9689,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9676,
											"end": 9689,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9676,
											"end": 9689,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9676,
											"end": 9689,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9676,
											"end": 9689,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9676,
											"end": 9689,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9676,
											"end": 9689,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9676,
											"end": 9689,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9676,
											"end": 9698,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9676,
											"end": 9698,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9676,
											"end": 9698,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9676,
											"end": 9698,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9676,
											"end": 9698,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9676,
											"end": 9698,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9676,
											"end": 9698,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9676,
											"end": 9698,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9676,
											"end": 9698,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9676,
											"end": 9698,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9676,
											"end": 9698,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9290,
											"end": 9725,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 9290,
											"end": 9725,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9757,
											"end": 9759,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9742,
											"end": 9767,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9742,
											"end": 9767,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9751,
											"end": 9755,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9742,
											"end": 9767,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9742,
											"end": 9767,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9742,
											"end": 9767,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9761,
											"end": 9766,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9742,
											"end": 9767,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9742,
											"end": 9767,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9742,
											"end": 9767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 9742,
											"end": 9767,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9742,
											"end": 9767,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9742,
											"end": 9767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 9742,
											"end": 9767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9742,
											"end": 9767,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 9742,
											"end": 9767,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9742,
											"end": 9767,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9742,
											"end": 9767,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9742,
											"end": 9767,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9742,
											"end": 9767,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9742,
											"end": 9767,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9742,
											"end": 9767,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9742,
											"end": 9767,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 8640,
											"end": 9775,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8640,
											"end": 9775,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8640,
											"end": 9775,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8640,
											"end": 9775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 3714,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3570,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3915,
											"end": 3938,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3911,
											"end": 3943,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 3946,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "tag",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 4091,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4037,
											"end": 4154,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4164,
											"end": 4282,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4502,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4487,
											"end": 4503,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4423,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 4598,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4586,
											"end": 4621,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4515,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4762,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4758,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4835,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4822,
											"end": 4839,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 4773,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4633,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4912,
											"end": 4918,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4961,
											"end": 4963,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4949,
											"end": 4958,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4940,
											"end": 4947,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4936,
											"end": 4959,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4932,
											"end": 4964,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 4967,
											"end": 5046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "tag",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5087,
											"end": 5088,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 5157,
											"end": 5164,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5148,
											"end": 5154,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5137,
											"end": 5146,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5133,
											"end": 5155,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 5112,
											"end": 5165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5058,
											"end": 5175,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4853,
											"end": 5182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5188,
											"end": 5306,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 5188,
											"end": 5306,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5275,
											"end": 5299,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 5293,
											"end": 5298,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5275,
											"end": 5299,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 5275,
											"end": 5299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5275,
											"end": 5299,
											"name": "tag",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 5275,
											"end": 5299,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5270,
											"end": 5273,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5263,
											"end": 5300,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5188,
											"end": 5306,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5188,
											"end": 5306,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5188,
											"end": 5306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5405,
											"end": 5409,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5443,
											"end": 5445,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5432,
											"end": 5441,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5428,
											"end": 5446,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5420,
											"end": 5446,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5420,
											"end": 5446,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5456,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 5524,
											"end": 5525,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5513,
											"end": 5522,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5509,
											"end": 5526,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5500,
											"end": 5506,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5456,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 5456,
											"end": 5527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5456,
											"end": 5527,
											"name": "tag",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 5456,
											"end": 5527,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5312,
											"end": 5534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5608,
											"end": 5614,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5616,
											"end": 5622,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5665,
											"end": 5667,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5653,
											"end": 5662,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5644,
											"end": 5651,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5640,
											"end": 5663,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5636,
											"end": 5668,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5633,
											"end": 5752,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5633,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 5633,
											"end": 5752,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5671,
											"end": 5750,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 5671,
											"end": 5750,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 5671,
											"end": 5750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5671,
											"end": 5750,
											"name": "tag",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 5671,
											"end": 5750,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5633,
											"end": 5752,
											"name": "tag",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 5633,
											"end": 5752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5791,
											"end": 5792,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5816,
											"end": 5869,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 5861,
											"end": 5868,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5852,
											"end": 5858,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5841,
											"end": 5850,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5837,
											"end": 5859,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5816,
											"end": 5869,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 5816,
											"end": 5869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5816,
											"end": 5869,
											"name": "tag",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 5816,
											"end": 5869,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5806,
											"end": 5869,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5806,
											"end": 5869,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5762,
											"end": 5879,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5918,
											"end": 5920,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5944,
											"end": 5997,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 5989,
											"end": 5996,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5980,
											"end": 5986,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5969,
											"end": 5978,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5965,
											"end": 5987,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5944,
											"end": 5997,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 5944,
											"end": 5997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5944,
											"end": 5997,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 5944,
											"end": 5997,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5997,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5997,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5889,
											"end": 6007,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 6014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6020,
											"end": 6200,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 6020,
											"end": 6200,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6068,
											"end": 6145,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6065,
											"end": 6066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6058,
											"end": 6146,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6165,
											"end": 6169,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 6162,
											"end": 6163,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6155,
											"end": 6170,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6189,
											"end": 6193,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6186,
											"end": 6187,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6194,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6206,
											"end": 6526,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 6206,
											"end": 6526,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6250,
											"end": 6256,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6287,
											"end": 6288,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6281,
											"end": 6285,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6277,
											"end": 6289,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6267,
											"end": 6289,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6267,
											"end": 6289,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6334,
											"end": 6335,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6328,
											"end": 6332,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6324,
											"end": 6336,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6373,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6345,
											"end": 6426,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 6345,
											"end": 6426,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 6403,
											"end": 6409,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6399,
											"end": 6416,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6389,
											"end": 6416,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6389,
											"end": 6416,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6345,
											"end": 6426,
											"name": "tag",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 6345,
											"end": 6426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6473,
											"end": 6475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6465,
											"end": 6471,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6462,
											"end": 6476,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6442,
											"end": 6460,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6439,
											"end": 6477,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6436,
											"end": 6520,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 6436,
											"end": 6520,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6492,
											"end": 6510,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 6492,
											"end": 6510,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 6492,
											"end": 6510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6492,
											"end": 6510,
											"name": "tag",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 6492,
											"end": 6510,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6436,
											"end": 6520,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 6436,
											"end": 6520,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6257,
											"end": 6526,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6206,
											"end": 6526,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6206,
											"end": 6526,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6206,
											"end": 6526,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6206,
											"end": 6526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6532,
											"end": 6712,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 6532,
											"end": 6712,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6580,
											"end": 6657,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6577,
											"end": 6578,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6658,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6677,
											"end": 6681,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 6674,
											"end": 6675,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6667,
											"end": 6682,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6701,
											"end": 6705,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6698,
											"end": 6699,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6691,
											"end": 6706,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6718,
											"end": 6909,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 6718,
											"end": 6909,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6758,
											"end": 6761,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6777,
											"end": 6797,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 6795,
											"end": 6796,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6777,
											"end": 6797,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 6777,
											"end": 6797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6777,
											"end": 6797,
											"name": "tag",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 6777,
											"end": 6797,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6772,
											"end": 6797,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6772,
											"end": 6797,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6811,
											"end": 6831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 6829,
											"end": 6830,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6811,
											"end": 6831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 6811,
											"end": 6831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6811,
											"end": 6831,
											"name": "tag",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 6811,
											"end": 6831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6806,
											"end": 6831,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6806,
											"end": 6831,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6854,
											"end": 6855,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6851,
											"end": 6852,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6847,
											"end": 6856,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6840,
											"end": 6856,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6840,
											"end": 6856,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6875,
											"end": 6878,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6872,
											"end": 6873,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6869,
											"end": 6879,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6866,
											"end": 6902,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6866,
											"end": 6902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 6866,
											"end": 6902,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6882,
											"end": 6900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 6882,
											"end": 6900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 6882,
											"end": 6900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6882,
											"end": 6900,
											"name": "tag",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 6882,
											"end": 6900,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6866,
											"end": 6902,
											"name": "tag",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 6866,
											"end": 6902,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6718,
											"end": 6909,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6718,
											"end": 6909,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6718,
											"end": 6909,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6718,
											"end": 6909,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6718,
											"end": 6909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6915,
											"end": 7080,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 6915,
											"end": 7080,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7055,
											"end": 7072,
											"name": "PUSH",
											"source": 7,
											"value": "496E76616C696420616464726573730000000000000000000000000000000000"
										},
										{
											"begin": 7051,
											"end": 7052,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7043,
											"end": 7049,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7039,
											"end": 7053,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7032,
											"end": 7073,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6915,
											"end": 7080,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6915,
											"end": 7080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7086,
											"end": 7452,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 7086,
											"end": 7452,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7228,
											"end": 7231,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7249,
											"end": 7316,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 7313,
											"end": 7315,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 7308,
											"end": 7311,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7249,
											"end": 7316,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 7249,
											"end": 7316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7249,
											"end": 7316,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 7249,
											"end": 7316,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7316,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7316,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7325,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 7414,
											"end": 7417,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7325,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 7325,
											"end": 7418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7325,
											"end": 7418,
											"name": "tag",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 7325,
											"end": 7418,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7443,
											"end": 7445,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7438,
											"end": 7441,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7434,
											"end": 7446,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7427,
											"end": 7446,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7427,
											"end": 7446,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7086,
											"end": 7452,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7086,
											"end": 7452,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7086,
											"end": 7452,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7086,
											"end": 7452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7458,
											"end": 7877,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 7458,
											"end": 7877,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7624,
											"end": 7628,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7662,
											"end": 7664,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7651,
											"end": 7660,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7647,
											"end": 7665,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7639,
											"end": 7665,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7639,
											"end": 7665,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7711,
											"end": 7720,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7705,
											"end": 7709,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7701,
											"end": 7721,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7697,
											"end": 7698,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7686,
											"end": 7695,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7682,
											"end": 7699,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7675,
											"end": 7722,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7739,
											"end": 7870,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 7865,
											"end": 7869,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7739,
											"end": 7870,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 7739,
											"end": 7870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7739,
											"end": 7870,
											"name": "tag",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 7739,
											"end": 7870,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7731,
											"end": 7870,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7731,
											"end": 7870,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7458,
											"end": 7877,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7458,
											"end": 7877,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7458,
											"end": 7877,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7458,
											"end": 7877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7883,
											"end": 8062,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 7883,
											"end": 8062,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8023,
											"end": 8054,
											"name": "PUSH",
											"source": 7,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E2030000000"
										},
										{
											"begin": 8019,
											"end": 8020,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8011,
											"end": 8017,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8007,
											"end": 8021,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8000,
											"end": 8055,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7883,
											"end": 8062,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7883,
											"end": 8062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8068,
											"end": 8434,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 8068,
											"end": 8434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8210,
											"end": 8213,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8231,
											"end": 8298,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 8295,
											"end": 8297,
											"name": "PUSH",
											"source": 7,
											"value": "1D"
										},
										{
											"begin": 8290,
											"end": 8293,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8231,
											"end": 8298,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 8231,
											"end": 8298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8231,
											"end": 8298,
											"name": "tag",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 8231,
											"end": 8298,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8224,
											"end": 8298,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8224,
											"end": 8298,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8307,
											"end": 8400,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 8396,
											"end": 8399,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8307,
											"end": 8400,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 8307,
											"end": 8400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8307,
											"end": 8400,
											"name": "tag",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 8307,
											"end": 8400,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8425,
											"end": 8427,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8420,
											"end": 8423,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8416,
											"end": 8428,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8409,
											"end": 8428,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8409,
											"end": 8428,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8068,
											"end": 8434,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8068,
											"end": 8434,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8068,
											"end": 8434,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8068,
											"end": 8434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8440,
											"end": 8859,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 8440,
											"end": 8859,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8644,
											"end": 8646,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8633,
											"end": 8642,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8629,
											"end": 8647,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8621,
											"end": 8647,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8621,
											"end": 8647,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8693,
											"end": 8702,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8687,
											"end": 8691,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8683,
											"end": 8703,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8679,
											"end": 8680,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8668,
											"end": 8677,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8664,
											"end": 8681,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8657,
											"end": 8704,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8721,
											"end": 8852,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 8847,
											"end": 8851,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8721,
											"end": 8852,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 8721,
											"end": 8852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8721,
											"end": 8852,
											"name": "tag",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 8721,
											"end": 8852,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8713,
											"end": 8852,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8713,
											"end": 8852,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8440,
											"end": 8859,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8440,
											"end": 8859,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8440,
											"end": 8859,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8440,
											"end": 8859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8865,
											"end": 9307,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 8865,
											"end": 9307,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9014,
											"end": 9018,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9052,
											"end": 9054,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 9041,
											"end": 9050,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9037,
											"end": 9055,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9029,
											"end": 9055,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9029,
											"end": 9055,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9065,
											"end": 9136,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 9133,
											"end": 9134,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9122,
											"end": 9131,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9118,
											"end": 9135,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9109,
											"end": 9115,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 9065,
											"end": 9136,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 9065,
											"end": 9136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9065,
											"end": 9136,
											"name": "tag",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 9065,
											"end": 9136,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9146,
											"end": 9218,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 9214,
											"end": 9216,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9203,
											"end": 9212,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9199,
											"end": 9217,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9190,
											"end": 9196,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9146,
											"end": 9218,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 9146,
											"end": 9218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9146,
											"end": 9218,
											"name": "tag",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 9146,
											"end": 9218,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9228,
											"end": 9300,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 9296,
											"end": 9298,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9285,
											"end": 9294,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9281,
											"end": 9299,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9272,
											"end": 9278,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9228,
											"end": 9300,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 9228,
											"end": 9300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9228,
											"end": 9300,
											"name": "tag",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 9228,
											"end": 9300,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8865,
											"end": 9307,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 8865,
											"end": 9307,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 8865,
											"end": 9307,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8865,
											"end": 9307,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8865,
											"end": 9307,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8865,
											"end": 9307,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8865,
											"end": 9307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"Contract/Context.sol",
								"Contract/ERC20.sol",
								"Contract/IERC20.sol",
								"Contract/IERC20Metadata.sol",
								"Contract/Mytoken.sol",
								"Contract/Ownable.sol",
								"Contract/draft-IERC6093.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address,uint256)": "9dc29fac",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"tokensPerEth()": "cbdd69b5",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"ERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOfETH\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOfTokens\",\"type\":\"uint256\"}],\"name\":\"BuyTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"useradd\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokensPerEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `requestedDecrease`. NOTE: Although this function is designed to avoid double spending with {approval}, it can still be frontrunned, preventing any attempt of allowance reduction.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contract/Mytoken.sol\":\"Mytoken\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contract/Context.sol\":{\"keccak256\":\"0x3cd212092a3b2272c0b9eca9e7f64160e63e2aeb323df43cdff962938c6246fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d815d61901925dce73ed79508c260e588c4d68a4e46a2b6994a04af70581f493\",\"dweb:/ipfs/Qmc121ZKzmsAdndWaoXsNc4G7jtYUMK2ZTBuYJjj3m6qdg\"]},\"Contract/ERC20.sol\":{\"keccak256\":\"0xa32b1d99c6115118555e039e5fbcdb176a5f3ed52cba87dce3bcda588c1b298f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc783797e9cee3f0fbdd59dd1fbbec4c6aa230712d798d8892b37b9c54b5bbbc\",\"dweb:/ipfs/QmboeDfzBQ8xyh4nS1BVRBmbZDBx8Mme5eoX9hNc2jLkLb\"]},\"Contract/IERC20.sol\":{\"keccak256\":\"0x052ce219bfeae109b7ad02f083ca7f1f47525e7faf79521305a30fcf40a08a89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75db5c33888c4cd26d6fef902d64b444ceb99e31fa8042466037e01530c9c7eb\",\"dweb:/ipfs/QmZ2MWSXhSCXAvyY4xLWsABjc93Tq4psYudt4PRR9dAXeD\"]},\"Contract/IERC20Metadata.sol\":{\"keccak256\":\"0x3be45cda784d1142bf36aa2306800d11333d447922b6907f811d187eb45e7d41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb96fb7bedc5edcc5335ac0831ae00004e6bb9fc2ca3a914d1cd9f7bfe37349a\",\"dweb:/ipfs/QmePrDpmaTMye6c6wJA9u9qL6d4pP4F6PK7Ws8Y2d5dxFn\"]},\"Contract/Mytoken.sol\":{\"keccak256\":\"0xab5162f4d00354d3fb22c7547377bec146f841eda3dbdb28a819cb00c6490338\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c80d90e7a9977e5c86f122f44af3fadcc0db8f3db8d4db79faabaa67cc1e69dd\",\"dweb:/ipfs/QmUfdGd8eg8z6EpjBMWNk2hq1Mp4op2Y8vDioDZeFNSSEN\"]},\"Contract/Ownable.sol\":{\"keccak256\":\"0xa2a1be31898dd66f6b5c208c6c0d8b27729992988453fe9c5d95f8956f056801\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://304afef0656e4ff471320935f543e3d6e7cfca10249eb2bf6be8f858720c7e16\",\"dweb:/ipfs/QmeumDMuWK8hdcTT16qspfbyJ1b5fkjk91rzNkjkJmPPHW\"]},\"Contract/draft-IERC6093.sol\":{\"keccak256\":\"0x28f9065ac5ac49eec762f5e09d83ad395fcc788ed9e8684fb111d64b3e2d8f7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d8cb32744155f6f9531fbaaf2c022157be77052b64e7a9bdc55ef8d17e3e67b\",\"dweb:/ipfs/QmWda2bAAzvahMATWyNSLUFy7WUorq6q2316YGPMVN8t7Z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 44,
								"contract": "Contract/Mytoken.sol:Mytoken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 50,
								"contract": "Contract/Mytoken.sol:Mytoken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 52,
								"contract": "Contract/Mytoken.sol:Mytoken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 54,
								"contract": "Contract/Mytoken.sol:Mytoken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 56,
								"contract": "Contract/Mytoken.sol:Mytoken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 823,
								"contract": "Contract/Mytoken.sol:Mytoken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 734,
								"contract": "Contract/Mytoken.sol:Mytoken",
								"label": "tokensPerEth",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 745,
								"contract": "Contract/Mytoken.sol:Mytoken",
								"label": "mytoken",
								"offset": 0,
								"slot": "7",
								"type": "t_contract(Mytoken)814"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(Mytoken)814": {
								"encoding": "inplace",
								"label": "contract Mytoken",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Contract/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contract/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contract/Context.sol\":{\"keccak256\":\"0x3cd212092a3b2272c0b9eca9e7f64160e63e2aeb323df43cdff962938c6246fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d815d61901925dce73ed79508c260e588c4d68a4e46a2b6994a04af70581f493\",\"dweb:/ipfs/Qmc121ZKzmsAdndWaoXsNc4G7jtYUMK2ZTBuYJjj3m6qdg\"]},\"Contract/Ownable.sol\":{\"keccak256\":\"0xa2a1be31898dd66f6b5c208c6c0d8b27729992988453fe9c5d95f8956f056801\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://304afef0656e4ff471320935f543e3d6e7cfca10249eb2bf6be8f858720c7e16\",\"dweb:/ipfs/QmeumDMuWK8hdcTT16qspfbyJ1b5fkjk91rzNkjkJmPPHW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 823,
								"contract": "Contract/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Contract/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contract/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contract/draft-IERC6093.sol\":{\"keccak256\":\"0x28f9065ac5ac49eec762f5e09d83ad395fcc788ed9e8684fb111d64b3e2d8f7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d8cb32744155f6f9531fbaaf2c022157be77052b64e7a9bdc55ef8d17e3e67b\",\"dweb:/ipfs/QmWda2bAAzvahMATWyNSLUFy7WUorq6q2316YGPMVN8t7Z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contract/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contract/draft-IERC6093.sol\":{\"keccak256\":\"0x28f9065ac5ac49eec762f5e09d83ad395fcc788ed9e8684fb111d64b3e2d8f7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d8cb32744155f6f9531fbaaf2c022157be77052b64e7a9bdc55ef8d17e3e67b\",\"dweb:/ipfs/QmWda2bAAzvahMATWyNSLUFy7WUorq6q2316YGPMVN8t7Z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contract/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contract/draft-IERC6093.sol\":{\"keccak256\":\"0x28f9065ac5ac49eec762f5e09d83ad395fcc788ed9e8684fb111d64b3e2d8f7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d8cb32744155f6f9531fbaaf2c022157be77052b64e7a9bdc55ef8d17e3e67b\",\"dweb:/ipfs/QmWda2bAAzvahMATWyNSLUFy7WUorq6q2316YGPMVN8t7Z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Contract/Context.sol": {
				"ast": {
					"absolutePath": "Contract/Context.sol",
					"exportedSymbols": {
						"Context": [
							21
						]
					},
					"id": 22,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "89:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "117:505:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 21,
							"linearizedBaseContracts": [
								21
							],
							"name": "Context",
							"nameLocation": "642:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 10,
										"nodeType": "Block",
										"src": "719:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 7,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "737:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "741:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "737:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 6,
												"id": 9,
												"nodeType": "Return",
												"src": "730:17:0"
											}
										]
									},
									"id": 11,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "666:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "676:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "710:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "710:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "709:9:0"
									},
									"scope": 21,
									"src": "657:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "830:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 16,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "848:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "852:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "848:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 15,
												"id": 18,
												"nodeType": "Return",
												"src": "841:15:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "772:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "780:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "814:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 13,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "814:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "813:16:0"
									},
									"scope": 21,
									"src": "763:101:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 22,
							"src": "624:243:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "89:778:0"
				},
				"id": 0
			},
			"Contract/ERC20.sol": {
				"ast": {
					"absolutePath": "Contract/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							21
						],
						"ERC20": [
							619
						],
						"IERC20": [
							697
						],
						"IERC20Errors": [
							989
						],
						"IERC20Metadata": [
							723
						]
					},
					"id": 620,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 23,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:1"
						},
						{
							"absolutePath": "Contract/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 25,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 620,
							"sourceUnit": 698,
							"src": "136:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 24,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 697,
										"src": "144:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "Contract/IERC20Metadata.sol",
							"file": "./IERC20Metadata.sol",
							"id": 27,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 620,
							"sourceUnit": 724,
							"src": "174:52:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 26,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 723,
										"src": "182:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "Contract/Context.sol",
							"file": "./Context.sol",
							"id": 29,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 620,
							"sourceUnit": 22,
							"src": "228:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 28,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 21,
										"src": "236:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "Contract/draft-IERC6093.sol",
							"file": "./draft-IERC6093.sol",
							"id": 31,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 620,
							"sourceUnit": 1085,
							"src": "268:50:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 30,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 989,
										"src": "276:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 33,
										"name": "Context",
										"nameLocations": [
											"1620:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 21,
										"src": "1620:7:1"
									},
									"id": 34,
									"nodeType": "InheritanceSpecifier",
									"src": "1620:7:1"
								},
								{
									"baseName": {
										"id": 35,
										"name": "IERC20",
										"nameLocations": [
											"1629:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 697,
										"src": "1629:6:1"
									},
									"id": 36,
									"nodeType": "InheritanceSpecifier",
									"src": "1629:6:1"
								},
								{
									"baseName": {
										"id": 37,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1637:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 723,
										"src": "1637:14:1"
									},
									"id": 38,
									"nodeType": "InheritanceSpecifier",
									"src": "1637:14:1"
								},
								{
									"baseName": {
										"id": 39,
										"name": "IERC20Errors",
										"nameLocations": [
											"1653:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 989,
										"src": "1653:12:1"
									},
									"id": 40,
									"nodeType": "InheritanceSpecifier",
									"src": "1653:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 32,
								"nodeType": "StructuredDocumentation",
								"src": "322:1269:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 619,
							"linearizedBaseContracts": [
								619,
								989,
								723,
								697,
								21
							],
							"name": "ERC20",
							"nameLocation": "1611:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 44,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1717:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 619,
									"src": "1673:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 43,
										"keyName": "account",
										"keyNameLocation": "1689:7:1",
										"keyType": {
											"id": 41,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1681:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1673:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 42,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1700:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 50,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1807:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 619,
									"src": "1735:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 49,
										"keyName": "account",
										"keyNameLocation": "1751:7:1",
										"keyType": {
											"id": 45,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1743:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1735:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 48,
											"keyName": "spender",
											"keyNameLocation": "1778:7:1",
											"keyType": {
												"id": 46,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1770:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1762:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 47,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1789:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 52,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1843:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 619,
									"src": "1827:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 51,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1827:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 54,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1879:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 619,
									"src": "1864:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 53,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1864:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 56,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1906:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 619,
									"src": "1891:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 55,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1891:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 57,
										"nodeType": "StructuredDocumentation",
										"src": "1922:73:1",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "a60f030c",
									"id": 65,
									"name": "ERC20FailedDecreaseAllowance",
									"nameLocation": "2007:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2044:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "2036:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2036:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "2061:16:1",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "2053:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 60,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2053:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "2087:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "2079:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2079:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2035:70:1"
									},
									"src": "2001:105:1"
								},
								{
									"body": {
										"id": 81,
										"nodeType": "Block",
										"src": "2352:60:1",
										"statements": [
											{
												"expression": {
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 73,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "2363:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 74,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 68,
														"src": "2371:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2363:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 76,
												"nodeType": "ExpressionStatement",
												"src": "2363:13:1"
											},
											{
												"expression": {
													"id": 79,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 77,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "2387:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 78,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 70,
														"src": "2397:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2387:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 80,
												"nodeType": "ExpressionStatement",
												"src": "2387:17:1"
											}
										]
									},
									"documentation": {
										"id": 66,
										"nodeType": "StructuredDocumentation",
										"src": "2114:176:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 82,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2322:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "2308:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 67,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2308:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2343:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "2329:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 69,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2329:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2307:44:1"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2352:0:1"
									},
									"scope": 619,
									"src": "2296:116:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										710
									],
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2542:31:1",
										"statements": [
											{
												"expression": {
													"id": 88,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 54,
													"src": "2560:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 87,
												"id": 89,
												"nodeType": "Return",
												"src": "2553:12:1"
											}
										]
									},
									"documentation": {
										"id": 83,
										"nodeType": "StructuredDocumentation",
										"src": "2420:56:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2491:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2495:2:1"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2527:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 85,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2527:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2526:15:1"
									},
									"scope": 619,
									"src": "2482:91:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 99,
										"nodeType": "Block",
										"src": "2754:33:1",
										"statements": [
											{
												"expression": {
													"id": 97,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 56,
													"src": "2772:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 96,
												"id": 98,
												"nodeType": "Return",
												"src": "2765:14:1"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2581:105:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2701:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2707:2:1"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "2739:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 94,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2739:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2738:15:1"
									},
									"scope": 619,
									"src": "2692:95:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										722
									],
									"body": {
										"id": 108,
										"nodeType": "Block",
										"src": "3491:28:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3509:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 105,
												"id": 107,
												"nodeType": "Return",
												"src": "3502:9:1"
											}
										]
									},
									"documentation": {
										"id": 101,
										"nodeType": "StructuredDocumentation",
										"src": "2795:634:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3444:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3452:2:1"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "3484:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 103,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3484:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3483:7:1"
									},
									"scope": 619,
									"src": "3435:84:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										646
									],
									"body": {
										"id": 117,
										"nodeType": "Block",
										"src": "3645:38:1",
										"statements": [
											{
												"expression": {
													"id": 115,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 52,
													"src": "3663:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 114,
												"id": 116,
												"nodeType": "Return",
												"src": "3656:19:1"
											}
										]
									},
									"documentation": {
										"id": 110,
										"nodeType": "StructuredDocumentation",
										"src": "3527:51:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 118,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3593:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3604:2:1"
									},
									"returnParameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "3636:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3636:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3635:9:1"
									},
									"scope": 619,
									"src": "3584:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										654
									],
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "3820:44:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 126,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "3838:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 128,
													"indexExpression": {
														"id": 127,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "3848:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3838:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 125,
												"id": 129,
												"nodeType": "Return",
												"src": "3831:25:1"
											}
										]
									},
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "3691:49:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3755:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3773:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3765:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3765:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3764:17:1"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3811:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3811:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3810:9:1"
									},
									"scope": 619,
									"src": "3746:118:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										664
									],
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "4144:107:1",
										"statements": [
											{
												"assignments": [
													142
												],
												"declarations": [
													{
														"constant": false,
														"id": 142,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4163:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 154,
														"src": "4155:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 141,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4155:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 145,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 143,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "4171:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4171:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4155:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 147,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "4204:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 148,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "4211:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 149,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "4215:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 146,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "4194:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4194:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 151,
												"nodeType": "ExpressionStatement",
												"src": "4194:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4239:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 140,
												"id": 153,
												"nodeType": "Return",
												"src": "4232:11:1"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "3872:191:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "4078:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4095:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "4087:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4087:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4107:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "4099:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4099:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4086:27:1"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "4138:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 138,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4138:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4137:6:1"
									},
									"scope": 619,
									"src": "4069:182:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										674
									],
									"body": {
										"id": 171,
										"nodeType": "Block",
										"src": "4403:53:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 165,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 50,
															"src": "4421:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 167,
														"indexExpression": {
															"id": 166,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "4433:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4421:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 169,
													"indexExpression": {
														"id": 168,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 160,
														"src": "4440:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4421:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 164,
												"id": 170,
												"nodeType": "Return",
												"src": "4414:34:1"
											}
										]
									},
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "4259:49:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4323:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4341:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "4333:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4333:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4356:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "4348:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4348:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4332:32:1"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "4394:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4394:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4393:9:1"
									},
									"scope": 619,
									"src": "4314:142:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										684
									],
									"body": {
										"id": 195,
										"nodeType": "Block",
										"src": "4854:111:1",
										"statements": [
											{
												"assignments": [
													183
												],
												"declarations": [
													{
														"constant": false,
														"id": 183,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4873:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 195,
														"src": "4865:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 182,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4865:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 186,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 184,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "4881:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4881:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4865:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 188,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "4913:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 189,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "4920:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 190,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "4929:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 187,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															510,
															570
														],
														"referencedDeclaration": 510,
														"src": "4904:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4904:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 192,
												"nodeType": "ExpressionStatement",
												"src": "4904:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4953:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 181,
												"id": 194,
												"nodeType": "Return",
												"src": "4946:11:1"
											}
										]
									},
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "4464:305:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4784:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4800:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "4792:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4792:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4817:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "4809:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4809:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4791:32:1"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "4848:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 179,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4848:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4847:6:1"
									},
									"scope": 619,
									"src": "4775:190:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 227,
										"nodeType": "Block",
										"src": "5636:156:1",
										"statements": [
											{
												"assignments": [
													209
												],
												"declarations": [
													{
														"constant": false,
														"id": 209,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5655:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 227,
														"src": "5647:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 208,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5647:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 212,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 210,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "5665:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5665:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5647:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 214,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "5704:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 215,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 209,
															"src": "5710:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 216,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 203,
															"src": "5719:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 213,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "5688:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5688:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 218,
												"nodeType": "ExpressionStatement",
												"src": "5688:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 220,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "5746:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 221,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "5752:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 222,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 203,
															"src": "5756:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 219,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "5736:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5736:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 224,
												"nodeType": "ExpressionStatement",
												"src": "5736:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5780:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 207,
												"id": 226,
												"nodeType": "Return",
												"src": "5773:11:1"
											}
										]
									},
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "4973:564:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5552:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5573:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "5565:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5565:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5587:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "5579:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5579:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5599:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "5591:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5591:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5564:41:1"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "5630:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 205,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5630:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5629:6:1"
									},
									"scope": 619,
									"src": "5543:249:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "6295:144:1",
										"statements": [
											{
												"assignments": [
													239
												],
												"declarations": [
													{
														"constant": false,
														"id": 239,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6314:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 256,
														"src": "6306:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 238,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6306:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 242,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 240,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "6322:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6322:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6306:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 244,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "6354:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 245,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "6361:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 247,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 239,
																		"src": "6380:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 248,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 231,
																		"src": "6387:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 246,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 172,
																	"src": "6370:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 250,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "6398:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6370:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 243,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															510,
															570
														],
														"referencedDeclaration": 510,
														"src": "6345:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6345:64:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 253,
												"nodeType": "ExpressionStatement",
												"src": "6345:64:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6427:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 237,
												"id": 255,
												"nodeType": "Return",
												"src": "6420:11:1"
											}
										]
									},
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "5800:395:1",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "6210:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6236:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "6228:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6228:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "6253:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "6245:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6245:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6227:37:1"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "6289:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6289:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6288:6:1"
									},
									"scope": 619,
									"src": "6201:238:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "7228:403:1",
										"statements": [
											{
												"assignments": [
													268
												],
												"declarations": [
													{
														"constant": false,
														"id": 268,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "7247:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "7239:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 267,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7239:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 271,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 269,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "7255:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7255:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7239:28:1"
											},
											{
												"assignments": [
													273
												],
												"declarations": [
													{
														"constant": false,
														"id": 273,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "7286:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "7278:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 272,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7278:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 278,
												"initialValue": {
													"arguments": [
														{
															"id": 275,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 268,
															"src": "7315:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 276,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "7322:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 274,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "7305:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7305:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7278:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 279,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "7345:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 280,
														"name": "requestedDecrease",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 262,
														"src": "7364:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7345:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 289,
												"nodeType": "IfStatement",
												"src": "7341:150:1",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "7383:108:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 283,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 260,
																		"src": "7434:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 284,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 273,
																		"src": "7443:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 285,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "7461:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 282,
																	"name": "ERC20FailedDecreaseAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "7405:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256,uint256) pure"
																	}
																},
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7405:74:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 287,
															"nodeType": "RevertStatement",
															"src": "7398:81:1"
														}
													]
												}
											},
											{
												"id": 298,
												"nodeType": "UncheckedBlock",
												"src": "7501:99:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 291,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 268,
																	"src": "7535:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 292,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 260,
																	"src": "7542:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 293,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 273,
																		"src": "7551:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 294,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "7570:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7551:36:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 290,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	510,
																	570
																],
																"referencedDeclaration": 510,
																"src": "7526:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7526:62:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 297,
														"nodeType": "ExpressionStatement",
														"src": "7526:62:1"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7619:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 266,
												"id": 300,
												"nodeType": "Return",
												"src": "7612:11:1"
											}
										]
									},
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "6447:674:1",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `requestedDecrease`.\n NOTE: Although this function is designed to avoid double spending with {approval},\n it can still be frontrunned, preventing any attempt of allowance reduction."
									},
									"functionSelector": "a457c2d7",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "7136:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7162:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "7154:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7154:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "7179:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "7171:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7171:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7153:44:1"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "7222:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 264,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7222:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7221:6:1"
									},
									"scope": 619,
									"src": "7127:504:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "8085:239:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 312,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "8100:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 315,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8116:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8108:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 313,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8108:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 316,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8108:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8100:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 326,
												"nodeType": "IfStatement",
												"src": "8096:88:1",
												"trueBody": {
													"id": 325,
													"nodeType": "Block",
													"src": "8120:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 321,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8169:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 320,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8161:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 319,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8161:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 322,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8161:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 318,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 964,
																	"src": "8142:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8142:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 324,
															"nodeType": "RevertStatement",
															"src": "8135:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 327,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "8198:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 330,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8212:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 329,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8204:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 328,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8204:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 331,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8204:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8198:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 341,
												"nodeType": "IfStatement",
												"src": "8194:88:1",
												"trueBody": {
													"id": 340,
													"nodeType": "Block",
													"src": "8216:66:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 336,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8267:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 335,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8259:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 334,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8259:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 337,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8259:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 333,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 969,
																	"src": "8238:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 338,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8238:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 339,
															"nodeType": "RevertStatement",
															"src": "8231:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 343,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "8300:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 344,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "8306:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 345,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "8310:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 342,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "8292:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8292:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "8292:24:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "7639:371:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "8025:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8043:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "8035:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8035:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8057:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "8049:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8049:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8069:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "8061:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8061:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8034:41:1"
									},
									"returnParameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8085:0:1"
									},
									"scope": 619,
									"src": "8016:308:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "8715:1060:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 352,
														"src": "8730:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8746:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8738:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8738:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8738:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8730:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 396,
													"nodeType": "Block",
													"src": "8907:371:1",
													"statements": [
														{
															"assignments": [
																371
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 371,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "8930:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 396,
																	"src": "8922:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 370,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "8922:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 375,
															"initialValue": {
																"baseExpression": {
																	"id": 372,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 44,
																	"src": "8944:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 374,
																"indexExpression": {
																	"id": 373,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 352,
																	"src": "8954:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8944:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8922:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 378,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 376,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 371,
																	"src": "8978:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 377,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 356,
																	"src": "8992:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8978:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 386,
															"nodeType": "IfStatement",
															"src": "8974:117:1",
															"trueBody": {
																"id": 385,
																"nodeType": "Block",
																"src": "8999:92:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 380,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 352,
																					"src": "9050:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 381,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 371,
																					"src": "9056:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 382,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 356,
																					"src": "9069:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 379,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 959,
																				"src": "9025:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 383,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9025:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 384,
																		"nodeType": "RevertStatement",
																		"src": "9018:57:1"
																	}
																]
															}
														},
														{
															"id": 395,
															"nodeType": "UncheckedBlock",
															"src": "9105:162:1",
															"statements": [
																{
																	"expression": {
																		"id": 393,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 387,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 44,
																				"src": "9214:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 389,
																			"indexExpression": {
																				"id": 388,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 352,
																				"src": "9224:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9214:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 392,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 390,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 371,
																				"src": "9232:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 391,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 356,
																				"src": "9246:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9232:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9214:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 394,
																	"nodeType": "ExpressionStatement",
																	"src": "9214:37:1"
																}
															]
														}
													]
												},
												"id": 397,
												"nodeType": "IfStatement",
												"src": "8726:552:1",
												"trueBody": {
													"id": 369,
													"nodeType": "Block",
													"src": "8750:151:1",
													"statements": [
														{
															"expression": {
																"id": 367,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 365,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "8868:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 366,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 356,
																	"src": "8884:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8868:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 368,
															"nodeType": "ExpressionStatement",
															"src": "8868:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 398,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 354,
														"src": "9294:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 401,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9308:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 400,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9300:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 399,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9300:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 402,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9300:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9294:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 417,
													"nodeType": "Block",
													"src": "9514:211:1",
													"statements": [
														{
															"id": 416,
															"nodeType": "UncheckedBlock",
															"src": "9529:185:1",
															"statements": [
																{
																	"expression": {
																		"id": 414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 410,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 44,
																				"src": "9676:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 412,
																			"indexExpression": {
																				"id": 411,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 354,
																				"src": "9686:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9676:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 413,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 356,
																			"src": "9693:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9676:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 415,
																	"nodeType": "ExpressionStatement",
																	"src": "9676:22:1"
																}
															]
														}
													]
												},
												"id": 418,
												"nodeType": "IfStatement",
												"src": "9290:435:1",
												"trueBody": {
													"id": 409,
													"nodeType": "Block",
													"src": "9312:196:1",
													"statements": [
														{
															"id": 408,
															"nodeType": "UncheckedBlock",
															"src": "9327:170:1",
															"statements": [
																{
																	"expression": {
																		"id": 406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 404,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 52,
																			"src": "9460:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 405,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 356,
																			"src": "9476:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9460:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 407,
																	"nodeType": "ExpressionStatement",
																	"src": "9460:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 420,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "9751:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 421,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 354,
															"src": "9757:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 422,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 356,
															"src": "9761:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 419,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 631,
														"src": "9742:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9742:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 424,
												"nodeType": "EmitStatement",
												"src": "9737:30:1"
											}
										]
									},
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "8332:302:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from` (or `to`) is\n the zero address. All customizations to transfers, mints, and burns should be done by overriding this function.\n Emits a {Transfer} event."
									},
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8649:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8665:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "8657:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8679:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "8671:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8671:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8691:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "8683:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8683:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8656:41:1"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8715:0:1"
									},
									"scope": 619,
									"src": "8640:1135:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "10184:157:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 434,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "10199:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 437,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10218:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10210:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 435,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10210:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 438,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10210:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10199:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 448,
												"nodeType": "IfStatement",
												"src": "10195:93:1",
												"trueBody": {
													"id": 447,
													"nodeType": "Block",
													"src": "10222:66:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 443,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10273:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 442,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10265:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 441,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10265:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 444,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10265:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 440,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 969,
																	"src": "10244:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 445,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10244:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 446,
															"nodeType": "RevertStatement",
															"src": "10237:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10314:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 451,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10306:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 450,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10306:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 453,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10306:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "10318:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 455,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "10327:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 449,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10298:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10298:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 457,
												"nodeType": "ExpressionStatement",
												"src": "10298:35:1"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "9783:339:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "10137:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "10151:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "10143:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10143:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10168:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "10160:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10160:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10142:32:1"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10184:0:1"
									},
									"scope": 619,
									"src": "10128:213:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 491,
										"nodeType": "Block",
										"src": "10732:155:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 467,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 462,
														"src": "10747:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 470,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10766:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10758:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 468,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10758:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 471,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10758:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10747:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 481,
												"nodeType": "IfStatement",
												"src": "10743:91:1",
												"trueBody": {
													"id": 480,
													"nodeType": "Block",
													"src": "10770:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 476,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10819:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 475,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10811:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 474,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10811:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 477,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10811:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 473,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 964,
																	"src": "10792:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 478,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10792:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 479,
															"nodeType": "RevertStatement",
															"src": "10785:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 483,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "10852:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10869:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 485,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10861:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 484,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10861:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10861:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 488,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "10873:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 482,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10844:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10844:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 490,
												"nodeType": "ExpressionStatement",
												"src": "10844:35:1"
											}
										]
									},
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "10349:321:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, by transferring it to address(0).\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 492,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "10685:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "10699:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "10691:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10691:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10716:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "10708:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10708:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10690:32:1"
									},
									"returnParameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10732:0:1"
									},
									"scope": 619,
									"src": "10676:211:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 509,
										"nodeType": "Block",
										"src": "11406:56:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 503,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 495,
															"src": "11426:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 504,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "11433:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 505,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "11442:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11449:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 502,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															510,
															570
														],
														"referencedDeclaration": 570,
														"src": "11417:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11417:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 508,
												"nodeType": "ExpressionStatement",
												"src": "11417:37:1"
											}
										]
									},
									"documentation": {
										"id": 493,
										"nodeType": "StructuredDocumentation",
										"src": "10895:423:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "11333:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11350:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "11342:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11342:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11365:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "11357:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11357:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11382:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "11374:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11374:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11341:47:1"
									},
									"returnParameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11406:0:1"
									},
									"scope": 619,
									"src": "11324:138:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "12427:345:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 522,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 513,
														"src": "12442:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 525,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12459:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 524,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12451:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 523,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12451:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 526,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12451:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12442:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 536,
												"nodeType": "IfStatement",
												"src": "12438:91:1",
												"trueBody": {
													"id": 535,
													"nodeType": "Block",
													"src": "12463:66:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 531,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12514:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 530,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12506:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 529,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12506:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12506:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 528,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 983,
																	"src": "12485:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12485:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 534,
															"nodeType": "RevertStatement",
															"src": "12478:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 537,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 515,
														"src": "12543:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 540,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12562:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12554:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 538,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12554:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 541,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12554:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12543:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 551,
												"nodeType": "IfStatement",
												"src": "12539:92:1",
												"trueBody": {
													"id": 550,
													"nodeType": "Block",
													"src": "12566:65:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 546,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12616:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 545,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12608:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 544,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12608:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12608:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 543,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 988,
																	"src": "12588:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12588:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 549,
															"nodeType": "RevertStatement",
															"src": "12581:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 552,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 50,
																"src": "12641:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 555,
															"indexExpression": {
																"id": 553,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 513,
																"src": "12653:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12641:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 556,
														"indexExpression": {
															"id": 554,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 515,
															"src": "12660:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12641:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 557,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 517,
														"src": "12671:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12641:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 559,
												"nodeType": "ExpressionStatement",
												"src": "12641:35:1"
											},
											{
												"condition": {
													"id": 560,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 519,
													"src": "12691:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "12687:78:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "12702:63:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 562,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 513,
																		"src": "12731:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 563,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 515,
																		"src": "12738:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 564,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 517,
																		"src": "12747:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 561,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 640,
																	"src": "12722:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12722:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 566,
															"nodeType": "EmitStatement",
															"src": "12717:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 511,
										"nodeType": "StructuredDocumentation",
										"src": "11470:853:1",
										"text": " @dev Alternative version of {_approve} with an optional flag that can enable or disable the Approval event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to true\n using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "12338:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12355:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "12347:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12347:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "12370:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "12362:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12362:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12387:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "12379:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12379:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "12399:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "12394:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 518,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12394:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12346:63:1"
									},
									"returnParameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12427:0:1"
									},
									"scope": 619,
									"src": "12329:443:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 617,
										"nodeType": "Block",
										"src": "13150:398:1",
										"statements": [
											{
												"assignments": [
													581
												],
												"declarations": [
													{
														"constant": false,
														"id": 581,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "13169:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 617,
														"src": "13161:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 580,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13161:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 586,
												"initialValue": {
													"arguments": [
														{
															"id": 583,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 573,
															"src": "13198:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 584,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "13205:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 582,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "13188:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13188:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13161:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 587,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "13228:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 590,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13253:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 589,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "13253:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 588,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "13248:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 591,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13248:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 592,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "13262:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "13248:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13228:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 616,
												"nodeType": "IfStatement",
												"src": "13224:317:1",
												"trueBody": {
													"id": 615,
													"nodeType": "Block",
													"src": "13267:274:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 594,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 581,
																	"src": "13286:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 595,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 577,
																	"src": "13305:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13286:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 604,
															"nodeType": "IfStatement",
															"src": "13282:132:1",
															"trueBody": {
																"id": 603,
																"nodeType": "Block",
																"src": "13312:102:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 598,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 575,
																					"src": "13365:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 599,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 581,
																					"src": "13374:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 600,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 577,
																					"src": "13392:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 597,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 978,
																				"src": "13338:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 601,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13338:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 602,
																		"nodeType": "RevertStatement",
																		"src": "13331:67:1"
																	}
																]
															}
														},
														{
															"id": 614,
															"nodeType": "UncheckedBlock",
															"src": "13428:102:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 606,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 573,
																				"src": "13466:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 607,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 575,
																				"src": "13473:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 610,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 608,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 581,
																					"src": "13482:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 609,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 577,
																					"src": "13501:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13482:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 611,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13508:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 605,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				510,
																				570
																			],
																			"referencedDeclaration": 570,
																			"src": "13457:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 612,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13457:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 613,
																	"nodeType": "ExpressionStatement",
																	"src": "13457:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "12780:275:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 618,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "13070:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13094:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "13086:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13086:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "13109:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "13101:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13101:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13126:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "13118:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13118:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13085:47:1"
									},
									"returnParameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13150:0:1"
									},
									"scope": 619,
									"src": "13061:487:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 620,
							"src": "1593:11958:1",
							"usedErrors": [
								65,
								959,
								964,
								969,
								978,
								983,
								988
							],
							"usedEvents": [
								631,
								640
							]
						}
					],
					"src": "108:13443:1"
				},
				"id": 1
			},
			"Contract/IERC20.sol": {
				"ast": {
					"absolutePath": "Contract/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							697
						]
					},
					"id": 698,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 621,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 622,
								"nodeType": "StructuredDocumentation",
								"src": "137:72:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 697,
							"linearizedBaseContracts": [
								697
							],
							"name": "IERC20",
							"nameLocation": "221:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 623,
										"nodeType": "StructuredDocumentation",
										"src": "235:163:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 631,
									"name": "Transfer",
									"nameLocation": "410:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "435:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "419:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 624,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "419:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 627,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "457:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "441:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "441:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 629,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "469:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "461:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "461:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "418:57:2"
									},
									"src": "404:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 632,
										"nodeType": "StructuredDocumentation",
										"src": "484:151:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 640,
									"name": "Approval",
									"nameLocation": "647:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "672:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "656:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "656:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "695:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "679:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "679:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "712:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "704:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "704:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "655:63:2"
									},
									"src": "641:78:2"
								},
								{
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "727:67:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 646,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "809:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "820:2:2"
									},
									"returnParameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "846:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "846:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "845:9:2"
									},
									"scope": 697,
									"src": "800:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 647,
										"nodeType": "StructuredDocumentation",
										"src": "863:73:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 654,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "951:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "969:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "961:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "961:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "960:17:2"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "1001:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1001:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1000:9:2"
									},
									"scope": 697,
									"src": "942:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "1018:219:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 664,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1252:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1269:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "1261:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1261:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1281:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "1273:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1273:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1260:27:2"
									},
									"returnParameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "1306:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 661,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1306:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1305:6:2"
									},
									"scope": 697,
									"src": "1243:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 665,
										"nodeType": "StructuredDocumentation",
										"src": "1320:270:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 674,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1605:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1623:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "1615:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1615:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1638:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "1630:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1630:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1614:32:2"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "1670:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1670:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1669:9:2"
									},
									"scope": 697,
									"src": "1596:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 675,
										"nodeType": "StructuredDocumentation",
										"src": "1687:681:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 684,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2383:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2399:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "2391:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2391:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2416:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "2408:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2408:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:32:2"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "2441:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 681,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2441:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2440:6:2"
									},
									"scope": 697,
									"src": "2374:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 685,
										"nodeType": "StructuredDocumentation",
										"src": "2455:305:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2775:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2796:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "2788:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2788:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2810:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "2802:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2822:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "2814:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2814:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2787:41:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "2847:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2847:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2846:6:2"
									},
									"scope": 697,
									"src": "2766:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 698,
							"src": "211:2645:2",
							"usedErrors": [],
							"usedEvents": [
								631,
								640
							]
						}
					],
					"src": "109:2747:2"
				},
				"id": 2
			},
			"Contract/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "Contract/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							697
						],
						"IERC20Metadata": [
							723
						]
					},
					"id": 724,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 699,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:3"
						},
						{
							"absolutePath": "Contract/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 701,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 724,
							"sourceUnit": 698,
							"src": "141:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 700,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 697,
										"src": "149:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 703,
										"name": "IERC20",
										"nameLocations": [
											"299:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 697,
										"src": "299:6:3"
									},
									"id": 704,
									"nodeType": "InheritanceSpecifier",
									"src": "299:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 702,
								"nodeType": "StructuredDocumentation",
								"src": "181:88:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 723,
							"linearizedBaseContracts": [
								723,
								697
							],
							"name": "IERC20Metadata",
							"nameLocation": "281:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 705,
										"nodeType": "StructuredDocumentation",
										"src": "313:56:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 710,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "384:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "388:2:3"
									},
									"returnParameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "414:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 707,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "414:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "413:15:3"
									},
									"scope": 723,
									"src": "375:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 711,
										"nodeType": "StructuredDocumentation",
										"src": "437:58:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "510:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "516:2:3"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "542:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 713,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "542:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "541:15:3"
									},
									"scope": 723,
									"src": "501:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "565:67:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 722,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "647:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "655:2:3"
									},
									"returnParameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "681:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 719,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "681:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "680:7:3"
									},
									"scope": 723,
									"src": "638:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 724,
							"src": "271:420:3",
							"usedErrors": [],
							"usedEvents": [
								631,
								640
							]
						}
					],
					"src": "113:578:3"
				},
				"id": 3
			},
			"Contract/Mytoken.sol": {
				"ast": {
					"absolutePath": "Contract/Mytoken.sol",
					"exportedSymbols": {
						"Context": [
							21
						],
						"ERC20": [
							619
						],
						"IERC20": [
							697
						],
						"IERC20Errors": [
							989
						],
						"IERC20Metadata": [
							723
						],
						"Mytoken": [
							814
						],
						"Ownable": [
							947
						]
					},
					"id": 815,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 725,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:4"
						},
						{
							"absolutePath": "Contract/ERC20.sol",
							"file": "./ERC20.sol",
							"id": 726,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 815,
							"sourceUnit": 620,
							"src": "59:21:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Contract/Ownable.sol",
							"file": "./Ownable.sol",
							"id": 727,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 815,
							"sourceUnit": 948,
							"src": "82:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 728,
										"name": "ERC20",
										"nameLocations": [
											"129:5:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 619,
										"src": "129:5:4"
									},
									"id": 729,
									"nodeType": "InheritanceSpecifier",
									"src": "129:5:4"
								},
								{
									"baseName": {
										"id": 730,
										"name": "Ownable",
										"nameLocations": [
											"136:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 947,
										"src": "136:7:4"
									},
									"id": 731,
									"nodeType": "InheritanceSpecifier",
									"src": "136:7:4"
								}
							],
							"canonicalName": "Mytoken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 814,
							"linearizedBaseContracts": [
								814,
								947,
								619,
								989,
								723,
								697,
								21
							],
							"name": "Mytoken",
							"nameLocation": "118:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "cbdd69b5",
									"id": 734,
									"mutability": "mutable",
									"name": "tokensPerEth",
									"nameLocation": "162:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 814,
									"src": "147:32:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 732,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "147:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 733,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "177:2:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "0a37b72bb67eee30e09084cf386f8a17817c57f620c3ab95fb25d6a20356ec77",
									"id": 742,
									"name": "BuyTokens",
									"nameLocation": "192:9:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 736,
												"indexed": false,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "210:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "202:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 735,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "202:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 738,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountOfETH",
												"nameLocation": "225:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "217:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "217:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 740,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountOfTokens",
												"nameLocation": "246:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "238:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "238:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "201:60:4"
									},
									"src": "186:76:4"
								},
								{
									"constant": false,
									"id": 745,
									"mutability": "mutable",
									"name": "mytoken",
									"nameLocation": "272:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 814,
									"src": "264:15:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_Mytoken_$814",
										"typeString": "contract Mytoken"
									},
									"typeName": {
										"id": 744,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 743,
											"name": "Mytoken",
											"nameLocations": [
												"264:7:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 814,
											"src": "264:7:4"
										},
										"referencedDeclaration": 814,
										"src": "264:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Mytoken_$814",
											"typeString": "contract Mytoken"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 767,
										"nodeType": "Block",
										"src": "342:53:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 757,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "361:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "365:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "361:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_5000000000000000000000_by_1",
																"typeString": "int_const 5000000000000000000000"
															},
															"id": 764,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "35303030",
																"id": 759,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "372:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_5000_by_1",
																	"typeString": "int_const 5000"
																},
																"value": "5000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		},
																		"id": 762,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "3130",
																			"id": 760,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "379:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "**",
																		"rightExpression": {
																			"hexValue": "3138",
																			"id": 761,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "383:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_18_by_1",
																				"typeString": "int_const 18"
																			},
																			"value": "18"
																		},
																		"src": "379:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		}
																	}
																],
																"id": 763,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "378:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															},
															"src": "372:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5000000000000000000000_by_1",
																"typeString": "int_const 5000000000000000000000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_5000000000000000000000_by_1",
																"typeString": "int_const 5000000000000000000000"
															}
														],
														"id": 756,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "355:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "355:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 766,
												"nodeType": "ExpressionStatement",
												"src": "355:32:4"
											}
										]
									},
									"id": 768,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4d79746f6b656e",
													"id": 748,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "305:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_072f0f97d8dec5c2684d8585cfd5995bb9700572271c53c99f8974c26d736e4f",
														"typeString": "literal_string \"Mytoken\""
													},
													"value": "Mytoken"
												},
												{
													"hexValue": "4d5954",
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "315:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_0b35abbd39f0858db5e67c208cd1b9133970e56fdb3e455bffa45bd036683668",
														"typeString": "literal_string \"MYT\""
													},
													"value": "MYT"
												}
											],
											"id": 750,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 747,
												"name": "ERC20",
												"nameLocations": [
													"299:5:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 619,
												"src": "299:5:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "299:22:4"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 752,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "330:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "334:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "330:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 754,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 751,
												"name": "Ownable",
												"nameLocations": [
													"322:7:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 947,
												"src": "322:7:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "322:19:4"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "297:2:4"
									},
									"returnParameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "342:0:4"
									},
									"scope": 814,
									"src": "286:109:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 799,
										"nodeType": "Block",
										"src": "504:164:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 778,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 770,
																"src": "523:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 781,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "542:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 780,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "534:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 779,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "534:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 782,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "534:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "523:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642061646472657373",
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "546:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															},
															"value": "Invalid address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															}
														],
														"id": 777,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "515:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "515:49:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 786,
												"nodeType": "ExpressionStatement",
												"src": "515:49:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 788,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 772,
																"src": "583:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 789,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "592:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "583:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 791,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "595:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															},
															"value": "Amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															}
														],
														"id": 787,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "575:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "575:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 793,
												"nodeType": "ExpressionStatement",
												"src": "575:52:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 795,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "644:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 796,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "653:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 794,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "638:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "638:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 798,
												"nodeType": "ExpressionStatement",
												"src": "638:22:4"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 800,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 775,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 774,
												"name": "onlyOwner",
												"nameLocations": [
													"494:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 858,
												"src": "494:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "494:9:4"
										}
									],
									"name": "mint",
									"nameLocation": "449:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "462:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "454:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "454:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "479:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "471:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "453:33:4"
									},
									"returnParameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "504:0:4"
									},
									"scope": 814,
									"src": "440:228:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 812,
										"nodeType": "Block",
										"src": "761:41:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 808,
															"name": "useradd",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "778:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 809,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "787:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 807,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 492,
														"src": "772:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "772:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 811,
												"nodeType": "ExpressionStatement",
												"src": "772:22:4"
											}
										]
									},
									"functionSelector": "9dc29fac",
									"id": 813,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "716:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "useradd",
												"nameLocation": "729:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "721:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "721:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "746:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "738:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "720:33:4"
									},
									"returnParameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "761:0:4"
									},
									"scope": 814,
									"src": "707:95:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 815,
							"src": "109:702:4",
							"usedErrors": [
								65,
								828,
								833,
								959,
								964,
								969,
								978,
								983,
								988
							],
							"usedEvents": [
								631,
								640,
								742,
								839
							]
						}
					],
					"src": "33:778:4"
				},
				"id": 4
			},
			"Contract/Ownable.sol": {
				"ast": {
					"absolutePath": "Contract/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							21
						],
						"Ownable": [
							947
						]
					},
					"id": 948,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 816,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:5"
						},
						{
							"absolutePath": "Contract/Context.sol",
							"file": "./Context.sol",
							"id": 818,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 948,
							"sourceUnit": 22,
							"src": "133:38:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 817,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 21,
										"src": "141:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 820,
										"name": "Context",
										"nameLocations": [
											"704:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 21,
										"src": "704:7:5"
									},
									"id": 821,
									"nodeType": "InheritanceSpecifier",
									"src": "704:7:5"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 819,
								"nodeType": "StructuredDocumentation",
								"src": "175:498:5",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 947,
							"linearizedBaseContracts": [
								947,
								21
							],
							"name": "Ownable",
							"nameLocation": "693:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 823,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "735:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 947,
									"src": "719:22:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 822,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "719:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 824,
										"nodeType": "StructuredDocumentation",
										"src": "750:87:5",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 828,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "849:26:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "884:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "876:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "876:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "875:17:5"
									},
									"src": "843:50:5"
								},
								{
									"documentation": {
										"id": 829,
										"nodeType": "StructuredDocumentation",
										"src": "901:84:5",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 833,
									"name": "OwnableInvalidOwner",
									"nameLocation": "997:19:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1025:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "1017:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1017:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1016:15:5"
									},
									"src": "991:41:5"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 839,
									"name": "OwnershipTransferred",
									"nameLocation": "1046:20:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1083:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "1067:29:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 834,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1067:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 837,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1114:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "1098:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1098:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1066:57:5"
									},
									"src": "1040:84:5"
								},
								{
									"body": {
										"id": 849,
										"nodeType": "Block",
										"src": "1289:51:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 846,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 842,
															"src": "1319:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 845,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 946,
														"src": "1300:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1300:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 848,
												"nodeType": "ExpressionStatement",
												"src": "1300:32:5"
											}
										]
									},
									"documentation": {
										"id": 840,
										"nodeType": "StructuredDocumentation",
										"src": "1132:117:5",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 850,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1275:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "1267:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 841,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:22:5"
									},
									"returnParameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1289:0:5"
									},
									"scope": 947,
									"src": "1255:85:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 857,
										"nodeType": "Block",
										"src": "1454:44:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 853,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 884,
														"src": "1465:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1465:13:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 855,
												"nodeType": "ExpressionStatement",
												"src": "1465:13:5"
											},
											{
												"id": 856,
												"nodeType": "PlaceholderStatement",
												"src": "1489:1:5"
											}
										]
									},
									"documentation": {
										"id": 851,
										"nodeType": "StructuredDocumentation",
										"src": "1348:79:5",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 858,
									"name": "onlyOwner",
									"nameLocation": "1442:9:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1451:2:5"
									},
									"src": "1433:65:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 866,
										"nodeType": "Block",
										"src": "1634:32:5",
										"statements": [
											{
												"expression": {
													"id": 864,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 823,
													"src": "1652:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 863,
												"id": 865,
												"nodeType": "Return",
												"src": "1645:13:5"
											}
										]
									},
									"documentation": {
										"id": 859,
										"nodeType": "StructuredDocumentation",
										"src": "1506:67:5",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 867,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1588:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1593:2:5"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 867,
												"src": "1625:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 861,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1625:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1624:9:5"
									},
									"scope": 947,
									"src": "1579:87:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 883,
										"nodeType": "Block",
										"src": "1789:121:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 871,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 867,
															"src": "1804:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 872,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1804:7:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 873,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "1815:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 874,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1815:12:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1804:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 882,
												"nodeType": "IfStatement",
												"src": "1800:103:5",
												"trueBody": {
													"id": 881,
													"nodeType": "Block",
													"src": "1829:74:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 877,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 11,
																			"src": "1878:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 878,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1878:12:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 876,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 828,
																	"src": "1851:26:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1851:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 880,
															"nodeType": "RevertStatement",
															"src": "1844:47:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 868,
										"nodeType": "StructuredDocumentation",
										"src": "1674:64:5",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 884,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1753:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1764:2:5"
									},
									"returnParameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1789:0:5"
									},
									"scope": 947,
									"src": "1744:166:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 897,
										"nodeType": "Block",
										"src": "2308:49:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 893,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2346:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 892,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2338:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 891,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2338:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 894,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2338:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 890,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 946,
														"src": "2319:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2319:30:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 896,
												"nodeType": "ExpressionStatement",
												"src": "2319:30:5"
											}
										]
									},
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "1918:330:5",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 898,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 888,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 887,
												"name": "onlyOwner",
												"nameLocations": [
													"2298:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 858,
												"src": "2298:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2298:9:5"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2263:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2280:2:5"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2308:0:5"
									},
									"scope": 947,
									"src": "2254:103:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 925,
										"nodeType": "Block",
										"src": "2582:150:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 906,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 901,
														"src": "2597:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 909,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2617:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2609:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 907,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2609:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 910,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2609:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2597:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 920,
												"nodeType": "IfStatement",
												"src": "2593:93:5",
												"trueBody": {
													"id": 919,
													"nodeType": "Block",
													"src": "2621:65:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 915,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2671:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 914,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2663:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 913,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2663:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 916,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2663:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 912,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 833,
																	"src": "2643:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 917,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2643:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 918,
															"nodeType": "RevertStatement",
															"src": "2636:38:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 922,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 901,
															"src": "2715:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 921,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 946,
														"src": "2696:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2696:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 924,
												"nodeType": "ExpressionStatement",
												"src": "2696:28:5"
											}
										]
									},
									"documentation": {
										"id": 899,
										"nodeType": "StructuredDocumentation",
										"src": "2365:141:5",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 926,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 904,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 903,
												"name": "onlyOwner",
												"nameLocations": [
													"2572:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 858,
												"src": "2572:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2572:9:5"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2521:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2547:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "2539:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 900,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2539:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2538:18:5"
									},
									"returnParameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2582:0:5"
									},
									"scope": 947,
									"src": "2512:220:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 945,
										"nodeType": "Block",
										"src": "2955:128:5",
										"statements": [
											{
												"assignments": [
													933
												],
												"declarations": [
													{
														"constant": false,
														"id": 933,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2974:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 945,
														"src": "2966:16:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 932,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2966:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 935,
												"initialValue": {
													"id": 934,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 823,
													"src": "2985:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2966:25:5"
											},
											{
												"expression": {
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 936,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 823,
														"src": "3002:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 937,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 929,
														"src": "3011:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3002:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 939,
												"nodeType": "ExpressionStatement",
												"src": "3002:17:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 941,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 933,
															"src": "3056:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 942,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 929,
															"src": "3066:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 940,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 839,
														"src": "3035:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3035:40:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 944,
												"nodeType": "EmitStatement",
												"src": "3030:45:5"
											}
										]
									},
									"documentation": {
										"id": 927,
										"nodeType": "StructuredDocumentation",
										"src": "2740:146:5",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 946,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2901:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2928:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "2920:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 928,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2920:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2919:18:5"
									},
									"returnParameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2955:0:5"
									},
									"scope": 947,
									"src": "2892:191:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 948,
							"src": "675:2411:5",
							"usedErrors": [
								828,
								833
							],
							"usedEvents": [
								839
							]
						}
					],
					"src": "105:2981:5"
				},
				"id": 5
			},
			"Contract/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "Contract/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							1084
						],
						"IERC20Errors": [
							989
						],
						"IERC721Errors": [
							1037
						]
					},
					"id": 1085,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 949,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 950,
								"nodeType": "StructuredDocumentation",
								"src": "61:142:6",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 989,
							"linearizedBaseContracts": [
								989
							],
							"name": "IERC20Errors",
							"nameLocation": "215:12:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 951,
										"nodeType": "StructuredDocumentation",
										"src": "235:314:6",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 959,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "561:24:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "594:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 959,
												"src": "586:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "586:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "610:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 959,
												"src": "602:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "602:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "627:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 959,
												"src": "619:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "585:49:6"
									},
									"src": "555:80:6"
								},
								{
									"documentation": {
										"id": 960,
										"nodeType": "StructuredDocumentation",
										"src": "643:155:6",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 964,
									"name": "ERC20InvalidSender",
									"nameLocation": "810:18:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "837:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "829:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 961,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "829:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "828:16:6"
									},
									"src": "804:41:6"
								},
								{
									"documentation": {
										"id": 965,
										"nodeType": "StructuredDocumentation",
										"src": "853:162:6",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 969,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1027:20:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1056:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "1048:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1048:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1047:18:6"
									},
									"src": "1021:45:6"
								},
								{
									"documentation": {
										"id": 970,
										"nodeType": "StructuredDocumentation",
										"src": "1074:350:6",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 978,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1436:26:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1471:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "1463:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 971,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1463:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1488:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "1480:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 973,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1507:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "1499:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1499:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1462:52:6"
									},
									"src": "1430:85:6"
								},
								{
									"documentation": {
										"id": 979,
										"nodeType": "StructuredDocumentation",
										"src": "1523:177:6",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 983,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1712:20:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1741:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "1733:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 980,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1733:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1732:18:6"
									},
									"src": "1706:45:6"
								},
								{
									"documentation": {
										"id": 984,
										"nodeType": "StructuredDocumentation",
										"src": "1759:198:6",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 988,
									"name": "ERC20InvalidSpender",
									"nameLocation": "1969:19:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1997:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "1989:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 985,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1989:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1988:17:6"
									},
									"src": "1963:43:6"
								}
							],
							"scope": 1085,
							"src": "205:1804:6",
							"usedErrors": [
								959,
								964,
								969,
								978,
								983,
								988
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 990,
								"nodeType": "StructuredDocumentation",
								"src": "2013:144:6",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 1037,
							"linearizedBaseContracts": [
								1037
							],
							"name": "IERC721Errors",
							"nameLocation": "2169:13:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 991,
										"nodeType": "StructuredDocumentation",
										"src": "2190:223:6",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 995,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2425:18:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2452:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "2444:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 992,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2444:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2443:15:6"
									},
									"src": "2419:40:6"
								},
								{
									"documentation": {
										"id": 996,
										"nodeType": "StructuredDocumentation",
										"src": "2467:135:6",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 1000,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2614:22:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2645:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "2637:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 997,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2637:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2636:17:6"
									},
									"src": "2608:46:6"
								},
								{
									"documentation": {
										"id": 1001,
										"nodeType": "StructuredDocumentation",
										"src": "2662:294:6",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 1009,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2968:20:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2997:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "2989:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1002,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2989:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3013:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "3005:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3005:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "3022:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1006,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2988:48:6"
									},
									"src": "2962:75:6"
								},
								{
									"documentation": {
										"id": 1010,
										"nodeType": "StructuredDocumentation",
										"src": "3045:155:6",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 1014,
									"name": "ERC721InvalidSender",
									"nameLocation": "3212:19:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3240:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "3232:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3232:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3231:16:6"
									},
									"src": "3206:42:6"
								},
								{
									"documentation": {
										"id": 1015,
										"nodeType": "StructuredDocumentation",
										"src": "3256:162:6",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 1019,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3430:21:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3460:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "3452:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:18:6"
									},
									"src": "3424:46:6"
								},
								{
									"documentation": {
										"id": 1020,
										"nodeType": "StructuredDocumentation",
										"src": "3478:251:6",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 1026,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3741:26:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3776:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "3768:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3768:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3794:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "3786:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3786:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3767:35:6"
									},
									"src": "3735:68:6"
								},
								{
									"documentation": {
										"id": 1027,
										"nodeType": "StructuredDocumentation",
										"src": "3811:177:6",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 1031,
									"name": "ERC721InvalidApprover",
									"nameLocation": "4000:21:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4030:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "4022:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1028,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4022:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4021:18:6"
									},
									"src": "3994:46:6"
								},
								{
									"documentation": {
										"id": 1032,
										"nodeType": "StructuredDocumentation",
										"src": "4048:200:6",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 1036,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4260:21:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4290:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "4282:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1033,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4282:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4281:18:6"
									},
									"src": "4254:46:6"
								}
							],
							"scope": 1085,
							"src": "2159:2144:6",
							"usedErrors": [
								995,
								1000,
								1009,
								1014,
								1019,
								1026,
								1031,
								1036
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1038,
								"nodeType": "StructuredDocumentation",
								"src": "4307:146:6",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 1084,
							"linearizedBaseContracts": [
								1084
							],
							"name": "IERC1155Errors",
							"nameLocation": "4465:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1039,
										"nodeType": "StructuredDocumentation",
										"src": "4487:367:6",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 1049,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4866:26:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4901:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "4893:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1040,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4917:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "4909:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1042,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4934:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "4926:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4950:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "4942:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1046,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4942:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4892:66:6"
									},
									"src": "4860:99:6"
								},
								{
									"documentation": {
										"id": 1050,
										"nodeType": "StructuredDocumentation",
										"src": "4967:155:6",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 1054,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5134:20:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5163:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "5155:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1051,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5155:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5154:16:6"
									},
									"src": "5128:43:6"
								},
								{
									"documentation": {
										"id": 1055,
										"nodeType": "StructuredDocumentation",
										"src": "5179:162:6",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 1059,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5353:22:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5384:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "5376:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1056,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5376:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5375:18:6"
									},
									"src": "5347:47:6"
								},
								{
									"documentation": {
										"id": 1060,
										"nodeType": "StructuredDocumentation",
										"src": "5402:260:6",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 1066,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5674:28:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5711:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "5703:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1061,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5703:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5729:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "5721:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1063,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5702:33:6"
									},
									"src": "5668:68:6"
								},
								{
									"documentation": {
										"id": 1067,
										"nodeType": "StructuredDocumentation",
										"src": "5744:177:6",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 1071,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5933:22:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5964:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "5956:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5956:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5955:18:6"
									},
									"src": "5927:47:6"
								},
								{
									"documentation": {
										"id": 1072,
										"nodeType": "StructuredDocumentation",
										"src": "5982:200:6",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 1076,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6194:22:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6225:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "6217:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1073,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6217:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6216:18:6"
									},
									"src": "6188:47:6"
								},
								{
									"documentation": {
										"id": 1077,
										"nodeType": "StructuredDocumentation",
										"src": "6243:285:6",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 1083,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6540:25:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6574:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "6566:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1078,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6566:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6593:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "6585:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6585:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6565:41:6"
									},
									"src": "6534:73:6"
								}
							],
							"scope": 1085,
							"src": "4455:2155:6",
							"usedErrors": [
								1049,
								1054,
								1059,
								1066,
								1071,
								1076,
								1083
							],
							"usedEvents": []
						}
					],
					"src": "33:6577:6"
				},
				"id": 6
			}
		}
	}
}