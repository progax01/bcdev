{
	"id": "519ea084266298dc8ad31971fb564fa0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.21",
	"solcLongVersion": "0.8.21+commit.d9974bed",
	"input": {
		"language": "Solidity",
		"sources": {
			"NewStakeing.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.18;\r\n\r\nimport \"./MyToken.sol\";\r\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\r\n\r\n/** \r\n@title A title that should describe the contract/interface\r\n@author The name of the author\r\n@notice Explain to an end user what this does\r\n@dev Explain to a developer any extra details\r\n*/\r\n\r\ncontract MyStakingContract {\r\n    using Counters for Counters.Counter;\r\n\r\n    Counters.Counter private tokenIdCounter;\r\n    MyToken public immutable token;\r\n    address public immutable owner;\r\n    uint256[] time = [2, 4, 6, 8, 10];\r\n\r\n    constructor(MyToken _token) {\r\n        token = MyToken(_token);\r\n        owner  = msg.sender;\r\n    }\r\n\r\n    struct Stake {\r\n        uint256  tokenIdc;\r\n        uint256 amount;\r\n        uint256 duration;\r\n        uint256 startTime;\r\n        address userads;\r\n         bool isClaimed;\r\n         bool isAmountc;\r\n    }\r\n  \r\n    mapping(address => Stake[]) public userStakes; \r\n    mapping(uint => Stake) public cid;\r\n      \r\n     function getBal(address adrs) public view returns (uint256) {\r\n        return token.balanceOf(adrs);\r\n    }\r\n\r\n    function stakenow(uint amount, uint duration ) public returns (Stake memory ){\r\n        \r\n        require(amount > 0, \"Amount must be greater than zero\");\r\n\r\n        require( duration == 2 || duration == 4 || duration == 6 || duration == 8 || duration == 10,\r\n            \"Enter Duration in formate check duration\" );\r\n\r\n        tokenIdCounter.current();\r\n        Stake memory newStake = Stake(tokenIdCounter.current(), amount, duration, block.timestamp, msg.sender,false,false);\r\n        userStakes[msg.sender].push(newStake);\r\n        token.transferFrom(msg.sender, address(this), amount);\r\n        cid[tokenIdCounter.current()]=newStake;\r\n        tokenIdCounter.increment();\r\n        return newStake;\r\n\r\n    } \r\n    \r\n    function check_duration() public view returns (uint256[] memory) {\r\n        return time;\r\n    }\r\n\r\n    function chkid(uint id) public view returns(Stake memory){\r\n      return cid[id];\r\n        \r\n\r\n    }\r\n\r\n  function ViewDetail(address ads) public view returns (Stake[] memory) {\r\n    return userStakes[ads];\r\n    }\r\n\r\n\r\n function calculateReward(uint256 userid) public view returns (address,uint256, uint256, uint256)\r\n    {\r\n       \r\n        uint256 endTime = block.timestamp;\r\n\r\n        uint256 duration = endTime -  cid[userid].startTime;\r\n        if (duration >  cid[userid].duration * 60) {\r\n            duration = cid[userid].duration * 60;\r\n        }\r\n\r\n        // You can define your own reward mechanism here.\r\n        // For example, a simple linear reward of 1 token per second.\r\n        uint256 reward = duration * 1;\r\n\r\n        return (cid[userid].userads, cid[userid].tokenIdc, reward, (reward +  cid[userid].amount));\r\n    }\r\n\r\n\r\n    function ClaimReward(uint256 userid) public {\r\n        require(msg.sender == cid[userid].userads, \"You can only claim your own rewards\");\r\n        require(!cid[userid].isClaimed, \"Reward already claimed\");\r\n\r\n        // Mark the stake as claimed\r\n        cid[userid].isClaimed = true;\r\n\r\n        (address userAddress, uint256 tokenId, uint256 reward, uint256 totalAmount) = calculateReward(userid);\r\n\r\n        // Transfer the reward tokens to the user\r\n       bool success= token.transfer(userAddress, reward);\r\n        require(success, \"Token transfer failed\");\r\n\r\n\r\n    }\r\n\r\n    function claimStakedAmount(uint256 userid) public {\r\n        require(msg.sender == cid[userid].userads, \"You can only claim your own staked amount\");\r\n        require(!cid[userid].isAmountc, \"Reward already claimed your amount\");\r\n        require(block.timestamp >= cid[userid].startTime + cid[userid].duration * 1 minutes, \"You can only claim after the staking duration has passed\");\r\n\r\n        // Mark the stake as claimed\r\n        cid[userid].isAmountc = true;\r\n\r\n        (address userAddress, uint256 tokenId, uint256 reward, uint256 Amount) = calculateReward(userid);\r\n\r\n          uint256 stakedAmount = cid[userid].amount; // Store the staked amount in a local variable\r\n    cid[userid].amount = 0; // Reset the staked amount in the contract\r\n    \r\n        // Transfer the staked amount back to the user\r\n         bool success = token.transfer(userAddress, stakedAmount);\r\n         require(success, \"Token transfer failed\");\r\n\r\n    }\r\n\r\n\r\n}\r\n                                               "
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"
			},
			"MyToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.18;\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\n\r\ncontract MyToken is ERC20, Ownable{\r\n    constructor() ERC20(\"name\", \"SYM\") Ownable(msg.sender) {\r\n        _mint(msg.sender, 1000 * 10 ** 18); // Mint 1,000,000 tokens to the contract creator\r\n        \r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c964df1ec036ce06ac8f7bd383388364be43da3a629cf6d7505cfd65b8800e2864736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c964df1ec036ce06ac8f7bd383388364be43da3a629cf6d7505cfd65b8800e2864736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 PUSH5 0xDF1EC036CE MOD 0xAC DUP16 PUSH28 0xD383388364BE43DA3A629CF6D7505CFD65B8800E2864736F6C634300 ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "424:971:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c964df1ec036ce06ac8f7bd383388364be43da3a629cf6d7505cfd65b8800e2864736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 PUSH5 0xDF1EC036CE MOD 0xAC DUP16 PUSH28 0xD383388364BE43DA3A629CF6D7505CFD65B8800E2864736F6C634300 ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "424:971:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c964df1ec036ce06ac8f7bd383388364be43da3a629cf6d7505cfd65b8800e2864736f6c63430008150033",
									".code": [
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"MyToken.sol",
								"NewStakeing.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"MyToken.sol": {
				"MyToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"MyToken.sol\":174:385  contract MyToken is ERC20, Ownable{... */\n  mstore(0x40, 0x80)\n    /* \"MyToken.sol\":215:382  constructor() ERC20(\"name\", \"SYM\") Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"MyToken.sol\":258:268  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x6e616d6500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x53594d0000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_10\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_11\n  swap2\n  swap1\n  tag_12\n  jump\t// in\ntag_11:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_13\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_14)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"MyToken.sol\":281:315  _mint(msg.sender, 1000 * 10 ** 18) */\n  tag_16\n    /* \"MyToken.sol\":287:297  msg.sender */\n  caller\n    /* \"MyToken.sol\":299:314  1000 * 10 ** 18 */\n  0x3635c9adc5dea00000\n    /* \"MyToken.sol\":281:286  _mint */\n  shl(0x20, tag_17)\n    /* \"MyToken.sol\":281:315  _mint(msg.sender, 1000 * 10 ** 18) */\n  0x20\n  shr\n  jump\t// in\ntag_16:\n    /* \"MyToken.sol\":174:385  contract MyToken is ERC20, Ownable{... */\n  jump(tag_18)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_14:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\ntag_17:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n  tag_21\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_22\n  swap2\n  swap1\n  tag_12\n  jump\t// in\ntag_22:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\ntag_21:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  tag_23\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n  shl(0x20, tag_24)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_23:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_24:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  tag_26\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_27\n  swap2\n  swap1\n  tag_28\n  jump\t// in\ntag_27:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  jump(tag_29)\ntag_26:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n  iszero\n  tag_30\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_31\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_32\n  jump\t// in\ntag_31:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\ntag_30:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\ntag_29:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  tag_33\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  jump(tag_34)\ntag_33:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\ntag_34:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  mload(0x40)\n  tag_35\n  swap2\n  swap1\n  tag_36\n  jump\t// in\ntag_35:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_37:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_38:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_39:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_40:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_67\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_67:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_68\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_69\n  tag_39\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":714:798   */\ntag_68:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_41:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_42:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_43:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_44:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_74\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_43\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":1429:1468   */\n  tag_75\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_43\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_45:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_46:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_47:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_79\n    /* \"#utility.yul\":1818:1852   */\n  tag_80\n    /* \"#utility.yul\":1827:1851   */\n  tag_81\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_45\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":1818:1852   */\n  tag_46\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":1800:1853   */\n  tag_45\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_48:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_49:\n    /* \"#utility.yul\":2056:2095   */\n  tag_84\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_47\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":2117:2208   */\n  tag_85\n    /* \"#utility.yul\":2166:2207   */\n  tag_86\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_48\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_44\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_50:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_51:\n    /* \"#utility.yul\":2377:2409   */\n  tag_89\n  tag_50\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":2418:2483   */\n  tag_90\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_49\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_52:\n    /* \"#utility.yul\":2555:2675   */\ntag_92:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_94\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_95\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_51\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_92)\ntag_94:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_53:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_97\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_98\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_41\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":2906:2935   */\n  tag_99\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_42\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_100\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_100:\n    /* \"#utility.yul\":3133:3213   */\n  tag_101\n    /* \"#utility.yul\":3189:3211   */\n  tag_102\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_42\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_52\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_97:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_54:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_55:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_105\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_54\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_56:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_107\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_55\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_7:\n    /* \"#utility.yul\":3950:3987   */\n  tag_109\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_37\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_110\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_111\n  tag_38\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":4038:4094   */\ntag_110:\n    /* \"#utility.yul\":4118:4156   */\n  tag_112\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_40\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":4203:4270   */\n  tag_113\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_53\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_115\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_116\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_116:\n    /* \"#utility.yul\":5144:5211   */\n  tag_117\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_56\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_114)\n    /* \"#utility.yul\":4365:4983   */\ntag_115:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_118\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_41\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_119:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_121\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_119)\ntag_121:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_122\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_123\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_55\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_122:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_114:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5360   */\ntag_57:\n    /* \"#utility.yul\":5271:5278   */\n  0x00\n    /* \"#utility.yul\":5311:5353   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5304:5309   */\n  dup3\n    /* \"#utility.yul\":5300:5354   */\n  and\n    /* \"#utility.yul\":5289:5354   */\n  swap1\n  pop\n    /* \"#utility.yul\":5234:5360   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5366:5462   */\ntag_58:\n    /* \"#utility.yul\":5403:5410   */\n  0x00\n    /* \"#utility.yul\":5432:5456   */\n  tag_126\n    /* \"#utility.yul\":5450:5455   */\n  dup3\n    /* \"#utility.yul\":5432:5456   */\n  tag_57\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":5421:5456   */\n  swap1\n  pop\n    /* \"#utility.yul\":5366:5462   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5468:5586   */\ntag_59:\n    /* \"#utility.yul\":5555:5579   */\n  tag_128\n    /* \"#utility.yul\":5573:5578   */\n  dup2\n    /* \"#utility.yul\":5555:5579   */\n  tag_58\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":5550:5553   */\n  dup3\n    /* \"#utility.yul\":5543:5580   */\n  mstore\n    /* \"#utility.yul\":5468:5586   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5592:5814   */\ntag_12:\n    /* \"#utility.yul\":5685:5689   */\n  0x00\n    /* \"#utility.yul\":5723:5725   */\n  0x20\n    /* \"#utility.yul\":5712:5721   */\n  dup3\n    /* \"#utility.yul\":5708:5726   */\n  add\n    /* \"#utility.yul\":5700:5726   */\n  swap1\n  pop\n    /* \"#utility.yul\":5736:5807   */\n  tag_130\n    /* \"#utility.yul\":5804:5805   */\n  0x00\n    /* \"#utility.yul\":5793:5802   */\n  dup4\n    /* \"#utility.yul\":5789:5806   */\n  add\n    /* \"#utility.yul\":5780:5786   */\n  dup5\n    /* \"#utility.yul\":5736:5807   */\n  tag_59\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":5592:5814   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5820:6000   */\ntag_60:\n    /* \"#utility.yul\":5868:5945   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":5865:5866   */\n  0x00\n    /* \"#utility.yul\":5858:5946   */\n  mstore\n    /* \"#utility.yul\":5965:5969   */\n  0x11\n    /* \"#utility.yul\":5962:5963   */\n  0x04\n    /* \"#utility.yul\":5955:5970   */\n  mstore\n    /* \"#utility.yul\":5989:5993   */\n  0x24\n    /* \"#utility.yul\":5986:5987   */\n  0x00\n    /* \"#utility.yul\":5979:5994   */\n  revert\n    /* \"#utility.yul\":6006:6197   */\ntag_28:\n    /* \"#utility.yul\":6046:6049   */\n  0x00\n    /* \"#utility.yul\":6065:6085   */\n  tag_133\n    /* \"#utility.yul\":6083:6084   */\n  dup3\n    /* \"#utility.yul\":6065:6085   */\n  tag_45\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":6060:6085   */\n  swap2\n  pop\n    /* \"#utility.yul\":6099:6119   */\n  tag_134\n    /* \"#utility.yul\":6117:6118   */\n  dup4\n    /* \"#utility.yul\":6099:6119   */\n  tag_45\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":6094:6119   */\n  swap3\n  pop\n    /* \"#utility.yul\":6142:6143   */\n  dup3\n    /* \"#utility.yul\":6139:6140   */\n  dup3\n    /* \"#utility.yul\":6135:6144   */\n  add\n    /* \"#utility.yul\":6128:6144   */\n  swap1\n  pop\n    /* \"#utility.yul\":6163:6166   */\n  dup1\n    /* \"#utility.yul\":6160:6161   */\n  dup3\n    /* \"#utility.yul\":6157:6167   */\n  gt\n    /* \"#utility.yul\":6154:6190   */\n  iszero\n  tag_135\n  jumpi\n    /* \"#utility.yul\":6170:6188   */\n  tag_136\n  tag_60\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":6154:6190   */\ntag_135:\n    /* \"#utility.yul\":6006:6197   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6203:6321   */\ntag_61:\n    /* \"#utility.yul\":6290:6314   */\n  tag_138\n    /* \"#utility.yul\":6308:6313   */\n  dup2\n    /* \"#utility.yul\":6290:6314   */\n  tag_45\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":6285:6288   */\n  dup3\n    /* \"#utility.yul\":6278:6315   */\n  mstore\n    /* \"#utility.yul\":6203:6321   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6327:6769   */\ntag_32:\n    /* \"#utility.yul\":6476:6480   */\n  0x00\n    /* \"#utility.yul\":6514:6516   */\n  0x60\n    /* \"#utility.yul\":6503:6512   */\n  dup3\n    /* \"#utility.yul\":6499:6517   */\n  add\n    /* \"#utility.yul\":6491:6517   */\n  swap1\n  pop\n    /* \"#utility.yul\":6527:6598   */\n  tag_140\n    /* \"#utility.yul\":6595:6596   */\n  0x00\n    /* \"#utility.yul\":6584:6593   */\n  dup4\n    /* \"#utility.yul\":6580:6597   */\n  add\n    /* \"#utility.yul\":6571:6577   */\n  dup7\n    /* \"#utility.yul\":6527:6598   */\n  tag_59\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":6608:6680   */\n  tag_141\n    /* \"#utility.yul\":6676:6678   */\n  0x20\n    /* \"#utility.yul\":6665:6674   */\n  dup4\n    /* \"#utility.yul\":6661:6679   */\n  add\n    /* \"#utility.yul\":6652:6658   */\n  dup6\n    /* \"#utility.yul\":6608:6680   */\n  tag_61\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":6690:6762   */\n  tag_142\n    /* \"#utility.yul\":6758:6760   */\n  0x40\n    /* \"#utility.yul\":6747:6756   */\n  dup4\n    /* \"#utility.yul\":6743:6761   */\n  add\n    /* \"#utility.yul\":6734:6740   */\n  dup5\n    /* \"#utility.yul\":6690:6762   */\n  tag_61\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":6327:6769   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6775:6997   */\ntag_36:\n    /* \"#utility.yul\":6868:6872   */\n  0x00\n    /* \"#utility.yul\":6906:6908   */\n  0x20\n    /* \"#utility.yul\":6895:6904   */\n  dup3\n    /* \"#utility.yul\":6891:6909   */\n  add\n    /* \"#utility.yul\":6883:6909   */\n  swap1\n  pop\n    /* \"#utility.yul\":6919:6990   */\n  tag_144\n    /* \"#utility.yul\":6987:6988   */\n  0x00\n    /* \"#utility.yul\":6976:6985   */\n  dup4\n    /* \"#utility.yul\":6972:6989   */\n  add\n    /* \"#utility.yul\":6963:6969   */\n  dup5\n    /* \"#utility.yul\":6919:6990   */\n  tag_61\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":6775:6997   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"MyToken.sol\":174:385  contract MyToken is ERC20, Ownable{... */\ntag_18:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"MyToken.sol\":174:385  contract MyToken is ERC20, Ownable{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_15:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_8:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_9:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_10:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_11:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_12:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_13:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_14:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n    tag_62:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_17:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_68\n      swap1\n      tag_67\n      jump\t// in\n    tag_68:\n      dup1\n      iszero\n      tag_69\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_70\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_69)\n    tag_70:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_71:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_71\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_69:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_23:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_73\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_75\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_76\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_75:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_80\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_80:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_82\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_83\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_82:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_87\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_88\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_90\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_91\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_90:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_94\n      swap1\n      tag_67\n      jump\t// in\n    tag_94:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_95\n      swap1\n      tag_67\n      jump\t// in\n    tag_95:\n      dup1\n      iszero\n      tag_96\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_97\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_96)\n    tag_97:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_98:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_98\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_96:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3708  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      tag_100\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3721  _msgSender */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      jump\t// in\n    tag_100:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3723  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3743:3748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_83\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3777:3781  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3770:3781  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_104\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_88\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_104:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_106\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_108\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_91\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_108:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_114\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_114:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_115\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_116\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_119\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_121\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_121:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_123\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_124\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_123:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_125\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_126\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_74\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_128:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_129\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_47\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_129:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_130\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_74\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_135\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_137\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_138\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_137:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_139\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_140\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_139:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_142\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_143\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_145)\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_146\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_147\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_145:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_148\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_149)\n    tag_148:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_150\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_151:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_152:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_153:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_178:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_180\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_178)\n    tag_180:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_154:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_155:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_183\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_151\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":818:889   */\n      tag_184\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_152\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_185\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_153\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":988:1017   */\n      tag_186\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_154\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_19:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_188\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_155\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_157:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_159:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_160:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_194\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_159\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_161:\n        /* \"#utility.yul\":1983:2007   */\n      tag_196\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_160\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_197\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_197:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_162:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_199\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_161\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_163:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_164:\n        /* \"#utility.yul\":2339:2363   */\n      tag_202\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_163\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_203\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_203:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_165:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_205\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_164\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_22:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_207\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_208\n      tag_157\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":2632:2751   */\n    tag_207:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_209\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_162\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_210\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_165\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_166:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_167:\n        /* \"#utility.yul\":3196:3217   */\n      tag_213\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_166\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_25:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_215\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_167\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3564   */\n    tag_168:\n        /* \"#utility.yul\":3533:3557   */\n      tag_217\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3533:3557   */\n      tag_163\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":3528:3531   */\n      dup3\n        /* \"#utility.yul\":3521:3558   */\n      mstore\n        /* \"#utility.yul\":3446:3564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3792   */\n    tag_29:\n        /* \"#utility.yul\":3663:3667   */\n      0x00\n        /* \"#utility.yul\":3701:3703   */\n      0x20\n        /* \"#utility.yul\":3690:3699   */\n      dup3\n        /* \"#utility.yul\":3686:3704   */\n      add\n        /* \"#utility.yul\":3678:3704   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3785   */\n      tag_219\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3714:3785   */\n      tag_168\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":3570:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4417   */\n    tag_32:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup1\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x60\n        /* \"#utility.yul\":3928:3937   */\n      dup5\n        /* \"#utility.yul\":3919:3926   */\n      dup7\n        /* \"#utility.yul\":3915:3938   */\n      sub\n        /* \"#utility.yul\":3911:3943   */\n      slt\n        /* \"#utility.yul\":3908:4027   */\n      iszero\n      tag_221\n      jumpi\n        /* \"#utility.yul\":3946:4025   */\n      tag_222\n      tag_157\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":3908:4027   */\n    tag_221:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4091:4144   */\n      tag_223\n        /* \"#utility.yul\":4136:4143   */\n      dup7\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup8\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4091:4144   */\n      tag_162\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":4081:4144   */\n      swap4\n      pop\n        /* \"#utility.yul\":4037:4154   */\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4219:4272   */\n      tag_224\n        /* \"#utility.yul\":4264:4271   */\n      dup7\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup8\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_162\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4164:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4347:4400   */\n      tag_225\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup8\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_165\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3798:4417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4423:4509   */\n    tag_169:\n        /* \"#utility.yul\":4458:4465   */\n      0x00\n        /* \"#utility.yul\":4498:4502   */\n      0xff\n        /* \"#utility.yul\":4491:4496   */\n      dup3\n        /* \"#utility.yul\":4487:4503   */\n      and\n        /* \"#utility.yul\":4476:4503   */\n      swap1\n      pop\n        /* \"#utility.yul\":4423:4509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4515:4627   */\n    tag_170:\n        /* \"#utility.yul\":4598:4620   */\n      tag_228\n        /* \"#utility.yul\":4614:4619   */\n      dup2\n        /* \"#utility.yul\":4598:4620   */\n      tag_169\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":4593:4596   */\n      dup3\n        /* \"#utility.yul\":4586:4621   */\n      mstore\n        /* \"#utility.yul\":4515:4627   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4633:4847   */\n    tag_38:\n        /* \"#utility.yul\":4722:4726   */\n      0x00\n        /* \"#utility.yul\":4760:4762   */\n      0x20\n        /* \"#utility.yul\":4749:4758   */\n      dup3\n        /* \"#utility.yul\":4745:4763   */\n      add\n        /* \"#utility.yul\":4737:4763   */\n      swap1\n      pop\n        /* \"#utility.yul\":4773:4840   */\n      tag_230\n        /* \"#utility.yul\":4837:4838   */\n      0x00\n        /* \"#utility.yul\":4826:4835   */\n      dup4\n        /* \"#utility.yul\":4822:4839   */\n      add\n        /* \"#utility.yul\":4813:4819   */\n      dup5\n        /* \"#utility.yul\":4773:4840   */\n      tag_170\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":4633:4847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4853:5182   */\n    tag_41:\n        /* \"#utility.yul\":4912:4918   */\n      0x00\n        /* \"#utility.yul\":4961:4963   */\n      0x20\n        /* \"#utility.yul\":4949:4958   */\n      dup3\n        /* \"#utility.yul\":4940:4947   */\n      dup5\n        /* \"#utility.yul\":4936:4959   */\n      sub\n        /* \"#utility.yul\":4932:4964   */\n      slt\n        /* \"#utility.yul\":4929:5048   */\n      iszero\n      tag_232\n      jumpi\n        /* \"#utility.yul\":4967:5046   */\n      tag_233\n      tag_157\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":4929:5048   */\n    tag_232:\n        /* \"#utility.yul\":5087:5088   */\n      0x00\n        /* \"#utility.yul\":5112:5165   */\n      tag_234\n        /* \"#utility.yul\":5157:5164   */\n      dup5\n        /* \"#utility.yul\":5148:5154   */\n      dup3\n        /* \"#utility.yul\":5137:5146   */\n      dup6\n        /* \"#utility.yul\":5133:5155   */\n      add\n        /* \"#utility.yul\":5112:5165   */\n      tag_162\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":5102:5165   */\n      swap2\n      pop\n        /* \"#utility.yul\":5058:5175   */\n      pop\n        /* \"#utility.yul\":4853:5182   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5188:5306   */\n    tag_171:\n        /* \"#utility.yul\":5275:5299   */\n      tag_236\n        /* \"#utility.yul\":5293:5298   */\n      dup2\n        /* \"#utility.yul\":5275:5299   */\n      tag_160\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":5270:5273   */\n      dup3\n        /* \"#utility.yul\":5263:5300   */\n      mstore\n        /* \"#utility.yul\":5188:5306   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5312:5534   */\n    tag_49:\n        /* \"#utility.yul\":5405:5409   */\n      0x00\n        /* \"#utility.yul\":5443:5445   */\n      0x20\n        /* \"#utility.yul\":5432:5441   */\n      dup3\n        /* \"#utility.yul\":5428:5446   */\n      add\n        /* \"#utility.yul\":5420:5446   */\n      swap1\n      pop\n        /* \"#utility.yul\":5456:5527   */\n      tag_238\n        /* \"#utility.yul\":5524:5525   */\n      0x00\n        /* \"#utility.yul\":5513:5522   */\n      dup4\n        /* \"#utility.yul\":5509:5526   */\n      add\n        /* \"#utility.yul\":5500:5506   */\n      dup5\n        /* \"#utility.yul\":5456:5527   */\n      tag_171\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":5312:5534   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5540:6014   */\n    tag_59:\n        /* \"#utility.yul\":5608:5614   */\n      0x00\n        /* \"#utility.yul\":5616:5622   */\n      dup1\n        /* \"#utility.yul\":5665:5667   */\n      0x40\n        /* \"#utility.yul\":5653:5662   */\n      dup4\n        /* \"#utility.yul\":5644:5651   */\n      dup6\n        /* \"#utility.yul\":5640:5663   */\n      sub\n        /* \"#utility.yul\":5636:5668   */\n      slt\n        /* \"#utility.yul\":5633:5752   */\n      iszero\n      tag_240\n      jumpi\n        /* \"#utility.yul\":5671:5750   */\n      tag_241\n      tag_157\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":5633:5752   */\n    tag_240:\n        /* \"#utility.yul\":5791:5792   */\n      0x00\n        /* \"#utility.yul\":5816:5869   */\n      tag_242\n        /* \"#utility.yul\":5861:5868   */\n      dup6\n        /* \"#utility.yul\":5852:5858   */\n      dup3\n        /* \"#utility.yul\":5841:5850   */\n      dup7\n        /* \"#utility.yul\":5837:5859   */\n      add\n        /* \"#utility.yul\":5816:5869   */\n      tag_162\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":5806:5869   */\n      swap3\n      pop\n        /* \"#utility.yul\":5762:5879   */\n      pop\n        /* \"#utility.yul\":5918:5920   */\n      0x20\n        /* \"#utility.yul\":5944:5997   */\n      tag_243\n        /* \"#utility.yul\":5989:5996   */\n      dup6\n        /* \"#utility.yul\":5980:5986   */\n      dup3\n        /* \"#utility.yul\":5969:5978   */\n      dup7\n        /* \"#utility.yul\":5965:5987   */\n      add\n        /* \"#utility.yul\":5944:5997   */\n      tag_162\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":5934:5997   */\n      swap2\n      pop\n        /* \"#utility.yul\":5889:6007   */\n      pop\n        /* \"#utility.yul\":5540:6014   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6020:6200   */\n    tag_172:\n        /* \"#utility.yul\":6068:6145   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6065:6066   */\n      0x00\n        /* \"#utility.yul\":6058:6146   */\n      mstore\n        /* \"#utility.yul\":6165:6169   */\n      0x22\n        /* \"#utility.yul\":6162:6163   */\n      0x04\n        /* \"#utility.yul\":6155:6170   */\n      mstore\n        /* \"#utility.yul\":6189:6193   */\n      0x24\n        /* \"#utility.yul\":6186:6187   */\n      0x00\n        /* \"#utility.yul\":6179:6194   */\n      revert\n        /* \"#utility.yul\":6206:6526   */\n    tag_67:\n        /* \"#utility.yul\":6250:6256   */\n      0x00\n        /* \"#utility.yul\":6287:6288   */\n      0x02\n        /* \"#utility.yul\":6281:6285   */\n      dup3\n        /* \"#utility.yul\":6277:6289   */\n      div\n        /* \"#utility.yul\":6267:6289   */\n      swap1\n      pop\n        /* \"#utility.yul\":6334:6335   */\n      0x01\n        /* \"#utility.yul\":6328:6332   */\n      dup3\n        /* \"#utility.yul\":6324:6336   */\n      and\n        /* \"#utility.yul\":6355:6373   */\n      dup1\n        /* \"#utility.yul\":6345:6426   */\n      tag_246\n      jumpi\n        /* \"#utility.yul\":6411:6415   */\n      0x7f\n        /* \"#utility.yul\":6403:6409   */\n      dup3\n        /* \"#utility.yul\":6399:6416   */\n      and\n        /* \"#utility.yul\":6389:6416   */\n      swap2\n      pop\n        /* \"#utility.yul\":6345:6426   */\n    tag_246:\n        /* \"#utility.yul\":6473:6475   */\n      0x20\n        /* \"#utility.yul\":6465:6471   */\n      dup3\n        /* \"#utility.yul\":6462:6476   */\n      lt\n        /* \"#utility.yul\":6442:6460   */\n      dup2\n        /* \"#utility.yul\":6439:6477   */\n      sub\n        /* \"#utility.yul\":6436:6520   */\n      tag_247\n      jumpi\n        /* \"#utility.yul\":6492:6510   */\n      tag_248\n      tag_172\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":6436:6520   */\n    tag_247:\n        /* \"#utility.yul\":6257:6526   */\n      pop\n        /* \"#utility.yul\":6206:6526   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6532:6974   */\n    tag_118:\n        /* \"#utility.yul\":6681:6685   */\n      0x00\n        /* \"#utility.yul\":6719:6721   */\n      0x60\n        /* \"#utility.yul\":6708:6717   */\n      dup3\n        /* \"#utility.yul\":6704:6722   */\n      add\n        /* \"#utility.yul\":6696:6722   */\n      swap1\n      pop\n        /* \"#utility.yul\":6732:6803   */\n      tag_250\n        /* \"#utility.yul\":6800:6801   */\n      0x00\n        /* \"#utility.yul\":6789:6798   */\n      dup4\n        /* \"#utility.yul\":6785:6802   */\n      add\n        /* \"#utility.yul\":6776:6782   */\n      dup7\n        /* \"#utility.yul\":6732:6803   */\n      tag_171\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":6813:6885   */\n      tag_251\n        /* \"#utility.yul\":6881:6883   */\n      0x20\n        /* \"#utility.yul\":6870:6879   */\n      dup4\n        /* \"#utility.yul\":6866:6884   */\n      add\n        /* \"#utility.yul\":6857:6863   */\n      dup6\n        /* \"#utility.yul\":6813:6885   */\n      tag_168\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":6895:6967   */\n      tag_252\n        /* \"#utility.yul\":6963:6965   */\n      0x40\n        /* \"#utility.yul\":6952:6961   */\n      dup4\n        /* \"#utility.yul\":6948:6966   */\n      add\n        /* \"#utility.yul\":6939:6945   */\n      dup5\n        /* \"#utility.yul\":6895:6967   */\n      tag_168\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":6532:6974   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6980:7160   */\n    tag_173:\n        /* \"#utility.yul\":7028:7105   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7025:7026   */\n      0x00\n        /* \"#utility.yul\":7018:7106   */\n      mstore\n        /* \"#utility.yul\":7125:7129   */\n      0x11\n        /* \"#utility.yul\":7122:7123   */\n      0x04\n        /* \"#utility.yul\":7115:7130   */\n      mstore\n        /* \"#utility.yul\":7149:7153   */\n      0x24\n        /* \"#utility.yul\":7146:7147   */\n      0x00\n        /* \"#utility.yul\":7139:7154   */\n      revert\n        /* \"#utility.yul\":7166:7357   */\n    tag_144:\n        /* \"#utility.yul\":7206:7209   */\n      0x00\n        /* \"#utility.yul\":7225:7245   */\n      tag_255\n        /* \"#utility.yul\":7243:7244   */\n      dup3\n        /* \"#utility.yul\":7225:7245   */\n      tag_163\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":7220:7245   */\n      swap2\n      pop\n        /* \"#utility.yul\":7259:7279   */\n      tag_256\n        /* \"#utility.yul\":7277:7278   */\n      dup4\n        /* \"#utility.yul\":7259:7279   */\n      tag_163\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":7254:7279   */\n      swap3\n      pop\n        /* \"#utility.yul\":7302:7303   */\n      dup3\n        /* \"#utility.yul\":7299:7300   */\n      dup3\n        /* \"#utility.yul\":7295:7304   */\n      add\n        /* \"#utility.yul\":7288:7304   */\n      swap1\n      pop\n        /* \"#utility.yul\":7323:7326   */\n      dup1\n        /* \"#utility.yul\":7320:7321   */\n      dup3\n        /* \"#utility.yul\":7317:7327   */\n      gt\n        /* \"#utility.yul\":7314:7350   */\n      iszero\n      tag_257\n      jumpi\n        /* \"#utility.yul\":7330:7348   */\n      tag_258\n      tag_173\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":7314:7350   */\n    tag_257:\n        /* \"#utility.yul\":7166:7357   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122057a0f5545f3cd60a02897b77e6fec30dbb26ec4cfdaf51dab37bdd2951e57f9064736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1029": {
									"entryPoint": null,
									"id": 1029,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 525,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 330,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 663,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2101,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2248,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2118,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2265,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2324,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1363,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1211,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2190,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1672,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2082,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2051,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1493,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1634,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1511,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1823,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1381,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1311,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1794,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1502,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1764,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2145,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1266,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1221,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1550,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1396,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1752,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1606,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1408,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1559,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1602,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7000:9",
										"nodeType": "YulBlock",
										"src": "0:7000:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:9",
													"nodeType": "YulBlock",
													"src": "66:40:9",
													"statements": [
														{
															"nativeSrc": "77:22:9",
															"nodeType": "YulAssignment",
															"src": "77:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:9"
																},
																"nativeSrc": "87:12:9",
																"nodeType": "YulFunctionCall",
																"src": "87:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:9",
														"nodeType": "YulTypedName",
														"src": "49:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:9",
														"nodeType": "YulTypedName",
														"src": "59:6:9",
														"type": ""
													}
												],
												"src": "7:99:9"
											},
											{
												"body": {
													"nativeSrc": "140:152:9",
													"nodeType": "YulBlock",
													"src": "140:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:9",
																		"nodeType": "YulLiteral",
																		"src": "157:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:9",
																		"nodeType": "YulLiteral",
																		"src": "160:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:9"
																},
																"nativeSrc": "150:88:9",
																"nodeType": "YulFunctionCall",
																"src": "150:88:9"
															},
															"nativeSrc": "150:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:9",
																		"nodeType": "YulLiteral",
																		"src": "254:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:9",
																		"nodeType": "YulLiteral",
																		"src": "257:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:9"
																},
																"nativeSrc": "247:15:9",
																"nodeType": "YulFunctionCall",
																"src": "247:15:9"
															},
															"nativeSrc": "247:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:9",
																		"nodeType": "YulLiteral",
																		"src": "278:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:9",
																		"nodeType": "YulLiteral",
																		"src": "281:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:9"
																},
																"nativeSrc": "271:15:9",
																"nodeType": "YulFunctionCall",
																"src": "271:15:9"
															},
															"nativeSrc": "271:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:9"
											},
											{
												"body": {
													"nativeSrc": "326:152:9",
													"nodeType": "YulBlock",
													"src": "326:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:9",
																		"nodeType": "YulLiteral",
																		"src": "343:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:9",
																		"nodeType": "YulLiteral",
																		"src": "346:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:9"
																},
																"nativeSrc": "336:88:9",
																"nodeType": "YulFunctionCall",
																"src": "336:88:9"
															},
															"nativeSrc": "336:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:9",
																		"nodeType": "YulLiteral",
																		"src": "440:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:9",
																		"nodeType": "YulLiteral",
																		"src": "443:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:9"
																},
																"nativeSrc": "433:15:9",
																"nodeType": "YulFunctionCall",
																"src": "433:15:9"
															},
															"nativeSrc": "433:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:9",
																		"nodeType": "YulLiteral",
																		"src": "464:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:9",
																		"nodeType": "YulLiteral",
																		"src": "467:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:9"
																},
																"nativeSrc": "457:15:9",
																"nodeType": "YulFunctionCall",
																"src": "457:15:9"
															},
															"nativeSrc": "457:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:9"
											},
											{
												"body": {
													"nativeSrc": "535:269:9",
													"nodeType": "YulBlock",
													"src": "535:269:9",
													"statements": [
														{
															"nativeSrc": "545:22:9",
															"nodeType": "YulAssignment",
															"src": "545:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:9",
																		"nodeType": "YulLiteral",
																		"src": "565:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:9"
																},
																"nativeSrc": "555:12:9",
																"nodeType": "YulFunctionCall",
																"src": "555:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:9"
																}
															]
														},
														{
															"nativeSrc": "576:38:9",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:9",
																		"nodeType": "YulLiteral",
																		"src": "612:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:9"
																},
																"nativeSrc": "602:12:9",
																"nodeType": "YulFunctionCall",
																"src": "602:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:9",
																	"nodeType": "YulTypedName",
																	"src": "580:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:9",
																"nodeType": "YulBlock",
																"src": "653:51:9",
																"statements": [
																	{
																		"nativeSrc": "667:27:9",
																		"nodeType": "YulAssignment",
																		"src": "667:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:9",
																					"nodeType": "YulLiteral",
																					"src": "689:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:9"
																			},
																			"nativeSrc": "677:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:9"
																},
																"nativeSrc": "626:26:9",
																"nodeType": "YulFunctionCall",
																"src": "626:26:9"
															},
															"nativeSrc": "623:81:9",
															"nodeType": "YulIf",
															"src": "623:81:9"
														},
														{
															"body": {
																"nativeSrc": "756:42:9",
																"nodeType": "YulBlock",
																"src": "756:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:9"
																			},
																			"nativeSrc": "770:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:9"
																		},
																		"nativeSrc": "770:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:9",
																				"nodeType": "YulLiteral",
																				"src": "751:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:9"
																		},
																		"nativeSrc": "740:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:9"
																},
																"nativeSrc": "717:38:9",
																"nodeType": "YulFunctionCall",
																"src": "717:38:9"
															},
															"nativeSrc": "714:84:9",
															"nodeType": "YulIf",
															"src": "714:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:9",
														"nodeType": "YulTypedName",
														"src": "519:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:9",
														"nodeType": "YulTypedName",
														"src": "528:6:9",
														"type": ""
													}
												],
												"src": "484:320:9"
											},
											{
												"body": {
													"nativeSrc": "864:87:9",
													"nodeType": "YulBlock",
													"src": "864:87:9",
													"statements": [
														{
															"nativeSrc": "874:11:9",
															"nodeType": "YulAssignment",
															"src": "874:11:9",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:9",
																"nodeType": "YulIdentifier",
																"src": "882:3:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:9",
																		"nodeType": "YulLiteral",
																		"src": "902:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:9"
																},
																"nativeSrc": "895:14:9",
																"nodeType": "YulFunctionCall",
																"src": "895:14:9"
															},
															"nativeSrc": "895:14:9",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:9"
														},
														{
															"nativeSrc": "918:26:9",
															"nodeType": "YulAssignment",
															"src": "918:26:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:9",
																		"nodeType": "YulLiteral",
																		"src": "936:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:9",
																		"nodeType": "YulLiteral",
																		"src": "939:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:9"
																},
																"nativeSrc": "926:18:9",
																"nodeType": "YulFunctionCall",
																"src": "926:18:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:9",
														"nodeType": "YulTypedName",
														"src": "851:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:9",
														"nodeType": "YulTypedName",
														"src": "859:4:9",
														"type": ""
													}
												],
												"src": "810:141:9"
											},
											{
												"body": {
													"nativeSrc": "1001:49:9",
													"nodeType": "YulBlock",
													"src": "1001:49:9",
													"statements": [
														{
															"nativeSrc": "1011:33:9",
															"nodeType": "YulAssignment",
															"src": "1011:33:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:9"
																		},
																		"nativeSrc": "1025:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:9"
																},
																"nativeSrc": "1021:23:9",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:9"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:9",
														"nodeType": "YulTypedName",
														"src": "984:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:9",
														"nodeType": "YulTypedName",
														"src": "994:6:9",
														"type": ""
													}
												],
												"src": "957:93:9"
											},
											{
												"body": {
													"nativeSrc": "1109:54:9",
													"nodeType": "YulBlock",
													"src": "1109:54:9",
													"statements": [
														{
															"nativeSrc": "1119:37:9",
															"nodeType": "YulAssignment",
															"src": "1119:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:9"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:9"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:9"
																},
																"nativeSrc": "1140:16:9",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:9"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:9",
														"nodeType": "YulTypedName",
														"src": "1084:4:9",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:9",
														"nodeType": "YulTypedName",
														"src": "1090:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:9",
														"nodeType": "YulTypedName",
														"src": "1100:8:9",
														"type": ""
													}
												],
												"src": "1056:107:9"
											},
											{
												"body": {
													"nativeSrc": "1245:317:9",
													"nodeType": "YulBlock",
													"src": "1245:317:9",
													"statements": [
														{
															"nativeSrc": "1255:35:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:9",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:9",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:9"
																},
																"nativeSrc": "1272:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:9"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:9",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:9",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:9"
																},
																"nativeSrc": "1311:97:9",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:9"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:9",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:9",
															"nodeType": "YulAssignment",
															"src": "1417:51:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:9"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:9"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:9"
																},
																"nativeSrc": "1429:39:9",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:9"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:9"
																}
															]
														},
														{
															"nativeSrc": "1477:30:9",
															"nodeType": "YulAssignment",
															"src": "1477:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:9"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:9"
																		},
																		"nativeSrc": "1497:9:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:9"
																},
																"nativeSrc": "1486:21:9",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:9"
																}
															]
														},
														{
															"nativeSrc": "1516:40:9",
															"nodeType": "YulAssignment",
															"src": "1516:40:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:9",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:9"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:9"
																		},
																		"nativeSrc": "1536:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:9"
																},
																"nativeSrc": "1526:30:9",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:9"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:9",
														"nodeType": "YulTypedName",
														"src": "1206:5:9",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:9",
														"nodeType": "YulTypedName",
														"src": "1213:10:9",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:9",
														"nodeType": "YulTypedName",
														"src": "1225:8:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:9",
														"nodeType": "YulTypedName",
														"src": "1238:6:9",
														"type": ""
													}
												],
												"src": "1169:393:9"
											},
											{
												"body": {
													"nativeSrc": "1613:32:9",
													"nodeType": "YulBlock",
													"src": "1613:32:9",
													"statements": [
														{
															"nativeSrc": "1623:16:9",
															"nodeType": "YulAssignment",
															"src": "1623:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:9",
																"nodeType": "YulIdentifier",
																"src": "1634:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:9",
														"nodeType": "YulTypedName",
														"src": "1595:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:9",
														"nodeType": "YulTypedName",
														"src": "1605:7:9",
														"type": ""
													}
												],
												"src": "1568:77:9"
											},
											{
												"body": {
													"nativeSrc": "1683:28:9",
													"nodeType": "YulBlock",
													"src": "1683:28:9",
													"statements": [
														{
															"nativeSrc": "1693:12:9",
															"nodeType": "YulAssignment",
															"src": "1693:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:9",
																"nodeType": "YulIdentifier",
																"src": "1700:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:9"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:9",
														"nodeType": "YulTypedName",
														"src": "1669:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:9",
														"nodeType": "YulTypedName",
														"src": "1679:3:9",
														"type": ""
													}
												],
												"src": "1651:60:9"
											},
											{
												"body": {
													"nativeSrc": "1777:82:9",
													"nodeType": "YulBlock",
													"src": "1777:82:9",
													"statements": [
														{
															"nativeSrc": "1787:66:9",
															"nodeType": "YulAssignment",
															"src": "1787:66:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:9"
																				},
																				"nativeSrc": "1827:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:9"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:9",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:9"
																		},
																		"nativeSrc": "1818:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:9"
																},
																"nativeSrc": "1800:53:9",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:9",
														"nodeType": "YulTypedName",
														"src": "1757:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:9",
														"nodeType": "YulTypedName",
														"src": "1767:9:9",
														"type": ""
													}
												],
												"src": "1717:142:9"
											},
											{
												"body": {
													"nativeSrc": "1912:28:9",
													"nodeType": "YulBlock",
													"src": "1912:28:9",
													"statements": [
														{
															"nativeSrc": "1922:12:9",
															"nodeType": "YulAssignment",
															"src": "1922:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:9",
																"nodeType": "YulIdentifier",
																"src": "1929:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:9"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:9",
														"nodeType": "YulTypedName",
														"src": "1898:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:9",
														"nodeType": "YulTypedName",
														"src": "1908:3:9",
														"type": ""
													}
												],
												"src": "1865:75:9"
											},
											{
												"body": {
													"nativeSrc": "2022:193:9",
													"nodeType": "YulBlock",
													"src": "2022:193:9",
													"statements": [
														{
															"nativeSrc": "2032:63:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:9",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:9"
																},
																"nativeSrc": "2056:39:9",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:9"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:9",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:9"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:9"
																				},
																				"nativeSrc": "2145:11:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:9"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:9",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:9"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:9",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:9"
																				},
																				"nativeSrc": "2166:41:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:9"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:9",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:9"
																		},
																		"nativeSrc": "2117:91:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:9"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:9"
																},
																"nativeSrc": "2104:105:9",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:9"
															},
															"nativeSrc": "2104:105:9",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:9"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:9",
														"nodeType": "YulTypedName",
														"src": "1999:4:9",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:9",
														"nodeType": "YulTypedName",
														"src": "2005:6:9",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:9",
														"nodeType": "YulTypedName",
														"src": "2013:7:9",
														"type": ""
													}
												],
												"src": "1946:269:9"
											},
											{
												"body": {
													"nativeSrc": "2270:24:9",
													"nodeType": "YulBlock",
													"src": "2270:24:9",
													"statements": [
														{
															"nativeSrc": "2280:8:9",
															"nodeType": "YulAssignment",
															"src": "2280:8:9",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:9",
																"nodeType": "YulLiteral",
																"src": "2287:1:9",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:9"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:9",
														"nodeType": "YulTypedName",
														"src": "2266:3:9",
														"type": ""
													}
												],
												"src": "2221:73:9"
											},
											{
												"body": {
													"nativeSrc": "2353:136:9",
													"nodeType": "YulBlock",
													"src": "2353:136:9",
													"statements": [
														{
															"nativeSrc": "2363:46:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:9"
																},
																"nativeSrc": "2377:32:9",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:9"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:9",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:9"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:9"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:9"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:9"
																},
																"nativeSrc": "2418:65:9",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:9"
															},
															"nativeSrc": "2418:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:9"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:9",
														"nodeType": "YulTypedName",
														"src": "2339:4:9",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:9",
														"nodeType": "YulTypedName",
														"src": "2345:6:9",
														"type": ""
													}
												],
												"src": "2300:189:9"
											},
											{
												"body": {
													"nativeSrc": "2545:136:9",
													"nodeType": "YulBlock",
													"src": "2545:136:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:9",
																"nodeType": "YulBlock",
																"src": "2612:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:9",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:9"
																			},
																			"nativeSrc": "2626:39:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:9"
																		},
																		"nativeSrc": "2626:39:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:9"
																},
																"nativeSrc": "2562:14:9",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:9"
															},
															"nativeSrc": "2555:120:9",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:9",
																"nodeType": "YulBlock",
																"src": "2577:26:9",
																"statements": [
																	{
																		"nativeSrc": "2579:22:9",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:9"
																			},
																			"nativeSrc": "2588:13:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:9"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:9",
																"nodeType": "YulBlock",
																"src": "2559:2:9",
																"statements": []
															},
															"src": "2555:120:9"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:9",
														"nodeType": "YulTypedName",
														"src": "2533:5:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:9",
														"nodeType": "YulTypedName",
														"src": "2540:3:9",
														"type": ""
													}
												],
												"src": "2495:186:9"
											},
											{
												"body": {
													"nativeSrc": "2766:464:9",
													"nodeType": "YulBlock",
													"src": "2766:464:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:9",
																"nodeType": "YulBlock",
																"src": "2792:431:9",
																"statements": [
																	{
																		"nativeSrc": "2806:54:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:9"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:9",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:9"
																			},
																			"nativeSrc": "2822:38:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:9"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:9",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:9",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:9",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:9"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:9",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:9"
																					},
																					"nativeSrc": "2906:29:9",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:9"
																			},
																			"nativeSrc": "2892:44:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:9"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:9",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:9",
																			"nodeType": "YulBlock",
																			"src": "3093:27:9",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:9",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:9",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:9",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:9"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:9",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:9"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:9",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:9",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:9"
																			},
																			"nativeSrc": "3074:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:9"
																		},
																		"nativeSrc": "3071:49:9",
																		"nodeType": "YulIf",
																		"src": "3071:49:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:9",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:9",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:9"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:9",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:9"
																							},
																							"nativeSrc": "3189:22:9",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:9"
																					},
																					"nativeSrc": "3175:37:9",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:9"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:9",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:9"
																			},
																			"nativeSrc": "3133:80:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:9"
																		},
																		"nativeSrc": "3133:80:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:9"
																},
																"nativeSrc": "2780:11:9",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:9"
															},
															"nativeSrc": "2777:446:9",
															"nodeType": "YulIf",
															"src": "2777:446:9"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:9",
														"nodeType": "YulTypedName",
														"src": "2742:5:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:9",
														"nodeType": "YulTypedName",
														"src": "2749:3:9",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:9",
														"nodeType": "YulTypedName",
														"src": "2754:10:9",
														"type": ""
													}
												],
												"src": "2687:543:9"
											},
											{
												"body": {
													"nativeSrc": "3299:54:9",
													"nodeType": "YulBlock",
													"src": "3299:54:9",
													"statements": [
														{
															"nativeSrc": "3309:37:9",
															"nodeType": "YulAssignment",
															"src": "3309:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:9"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:9"
																},
																"nativeSrc": "3330:16:9",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:9"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:9",
														"nodeType": "YulTypedName",
														"src": "3274:4:9",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:9",
														"nodeType": "YulTypedName",
														"src": "3280:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:9",
														"nodeType": "YulTypedName",
														"src": "3290:8:9",
														"type": ""
													}
												],
												"src": "3236:117:9"
											},
											{
												"body": {
													"nativeSrc": "3410:118:9",
													"nodeType": "YulBlock",
													"src": "3410:118:9",
													"statements": [
														{
															"nativeSrc": "3420:68:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:9",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:9",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:9"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:9"
																				},
																				"nativeSrc": "3465:13:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:9",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:9"
																				},
																				"nativeSrc": "3480:6:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:9"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:9",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:9"
																		},
																		"nativeSrc": "3436:51:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:9"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:9"
																},
																"nativeSrc": "3432:56:9",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:9"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:9",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:9",
															"nodeType": "YulAssignment",
															"src": "3497:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:9"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:9"
																},
																"nativeSrc": "3507:15:9",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:9"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:9",
														"nodeType": "YulTypedName",
														"src": "3387:4:9",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:9",
														"nodeType": "YulTypedName",
														"src": "3393:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:9",
														"nodeType": "YulTypedName",
														"src": "3403:6:9",
														"type": ""
													}
												],
												"src": "3359:169:9"
											},
											{
												"body": {
													"nativeSrc": "3614:214:9",
													"nodeType": "YulBlock",
													"src": "3614:214:9",
													"statements": [
														{
															"nativeSrc": "3747:37:9",
															"nodeType": "YulAssignment",
															"src": "3747:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:9"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:9"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:9"
																},
																"nativeSrc": "3755:29:9",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:9"
																}
															]
														},
														{
															"nativeSrc": "3793:29:9",
															"nodeType": "YulAssignment",
															"src": "3793:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:9",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:9"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:9"
																		},
																		"nativeSrc": "3810:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:9"
																},
																"nativeSrc": "3801:21:9",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:9"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:9"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:9",
														"nodeType": "YulTypedName",
														"src": "3595:4:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:9",
														"nodeType": "YulTypedName",
														"src": "3601:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:9",
														"nodeType": "YulTypedName",
														"src": "3609:4:9",
														"type": ""
													}
												],
												"src": "3533:295:9"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:9",
													"nodeType": "YulBlock",
													"src": "3925:1303:9",
													"statements": [
														{
															"nativeSrc": "3936:51:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:9",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:9",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:9"
																},
																"nativeSrc": "3950:37:9",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:9"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:9",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:9",
																"nodeType": "YulBlock",
																"src": "4072:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:9"
																			},
																			"nativeSrc": "4074:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:9"
																		},
																		"nativeSrc": "4074:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:9",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:9"
																},
																"nativeSrc": "4041:30:9",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:9"
															},
															"nativeSrc": "4038:56:9",
															"nodeType": "YulIf",
															"src": "4038:56:9"
														},
														{
															"nativeSrc": "4104:52:9",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:9"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:9"
																		},
																		"nativeSrc": "4144:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:9"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:9",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:9"
																},
																"nativeSrc": "4118:38:9",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:9"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:9",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:9"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:9"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:9"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:9",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:9"
																},
																"nativeSrc": "4203:67:9",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:9"
															},
															"nativeSrc": "4203:67:9",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:9"
														},
														{
															"nativeSrc": "4280:18:9",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:9",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:9",
																"nodeType": "YulLiteral",
																"src": "4297:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:9",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:9",
															"nodeType": "YulAssignment",
															"src": "4308:17:9",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:9",
																"nodeType": "YulLiteral",
																"src": "4321:4:9",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:9"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:9",
																		"nodeType": "YulBlock",
																		"src": "4372:611:9",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:9"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:9",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:9",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:9"
																							},
																							"nativeSrc": "4413:9:9",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:9"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:9"
																					},
																					"nativeSrc": "4401:22:9",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:9"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:9",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:9"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:9",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:9"
																					},
																					"nativeSrc": "4451:37:9",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:9"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:9",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:9",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:9",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:9",
																					"nodeType": "YulBlock",
																					"src": "4569:163:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:9",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:9"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:9",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:9"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:9"
																												},
																												"nativeSrc": "4608:19:9",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:9"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:9",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:9"
																										},
																										"nativeSrc": "4602:26:9",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:9"
																								},
																								"nativeSrc": "4587:42:9",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:9"
																							},
																							"nativeSrc": "4587:42:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:9"
																						},
																						{
																							"nativeSrc": "4646:24:9",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:9",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:9"
																								},
																								"nativeSrc": "4656:14:9",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:9"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:9"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:9",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:9",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:9",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:9",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:9"
																								},
																								"nativeSrc": "4700:18:9",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:9"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:9",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:9",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:9"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:9"
																					},
																					"nativeSrc": "4532:14:9",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:9"
																				},
																				"nativeSrc": "4524:208:9",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:9",
																					"nodeType": "YulBlock",
																					"src": "4547:21:9",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:9",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:9",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:9",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:9",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:9"
																								},
																								"nativeSrc": "4554:12:9",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:9"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:9",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:9"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:9",
																					"nodeType": "YulBlock",
																					"src": "4528:3:9",
																					"statements": []
																				},
																				"src": "4524:208:9"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:9",
																					"nodeType": "YulBlock",
																					"src": "4768:156:9",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:9",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:9"
																										},
																										"nativeSrc": "4809:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:9"
																								},
																								"nativeSrc": "4803:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:9"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:9",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:9",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:9"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:9",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:9"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:9",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:9",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:9"
																												},
																												"nativeSrc": "4891:17:9",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:9"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:9",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:9"
																										},
																										"nativeSrc": "4861:48:9",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:9"
																								},
																								"nativeSrc": "4846:64:9",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:9"
																							},
																							"nativeSrc": "4846:64:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:9"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:9"
																					},
																					"nativeSrc": "4748:19:9",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:9"
																				},
																				"nativeSrc": "4745:179:9",
																				"nodeType": "YulIf",
																				"src": "4745:179:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:9",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:9"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:9",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:9",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:9",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:9"
																									},
																									"nativeSrc": "4954:14:9",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:9"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:9",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:9",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:9"
																							},
																							"nativeSrc": "4950:22:9",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:9"
																					},
																					"nativeSrc": "4937:36:9",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:9"
																				},
																				"nativeSrc": "4937:36:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:9"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:9",
																	"nodeType": "YulCase",
																	"src": "4365:618:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:9",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:9",
																		"nodeType": "YulBlock",
																		"src": "5000:222:9",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:9",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:9",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:9",
																					"nodeType": "YulBlock",
																					"src": "5051:67:9",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:9",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:9"
																										},
																										"nativeSrc": "5084:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:9"
																								},
																								"nativeSrc": "5078:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:9"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:9"
																				},
																				"nativeSrc": "5041:77:9",
																				"nodeType": "YulIf",
																				"src": "5041:77:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:9"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:9"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:9",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:9"
																							},
																							"nativeSrc": "5144:67:9",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:9"
																					},
																					"nativeSrc": "5131:81:9",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:9"
																				},
																				"nativeSrc": "5131:81:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:9"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:9",
																	"nodeType": "YulCase",
																	"src": "4992:230:9",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:9"
																},
																"nativeSrc": "4342:14:9",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:9"
															},
															"nativeSrc": "4335:887:9",
															"nodeType": "YulSwitch",
															"src": "4335:887:9"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:9",
														"nodeType": "YulTypedName",
														"src": "3914:4:9",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:9",
														"nodeType": "YulTypedName",
														"src": "3920:3:9",
														"type": ""
													}
												],
												"src": "3833:1395:9"
											},
											{
												"body": {
													"nativeSrc": "5279:81:9",
													"nodeType": "YulBlock",
													"src": "5279:81:9",
													"statements": [
														{
															"nativeSrc": "5289:65:9",
															"nodeType": "YulAssignment",
															"src": "5289:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5304:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "5304:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5311:42:9",
																		"nodeType": "YulLiteral",
																		"src": "5311:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5300:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5300:3:9"
																},
																"nativeSrc": "5300:54:9",
																"nodeType": "YulFunctionCall",
																"src": "5300:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5289:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "5289:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "5234:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5261:5:9",
														"nodeType": "YulTypedName",
														"src": "5261:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5271:7:9",
														"nodeType": "YulTypedName",
														"src": "5271:7:9",
														"type": ""
													}
												],
												"src": "5234:126:9"
											},
											{
												"body": {
													"nativeSrc": "5411:51:9",
													"nodeType": "YulBlock",
													"src": "5411:51:9",
													"statements": [
														{
															"nativeSrc": "5421:35:9",
															"nodeType": "YulAssignment",
															"src": "5421:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5450:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "5450:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5432:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "5432:17:9"
																},
																"nativeSrc": "5432:24:9",
																"nodeType": "YulFunctionCall",
																"src": "5432:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5421:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "5421:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "5366:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5393:5:9",
														"nodeType": "YulTypedName",
														"src": "5393:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5403:7:9",
														"nodeType": "YulTypedName",
														"src": "5403:7:9",
														"type": ""
													}
												],
												"src": "5366:96:9"
											},
											{
												"body": {
													"nativeSrc": "5533:53:9",
													"nodeType": "YulBlock",
													"src": "5533:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5550:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5550:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5573:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5573:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5555:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "5555:17:9"
																		},
																		"nativeSrc": "5555:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5555:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5543:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5543:6:9"
																},
																"nativeSrc": "5543:37:9",
																"nodeType": "YulFunctionCall",
																"src": "5543:37:9"
															},
															"nativeSrc": "5543:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "5543:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5468:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5521:5:9",
														"nodeType": "YulTypedName",
														"src": "5521:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5528:3:9",
														"nodeType": "YulTypedName",
														"src": "5528:3:9",
														"type": ""
													}
												],
												"src": "5468:118:9"
											},
											{
												"body": {
													"nativeSrc": "5690:124:9",
													"nodeType": "YulBlock",
													"src": "5690:124:9",
													"statements": [
														{
															"nativeSrc": "5700:26:9",
															"nodeType": "YulAssignment",
															"src": "5700:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5712:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5712:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5723:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5723:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5708:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5708:3:9"
																},
																"nativeSrc": "5708:18:9",
																"nodeType": "YulFunctionCall",
																"src": "5708:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5700:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5700:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5780:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5780:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5793:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5793:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5804:1:9",
																				"nodeType": "YulLiteral",
																				"src": "5804:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5789:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5789:3:9"
																		},
																		"nativeSrc": "5789:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5789:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5736:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "5736:43:9"
																},
																"nativeSrc": "5736:71:9",
																"nodeType": "YulFunctionCall",
																"src": "5736:71:9"
															},
															"nativeSrc": "5736:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "5736:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5592:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5662:9:9",
														"nodeType": "YulTypedName",
														"src": "5662:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5674:6:9",
														"nodeType": "YulTypedName",
														"src": "5674:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5685:4:9",
														"nodeType": "YulTypedName",
														"src": "5685:4:9",
														"type": ""
													}
												],
												"src": "5592:222:9"
											},
											{
												"body": {
													"nativeSrc": "5848:152:9",
													"nodeType": "YulBlock",
													"src": "5848:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5865:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5865:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5868:77:9",
																		"nodeType": "YulLiteral",
																		"src": "5868:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5858:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5858:6:9"
																},
																"nativeSrc": "5858:88:9",
																"nodeType": "YulFunctionCall",
																"src": "5858:88:9"
															},
															"nativeSrc": "5858:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "5858:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5962:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5962:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5965:4:9",
																		"nodeType": "YulLiteral",
																		"src": "5965:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5955:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5955:6:9"
																},
																"nativeSrc": "5955:15:9",
																"nodeType": "YulFunctionCall",
																"src": "5955:15:9"
															},
															"nativeSrc": "5955:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "5955:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5986:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5986:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5989:4:9",
																		"nodeType": "YulLiteral",
																		"src": "5989:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5979:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5979:6:9"
																},
																"nativeSrc": "5979:15:9",
																"nodeType": "YulFunctionCall",
																"src": "5979:15:9"
															},
															"nativeSrc": "5979:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "5979:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5820:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "5820:180:9"
											},
											{
												"body": {
													"nativeSrc": "6050:147:9",
													"nodeType": "YulBlock",
													"src": "6050:147:9",
													"statements": [
														{
															"nativeSrc": "6060:25:9",
															"nodeType": "YulAssignment",
															"src": "6060:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6083:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "6083:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6065:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "6065:17:9"
																},
																"nativeSrc": "6065:20:9",
																"nodeType": "YulFunctionCall",
																"src": "6065:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6060:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "6060:1:9"
																}
															]
														},
														{
															"nativeSrc": "6094:25:9",
															"nodeType": "YulAssignment",
															"src": "6094:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6117:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "6117:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6099:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "6099:17:9"
																},
																"nativeSrc": "6099:20:9",
																"nodeType": "YulFunctionCall",
																"src": "6099:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6094:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "6094:1:9"
																}
															]
														},
														{
															"nativeSrc": "6128:16:9",
															"nodeType": "YulAssignment",
															"src": "6128:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6139:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "6139:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6142:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "6142:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6135:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6135:3:9"
																},
																"nativeSrc": "6135:9:9",
																"nodeType": "YulFunctionCall",
																"src": "6135:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "6128:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6128:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6168:22:9",
																"nodeType": "YulBlock",
																"src": "6168:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6170:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "6170:16:9"
																			},
																			"nativeSrc": "6170:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6170:18:9"
																		},
																		"nativeSrc": "6170:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6170:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6160:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "6160:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "6163:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6163:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6157:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "6157:2:9"
																},
																"nativeSrc": "6157:10:9",
																"nodeType": "YulFunctionCall",
																"src": "6157:10:9"
															},
															"nativeSrc": "6154:36:9",
															"nodeType": "YulIf",
															"src": "6154:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "6006:191:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6037:1:9",
														"nodeType": "YulTypedName",
														"src": "6037:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6040:1:9",
														"nodeType": "YulTypedName",
														"src": "6040:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "6046:3:9",
														"nodeType": "YulTypedName",
														"src": "6046:3:9",
														"type": ""
													}
												],
												"src": "6006:191:9"
											},
											{
												"body": {
													"nativeSrc": "6268:53:9",
													"nodeType": "YulBlock",
													"src": "6268:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6285:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6285:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6308:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "6308:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "6290:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "6290:17:9"
																		},
																		"nativeSrc": "6290:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6290:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6278:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6278:6:9"
																},
																"nativeSrc": "6278:37:9",
																"nodeType": "YulFunctionCall",
																"src": "6278:37:9"
															},
															"nativeSrc": "6278:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "6278:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "6203:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6256:5:9",
														"nodeType": "YulTypedName",
														"src": "6256:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6263:3:9",
														"nodeType": "YulTypedName",
														"src": "6263:3:9",
														"type": ""
													}
												],
												"src": "6203:118:9"
											},
											{
												"body": {
													"nativeSrc": "6481:288:9",
													"nodeType": "YulBlock",
													"src": "6481:288:9",
													"statements": [
														{
															"nativeSrc": "6491:26:9",
															"nodeType": "YulAssignment",
															"src": "6491:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6503:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6503:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6514:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6514:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6499:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6499:3:9"
																},
																"nativeSrc": "6499:18:9",
																"nodeType": "YulFunctionCall",
																"src": "6499:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6491:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6491:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6571:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6571:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6584:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6584:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6595:1:9",
																				"nodeType": "YulLiteral",
																				"src": "6595:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6580:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6580:3:9"
																		},
																		"nativeSrc": "6580:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6580:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6527:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "6527:43:9"
																},
																"nativeSrc": "6527:71:9",
																"nodeType": "YulFunctionCall",
																"src": "6527:71:9"
															},
															"nativeSrc": "6527:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "6527:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6652:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6652:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6665:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6665:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6676:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6676:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6661:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6661:3:9"
																		},
																		"nativeSrc": "6661:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6661:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6608:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "6608:43:9"
																},
																"nativeSrc": "6608:72:9",
																"nodeType": "YulFunctionCall",
																"src": "6608:72:9"
															},
															"nativeSrc": "6608:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "6608:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6734:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6734:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6747:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6747:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6758:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6758:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6743:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6743:3:9"
																		},
																		"nativeSrc": "6743:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6743:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6690:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "6690:43:9"
																},
																"nativeSrc": "6690:72:9",
																"nodeType": "YulFunctionCall",
																"src": "6690:72:9"
															},
															"nativeSrc": "6690:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "6690:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6327:442:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6437:9:9",
														"nodeType": "YulTypedName",
														"src": "6437:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6449:6:9",
														"nodeType": "YulTypedName",
														"src": "6449:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6457:6:9",
														"nodeType": "YulTypedName",
														"src": "6457:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6465:6:9",
														"nodeType": "YulTypedName",
														"src": "6465:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6476:4:9",
														"nodeType": "YulTypedName",
														"src": "6476:4:9",
														"type": ""
													}
												],
												"src": "6327:442:9"
											},
											{
												"body": {
													"nativeSrc": "6873:124:9",
													"nodeType": "YulBlock",
													"src": "6873:124:9",
													"statements": [
														{
															"nativeSrc": "6883:26:9",
															"nodeType": "YulAssignment",
															"src": "6883:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6895:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6895:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6906:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6906:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6891:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6891:3:9"
																},
																"nativeSrc": "6891:18:9",
																"nodeType": "YulFunctionCall",
																"src": "6891:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6883:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6883:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6963:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6963:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6976:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6976:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6987:1:9",
																				"nodeType": "YulLiteral",
																				"src": "6987:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6972:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6972:3:9"
																		},
																		"nativeSrc": "6972:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6972:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6919:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "6919:43:9"
																},
																"nativeSrc": "6919:71:9",
																"nodeType": "YulFunctionCall",
																"src": "6919:71:9"
															},
															"nativeSrc": "6919:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "6919:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "6775:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6845:9:9",
														"nodeType": "YulTypedName",
														"src": "6845:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6857:6:9",
														"nodeType": "YulTypedName",
														"src": "6857:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6868:4:9",
														"nodeType": "YulTypedName",
														"src": "6868:4:9",
														"type": ""
													}
												],
												"src": "6775:222:9"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6E616D6500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x53594D0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x8F SWAP2 SWAP1 PUSH3 0x71F JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0xA1 SWAP2 SWAP1 PUSH3 0x71F JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x117 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x10E SWAP2 SWAP1 PUSH3 0x846 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x128 DUP2 PUSH3 0x14A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x144 CALLER PUSH9 0x3635C9ADC5DEA00000 PUSH3 0x20D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x92F JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x280 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x277 SWAP2 SWAP1 PUSH3 0x846 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x293 PUSH0 DUP4 DUP4 PUSH3 0x297 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x2EB JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x2DE SWAP2 SWAP1 PUSH3 0x88E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x3BC JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x377 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x36E SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x8D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x405 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x44F JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x4AE SWAP2 SWAP1 PUSH3 0x914 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x537 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x54D JUMPI PUSH3 0x54C PUSH3 0x4F2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x5B1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x574 JUMP JUMPDEST PUSH3 0x5BD DUP7 DUP4 PUSH3 0x574 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x607 PUSH3 0x601 PUSH3 0x5FB DUP5 PUSH3 0x5D5 JUMP JUMPDEST PUSH3 0x5DE JUMP JUMPDEST PUSH3 0x5D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x622 DUP4 PUSH3 0x5E7 JUMP JUMPDEST PUSH3 0x63A PUSH3 0x631 DUP3 PUSH3 0x60E JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x580 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x650 PUSH3 0x642 JUMP JUMPDEST PUSH3 0x65D DUP2 DUP5 DUP5 PUSH3 0x617 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x684 JUMPI PUSH3 0x678 PUSH0 DUP3 PUSH3 0x646 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x663 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x6D3 JUMPI PUSH3 0x69D DUP2 PUSH3 0x553 JUMP JUMPDEST PUSH3 0x6A8 DUP5 PUSH3 0x565 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x6B8 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x6D0 PUSH3 0x6C7 DUP6 PUSH3 0x565 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x662 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x6F5 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x6D8 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x70F DUP4 DUP4 PUSH3 0x6E4 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x72A DUP3 PUSH3 0x4BB JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x746 JUMPI PUSH3 0x745 PUSH3 0x4C5 JUMP JUMPDEST JUMPDEST PUSH3 0x752 DUP3 SLOAD PUSH3 0x51F JUMP JUMPDEST PUSH3 0x75F DUP3 DUP3 DUP6 PUSH3 0x688 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x795 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x780 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x78C DUP6 DUP3 PUSH3 0x702 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x7FB JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x7A5 DUP7 PUSH3 0x553 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x7CE JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x7A7 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x7EE JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x7EA PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x6E4 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x82E DUP3 PUSH3 0x803 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x840 DUP2 PUSH3 0x822 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x85B PUSH0 DUP4 ADD DUP5 PUSH3 0x835 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH3 0x89A DUP3 PUSH3 0x5D5 JUMP JUMPDEST SWAP2 POP PUSH3 0x8A7 DUP4 PUSH3 0x5D5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0x8C2 JUMPI PUSH3 0x8C1 PUSH3 0x861 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x8D3 DUP2 PUSH3 0x5D5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0x8EE PUSH0 DUP4 ADD DUP7 PUSH3 0x835 JUMP JUMPDEST PUSH3 0x8FD PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0x8C8 JUMP JUMPDEST PUSH3 0x90C PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0x8C8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x929 PUSH0 DUP4 ADD DUP5 PUSH3 0x8C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1069 DUP1 PUSH3 0x93D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x246 JUMPI PUSH2 0xB2 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x170 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBE PUSH2 0x262 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB SWAP2 SWAP1 PUSH2 0xCE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0xD93 JUMP JUMPDEST PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0xDEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x314 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0xE13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0xE2C JUMP JUMPDEST PUSH2 0x31D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0xDEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH2 0x34B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xE97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x185 SWAP2 SWAP1 PUSH2 0xEB0 JUMP JUMPDEST PUSH2 0x353 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0xE13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH2 0x398 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B2 PUSH2 0x3AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xEEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xCE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xD93 JUMP JUMPDEST PUSH2 0x463 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xDEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xF03 JUMP JUMPDEST PUSH2 0x485 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xE13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xEB0 JUMP JUMPDEST PUSH2 0x507 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x271 SWAP1 PUSH2 0xF6E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x29D SWAP1 PUSH2 0xF6E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2E8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2BF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2E8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2CB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2FC PUSH2 0x58B JUMP JUMPDEST SWAP1 POP PUSH2 0x309 DUP2 DUP6 DUP6 PUSH2 0x592 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x327 PUSH2 0x58B JUMP JUMPDEST SWAP1 POP PUSH2 0x334 DUP6 DUP3 DUP6 PUSH2 0x5A4 JUMP JUMPDEST PUSH2 0x33F DUP6 DUP6 DUP6 PUSH2 0x636 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A0 PUSH2 0x726 JUMP JUMPDEST PUSH2 0x3A9 PUSH0 PUSH2 0x7AD JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3E2 SWAP1 PUSH2 0xF6E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x40E SWAP1 PUSH2 0xF6E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x459 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x430 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x459 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x43C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x46D PUSH2 0x58B JUMP JUMPDEST SWAP1 POP PUSH2 0x47A DUP2 DUP6 DUP6 PUSH2 0x636 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x50F PUSH2 0x726 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x57F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP2 SWAP1 PUSH2 0xEEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x588 DUP2 PUSH2 0x7AD JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x59F DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x870 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5AF DUP5 DUP5 PUSH2 0x485 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x630 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x621 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x618 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x62F DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x870 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6A6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69D SWAP2 SWAP1 PUSH2 0xEEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x716 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70D SWAP2 SWAP1 PUSH2 0xEEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x721 DUP4 DUP4 DUP4 PUSH2 0xA3F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x72E PUSH2 0x58B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x74C PUSH2 0x3AB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7AB JUMPI PUSH2 0x76F PUSH2 0x58B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A2 SWAP2 SWAP1 PUSH2 0xEEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8E0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D7 SWAP2 SWAP1 PUSH2 0xEEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x950 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x947 SWAP2 SWAP1 PUSH2 0xEEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xA39 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xA30 SWAP2 SWAP1 PUSH2 0xE13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA8F JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA83 SWAP2 SWAP1 PUSH2 0x1000 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xB5D JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xB18 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBA4 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xBEE JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xC4B SWAP2 SWAP1 PUSH2 0xE13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC8F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC74 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCB4 DUP3 PUSH2 0xC58 JUMP JUMPDEST PUSH2 0xCBE DUP2 DUP6 PUSH2 0xC62 JUMP JUMPDEST SWAP4 POP PUSH2 0xCCE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xC72 JUMP JUMPDEST PUSH2 0xCD7 DUP2 PUSH2 0xC9A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xCFA DUP2 DUP5 PUSH2 0xCAA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD2F DUP3 PUSH2 0xD06 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD3F DUP2 PUSH2 0xD25 JUMP JUMPDEST DUP2 EQ PUSH2 0xD49 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD5A DUP2 PUSH2 0xD36 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD72 DUP2 PUSH2 0xD60 JUMP JUMPDEST DUP2 EQ PUSH2 0xD7C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD8D DUP2 PUSH2 0xD69 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDA9 JUMPI PUSH2 0xDA8 PUSH2 0xD02 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDB6 DUP6 DUP3 DUP7 ADD PUSH2 0xD4C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xDC7 DUP6 DUP3 DUP7 ADD PUSH2 0xD7F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDE5 DUP2 PUSH2 0xDD1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDFE PUSH0 DUP4 ADD DUP5 PUSH2 0xDDC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE0D DUP2 PUSH2 0xD60 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE26 PUSH0 DUP4 ADD DUP5 PUSH2 0xE04 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE43 JUMPI PUSH2 0xE42 PUSH2 0xD02 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE50 DUP7 DUP3 DUP8 ADD PUSH2 0xD4C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xE61 DUP7 DUP3 DUP8 ADD PUSH2 0xD4C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xE72 DUP7 DUP3 DUP8 ADD PUSH2 0xD7F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE91 DUP2 PUSH2 0xE7C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEAA PUSH0 DUP4 ADD DUP5 PUSH2 0xE88 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEC5 JUMPI PUSH2 0xEC4 PUSH2 0xD02 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xED2 DUP5 DUP3 DUP6 ADD PUSH2 0xD4C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEE4 DUP2 PUSH2 0xD25 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEFD PUSH0 DUP4 ADD DUP5 PUSH2 0xEDB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF19 JUMPI PUSH2 0xF18 PUSH2 0xD02 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF26 DUP6 DUP3 DUP7 ADD PUSH2 0xD4C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF37 DUP6 DUP3 DUP7 ADD PUSH2 0xD4C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xF85 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF98 JUMPI PUSH2 0xF97 PUSH2 0xF41 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xFB1 PUSH0 DUP4 ADD DUP7 PUSH2 0xEDB JUMP JUMPDEST PUSH2 0xFBE PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xE04 JUMP JUMPDEST PUSH2 0xFCB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xE04 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x100A DUP3 PUSH2 0xD60 JUMP JUMPDEST SWAP2 POP PUSH2 0x1015 DUP4 PUSH2 0xD60 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x102D JUMPI PUSH2 0x102C PUSH2 0xFD3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPI LOG0 CREATE2 SLOAD PUSH0 EXTCODECOPY 0xD6 EXP MUL DUP10 PUSH28 0x77E6FEC30DBB26EC4CFDAF51DAB37BDD2951E57F9064736F6C634300 ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "174:211:7:-:0;;;215:167;;;;;;;;;;258:10;1896:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;281:34:7::2;287:10;299:15;281:5;;;:34;;:::i;:::-;174:211:::0;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7721:208:2:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;;;:35;;:::i;:::-;7721:208;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;7:99:9:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:126::-;5271:7;5311:42;5304:5;5300:54;5289:65;;5234:126;;;:::o;5366:96::-;5403:7;5432:24;5450:5;5432:24;:::i;:::-;5421:35;;5366:96;;;:::o;5468:118::-;5555:24;5573:5;5555:24;:::i;:::-;5550:3;5543:37;5468:118;;:::o;5592:222::-;5685:4;5723:2;5712:9;5708:18;5700:26;;5736:71;5804:1;5793:9;5789:17;5780:6;5736:71;:::i;:::-;5592:222;;;;:::o;5820:180::-;5868:77;5865:1;5858:88;5965:4;5962:1;5955:15;5989:4;5986:1;5979:15;6006:191;6046:3;6065:20;6083:1;6065:20;:::i;:::-;6060:25;;6099:20;6117:1;6099:20;:::i;:::-;6094:25;;6142:1;6139;6135:9;6128:16;;6163:3;6160:1;6157:10;6154:36;;;6170:18;;:::i;:::-;6154:36;6006:191;;;;:::o;6203:118::-;6290:24;6308:5;6290:24;:::i;:::-;6285:3;6278:37;6203:118;;:::o;6327:442::-;6476:4;6514:2;6503:9;6499:18;6491:26;;6527:71;6595:1;6584:9;6580:17;6571:6;6527:71;:::i;:::-;6608:72;6676:2;6665:9;6661:18;6652:6;6608:72;:::i;:::-;6690;6758:2;6747:9;6743:18;6734:6;6690:72;:::i;:::-;6327:442;;;;;;:::o;6775:222::-;6868:4;6906:2;6895:9;6891:18;6883:26;;6919:71;6987:1;6976:9;6972:17;6963:6;6919:71;:::i;:::-;6775:222;;;;:::o;174:211:7:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 1426,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 2160,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 1830,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": 1419,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 1444,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 1965,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 1590,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 2623,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 1157,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 754,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 851,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_363": {
									"entryPoint": 843,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@name_345": {
									"entryPoint": 610,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 939,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 920,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 979,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": 788,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 797,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 1287,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 1123,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3404,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3455,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3760,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3843,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3628,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3803,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3548,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3242,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3588,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 3720,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3818,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3998,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3563,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3298,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3603,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 3735,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3160,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3170,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4096,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3365,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3537,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3334,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3424,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3708,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3186,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 3950,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4051,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 3905,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3330,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3226,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 3382,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3433,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7360:9",
										"nodeType": "YulBlock",
										"src": "0:7360:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:9",
													"nodeType": "YulBlock",
													"src": "66:40:9",
													"statements": [
														{
															"nativeSrc": "77:22:9",
															"nodeType": "YulAssignment",
															"src": "77:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:9"
																},
																"nativeSrc": "87:12:9",
																"nodeType": "YulFunctionCall",
																"src": "87:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:9",
														"nodeType": "YulTypedName",
														"src": "49:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:9",
														"nodeType": "YulTypedName",
														"src": "59:6:9",
														"type": ""
													}
												],
												"src": "7:99:9"
											},
											{
												"body": {
													"nativeSrc": "208:73:9",
													"nodeType": "YulBlock",
													"src": "208:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:9"
																},
																"nativeSrc": "218:19:9",
																"nodeType": "YulFunctionCall",
																"src": "218:19:9"
															},
															"nativeSrc": "218:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:9"
														},
														{
															"nativeSrc": "246:29:9",
															"nodeType": "YulAssignment",
															"src": "246:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:9",
																		"nodeType": "YulLiteral",
																		"src": "270:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:9"
																},
																"nativeSrc": "261:14:9",
																"nodeType": "YulFunctionCall",
																"src": "261:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:9",
														"nodeType": "YulTypedName",
														"src": "180:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:9",
														"nodeType": "YulTypedName",
														"src": "185:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:9",
														"nodeType": "YulTypedName",
														"src": "196:11:9",
														"type": ""
													}
												],
												"src": "112:169:9"
											},
											{
												"body": {
													"nativeSrc": "349:184:9",
													"nodeType": "YulBlock",
													"src": "349:184:9",
													"statements": [
														{
															"nativeSrc": "359:10:9",
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:9",
															"value": {
																"kind": "number",
																"nativeSrc": "368:1:9",
																"nodeType": "YulLiteral",
																"src": "368:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "363:1:9",
																	"nodeType": "YulTypedName",
																	"src": "363:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "428:63:9",
																"nodeType": "YulBlock",
																"src": "428:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "453:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:9"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "458:1:9",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "449:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:9"
																					},
																					"nativeSrc": "449:11:9",
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "472:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:9"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "477:1:9",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "468:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:9"
																							},
																							"nativeSrc": "468:11:9",
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "462:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:9"
																					},
																					"nativeSrc": "462:18:9",
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "442:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:9"
																			},
																			"nativeSrc": "442:39:9",
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:9"
																		},
																		"nativeSrc": "442:39:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "389:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "392:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "386:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:9"
																},
																"nativeSrc": "386:13:9",
																"nodeType": "YulFunctionCall",
																"src": "386:13:9"
															},
															"nativeSrc": "378:113:9",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "400:19:9",
																"nodeType": "YulBlock",
																"src": "400:19:9",
																"statements": [
																	{
																		"nativeSrc": "402:15:9",
																		"nodeType": "YulAssignment",
																		"src": "402:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "411:1:9",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "414:2:9",
																					"nodeType": "YulLiteral",
																					"src": "414:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "407:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:9"
																			},
																			"nativeSrc": "407:10:9",
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "402:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "382:3:9",
																"nodeType": "YulBlock",
																"src": "382:3:9",
																"statements": []
															},
															"src": "378:113:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "511:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:9"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "516:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "507:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:9"
																		},
																		"nativeSrc": "507:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "525:1:9",
																		"nodeType": "YulLiteral",
																		"src": "525:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "500:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:9"
																},
																"nativeSrc": "500:27:9",
																"nodeType": "YulFunctionCall",
																"src": "500:27:9"
															},
															"nativeSrc": "500:27:9",
															"nodeType": "YulExpressionStatement",
															"src": "500:27:9"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:246:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:9",
														"nodeType": "YulTypedName",
														"src": "331:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:9",
														"nodeType": "YulTypedName",
														"src": "336:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:9",
														"nodeType": "YulTypedName",
														"src": "341:6:9",
														"type": ""
													}
												],
												"src": "287:246:9"
											},
											{
												"body": {
													"nativeSrc": "587:54:9",
													"nodeType": "YulBlock",
													"src": "587:54:9",
													"statements": [
														{
															"nativeSrc": "597:38:9",
															"nodeType": "YulAssignment",
															"src": "597:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "615:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "622:2:9",
																				"nodeType": "YulLiteral",
																				"src": "622:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "611:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:9"
																		},
																		"nativeSrc": "611:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "631:2:9",
																				"nodeType": "YulLiteral",
																				"src": "631:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "627:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:9"
																		},
																		"nativeSrc": "627:7:9",
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "607:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:9"
																},
																"nativeSrc": "607:28:9",
																"nodeType": "YulFunctionCall",
																"src": "607:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "597:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "539:102:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "570:5:9",
														"nodeType": "YulTypedName",
														"src": "570:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "580:6:9",
														"nodeType": "YulTypedName",
														"src": "580:6:9",
														"type": ""
													}
												],
												"src": "539:102:9"
											},
											{
												"body": {
													"nativeSrc": "739:285:9",
													"nodeType": "YulBlock",
													"src": "739:285:9",
													"statements": [
														{
															"nativeSrc": "749:53:9",
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "796:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "763:32:9",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:9"
																},
																"nativeSrc": "763:39:9",
																"nodeType": "YulFunctionCall",
																"src": "763:39:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "753:6:9",
																	"nodeType": "YulTypedName",
																	"src": "753:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "811:78:9",
															"nodeType": "YulAssignment",
															"src": "811:78:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "877:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "882:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "818:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:9"
																},
																"nativeSrc": "818:71:9",
																"nodeType": "YulFunctionCall",
																"src": "818:71:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "811:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "937:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "944:4:9",
																				"nodeType": "YulLiteral",
																				"src": "944:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "933:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:9"
																		},
																		"nativeSrc": "933:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "951:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "956:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "898:34:9",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:9"
																},
																"nativeSrc": "898:65:9",
																"nodeType": "YulFunctionCall",
																"src": "898:65:9"
															},
															"nativeSrc": "898:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "898:65:9"
														},
														{
															"nativeSrc": "972:46:9",
															"nodeType": "YulAssignment",
															"src": "972:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "983:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1010:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "988:21:9",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:9"
																		},
																		"nativeSrc": "988:29:9",
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "979:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:9"
																},
																"nativeSrc": "979:39:9",
																"nodeType": "YulFunctionCall",
																"src": "979:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "972:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "647:377:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "720:5:9",
														"nodeType": "YulTypedName",
														"src": "720:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "727:3:9",
														"nodeType": "YulTypedName",
														"src": "727:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "735:3:9",
														"nodeType": "YulTypedName",
														"src": "735:3:9",
														"type": ""
													}
												],
												"src": "647:377:9"
											},
											{
												"body": {
													"nativeSrc": "1148:195:9",
													"nodeType": "YulBlock",
													"src": "1148:195:9",
													"statements": [
														{
															"nativeSrc": "1158:26:9",
															"nodeType": "YulAssignment",
															"src": "1158:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1170:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1181:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1166:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:9"
																},
																"nativeSrc": "1166:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1166:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1158:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1205:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1216:1:9",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1201:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:9"
																		},
																		"nativeSrc": "1201:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1224:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1230:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1220:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:9"
																		},
																		"nativeSrc": "1220:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1194:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:9"
																},
																"nativeSrc": "1194:47:9",
																"nodeType": "YulFunctionCall",
																"src": "1194:47:9"
															},
															"nativeSrc": "1194:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:9"
														},
														{
															"nativeSrc": "1250:86:9",
															"nodeType": "YulAssignment",
															"src": "1250:86:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1322:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:9"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1331:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1258:63:9",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:9"
																},
																"nativeSrc": "1258:78:9",
																"nodeType": "YulFunctionCall",
																"src": "1258:78:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1250:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1030:313:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1120:9:9",
														"nodeType": "YulTypedName",
														"src": "1120:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1132:6:9",
														"nodeType": "YulTypedName",
														"src": "1132:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1143:4:9",
														"nodeType": "YulTypedName",
														"src": "1143:4:9",
														"type": ""
													}
												],
												"src": "1030:313:9"
											},
											{
												"body": {
													"nativeSrc": "1389:35:9",
													"nodeType": "YulBlock",
													"src": "1389:35:9",
													"statements": [
														{
															"nativeSrc": "1399:19:9",
															"nodeType": "YulAssignment",
															"src": "1399:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1415:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1409:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:9"
																},
																"nativeSrc": "1409:9:9",
																"nodeType": "YulFunctionCall",
																"src": "1409:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1399:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1349:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1382:6:9",
														"nodeType": "YulTypedName",
														"src": "1382:6:9",
														"type": ""
													}
												],
												"src": "1349:75:9"
											},
											{
												"body": {
													"nativeSrc": "1519:28:9",
													"nodeType": "YulBlock",
													"src": "1519:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1536:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1539:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1529:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:9"
																},
																"nativeSrc": "1529:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1529:12:9"
															},
															"nativeSrc": "1529:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1430:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:9"
											},
											{
												"body": {
													"nativeSrc": "1642:28:9",
													"nodeType": "YulBlock",
													"src": "1642:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:9"
																},
																"nativeSrc": "1652:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1652:12:9"
															},
															"nativeSrc": "1652:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1553:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:9"
											},
											{
												"body": {
													"nativeSrc": "1721:81:9",
													"nodeType": "YulBlock",
													"src": "1721:81:9",
													"statements": [
														{
															"nativeSrc": "1731:65:9",
															"nodeType": "YulAssignment",
															"src": "1731:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1746:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1753:42:9",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1742:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:9"
																},
																"nativeSrc": "1742:54:9",
																"nodeType": "YulFunctionCall",
																"src": "1742:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1731:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1676:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1703:5:9",
														"nodeType": "YulTypedName",
														"src": "1703:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1713:7:9",
														"nodeType": "YulTypedName",
														"src": "1713:7:9",
														"type": ""
													}
												],
												"src": "1676:126:9"
											},
											{
												"body": {
													"nativeSrc": "1853:51:9",
													"nodeType": "YulBlock",
													"src": "1853:51:9",
													"statements": [
														{
															"nativeSrc": "1863:35:9",
															"nodeType": "YulAssignment",
															"src": "1863:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1892:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1874:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:9"
																},
																"nativeSrc": "1874:24:9",
																"nodeType": "YulFunctionCall",
																"src": "1874:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1863:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1808:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1835:5:9",
														"nodeType": "YulTypedName",
														"src": "1835:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1845:7:9",
														"nodeType": "YulTypedName",
														"src": "1845:7:9",
														"type": ""
													}
												],
												"src": "1808:96:9"
											},
											{
												"body": {
													"nativeSrc": "1953:79:9",
													"nodeType": "YulBlock",
													"src": "1953:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2010:16:9",
																"nodeType": "YulBlock",
																"src": "2010:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2019:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2022:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2012:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:9"
																			},
																			"nativeSrc": "2012:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:9"
																		},
																		"nativeSrc": "2012:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1976:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2001:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1983:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:9"
																				},
																				"nativeSrc": "1983:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1973:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:9"
																		},
																		"nativeSrc": "1973:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1966:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:9"
																},
																"nativeSrc": "1966:43:9",
																"nodeType": "YulFunctionCall",
																"src": "1966:43:9"
															},
															"nativeSrc": "1963:63:9",
															"nodeType": "YulIf",
															"src": "1963:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1910:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1946:5:9",
														"nodeType": "YulTypedName",
														"src": "1946:5:9",
														"type": ""
													}
												],
												"src": "1910:122:9"
											},
											{
												"body": {
													"nativeSrc": "2090:87:9",
													"nodeType": "YulBlock",
													"src": "2090:87:9",
													"statements": [
														{
															"nativeSrc": "2100:29:9",
															"nodeType": "YulAssignment",
															"src": "2100:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2122:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2109:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:9"
																},
																"nativeSrc": "2109:20:9",
																"nodeType": "YulFunctionCall",
																"src": "2109:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2100:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2165:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2138:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:9"
																},
																"nativeSrc": "2138:33:9",
																"nodeType": "YulFunctionCall",
																"src": "2138:33:9"
															},
															"nativeSrc": "2138:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2038:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2068:6:9",
														"nodeType": "YulTypedName",
														"src": "2068:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2076:3:9",
														"nodeType": "YulTypedName",
														"src": "2076:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2084:5:9",
														"nodeType": "YulTypedName",
														"src": "2084:5:9",
														"type": ""
													}
												],
												"src": "2038:139:9"
											},
											{
												"body": {
													"nativeSrc": "2228:32:9",
													"nodeType": "YulBlock",
													"src": "2228:32:9",
													"statements": [
														{
															"nativeSrc": "2238:16:9",
															"nodeType": "YulAssignment",
															"src": "2238:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "2249:5:9",
																"nodeType": "YulIdentifier",
																"src": "2249:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2238:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2183:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2210:5:9",
														"nodeType": "YulTypedName",
														"src": "2210:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2220:7:9",
														"nodeType": "YulTypedName",
														"src": "2220:7:9",
														"type": ""
													}
												],
												"src": "2183:77:9"
											},
											{
												"body": {
													"nativeSrc": "2309:79:9",
													"nodeType": "YulBlock",
													"src": "2309:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2366:16:9",
																"nodeType": "YulBlock",
																"src": "2366:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2375:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2378:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2368:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:9"
																			},
																			"nativeSrc": "2368:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:9"
																		},
																		"nativeSrc": "2368:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2332:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2357:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2339:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:9"
																				},
																				"nativeSrc": "2339:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2329:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:9"
																		},
																		"nativeSrc": "2329:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2322:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:9"
																},
																"nativeSrc": "2322:43:9",
																"nodeType": "YulFunctionCall",
																"src": "2322:43:9"
															},
															"nativeSrc": "2319:63:9",
															"nodeType": "YulIf",
															"src": "2319:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2266:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2302:5:9",
														"nodeType": "YulTypedName",
														"src": "2302:5:9",
														"type": ""
													}
												],
												"src": "2266:122:9"
											},
											{
												"body": {
													"nativeSrc": "2446:87:9",
													"nodeType": "YulBlock",
													"src": "2446:87:9",
													"statements": [
														{
															"nativeSrc": "2456:29:9",
															"nodeType": "YulAssignment",
															"src": "2456:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2478:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2465:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:9"
																},
																"nativeSrc": "2465:20:9",
																"nodeType": "YulFunctionCall",
																"src": "2465:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2456:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2521:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2494:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:9"
																},
																"nativeSrc": "2494:33:9",
																"nodeType": "YulFunctionCall",
																"src": "2494:33:9"
															},
															"nativeSrc": "2494:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2394:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2424:6:9",
														"nodeType": "YulTypedName",
														"src": "2424:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2432:3:9",
														"nodeType": "YulTypedName",
														"src": "2432:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2440:5:9",
														"nodeType": "YulTypedName",
														"src": "2440:5:9",
														"type": ""
													}
												],
												"src": "2394:139:9"
											},
											{
												"body": {
													"nativeSrc": "2622:391:9",
													"nodeType": "YulBlock",
													"src": "2622:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2668:83:9",
																"nodeType": "YulBlock",
																"src": "2668:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2670:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:9"
																			},
																			"nativeSrc": "2670:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:9"
																		},
																		"nativeSrc": "2670:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2643:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2652:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2639:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:9"
																		},
																		"nativeSrc": "2639:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2664:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2635:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:9"
																},
																"nativeSrc": "2635:32:9",
																"nodeType": "YulFunctionCall",
																"src": "2635:32:9"
															},
															"nativeSrc": "2632:119:9",
															"nodeType": "YulIf",
															"src": "2632:119:9"
														},
														{
															"nativeSrc": "2761:117:9",
															"nodeType": "YulBlock",
															"src": "2761:117:9",
															"statements": [
																{
																	"nativeSrc": "2776:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2790:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2780:6:9",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2805:63:9",
																	"nodeType": "YulAssignment",
																	"src": "2805:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2840:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2851:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2836:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:9"
																				},
																				"nativeSrc": "2836:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2860:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2815:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:9"
																		},
																		"nativeSrc": "2815:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2805:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2888:118:9",
															"nodeType": "YulBlock",
															"src": "2888:118:9",
															"statements": [
																{
																	"nativeSrc": "2903:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2917:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2907:6:9",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2933:63:9",
																	"nodeType": "YulAssignment",
																	"src": "2933:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2968:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2979:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2964:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:9"
																				},
																				"nativeSrc": "2964:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2988:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2943:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:9"
																		},
																		"nativeSrc": "2943:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2933:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2539:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2584:9:9",
														"nodeType": "YulTypedName",
														"src": "2584:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2595:7:9",
														"nodeType": "YulTypedName",
														"src": "2595:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2607:6:9",
														"nodeType": "YulTypedName",
														"src": "2607:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2615:6:9",
														"nodeType": "YulTypedName",
														"src": "2615:6:9",
														"type": ""
													}
												],
												"src": "2539:474:9"
											},
											{
												"body": {
													"nativeSrc": "3061:48:9",
													"nodeType": "YulBlock",
													"src": "3061:48:9",
													"statements": [
														{
															"nativeSrc": "3071:32:9",
															"nodeType": "YulAssignment",
															"src": "3071:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3096:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3089:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:9"
																		},
																		"nativeSrc": "3089:13:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3082:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:9"
																},
																"nativeSrc": "3082:21:9",
																"nodeType": "YulFunctionCall",
																"src": "3082:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3071:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3019:90:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3043:5:9",
														"nodeType": "YulTypedName",
														"src": "3043:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3053:7:9",
														"nodeType": "YulTypedName",
														"src": "3053:7:9",
														"type": ""
													}
												],
												"src": "3019:90:9"
											},
											{
												"body": {
													"nativeSrc": "3174:50:9",
													"nodeType": "YulBlock",
													"src": "3174:50:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3191:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3211:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3196:14:9",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:9"
																		},
																		"nativeSrc": "3196:21:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3184:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:9"
																},
																"nativeSrc": "3184:34:9",
																"nodeType": "YulFunctionCall",
																"src": "3184:34:9"
															},
															"nativeSrc": "3184:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:9"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3115:109:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3162:5:9",
														"nodeType": "YulTypedName",
														"src": "3162:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3169:3:9",
														"nodeType": "YulTypedName",
														"src": "3169:3:9",
														"type": ""
													}
												],
												"src": "3115:109:9"
											},
											{
												"body": {
													"nativeSrc": "3322:118:9",
													"nodeType": "YulBlock",
													"src": "3322:118:9",
													"statements": [
														{
															"nativeSrc": "3332:26:9",
															"nodeType": "YulAssignment",
															"src": "3332:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3344:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3355:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3340:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:9"
																},
																"nativeSrc": "3340:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3340:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3332:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3406:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3419:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3430:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3415:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:9"
																		},
																		"nativeSrc": "3415:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3368:37:9",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:9"
																},
																"nativeSrc": "3368:65:9",
																"nodeType": "YulFunctionCall",
																"src": "3368:65:9"
															},
															"nativeSrc": "3368:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3230:210:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3294:9:9",
														"nodeType": "YulTypedName",
														"src": "3294:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3306:6:9",
														"nodeType": "YulTypedName",
														"src": "3306:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3317:4:9",
														"nodeType": "YulTypedName",
														"src": "3317:4:9",
														"type": ""
													}
												],
												"src": "3230:210:9"
											},
											{
												"body": {
													"nativeSrc": "3511:53:9",
													"nodeType": "YulBlock",
													"src": "3511:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3528:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3528:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3551:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3551:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3533:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "3533:17:9"
																		},
																		"nativeSrc": "3533:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3533:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3521:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:9"
																},
																"nativeSrc": "3521:37:9",
																"nodeType": "YulFunctionCall",
																"src": "3521:37:9"
															},
															"nativeSrc": "3521:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "3521:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3446:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3499:5:9",
														"nodeType": "YulTypedName",
														"src": "3499:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3506:3:9",
														"nodeType": "YulTypedName",
														"src": "3506:3:9",
														"type": ""
													}
												],
												"src": "3446:118:9"
											},
											{
												"body": {
													"nativeSrc": "3668:124:9",
													"nodeType": "YulBlock",
													"src": "3668:124:9",
													"statements": [
														{
															"nativeSrc": "3678:26:9",
															"nodeType": "YulAssignment",
															"src": "3678:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3690:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3690:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3701:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3701:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3686:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:9"
																},
																"nativeSrc": "3686:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3686:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3678:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3678:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3758:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3771:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3782:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3767:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:9"
																		},
																		"nativeSrc": "3767:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3714:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "3714:43:9"
																},
																"nativeSrc": "3714:71:9",
																"nodeType": "YulFunctionCall",
																"src": "3714:71:9"
															},
															"nativeSrc": "3714:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "3714:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3570:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3640:9:9",
														"nodeType": "YulTypedName",
														"src": "3640:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3652:6:9",
														"nodeType": "YulTypedName",
														"src": "3652:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3663:4:9",
														"nodeType": "YulTypedName",
														"src": "3663:4:9",
														"type": ""
													}
												],
												"src": "3570:222:9"
											},
											{
												"body": {
													"nativeSrc": "3898:519:9",
													"nodeType": "YulBlock",
													"src": "3898:519:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3944:83:9",
																"nodeType": "YulBlock",
																"src": "3944:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3946:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "3946:77:9"
																			},
																			"nativeSrc": "3946:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3946:79:9"
																		},
																		"nativeSrc": "3946:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3946:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3919:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3928:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3915:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:9"
																		},
																		"nativeSrc": "3915:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3915:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3940:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3911:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:9"
																},
																"nativeSrc": "3911:32:9",
																"nodeType": "YulFunctionCall",
																"src": "3911:32:9"
															},
															"nativeSrc": "3908:119:9",
															"nodeType": "YulIf",
															"src": "3908:119:9"
														},
														{
															"nativeSrc": "4037:117:9",
															"nodeType": "YulBlock",
															"src": "4037:117:9",
															"statements": [
																{
																	"nativeSrc": "4052:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4052:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4066:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4056:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4056:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4081:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4081:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4116:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4127:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4112:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:9"
																				},
																				"nativeSrc": "4112:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4136:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4091:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4091:20:9"
																		},
																		"nativeSrc": "4091:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4091:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4081:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4164:118:9",
															"nodeType": "YulBlock",
															"src": "4164:118:9",
															"statements": [
																{
																	"nativeSrc": "4179:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4179:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4193:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4183:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4183:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4209:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4209:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4244:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4255:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4240:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:9"
																				},
																				"nativeSrc": "4240:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4264:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4219:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:9"
																		},
																		"nativeSrc": "4219:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4209:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4292:118:9",
															"nodeType": "YulBlock",
															"src": "4292:118:9",
															"statements": [
																{
																	"nativeSrc": "4307:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4321:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4311:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4337:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4337:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4372:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4383:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4368:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:9"
																				},
																				"nativeSrc": "4368:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4392:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4347:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:9"
																		},
																		"nativeSrc": "4347:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4337:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3798:619:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3852:9:9",
														"nodeType": "YulTypedName",
														"src": "3852:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3863:7:9",
														"nodeType": "YulTypedName",
														"src": "3863:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3875:6:9",
														"nodeType": "YulTypedName",
														"src": "3875:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3883:6:9",
														"nodeType": "YulTypedName",
														"src": "3883:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3891:6:9",
														"nodeType": "YulTypedName",
														"src": "3891:6:9",
														"type": ""
													}
												],
												"src": "3798:619:9"
											},
											{
												"body": {
													"nativeSrc": "4466:43:9",
													"nodeType": "YulBlock",
													"src": "4466:43:9",
													"statements": [
														{
															"nativeSrc": "4476:27:9",
															"nodeType": "YulAssignment",
															"src": "4476:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4491:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "4491:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4498:4:9",
																		"nodeType": "YulLiteral",
																		"src": "4498:4:9",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4487:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:9"
																},
																"nativeSrc": "4487:16:9",
																"nodeType": "YulFunctionCall",
																"src": "4487:16:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4476:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "4476:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4423:86:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4448:5:9",
														"nodeType": "YulTypedName",
														"src": "4448:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4458:7:9",
														"nodeType": "YulTypedName",
														"src": "4458:7:9",
														"type": ""
													}
												],
												"src": "4423:86:9"
											},
											{
												"body": {
													"nativeSrc": "4576:51:9",
													"nodeType": "YulBlock",
													"src": "4576:51:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4593:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4593:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4614:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "4614:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4598:15:9",
																			"nodeType": "YulIdentifier",
																			"src": "4598:15:9"
																		},
																		"nativeSrc": "4598:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4598:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4586:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4586:6:9"
																},
																"nativeSrc": "4586:35:9",
																"nodeType": "YulFunctionCall",
																"src": "4586:35:9"
															},
															"nativeSrc": "4586:35:9",
															"nodeType": "YulExpressionStatement",
															"src": "4586:35:9"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4515:112:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4564:5:9",
														"nodeType": "YulTypedName",
														"src": "4564:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4571:3:9",
														"nodeType": "YulTypedName",
														"src": "4571:3:9",
														"type": ""
													}
												],
												"src": "4515:112:9"
											},
											{
												"body": {
													"nativeSrc": "4727:120:9",
													"nodeType": "YulBlock",
													"src": "4727:120:9",
													"statements": [
														{
															"nativeSrc": "4737:26:9",
															"nodeType": "YulAssignment",
															"src": "4737:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4749:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4749:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4760:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4760:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4745:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4745:3:9"
																},
																"nativeSrc": "4745:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4745:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4737:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4737:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4813:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4813:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4826:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4837:1:9",
																				"nodeType": "YulLiteral",
																				"src": "4837:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4822:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:9"
																		},
																		"nativeSrc": "4822:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4822:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4773:39:9",
																	"nodeType": "YulIdentifier",
																	"src": "4773:39:9"
																},
																"nativeSrc": "4773:67:9",
																"nodeType": "YulFunctionCall",
																"src": "4773:67:9"
															},
															"nativeSrc": "4773:67:9",
															"nodeType": "YulExpressionStatement",
															"src": "4773:67:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4633:214:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4699:9:9",
														"nodeType": "YulTypedName",
														"src": "4699:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4711:6:9",
														"nodeType": "YulTypedName",
														"src": "4711:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4722:4:9",
														"nodeType": "YulTypedName",
														"src": "4722:4:9",
														"type": ""
													}
												],
												"src": "4633:214:9"
											},
											{
												"body": {
													"nativeSrc": "4919:263:9",
													"nodeType": "YulBlock",
													"src": "4919:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "4965:83:9",
																"nodeType": "YulBlock",
																"src": "4965:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4967:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "4967:77:9"
																			},
																			"nativeSrc": "4967:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4967:79:9"
																		},
																		"nativeSrc": "4967:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4967:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4940:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4940:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4949:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4949:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4936:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4936:3:9"
																		},
																		"nativeSrc": "4936:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4936:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4961:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4961:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4932:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4932:3:9"
																},
																"nativeSrc": "4932:32:9",
																"nodeType": "YulFunctionCall",
																"src": "4932:32:9"
															},
															"nativeSrc": "4929:119:9",
															"nodeType": "YulIf",
															"src": "4929:119:9"
														},
														{
															"nativeSrc": "5058:117:9",
															"nodeType": "YulBlock",
															"src": "5058:117:9",
															"statements": [
																{
																	"nativeSrc": "5073:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5073:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5087:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5087:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5077:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5077:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5102:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5102:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5137:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5137:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5148:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5148:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5133:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5133:3:9"
																				},
																				"nativeSrc": "5133:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5133:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5157:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5157:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5112:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5112:20:9"
																		},
																		"nativeSrc": "5112:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5112:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5102:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5102:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4853:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4889:9:9",
														"nodeType": "YulTypedName",
														"src": "4889:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4900:7:9",
														"nodeType": "YulTypedName",
														"src": "4900:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4912:6:9",
														"nodeType": "YulTypedName",
														"src": "4912:6:9",
														"type": ""
													}
												],
												"src": "4853:329:9"
											},
											{
												"body": {
													"nativeSrc": "5253:53:9",
													"nodeType": "YulBlock",
													"src": "5253:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5270:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5270:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5293:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5293:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5275:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "5275:17:9"
																		},
																		"nativeSrc": "5275:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5275:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5263:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5263:6:9"
																},
																"nativeSrc": "5263:37:9",
																"nodeType": "YulFunctionCall",
																"src": "5263:37:9"
															},
															"nativeSrc": "5263:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "5263:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5188:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5241:5:9",
														"nodeType": "YulTypedName",
														"src": "5241:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5248:3:9",
														"nodeType": "YulTypedName",
														"src": "5248:3:9",
														"type": ""
													}
												],
												"src": "5188:118:9"
											},
											{
												"body": {
													"nativeSrc": "5410:124:9",
													"nodeType": "YulBlock",
													"src": "5410:124:9",
													"statements": [
														{
															"nativeSrc": "5420:26:9",
															"nodeType": "YulAssignment",
															"src": "5420:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5432:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5432:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5443:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5443:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5428:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5428:3:9"
																},
																"nativeSrc": "5428:18:9",
																"nodeType": "YulFunctionCall",
																"src": "5428:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5420:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5420:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5500:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5500:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5513:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5513:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5524:1:9",
																				"nodeType": "YulLiteral",
																				"src": "5524:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5509:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5509:3:9"
																		},
																		"nativeSrc": "5509:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5509:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5456:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "5456:43:9"
																},
																"nativeSrc": "5456:71:9",
																"nodeType": "YulFunctionCall",
																"src": "5456:71:9"
															},
															"nativeSrc": "5456:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "5456:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5312:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5382:9:9",
														"nodeType": "YulTypedName",
														"src": "5382:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5394:6:9",
														"nodeType": "YulTypedName",
														"src": "5394:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5405:4:9",
														"nodeType": "YulTypedName",
														"src": "5405:4:9",
														"type": ""
													}
												],
												"src": "5312:222:9"
											},
											{
												"body": {
													"nativeSrc": "5623:391:9",
													"nodeType": "YulBlock",
													"src": "5623:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "5669:83:9",
																"nodeType": "YulBlock",
																"src": "5669:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5671:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "5671:77:9"
																			},
																			"nativeSrc": "5671:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5671:79:9"
																		},
																		"nativeSrc": "5671:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5671:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5644:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5644:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5653:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5653:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5640:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5640:3:9"
																		},
																		"nativeSrc": "5640:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5640:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5665:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5665:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5636:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5636:3:9"
																},
																"nativeSrc": "5636:32:9",
																"nodeType": "YulFunctionCall",
																"src": "5636:32:9"
															},
															"nativeSrc": "5633:119:9",
															"nodeType": "YulIf",
															"src": "5633:119:9"
														},
														{
															"nativeSrc": "5762:117:9",
															"nodeType": "YulBlock",
															"src": "5762:117:9",
															"statements": [
																{
																	"nativeSrc": "5777:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5777:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5791:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5791:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5781:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5781:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5806:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5806:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5841:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5841:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5852:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5852:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5837:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5837:3:9"
																				},
																				"nativeSrc": "5837:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5837:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5861:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5861:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5816:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5816:20:9"
																		},
																		"nativeSrc": "5816:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5816:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5806:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5806:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5889:118:9",
															"nodeType": "YulBlock",
															"src": "5889:118:9",
															"statements": [
																{
																	"nativeSrc": "5904:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5904:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5918:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5918:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5908:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5908:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5934:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5934:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5969:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5969:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5980:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5980:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5965:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5965:3:9"
																				},
																				"nativeSrc": "5965:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5965:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5989:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5989:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5944:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5944:20:9"
																		},
																		"nativeSrc": "5944:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5944:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5934:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5934:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5540:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5585:9:9",
														"nodeType": "YulTypedName",
														"src": "5585:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5596:7:9",
														"nodeType": "YulTypedName",
														"src": "5596:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5608:6:9",
														"nodeType": "YulTypedName",
														"src": "5608:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5616:6:9",
														"nodeType": "YulTypedName",
														"src": "5616:6:9",
														"type": ""
													}
												],
												"src": "5540:474:9"
											},
											{
												"body": {
													"nativeSrc": "6048:152:9",
													"nodeType": "YulBlock",
													"src": "6048:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6065:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6065:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6068:77:9",
																		"nodeType": "YulLiteral",
																		"src": "6068:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6058:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6058:6:9"
																},
																"nativeSrc": "6058:88:9",
																"nodeType": "YulFunctionCall",
																"src": "6058:88:9"
															},
															"nativeSrc": "6058:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "6058:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6162:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6162:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6165:4:9",
																		"nodeType": "YulLiteral",
																		"src": "6165:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6155:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6155:6:9"
																},
																"nativeSrc": "6155:15:9",
																"nodeType": "YulFunctionCall",
																"src": "6155:15:9"
															},
															"nativeSrc": "6155:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "6155:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6186:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6186:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6189:4:9",
																		"nodeType": "YulLiteral",
																		"src": "6189:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6179:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6179:6:9"
																},
																"nativeSrc": "6179:15:9",
																"nodeType": "YulFunctionCall",
																"src": "6179:15:9"
															},
															"nativeSrc": "6179:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "6179:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6020:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "6020:180:9"
											},
											{
												"body": {
													"nativeSrc": "6257:269:9",
													"nodeType": "YulBlock",
													"src": "6257:269:9",
													"statements": [
														{
															"nativeSrc": "6267:22:9",
															"nodeType": "YulAssignment",
															"src": "6267:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6281:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "6281:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6287:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6287:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6277:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6277:3:9"
																},
																"nativeSrc": "6277:12:9",
																"nodeType": "YulFunctionCall",
																"src": "6277:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6267:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6267:6:9"
																}
															]
														},
														{
															"nativeSrc": "6298:38:9",
															"nodeType": "YulVariableDeclaration",
															"src": "6298:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6328:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "6328:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6334:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6334:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6324:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6324:3:9"
																},
																"nativeSrc": "6324:12:9",
																"nodeType": "YulFunctionCall",
																"src": "6324:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6302:18:9",
																	"nodeType": "YulTypedName",
																	"src": "6302:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6375:51:9",
																"nodeType": "YulBlock",
																"src": "6375:51:9",
																"statements": [
																	{
																		"nativeSrc": "6389:27:9",
																		"nodeType": "YulAssignment",
																		"src": "6389:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6403:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "6403:6:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6411:4:9",
																					"nodeType": "YulLiteral",
																					"src": "6411:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6399:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "6399:3:9"
																			},
																			"nativeSrc": "6399:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6399:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6389:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "6389:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6355:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "6355:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6348:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6348:6:9"
																},
																"nativeSrc": "6348:26:9",
																"nodeType": "YulFunctionCall",
																"src": "6348:26:9"
															},
															"nativeSrc": "6345:81:9",
															"nodeType": "YulIf",
															"src": "6345:81:9"
														},
														{
															"body": {
																"nativeSrc": "6478:42:9",
																"nodeType": "YulBlock",
																"src": "6478:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6492:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "6492:16:9"
																			},
																			"nativeSrc": "6492:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6492:18:9"
																		},
																		"nativeSrc": "6492:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6492:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6442:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "6442:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6465:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "6465:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6473:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6473:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6462:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "6462:2:9"
																		},
																		"nativeSrc": "6462:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6462:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6439:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "6439:2:9"
																},
																"nativeSrc": "6439:38:9",
																"nodeType": "YulFunctionCall",
																"src": "6439:38:9"
															},
															"nativeSrc": "6436:84:9",
															"nodeType": "YulIf",
															"src": "6436:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6206:320:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6241:4:9",
														"nodeType": "YulTypedName",
														"src": "6241:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6250:6:9",
														"nodeType": "YulTypedName",
														"src": "6250:6:9",
														"type": ""
													}
												],
												"src": "6206:320:9"
											},
											{
												"body": {
													"nativeSrc": "6686:288:9",
													"nodeType": "YulBlock",
													"src": "6686:288:9",
													"statements": [
														{
															"nativeSrc": "6696:26:9",
															"nodeType": "YulAssignment",
															"src": "6696:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6708:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6708:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6719:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6719:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6704:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6704:3:9"
																},
																"nativeSrc": "6704:18:9",
																"nodeType": "YulFunctionCall",
																"src": "6704:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6696:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6696:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6776:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6776:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6789:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6789:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6800:1:9",
																				"nodeType": "YulLiteral",
																				"src": "6800:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6785:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6785:3:9"
																		},
																		"nativeSrc": "6785:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6785:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6732:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "6732:43:9"
																},
																"nativeSrc": "6732:71:9",
																"nodeType": "YulFunctionCall",
																"src": "6732:71:9"
															},
															"nativeSrc": "6732:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "6732:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6857:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6857:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6870:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6870:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6881:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6881:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6866:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6866:3:9"
																		},
																		"nativeSrc": "6866:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6866:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6813:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "6813:43:9"
																},
																"nativeSrc": "6813:72:9",
																"nodeType": "YulFunctionCall",
																"src": "6813:72:9"
															},
															"nativeSrc": "6813:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "6813:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6939:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6939:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6952:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6952:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6963:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6963:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6948:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6948:3:9"
																		},
																		"nativeSrc": "6948:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6948:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6895:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "6895:43:9"
																},
																"nativeSrc": "6895:72:9",
																"nodeType": "YulFunctionCall",
																"src": "6895:72:9"
															},
															"nativeSrc": "6895:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "6895:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6532:442:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6642:9:9",
														"nodeType": "YulTypedName",
														"src": "6642:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6654:6:9",
														"nodeType": "YulTypedName",
														"src": "6654:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6662:6:9",
														"nodeType": "YulTypedName",
														"src": "6662:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6670:6:9",
														"nodeType": "YulTypedName",
														"src": "6670:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6681:4:9",
														"nodeType": "YulTypedName",
														"src": "6681:4:9",
														"type": ""
													}
												],
												"src": "6532:442:9"
											},
											{
												"body": {
													"nativeSrc": "7008:152:9",
													"nodeType": "YulBlock",
													"src": "7008:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7025:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7025:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7028:77:9",
																		"nodeType": "YulLiteral",
																		"src": "7028:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7018:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7018:6:9"
																},
																"nativeSrc": "7018:88:9",
																"nodeType": "YulFunctionCall",
																"src": "7018:88:9"
															},
															"nativeSrc": "7018:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "7018:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7122:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7122:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7125:4:9",
																		"nodeType": "YulLiteral",
																		"src": "7125:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7115:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7115:6:9"
																},
																"nativeSrc": "7115:15:9",
																"nodeType": "YulFunctionCall",
																"src": "7115:15:9"
															},
															"nativeSrc": "7115:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "7115:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7146:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7146:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7149:4:9",
																		"nodeType": "YulLiteral",
																		"src": "7149:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7139:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7139:6:9"
																},
																"nativeSrc": "7139:15:9",
																"nodeType": "YulFunctionCall",
																"src": "7139:15:9"
															},
															"nativeSrc": "7139:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "7139:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6980:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "6980:180:9"
											},
											{
												"body": {
													"nativeSrc": "7210:147:9",
													"nodeType": "YulBlock",
													"src": "7210:147:9",
													"statements": [
														{
															"nativeSrc": "7220:25:9",
															"nodeType": "YulAssignment",
															"src": "7220:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7243:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7243:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7225:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "7225:17:9"
																},
																"nativeSrc": "7225:20:9",
																"nodeType": "YulFunctionCall",
																"src": "7225:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7220:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "7220:1:9"
																}
															]
														},
														{
															"nativeSrc": "7254:25:9",
															"nodeType": "YulAssignment",
															"src": "7254:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7277:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7277:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7259:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "7259:17:9"
																},
																"nativeSrc": "7259:20:9",
																"nodeType": "YulFunctionCall",
																"src": "7259:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7254:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "7254:1:9"
																}
															]
														},
														{
															"nativeSrc": "7288:16:9",
															"nodeType": "YulAssignment",
															"src": "7288:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7299:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7299:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7302:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7302:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7295:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7295:3:9"
																},
																"nativeSrc": "7295:9:9",
																"nodeType": "YulFunctionCall",
																"src": "7295:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7288:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7288:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7328:22:9",
																"nodeType": "YulBlock",
																"src": "7328:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7330:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "7330:16:9"
																			},
																			"nativeSrc": "7330:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7330:18:9"
																		},
																		"nativeSrc": "7330:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7330:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7320:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7320:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7323:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7323:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7317:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "7317:2:9"
																},
																"nativeSrc": "7317:10:9",
																"nodeType": "YulFunctionCall",
																"src": "7317:10:9"
															},
															"nativeSrc": "7314:36:9",
															"nodeType": "YulIf",
															"src": "7314:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7166:191:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7197:1:9",
														"nodeType": "YulTypedName",
														"src": "7197:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7200:1:9",
														"nodeType": "YulTypedName",
														"src": "7200:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7206:3:9",
														"nodeType": "YulTypedName",
														"src": "7206:3:9",
														"type": ""
													}
												],
												"src": "7166:191:9"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100b2575f3560e01c8063715018a61161006f578063715018a6146101a05780638da5cb5b146101aa57806395d89b41146101c8578063a9059cbb146101e6578063dd62ed3e14610216578063f2fde38b14610246576100b2565b806306fdde03146100b6578063095ea7b3146100d457806318160ddd1461010457806323b872dd14610122578063313ce5671461015257806370a0823114610170575b5f80fd5b6100be610262565b6040516100cb9190610ce2565b60405180910390f35b6100ee60048036038101906100e99190610d93565b6102f2565b6040516100fb9190610deb565b60405180910390f35b61010c610314565b6040516101199190610e13565b60405180910390f35b61013c60048036038101906101379190610e2c565b61031d565b6040516101499190610deb565b60405180910390f35b61015a61034b565b6040516101679190610e97565b60405180910390f35b61018a60048036038101906101859190610eb0565b610353565b6040516101979190610e13565b60405180910390f35b6101a8610398565b005b6101b26103ab565b6040516101bf9190610eea565b60405180910390f35b6101d06103d3565b6040516101dd9190610ce2565b60405180910390f35b61020060048036038101906101fb9190610d93565b610463565b60405161020d9190610deb565b60405180910390f35b610230600480360381019061022b9190610f03565b610485565b60405161023d9190610e13565b60405180910390f35b610260600480360381019061025b9190610eb0565b610507565b005b60606003805461027190610f6e565b80601f016020809104026020016040519081016040528092919081815260200182805461029d90610f6e565b80156102e85780601f106102bf576101008083540402835291602001916102e8565b820191905f5260205f20905b8154815290600101906020018083116102cb57829003601f168201915b5050505050905090565b5f806102fc61058b565b9050610309818585610592565b600191505092915050565b5f600254905090565b5f8061032761058b565b90506103348582856105a4565b61033f858585610636565b60019150509392505050565b5f6012905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6103a0610726565b6103a95f6107ad565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546103e290610f6e565b80601f016020809104026020016040519081016040528092919081815260200182805461040e90610f6e565b80156104595780601f1061043057610100808354040283529160200191610459565b820191905f5260205f20905b81548152906001019060200180831161043c57829003601f168201915b5050505050905090565b5f8061046d61058b565b905061047a818585610636565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b61050f610726565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361057f575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016105769190610eea565b60405180910390fd5b610588816107ad565b50565b5f33905090565b61059f8383836001610870565b505050565b5f6105af8484610485565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146106305781811015610621578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161061893929190610f9e565b60405180910390fd5b61062f84848484035f610870565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036106a6575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161069d9190610eea565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610716575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161070d9190610eea565b60405180910390fd5b610721838383610a3f565b505050565b61072e61058b565b73ffffffffffffffffffffffffffffffffffffffff1661074c6103ab565b73ffffffffffffffffffffffffffffffffffffffff16146107ab5761076f61058b565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016107a29190610eea565b60405180910390fd5b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036108e0575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016108d79190610eea565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610950575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016109479190610eea565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610a39578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610a309190610e13565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a8f578060025f828254610a839190611000565b92505081905550610b5d565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610b18578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610b0f93929190610f9e565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ba4578060025f8282540392505081905550610bee565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610c4b9190610e13565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610c8f578082015181840152602081019050610c74565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610cb482610c58565b610cbe8185610c62565b9350610cce818560208601610c72565b610cd781610c9a565b840191505092915050565b5f6020820190508181035f830152610cfa8184610caa565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610d2f82610d06565b9050919050565b610d3f81610d25565b8114610d49575f80fd5b50565b5f81359050610d5a81610d36565b92915050565b5f819050919050565b610d7281610d60565b8114610d7c575f80fd5b50565b5f81359050610d8d81610d69565b92915050565b5f8060408385031215610da957610da8610d02565b5b5f610db685828601610d4c565b9250506020610dc785828601610d7f565b9150509250929050565b5f8115159050919050565b610de581610dd1565b82525050565b5f602082019050610dfe5f830184610ddc565b92915050565b610e0d81610d60565b82525050565b5f602082019050610e265f830184610e04565b92915050565b5f805f60608486031215610e4357610e42610d02565b5b5f610e5086828701610d4c565b9350506020610e6186828701610d4c565b9250506040610e7286828701610d7f565b9150509250925092565b5f60ff82169050919050565b610e9181610e7c565b82525050565b5f602082019050610eaa5f830184610e88565b92915050565b5f60208284031215610ec557610ec4610d02565b5b5f610ed284828501610d4c565b91505092915050565b610ee481610d25565b82525050565b5f602082019050610efd5f830184610edb565b92915050565b5f8060408385031215610f1957610f18610d02565b5b5f610f2685828601610d4c565b9250506020610f3785828601610d4c565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610f8557607f821691505b602082108103610f9857610f97610f41565b5b50919050565b5f606082019050610fb15f830186610edb565b610fbe6020830185610e04565b610fcb6040830184610e04565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61100a82610d60565b915061101583610d60565b925082820190508082111561102d5761102c610fd3565b5b9291505056fea264697066735822122057a0f5545f3cd60a02897b77e6fec30dbb26ec4cfdaf51dab37bdd2951e57f9064736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x246 JUMPI PUSH2 0xB2 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x170 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBE PUSH2 0x262 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB SWAP2 SWAP1 PUSH2 0xCE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0xD93 JUMP JUMPDEST PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0xDEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x314 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0xE13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0xE2C JUMP JUMPDEST PUSH2 0x31D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0xDEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH2 0x34B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xE97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x185 SWAP2 SWAP1 PUSH2 0xEB0 JUMP JUMPDEST PUSH2 0x353 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0xE13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH2 0x398 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B2 PUSH2 0x3AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xEEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xCE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xD93 JUMP JUMPDEST PUSH2 0x463 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xDEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xF03 JUMP JUMPDEST PUSH2 0x485 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xE13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xEB0 JUMP JUMPDEST PUSH2 0x507 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x271 SWAP1 PUSH2 0xF6E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x29D SWAP1 PUSH2 0xF6E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2E8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2BF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2E8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2CB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2FC PUSH2 0x58B JUMP JUMPDEST SWAP1 POP PUSH2 0x309 DUP2 DUP6 DUP6 PUSH2 0x592 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x327 PUSH2 0x58B JUMP JUMPDEST SWAP1 POP PUSH2 0x334 DUP6 DUP3 DUP6 PUSH2 0x5A4 JUMP JUMPDEST PUSH2 0x33F DUP6 DUP6 DUP6 PUSH2 0x636 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A0 PUSH2 0x726 JUMP JUMPDEST PUSH2 0x3A9 PUSH0 PUSH2 0x7AD JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3E2 SWAP1 PUSH2 0xF6E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x40E SWAP1 PUSH2 0xF6E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x459 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x430 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x459 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x43C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x46D PUSH2 0x58B JUMP JUMPDEST SWAP1 POP PUSH2 0x47A DUP2 DUP6 DUP6 PUSH2 0x636 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x50F PUSH2 0x726 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x57F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP2 SWAP1 PUSH2 0xEEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x588 DUP2 PUSH2 0x7AD JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x59F DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x870 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5AF DUP5 DUP5 PUSH2 0x485 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x630 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x621 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x618 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x62F DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x870 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6A6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69D SWAP2 SWAP1 PUSH2 0xEEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x716 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70D SWAP2 SWAP1 PUSH2 0xEEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x721 DUP4 DUP4 DUP4 PUSH2 0xA3F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x72E PUSH2 0x58B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x74C PUSH2 0x3AB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7AB JUMPI PUSH2 0x76F PUSH2 0x58B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A2 SWAP2 SWAP1 PUSH2 0xEEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8E0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D7 SWAP2 SWAP1 PUSH2 0xEEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x950 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x947 SWAP2 SWAP1 PUSH2 0xEEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xA39 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xA30 SWAP2 SWAP1 PUSH2 0xE13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA8F JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA83 SWAP2 SWAP1 PUSH2 0x1000 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xB5D JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xB18 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBA4 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xBEE JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xC4B SWAP2 SWAP1 PUSH2 0xE13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC8F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC74 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCB4 DUP3 PUSH2 0xC58 JUMP JUMPDEST PUSH2 0xCBE DUP2 DUP6 PUSH2 0xC62 JUMP JUMPDEST SWAP4 POP PUSH2 0xCCE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xC72 JUMP JUMPDEST PUSH2 0xCD7 DUP2 PUSH2 0xC9A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xCFA DUP2 DUP5 PUSH2 0xCAA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD2F DUP3 PUSH2 0xD06 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD3F DUP2 PUSH2 0xD25 JUMP JUMPDEST DUP2 EQ PUSH2 0xD49 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD5A DUP2 PUSH2 0xD36 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD72 DUP2 PUSH2 0xD60 JUMP JUMPDEST DUP2 EQ PUSH2 0xD7C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD8D DUP2 PUSH2 0xD69 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDA9 JUMPI PUSH2 0xDA8 PUSH2 0xD02 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDB6 DUP6 DUP3 DUP7 ADD PUSH2 0xD4C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xDC7 DUP6 DUP3 DUP7 ADD PUSH2 0xD7F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDE5 DUP2 PUSH2 0xDD1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDFE PUSH0 DUP4 ADD DUP5 PUSH2 0xDDC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE0D DUP2 PUSH2 0xD60 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE26 PUSH0 DUP4 ADD DUP5 PUSH2 0xE04 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE43 JUMPI PUSH2 0xE42 PUSH2 0xD02 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE50 DUP7 DUP3 DUP8 ADD PUSH2 0xD4C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xE61 DUP7 DUP3 DUP8 ADD PUSH2 0xD4C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xE72 DUP7 DUP3 DUP8 ADD PUSH2 0xD7F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE91 DUP2 PUSH2 0xE7C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEAA PUSH0 DUP4 ADD DUP5 PUSH2 0xE88 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEC5 JUMPI PUSH2 0xEC4 PUSH2 0xD02 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xED2 DUP5 DUP3 DUP6 ADD PUSH2 0xD4C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEE4 DUP2 PUSH2 0xD25 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEFD PUSH0 DUP4 ADD DUP5 PUSH2 0xEDB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF19 JUMPI PUSH2 0xF18 PUSH2 0xD02 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF26 DUP6 DUP3 DUP7 ADD PUSH2 0xD4C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF37 DUP6 DUP3 DUP7 ADD PUSH2 0xD4C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xF85 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF98 JUMPI PUSH2 0xF97 PUSH2 0xF41 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xFB1 PUSH0 DUP4 ADD DUP7 PUSH2 0xEDB JUMP JUMPDEST PUSH2 0xFBE PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xE04 JUMP JUMPDEST PUSH2 0xFCB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xE04 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x100A DUP3 PUSH2 0xD60 JUMP JUMPDEST SWAP2 POP PUSH2 0x1015 DUP4 PUSH2 0xD60 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x102D JUMPI PUSH2 0x102C PUSH2 0xFD3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPI LOG0 CREATE2 SLOAD PUSH0 EXTCODECOPY 0xD6 EXP MUL DUP10 PUSH28 0x77E6FEC30DBB26EC4CFDAF51DAB37BDD2951E57F9064736F6C634300 ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "174:211:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3002:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3299:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3846:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2074:89:2;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;3144:97::-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;3002:82::-;3051:5;3075:2;3068:9;;3002:82;:::o;3299:116::-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2276:93:2:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;3610:178::-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;3846:140::-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8989:128:2:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;9949:432:2:-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;7:99:9:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:118::-;5275:24;5293:5;5275:24;:::i;:::-;5270:3;5263:37;5188:118;;:::o;5312:222::-;5405:4;5443:2;5432:9;5428:18;5420:26;;5456:71;5524:1;5513:9;5509:17;5500:6;5456:71;:::i;:::-;5312:222;;;;:::o;5540:474::-;5608:6;5616;5665:2;5653:9;5644:7;5640:23;5636:32;5633:119;;;5671:79;;:::i;:::-;5633:119;5791:1;5816:53;5861:7;5852:6;5841:9;5837:22;5816:53;:::i;:::-;5806:63;;5762:117;5918:2;5944:53;5989:7;5980:6;5969:9;5965:22;5944:53;:::i;:::-;5934:63;;5889:118;5540:474;;;;;:::o;6020:180::-;6068:77;6065:1;6058:88;6165:4;6162:1;6155:15;6189:4;6186:1;6179:15;6206:320;6250:6;6287:1;6281:4;6277:12;6267:22;;6334:1;6328:4;6324:12;6355:18;6345:81;;6411:4;6403:6;6399:17;6389:27;;6345:81;6473:2;6465:6;6462:14;6442:18;6439:38;6436:84;;6492:18;;:::i;:::-;6436:84;6257:269;6206:320;;;:::o;6532:442::-;6681:4;6719:2;6708:9;6704:18;6696:26;;6732:71;6800:1;6789:9;6785:17;6776:6;6732:71;:::i;:::-;6813:72;6881:2;6870:9;6866:18;6857:6;6813:72;:::i;:::-;6895;6963:2;6952:9;6948:18;6939:6;6895:72;:::i;:::-;6532:442;;;;;;:::o;6980:180::-;7028:77;7025:1;7018:88;7125:4;7122:1;7115:15;7149:4;7146:1;7139:15;7166:191;7206:3;7225:20;7243:1;7225:20;:::i;:::-;7220:25;;7259:20;7277:1;7259:20;:::i;:::-;7254:25;;7302:1;7299;7295:9;7288:16;;7323:3;7320:1;7317:10;7314:36;;;7330:18;;:::i;:::-;7314:36;7166:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "840200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2940",
								"decimals()": "427",
								"name()": "infinite",
								"owner()": "2537",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2477",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 174,
									"end": 385,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 174,
									"end": 385,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 174,
									"end": 385,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 215,
									"end": 382,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 215,
									"end": 382,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 215,
									"end": 382,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 215,
									"end": 382,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 382,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 215,
									"end": 382,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 382,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 215,
									"end": 382,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 215,
									"end": 382,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 382,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 215,
									"end": 382,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 258,
									"end": 268,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "6E616D6500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "53594D0000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 281,
									"end": 315,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 287,
									"end": 297,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 299,
									"end": 314,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "3635C9ADC5DEA00000"
								},
								{
									"begin": 281,
									"end": 286,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 281,
									"end": 286,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 281,
									"end": 286,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 281,
									"end": 315,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 281,
									"end": 315,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 281,
									"end": 315,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 281,
									"end": 315,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 281,
									"end": 315,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 174,
									"end": 385,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 174,
									"end": 385,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7810,
									"end": 7811,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7798,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7864,
									"end": 7865,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 7835,
									"end": 7867,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 7903,
									"end": 7904,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7907,
									"end": 7914,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7916,
									"end": 7921,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6376,
									"end": 6377,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6364,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6512,
									"end": 6517,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 6496,
									"end": 6517,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6579,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6580,
									"end": 6584,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6617,
									"end": 6622,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6614,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6674,
									"end": 6678,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6680,
									"end": 6691,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6693,
									"end": 6698,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 6649,
									"end": 6699,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6866,
									"end": 6871,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6852,
									"end": 6863,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6843,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6844,
									"end": 6848,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6534,
									"end": 6896,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6924,
									"end": 6925,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6912,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7089,
									"end": 7094,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7301,
									"end": 7306,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7293,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7294,
									"end": 7296,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7361,
									"end": 7363,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7355,
									"end": 7359,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7365,
									"end": 7370,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 7346,
									"end": 7371,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 9,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "81"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 9,
									"value": "81"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "85"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "86"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 9,
									"value": "86"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 9,
									"value": "85"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "90"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 9,
									"value": "90"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 9,
									"value": "92"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "94"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "92"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 9,
									"value": "94"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "97"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "98"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 9,
									"value": "98"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "99"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 9,
									"value": "99"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "101"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "102"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 9,
									"value": "102"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 9,
									"value": "101"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 9,
									"value": "97"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "105"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 9,
									"value": "105"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "107"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 9,
									"value": "107"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "109"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 9,
									"value": "109"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "110"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "111"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 9,
									"value": "111"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 9,
									"value": "110"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "112"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 9,
									"value": "112"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "113"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 9,
									"value": "113"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "115"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "116"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 9,
									"value": "116"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "117"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 9,
									"value": "117"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "114"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 9,
									"value": "115"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "118"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 9,
									"value": "118"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 9,
									"value": "119"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "121"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "119"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 9,
									"value": "121"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "122"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "123"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 9,
									"value": "123"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 9,
									"value": "122"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 9,
									"value": "114"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "tag",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5271,
									"end": 5278,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5311,
									"end": 5353,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5304,
									"end": 5309,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5300,
									"end": 5354,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5234,
									"end": 5360,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "tag",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5403,
									"end": 5410,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "126"
								},
								{
									"begin": 5450,
									"end": 5455,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 5432,
									"end": 5456,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "tag",
									"source": 9,
									"value": "126"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5366,
									"end": 5462,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "tag",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "128"
								},
								{
									"begin": 5573,
									"end": 5578,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 5555,
									"end": 5579,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "tag",
									"source": 9,
									"value": "128"
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5550,
									"end": 5553,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5543,
									"end": 5580,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5468,
									"end": 5586,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "tag",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5685,
									"end": 5689,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5723,
									"end": 5725,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 5712,
									"end": 5721,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5708,
									"end": 5726,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "130"
								},
								{
									"begin": 5804,
									"end": 5805,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5793,
									"end": 5802,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 5789,
									"end": 5806,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5780,
									"end": 5786,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 5736,
									"end": 5807,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "tag",
									"source": 9,
									"value": "130"
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5592,
									"end": 5814,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5820,
									"end": 6000,
									"name": "tag",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 5820,
									"end": 6000,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5868,
									"end": 5945,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5865,
									"end": 5866,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5858,
									"end": 5946,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5965,
									"end": 5969,
									"name": "PUSH",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 5962,
									"end": 5963,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 5955,
									"end": 5970,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5989,
									"end": 5993,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 5986,
									"end": 5987,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5979,
									"end": 5994,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "tag",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6046,
									"end": 6049,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6065,
									"end": 6085,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "133"
								},
								{
									"begin": 6083,
									"end": 6084,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6065,
									"end": 6085,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 6065,
									"end": 6085,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6065,
									"end": 6085,
									"name": "tag",
									"source": 9,
									"value": "133"
								},
								{
									"begin": 6065,
									"end": 6085,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6060,
									"end": 6085,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6060,
									"end": 6085,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6099,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "134"
								},
								{
									"begin": 6117,
									"end": 6118,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6099,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 6099,
									"end": 6119,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6099,
									"end": 6119,
									"name": "tag",
									"source": 9,
									"value": "134"
								},
								{
									"begin": 6099,
									"end": 6119,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6094,
									"end": 6119,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 6094,
									"end": 6119,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6142,
									"end": 6143,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6139,
									"end": 6140,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6135,
									"end": 6144,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6128,
									"end": 6144,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6128,
									"end": 6144,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6163,
									"end": 6166,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 6160,
									"end": 6161,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6157,
									"end": 6167,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 6154,
									"end": 6190,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 6154,
									"end": 6190,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "135"
								},
								{
									"begin": 6154,
									"end": 6190,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 6170,
									"end": 6188,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "136"
								},
								{
									"begin": 6170,
									"end": 6188,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 6170,
									"end": 6188,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6170,
									"end": 6188,
									"name": "tag",
									"source": 9,
									"value": "136"
								},
								{
									"begin": 6170,
									"end": 6188,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6154,
									"end": 6190,
									"name": "tag",
									"source": 9,
									"value": "135"
								},
								{
									"begin": 6154,
									"end": 6190,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6006,
									"end": 6197,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6203,
									"end": 6321,
									"name": "tag",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 6203,
									"end": 6321,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6290,
									"end": 6314,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "138"
								},
								{
									"begin": 6308,
									"end": 6313,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6290,
									"end": 6314,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 6290,
									"end": 6314,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6290,
									"end": 6314,
									"name": "tag",
									"source": 9,
									"value": "138"
								},
								{
									"begin": 6290,
									"end": 6314,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6285,
									"end": 6288,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6278,
									"end": 6315,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 6203,
									"end": 6321,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6203,
									"end": 6321,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6203,
									"end": 6321,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "tag",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6476,
									"end": 6480,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6514,
									"end": 6516,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 6503,
									"end": 6512,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6499,
									"end": 6517,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6491,
									"end": 6517,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6491,
									"end": 6517,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6527,
									"end": 6598,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "140"
								},
								{
									"begin": 6595,
									"end": 6596,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6584,
									"end": 6593,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6580,
									"end": 6597,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6571,
									"end": 6577,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 6527,
									"end": 6598,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 6527,
									"end": 6598,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6527,
									"end": 6598,
									"name": "tag",
									"source": 9,
									"value": "140"
								},
								{
									"begin": 6527,
									"end": 6598,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6608,
									"end": 6680,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "141"
								},
								{
									"begin": 6676,
									"end": 6678,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 6665,
									"end": 6674,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6661,
									"end": 6679,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6652,
									"end": 6658,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 6608,
									"end": 6680,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 6608,
									"end": 6680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6608,
									"end": 6680,
									"name": "tag",
									"source": 9,
									"value": "141"
								},
								{
									"begin": 6608,
									"end": 6680,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6690,
									"end": 6762,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "142"
								},
								{
									"begin": 6758,
									"end": 6760,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 6747,
									"end": 6756,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6743,
									"end": 6761,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6734,
									"end": 6740,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6690,
									"end": 6762,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 6690,
									"end": 6762,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6690,
									"end": 6762,
									"name": "tag",
									"source": 9,
									"value": "142"
								},
								{
									"begin": 6690,
									"end": 6762,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6327,
									"end": 6769,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "tag",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6868,
									"end": 6872,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6906,
									"end": 6908,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 6895,
									"end": 6904,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6891,
									"end": 6909,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6883,
									"end": 6909,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6883,
									"end": 6909,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6919,
									"end": 6990,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "144"
								},
								{
									"begin": 6987,
									"end": 6988,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6976,
									"end": 6985,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6972,
									"end": 6989,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6963,
									"end": 6969,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6919,
									"end": 6990,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 6919,
									"end": 6990,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6919,
									"end": 6990,
									"name": "tag",
									"source": 9,
									"value": "144"
								},
								{
									"begin": 6919,
									"end": 6990,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6775,
									"end": 6997,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 174,
									"end": 385,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 174,
									"end": 385,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 174,
									"end": 385,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 174,
									"end": 385,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 174,
									"end": 385,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 174,
									"end": 385,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 174,
									"end": 385,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 174,
									"end": 385,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 174,
									"end": 385,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122057a0f5545f3cd60a02897b77e6fec30dbb26ec4cfdaf51dab37bdd2951e57f9064736f6c63430008150033",
									".code": [
										{
											"begin": 174,
											"end": 385,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 174,
											"end": 385,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 174,
											"end": 385,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 174,
											"end": 385,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 174,
											"end": 385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 174,
											"end": 385,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 174,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 174,
											"end": 385,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 174,
											"end": 385,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 174,
											"end": 385,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 174,
											"end": 385,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 174,
											"end": 385,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 174,
											"end": 385,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 174,
											"end": 385,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 174,
											"end": 385,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 174,
											"end": 385,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 174,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 385,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 174,
											"end": 385,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 385,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 174,
											"end": 385,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 174,
											"end": 385,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 174,
											"end": 385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 174,
											"end": 385,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 174,
											"end": 385,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 174,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 174,
											"end": 385,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 174,
											"end": 385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 174,
											"end": 385,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 174,
											"end": 385,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 174,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 174,
											"end": 385,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 174,
											"end": 385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 174,
											"end": 385,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 174,
											"end": 385,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 174,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 174,
											"end": 385,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 174,
											"end": 385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 174,
											"end": 385,
											"name": "PUSH",
											"source": 7,
											"value": "95D89B41"
										},
										{
											"begin": 174,
											"end": 385,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 174,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 174,
											"end": 385,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 174,
											"end": 385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 174,
											"end": 385,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 174,
											"end": 385,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 174,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 174,
											"end": 385,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 174,
											"end": 385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 174,
											"end": 385,
											"name": "PUSH",
											"source": 7,
											"value": "DD62ED3E"
										},
										{
											"begin": 174,
											"end": 385,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 174,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 174,
											"end": 385,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 174,
											"end": 385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 174,
											"end": 385,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 174,
											"end": 385,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 174,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 174,
											"end": 385,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 174,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 385,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 174,
											"end": 385,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 174,
											"end": 385,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 174,
											"end": 385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 174,
											"end": 385,
											"name": "PUSH",
											"source": 7,
											"value": "6FDDE03"
										},
										{
											"begin": 174,
											"end": 385,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 174,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 174,
											"end": 385,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 174,
											"end": 385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 174,
											"end": 385,
											"name": "PUSH",
											"source": 7,
											"value": "95EA7B3"
										},
										{
											"begin": 174,
											"end": 385,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 174,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 174,
											"end": 385,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 174,
											"end": 385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 174,
											"end": 385,
											"name": "PUSH",
											"source": 7,
											"value": "18160DDD"
										},
										{
											"begin": 174,
											"end": 385,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 174,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 174,
											"end": 385,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 174,
											"end": 385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 174,
											"end": 385,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 174,
											"end": 385,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 174,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 174,
											"end": 385,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 174,
											"end": 385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 174,
											"end": 385,
											"name": "PUSH",
											"source": 7,
											"value": "313CE567"
										},
										{
											"begin": 174,
											"end": 385,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 174,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 174,
											"end": 385,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 174,
											"end": 385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 174,
											"end": 385,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 174,
											"end": 385,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 174,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 174,
											"end": 385,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 174,
											"end": 385,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 385,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 174,
											"end": 385,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 174,
											"end": 385,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3051,
											"end": 3056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3711,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "tag",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3446,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 3714,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3570,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3915,
											"end": 3938,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3911,
											"end": 3943,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 3946,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "tag",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "tag",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 4091,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4037,
											"end": 4154,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4164,
											"end": 4282,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3798,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "tag",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4502,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4487,
											"end": 4503,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4423,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "tag",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 4598,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "tag",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4586,
											"end": 4621,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4515,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4762,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4758,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4835,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4822,
											"end": 4839,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 4773,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4633,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4912,
											"end": 4918,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4961,
											"end": 4963,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4949,
											"end": 4958,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4940,
											"end": 4947,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4936,
											"end": 4959,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4932,
											"end": 4964,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 4967,
											"end": 5046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "tag",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5087,
											"end": 5088,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 5157,
											"end": 5164,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5148,
											"end": 5154,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5137,
											"end": 5146,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5133,
											"end": 5155,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 5112,
											"end": 5165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "tag",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5058,
											"end": 5175,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 5182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5188,
											"end": 5306,
											"name": "tag",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 5188,
											"end": 5306,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5275,
											"end": 5299,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 5293,
											"end": 5298,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5275,
											"end": 5299,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 5275,
											"end": 5299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5275,
											"end": 5299,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 5275,
											"end": 5299,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5270,
											"end": 5273,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5263,
											"end": 5300,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5188,
											"end": 5306,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5188,
											"end": 5306,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5188,
											"end": 5306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5405,
											"end": 5409,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5443,
											"end": 5445,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5432,
											"end": 5441,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5428,
											"end": 5446,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5420,
											"end": 5446,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5420,
											"end": 5446,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5456,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 5524,
											"end": 5525,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5513,
											"end": 5522,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5509,
											"end": 5526,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5500,
											"end": 5506,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5456,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 5456,
											"end": 5527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5456,
											"end": 5527,
											"name": "tag",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 5456,
											"end": 5527,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5312,
											"end": 5534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5608,
											"end": 5614,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5616,
											"end": 5622,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5665,
											"end": 5667,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5653,
											"end": 5662,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5644,
											"end": 5651,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5640,
											"end": 5663,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5636,
											"end": 5668,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5633,
											"end": 5752,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5633,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 5633,
											"end": 5752,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5671,
											"end": 5750,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 5671,
											"end": 5750,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 5671,
											"end": 5750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5671,
											"end": 5750,
											"name": "tag",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 5671,
											"end": 5750,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5633,
											"end": 5752,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 5633,
											"end": 5752,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5791,
											"end": 5792,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5816,
											"end": 5869,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 5861,
											"end": 5868,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5852,
											"end": 5858,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5841,
											"end": 5850,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5837,
											"end": 5859,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5816,
											"end": 5869,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 5816,
											"end": 5869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5816,
											"end": 5869,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 5816,
											"end": 5869,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5806,
											"end": 5869,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5806,
											"end": 5869,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5762,
											"end": 5879,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5918,
											"end": 5920,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5944,
											"end": 5997,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 5989,
											"end": 5996,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5980,
											"end": 5986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5969,
											"end": 5978,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5965,
											"end": 5987,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5944,
											"end": 5997,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 5944,
											"end": 5997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5944,
											"end": 5997,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 5944,
											"end": 5997,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5934,
											"end": 5997,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5934,
											"end": 5997,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5889,
											"end": 6007,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5540,
											"end": 6014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6020,
											"end": 6200,
											"name": "tag",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 6020,
											"end": 6200,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6068,
											"end": 6145,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6065,
											"end": 6066,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6058,
											"end": 6146,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6165,
											"end": 6169,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 6162,
											"end": 6163,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6155,
											"end": 6170,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6189,
											"end": 6193,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6186,
											"end": 6187,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6194,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6206,
											"end": 6526,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 6206,
											"end": 6526,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6250,
											"end": 6256,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6287,
											"end": 6288,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 6281,
											"end": 6285,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6277,
											"end": 6289,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6267,
											"end": 6289,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6267,
											"end": 6289,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6334,
											"end": 6335,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6328,
											"end": 6332,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6324,
											"end": 6336,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6355,
											"end": 6373,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6345,
											"end": 6426,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 6345,
											"end": 6426,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 6403,
											"end": 6409,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6399,
											"end": 6416,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6389,
											"end": 6416,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6389,
											"end": 6416,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6345,
											"end": 6426,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 6345,
											"end": 6426,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6473,
											"end": 6475,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6465,
											"end": 6471,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6462,
											"end": 6476,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6442,
											"end": 6460,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6439,
											"end": 6477,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6436,
											"end": 6520,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 6436,
											"end": 6520,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6492,
											"end": 6510,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 6492,
											"end": 6510,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 6492,
											"end": 6510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6492,
											"end": 6510,
											"name": "tag",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 6492,
											"end": 6510,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6436,
											"end": 6520,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 6436,
											"end": 6520,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6257,
											"end": 6526,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6206,
											"end": 6526,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6206,
											"end": 6526,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6206,
											"end": 6526,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6206,
											"end": 6526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6532,
											"end": 6974,
											"name": "tag",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 6532,
											"end": 6974,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6681,
											"end": 6685,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6719,
											"end": 6721,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 6708,
											"end": 6717,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6704,
											"end": 6722,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6696,
											"end": 6722,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6696,
											"end": 6722,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6732,
											"end": 6803,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 6800,
											"end": 6801,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6789,
											"end": 6798,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6785,
											"end": 6802,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6776,
											"end": 6782,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6732,
											"end": 6803,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 6732,
											"end": 6803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6732,
											"end": 6803,
											"name": "tag",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 6732,
											"end": 6803,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6813,
											"end": 6885,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 6881,
											"end": 6883,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6870,
											"end": 6879,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6866,
											"end": 6884,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6857,
											"end": 6863,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6813,
											"end": 6885,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 6813,
											"end": 6885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6813,
											"end": 6885,
											"name": "tag",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 6813,
											"end": 6885,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6895,
											"end": 6967,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 6963,
											"end": 6965,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6952,
											"end": 6961,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6948,
											"end": 6966,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6939,
											"end": 6945,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6895,
											"end": 6967,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 6895,
											"end": 6967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6895,
											"end": 6967,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 6895,
											"end": 6967,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6532,
											"end": 6974,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 6532,
											"end": 6974,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6532,
											"end": 6974,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6532,
											"end": 6974,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6532,
											"end": 6974,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6532,
											"end": 6974,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6532,
											"end": 6974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6980,
											"end": 7160,
											"name": "tag",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 6980,
											"end": 7160,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7028,
											"end": 7105,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7025,
											"end": 7026,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7018,
											"end": 7106,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7125,
											"end": 7129,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 7122,
											"end": 7123,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7115,
											"end": 7130,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7149,
											"end": 7153,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7146,
											"end": 7147,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7139,
											"end": 7154,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7166,
											"end": 7357,
											"name": "tag",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 7166,
											"end": 7357,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7206,
											"end": 7209,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7225,
											"end": 7245,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 7243,
											"end": 7244,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7225,
											"end": 7245,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 7225,
											"end": 7245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7225,
											"end": 7245,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 7225,
											"end": 7245,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7220,
											"end": 7245,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7220,
											"end": 7245,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7259,
											"end": 7279,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 7277,
											"end": 7278,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7259,
											"end": 7279,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 7259,
											"end": 7279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7259,
											"end": 7279,
											"name": "tag",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 7259,
											"end": 7279,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7254,
											"end": 7279,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7254,
											"end": 7279,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7302,
											"end": 7303,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7299,
											"end": 7300,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7295,
											"end": 7304,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7288,
											"end": 7304,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7288,
											"end": 7304,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7323,
											"end": 7326,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7320,
											"end": 7321,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7317,
											"end": 7327,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7314,
											"end": 7350,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7314,
											"end": 7350,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 7314,
											"end": 7350,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 7330,
											"end": 7348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "tag",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7314,
											"end": 7350,
											"name": "tag",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 7314,
											"end": 7350,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7166,
											"end": 7357,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7166,
											"end": 7357,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7166,
											"end": 7357,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7166,
											"end": 7357,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7166,
											"end": 7357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"MyToken.sol",
								"NewStakeing.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MyToken.sol\":\"MyToken\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"MyToken.sol\":{\"keccak256\":\"0xcde3020b3d2b838086644d2494e5b417f1e133b3f768d794f8654094f37ce414\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://584aa21127ff966474be00415bb0257fa0129e3cb43536418fe605e8cfdcf349\",\"dweb:/ipfs/QmUEQUD9s9ZHByrgQQLXRyjkv16kWU4aTvsEmfJp5vfSai\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "MyToken.sol:MyToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "MyToken.sol:MyToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "MyToken.sol:MyToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "MyToken.sol:MyToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "MyToken.sol:MyToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "MyToken.sol:MyToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"NewStakeing.sol": {
				"MyStakingContract": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract MyToken",
									"name": "_token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "userid",
									"type": "uint256"
								}
							],
							"name": "ClaimReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "ads",
									"type": "address"
								}
							],
							"name": "ViewDetail",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenIdc",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "duration",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "startTime",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "userads",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "isClaimed",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "isAmountc",
											"type": "bool"
										}
									],
									"internalType": "struct MyStakingContract.Stake[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "userid",
									"type": "uint256"
								}
							],
							"name": "calculateReward",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "check_duration",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "chkid",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenIdc",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "duration",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "startTime",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "userads",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "isClaimed",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "isAmountc",
											"type": "bool"
										}
									],
									"internalType": "struct MyStakingContract.Stake",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "cid",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenIdc",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "duration",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "startTime",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "userads",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "isClaimed",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "isAmountc",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "userid",
									"type": "uint256"
								}
							],
							"name": "claimStakedAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "adrs",
									"type": "address"
								}
							],
							"name": "getBal",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "duration",
									"type": "uint256"
								}
							],
							"name": "stakenow",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenIdc",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "duration",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "startTime",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "userads",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "isClaimed",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "isAmountc",
											"type": "bool"
										}
									],
									"internalType": "struct MyStakingContract.Stake",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract MyToken",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "userStakes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenIdc",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "duration",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "startTime",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "userads",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "isClaimed",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "isAmountc",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "The name of the author",
						"details": "Explain to a developer any extra details",
						"kind": "dev",
						"methods": {},
						"title": "A title that should describe the contract/interface",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"NewStakeing.sol\":340:4325  contract MyStakingContract {... */\n  mstore(0x40, 0xc0)\n    /* \"NewStakeing.sol\":538:571  uint256[] time = [2, 4, 6, 8, 10] */\n  mload(0x40)\n  dup1\n  0xa0\n  add\n  0x40\n  mstore\n  dup1\n    /* \"NewStakeing.sol\":556:557  2 */\n  0x02\n    /* \"NewStakeing.sol\":538:571  uint256[] time = [2, 4, 6, 8, 10] */\n  0xff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"NewStakeing.sol\":559:560  4 */\n  0x04\n    /* \"NewStakeing.sol\":538:571  uint256[] time = [2, 4, 6, 8, 10] */\n  0xff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"NewStakeing.sol\":562:563  6 */\n  0x06\n    /* \"NewStakeing.sol\":538:571  uint256[] time = [2, 4, 6, 8, 10] */\n  0xff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"NewStakeing.sol\":565:566  8 */\n  0x08\n    /* \"NewStakeing.sol\":538:571  uint256[] time = [2, 4, 6, 8, 10] */\n  0xff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"NewStakeing.sol\":568:570  10 */\n  0x0a\n    /* \"NewStakeing.sol\":538:571  uint256[] time = [2, 4, 6, 8, 10] */\n  0xff\n  and\n  dup2\n  mstore\n  pop\n  0x01\n  swap1\n  0x05\n  tag_1\n  swap3\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"NewStakeing.sol\":580:680  constructor(MyToken _token) {... */\n  callvalue\n  dup1\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_4\n  swap2\n  swap1\n  tag_5\n  jump\t// in\ntag_4:\n    /* \"NewStakeing.sol\":635:641  _token */\n  dup1\n    /* \"NewStakeing.sol\":619:642  token = MyToken(_token) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"NewStakeing.sol\":662:672  msg.sender */\n  caller\n    /* \"NewStakeing.sol\":653:672  owner  = msg.sender */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"NewStakeing.sol\":580:680  constructor(MyToken _token) {... */\n  pop\n    /* \"NewStakeing.sol\":340:4325  contract MyStakingContract {... */\n  jump(tag_8)\ntag_2:\n  dup3\n  dup1\n  sload\n  dup3\n  dup3\n  sstore\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  dup2\n  add\n  swap3\n  dup3\n  iszero\n  tag_9\n  jumpi\n  swap2\n  0x20\n  mul\n  dup3\n  add\ntag_10:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_11\n  jumpi\n  dup3\n  mload\n  dup3\n  swap1\n  0xff\n  and\n  swap1\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_10)\ntag_11:\ntag_9:\n  pop\n  swap1\n  pop\n  tag_12\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  pop\n  swap1\n  jump\t// out\ntag_13:\ntag_14:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_15\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_14)\ntag_15:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_17:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_19:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_20:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_30\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_19\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:680   */\ntag_21:\n    /* \"#utility.yul\":621:628   */\n  0x00\n    /* \"#utility.yul\":650:674   */\n  tag_32\n    /* \"#utility.yul\":668:673   */\n  dup3\n    /* \"#utility.yul\":650:674   */\n  tag_20\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":639:674   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:680   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":686:840   */\ntag_22:\n    /* \"#utility.yul\":775:815   */\n  tag_34\n    /* \"#utility.yul\":809:814   */\n  dup2\n    /* \"#utility.yul\":775:815   */\n  tag_21\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":768:773   */\n  dup2\n    /* \"#utility.yul\":765:816   */\n  eq\n    /* \"#utility.yul\":755:834   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":830:831   */\n  0x00\n    /* \"#utility.yul\":827:828   */\n  dup1\n    /* \"#utility.yul\":820:832   */\n  revert\n    /* \"#utility.yul\":755:834   */\ntag_35:\n    /* \"#utility.yul\":686:840   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":846:1021   */\ntag_23:\n    /* \"#utility.yul\":919:924   */\n  0x00\n    /* \"#utility.yul\":950:956   */\n  dup2\n    /* \"#utility.yul\":944:957   */\n  mload\n    /* \"#utility.yul\":935:957   */\n  swap1\n  pop\n    /* \"#utility.yul\":966:1015   */\n  tag_37\n    /* \"#utility.yul\":1009:1014   */\n  dup2\n    /* \"#utility.yul\":966:1015   */\n  tag_22\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":846:1021   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1027:1410   */\ntag_5:\n    /* \"#utility.yul\":1113:1119   */\n  0x00\n    /* \"#utility.yul\":1162:1164   */\n  0x20\n    /* \"#utility.yul\":1150:1159   */\n  dup3\n    /* \"#utility.yul\":1141:1148   */\n  dup5\n    /* \"#utility.yul\":1137:1160   */\n  sub\n    /* \"#utility.yul\":1133:1165   */\n  slt\n    /* \"#utility.yul\":1130:1249   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1168:1247   */\n  tag_40\n  tag_17\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1130:1249   */\ntag_39:\n    /* \"#utility.yul\":1288:1289   */\n  0x00\n    /* \"#utility.yul\":1313:1393   */\n  tag_41\n    /* \"#utility.yul\":1385:1392   */\n  dup5\n    /* \"#utility.yul\":1376:1382   */\n  dup3\n    /* \"#utility.yul\":1365:1374   */\n  dup6\n    /* \"#utility.yul\":1361:1383   */\n  add\n    /* \"#utility.yul\":1313:1393   */\n  tag_23\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1303:1393   */\n  swap2\n  pop\n    /* \"#utility.yul\":1259:1403   */\n  pop\n    /* \"#utility.yul\":1027:1410   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"NewStakeing.sol\":340:4325  contract MyStakingContract {... */\ntag_8:\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x1069acefefa00bf0f327a7661e77e50424d69531627561e1a6ab260aa8994529\")\n  0x00\n  assignImmutable(\"0x3be13e3889ed1ce49da1c0df26b4313d4959f2ec77a18162387c5e1766a078a7\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"NewStakeing.sol\":340:4325  contract MyStakingContract {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x92ceb12d\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x92ceb12d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xb0c479a5\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xb5d5b5fa\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xc9757417\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xd2d7231f\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_15:\n      dup1\n      0x0b46ba99\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2fa78085\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x41324ec5\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x47c4d742\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x5ee0d9b4\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"NewStakeing.sol\":1847:1942  function check_duration() public view returns (uint256[] memory) {... */\n    tag_3:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NewStakeing.sol\":1007:1114  function getBal(address adrs) public view returns (uint256) {... */\n    tag_4:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NewStakeing.sol\":3379:4318  function claimStakedAmount(uint256 userid) public {... */\n    tag_5:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      stop\n        /* \"NewStakeing.sol\":1122:1834  function stakenow(uint amount, uint duration ) public returns (Stake memory ){... */\n    tag_6:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NewStakeing.sol\":2056:2163  function ViewDetail(address ads) public view returns (Stake[] memory) {... */\n    tag_7:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_37:\n      tag_38\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NewStakeing.sol\":501:531  address public immutable owner */\n    tag_8:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NewStakeing.sol\":2798:3371  function ClaimReward(uint256 userid) public {... */\n    tag_9:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n    tag_45:\n      stop\n        /* \"NewStakeing.sol\":958:991  mapping(uint => Stake) public cid */\n    tag_10:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_51\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NewStakeing.sol\":905:950  mapping(address => Stake[]) public userStakes */\n    tag_11:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_57\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NewStakeing.sol\":1950:2050  function chkid(uint id) public view returns(Stake memory){... */\n    tag_12:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NewStakeing.sol\":2170:2788  function calculateReward(uint256 userid) public view returns (address,uint256, uint256, uint256)... */\n    tag_13:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_65\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NewStakeing.sol\":464:494  MyToken public immutable token */\n    tag_14:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NewStakeing.sol\":1847:1942  function check_duration() public view returns (uint256[] memory) {... */\n    tag_17:\n        /* \"NewStakeing.sol\":1894:1910  uint256[] memory */\n      0x60\n        /* \"NewStakeing.sol\":1930:1934  time */\n      0x01\n        /* \"NewStakeing.sol\":1923:1934  return time */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_73:\n      dup2\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_73\n      jumpi\n    tag_72:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"NewStakeing.sol\":1847:1942  function check_duration() public view returns (uint256[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"NewStakeing.sol\":1007:1114  function getBal(address adrs) public view returns (uint256) {... */\n    tag_23:\n        /* \"NewStakeing.sol\":1058:1065  uint256 */\n      0x00\n        /* \"NewStakeing.sol\":1085:1090  token */\n      immutable(\"0x3be13e3889ed1ce49da1c0df26b4313d4959f2ec77a18162387c5e1766a078a7\")\n        /* \"NewStakeing.sol\":1085:1100  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"NewStakeing.sol\":1101:1105  adrs */\n      dup4\n        /* \"NewStakeing.sol\":1085:1106  token.balanceOf(adrs) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_75\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_75:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_77\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_77:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n        /* \"NewStakeing.sol\":1078:1106  return token.balanceOf(adrs) */\n      swap1\n      pop\n        /* \"NewStakeing.sol\":1007:1114  function getBal(address adrs) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"NewStakeing.sol\":3379:4318  function claimStakedAmount(uint256 userid) public {... */\n    tag_29:\n        /* \"NewStakeing.sol\":3462:3465  cid */\n      0x03\n        /* \"NewStakeing.sol\":3462:3473  cid[userid] */\n      0x00\n        /* \"NewStakeing.sol\":3466:3472  userid */\n      dup3\n        /* \"NewStakeing.sol\":3462:3473  cid[userid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NewStakeing.sol\":3462:3481  cid[userid].userads */\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NewStakeing.sol\":3448:3481  msg.sender == cid[userid].userads */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NewStakeing.sol\":3448:3458  msg.sender */\n      caller\n        /* \"NewStakeing.sol\":3448:3481  msg.sender == cid[userid].userads */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"NewStakeing.sol\":3440:3527  require(msg.sender == cid[userid].userads, \"You can only claim your own staked amount\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_81:\n        /* \"NewStakeing.sol\":3547:3550  cid */\n      0x03\n        /* \"NewStakeing.sol\":3547:3558  cid[userid] */\n      0x00\n        /* \"NewStakeing.sol\":3551:3557  userid */\n      dup3\n        /* \"NewStakeing.sol\":3547:3558  cid[userid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NewStakeing.sol\":3547:3568  cid[userid].isAmountc */\n      0x04\n      add\n      0x15\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"NewStakeing.sol\":3546:3568  !cid[userid].isAmountc */\n      iszero\n        /* \"NewStakeing.sol\":3538:3607  require(!cid[userid].isAmountc, \"Reward already claimed your amount\") */\n      tag_84\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_84:\n        /* \"NewStakeing.sol\":3692:3701  1 minutes */\n      0x3c\n        /* \"NewStakeing.sol\":3669:3672  cid */\n      0x03\n        /* \"NewStakeing.sol\":3669:3680  cid[userid] */\n      0x00\n        /* \"NewStakeing.sol\":3673:3679  userid */\n      dup4\n        /* \"NewStakeing.sol\":3669:3680  cid[userid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NewStakeing.sol\":3669:3689  cid[userid].duration */\n      0x02\n      add\n      sload\n        /* \"NewStakeing.sol\":3669:3701  cid[userid].duration * 1 minutes */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"NewStakeing.sol\":3645:3648  cid */\n      0x03\n        /* \"NewStakeing.sol\":3645:3656  cid[userid] */\n      0x00\n        /* \"NewStakeing.sol\":3649:3655  userid */\n      dup4\n        /* \"NewStakeing.sol\":3645:3656  cid[userid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NewStakeing.sol\":3645:3666  cid[userid].startTime */\n      0x03\n      add\n      sload\n        /* \"NewStakeing.sol\":3645:3701  cid[userid].startTime + cid[userid].duration * 1 minutes */\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n        /* \"NewStakeing.sol\":3626:3641  block.timestamp */\n      timestamp\n        /* \"NewStakeing.sol\":3626:3701  block.timestamp >= cid[userid].startTime + cid[userid].duration * 1 minutes */\n      lt\n      iszero\n        /* \"NewStakeing.sol\":3618:3762  require(block.timestamp >= cid[userid].startTime + cid[userid].duration * 1 minutes, \"You can only claim after the staking duration has passed\") */\n      tag_91\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_92\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_91:\n        /* \"NewStakeing.sol\":3837:3841  true */\n      0x01\n        /* \"NewStakeing.sol\":3813:3816  cid */\n      0x03\n        /* \"NewStakeing.sol\":3813:3824  cid[userid] */\n      0x00\n        /* \"NewStakeing.sol\":3817:3823  userid */\n      dup4\n        /* \"NewStakeing.sol\":3813:3824  cid[userid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NewStakeing.sol\":3813:3834  cid[userid].isAmountc */\n      0x04\n      add\n      0x15\n        /* \"NewStakeing.sol\":3813:3841  cid[userid].isAmountc = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"NewStakeing.sol\":3855:3874  address userAddress */\n      0x00\n        /* \"NewStakeing.sol\":3876:3891  uint256 tokenId */\n      dup1\n        /* \"NewStakeing.sol\":3893:3907  uint256 reward */\n      0x00\n        /* \"NewStakeing.sol\":3909:3923  uint256 Amount */\n      dup1\n        /* \"NewStakeing.sol\":3927:3950  calculateReward(userid) */\n      tag_94\n        /* \"NewStakeing.sol\":3943:3949  userid */\n      dup6\n        /* \"NewStakeing.sol\":3927:3942  calculateReward */\n      tag_64\n        /* \"NewStakeing.sol\":3927:3950  calculateReward(userid) */\n      jump\t// in\n    tag_94:\n        /* \"NewStakeing.sol\":3854:3950  (address userAddress, uint256 tokenId, uint256 reward, uint256 Amount) = calculateReward(userid) */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n        /* \"NewStakeing.sol\":3965:3985  uint256 stakedAmount */\n      0x00\n        /* \"NewStakeing.sol\":3988:3991  cid */\n      0x03\n        /* \"NewStakeing.sol\":3988:3999  cid[userid] */\n      0x00\n        /* \"NewStakeing.sol\":3992:3998  userid */\n      dup8\n        /* \"NewStakeing.sol\":3988:3999  cid[userid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NewStakeing.sol\":3988:4006  cid[userid].amount */\n      0x01\n      add\n      sload\n        /* \"NewStakeing.sol\":3965:4006  uint256 stakedAmount = cid[userid].amount */\n      swap1\n      pop\n        /* \"NewStakeing.sol\":4081:4082  0 */\n      0x00\n        /* \"NewStakeing.sol\":4060:4063  cid */\n      0x03\n        /* \"NewStakeing.sol\":4060:4071  cid[userid] */\n      0x00\n        /* \"NewStakeing.sol\":4064:4070  userid */\n      dup9\n        /* \"NewStakeing.sol\":4060:4071  cid[userid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NewStakeing.sol\":4060:4078  cid[userid].amount */\n      0x01\n      add\n        /* \"NewStakeing.sol\":4060:4082  cid[userid].amount = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"NewStakeing.sol\":4199:4211  bool success */\n      0x00\n        /* \"NewStakeing.sol\":4214:4219  token */\n      immutable(\"0x3be13e3889ed1ce49da1c0df26b4313d4959f2ec77a18162387c5e1766a078a7\")\n        /* \"NewStakeing.sol\":4214:4228  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"NewStakeing.sol\":4229:4240  userAddress */\n      dup8\n        /* \"NewStakeing.sol\":4242:4254  stakedAmount */\n      dup5\n        /* \"NewStakeing.sol\":4214:4255  token.transfer(userAddress, stakedAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_95\n      swap3\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_98\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_98:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n        /* \"NewStakeing.sol\":4199:4255  bool success = token.transfer(userAddress, stakedAmount) */\n      swap1\n      pop\n        /* \"NewStakeing.sol\":4275:4282  success */\n      dup1\n        /* \"NewStakeing.sol\":4267:4308  require(success, \"Token transfer failed\") */\n      tag_101\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_101:\n        /* \"NewStakeing.sol\":3429:4318  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"NewStakeing.sol\":3379:4318  function claimStakedAmount(uint256 userid) public {... */\n      pop\n      jump\t// out\n        /* \"NewStakeing.sol\":1122:1834  function stakenow(uint amount, uint duration ) public returns (Stake memory ){... */\n    tag_33:\n        /* \"NewStakeing.sol\":1185:1197  Stake memory */\n      tag_104\n      tag_105\n      jump\t// in\n    tag_104:\n        /* \"NewStakeing.sol\":1237:1238  0 */\n      0x00\n        /* \"NewStakeing.sol\":1228:1234  amount */\n      dup4\n        /* \"NewStakeing.sol\":1228:1238  amount > 0 */\n      gt\n        /* \"NewStakeing.sol\":1220:1275  require(amount > 0, \"Amount must be greater than zero\") */\n      tag_107\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_107:\n        /* \"NewStakeing.sol\":1309:1310  2 */\n      0x02\n        /* \"NewStakeing.sol\":1297:1305  duration */\n      dup3\n        /* \"NewStakeing.sol\":1297:1310  duration == 2 */\n      eq\n        /* \"NewStakeing.sol\":1297:1327  duration == 2 || duration == 4 */\n      dup1\n      tag_110\n      jumpi\n      pop\n        /* \"NewStakeing.sol\":1326:1327  4 */\n      0x04\n        /* \"NewStakeing.sol\":1314:1322  duration */\n      dup3\n        /* \"NewStakeing.sol\":1314:1327  duration == 4 */\n      eq\n        /* \"NewStakeing.sol\":1297:1327  duration == 2 || duration == 4 */\n    tag_110:\n        /* \"NewStakeing.sol\":1297:1344  duration == 2 || duration == 4 || duration == 6 */\n      dup1\n      tag_111\n      jumpi\n      pop\n        /* \"NewStakeing.sol\":1343:1344  6 */\n      0x06\n        /* \"NewStakeing.sol\":1331:1339  duration */\n      dup3\n        /* \"NewStakeing.sol\":1331:1344  duration == 6 */\n      eq\n        /* \"NewStakeing.sol\":1297:1344  duration == 2 || duration == 4 || duration == 6 */\n    tag_111:\n        /* \"NewStakeing.sol\":1297:1361  duration == 2 || duration == 4 || duration == 6 || duration == 8 */\n      dup1\n      tag_112\n      jumpi\n      pop\n        /* \"NewStakeing.sol\":1360:1361  8 */\n      0x08\n        /* \"NewStakeing.sol\":1348:1356  duration */\n      dup3\n        /* \"NewStakeing.sol\":1348:1361  duration == 8 */\n      eq\n        /* \"NewStakeing.sol\":1297:1361  duration == 2 || duration == 4 || duration == 6 || duration == 8 */\n    tag_112:\n        /* \"NewStakeing.sol\":1297:1379  duration == 2 || duration == 4 || duration == 6 || duration == 8 || duration == 10 */\n      dup1\n      tag_113\n      jumpi\n      pop\n        /* \"NewStakeing.sol\":1377:1379  10 */\n      0x0a\n        /* \"NewStakeing.sol\":1365:1373  duration */\n      dup3\n        /* \"NewStakeing.sol\":1365:1379  duration == 10 */\n      eq\n        /* \"NewStakeing.sol\":1297:1379  duration == 2 || duration == 4 || duration == 6 || duration == 8 || duration == 10 */\n    tag_113:\n        /* \"NewStakeing.sol\":1288:1438  require( duration == 2 || duration == 4 || duration == 6 || duration == 8 || duration == 10,... */\n      tag_114\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_115\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_114:\n        /* \"NewStakeing.sol\":1451:1475  tokenIdCounter.current() */\n      tag_117\n        /* \"NewStakeing.sol\":1451:1465  tokenIdCounter */\n      0x00\n        /* \"NewStakeing.sol\":1451:1473  tokenIdCounter.current */\n      tag_118\n        /* \"NewStakeing.sol\":1451:1475  tokenIdCounter.current() */\n      jump\t// in\n    tag_117:\n      pop\n        /* \"NewStakeing.sol\":1486:1507  Stake memory newStake */\n      0x00\n        /* \"NewStakeing.sol\":1510:1600  Stake(tokenIdCounter.current(), amount, duration, block.timestamp, msg.sender,false,false) */\n      mload(0x40)\n      dup1\n      0xe0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"NewStakeing.sol\":1516:1540  tokenIdCounter.current() */\n      tag_119\n        /* \"NewStakeing.sol\":1516:1530  tokenIdCounter */\n      0x00\n        /* \"NewStakeing.sol\":1516:1538  tokenIdCounter.current */\n      tag_118\n        /* \"NewStakeing.sol\":1516:1540  tokenIdCounter.current() */\n      jump\t// in\n    tag_119:\n        /* \"NewStakeing.sol\":1510:1600  Stake(tokenIdCounter.current(), amount, duration, block.timestamp, msg.sender,false,false) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"NewStakeing.sol\":1542:1548  amount */\n      dup6\n        /* \"NewStakeing.sol\":1510:1600  Stake(tokenIdCounter.current(), amount, duration, block.timestamp, msg.sender,false,false) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"NewStakeing.sol\":1550:1558  duration */\n      dup5\n        /* \"NewStakeing.sol\":1510:1600  Stake(tokenIdCounter.current(), amount, duration, block.timestamp, msg.sender,false,false) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"NewStakeing.sol\":1560:1575  block.timestamp */\n      timestamp\n        /* \"NewStakeing.sol\":1510:1600  Stake(tokenIdCounter.current(), amount, duration, block.timestamp, msg.sender,false,false) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"NewStakeing.sol\":1577:1587  msg.sender */\n      caller\n        /* \"NewStakeing.sol\":1510:1600  Stake(tokenIdCounter.current(), amount, duration, block.timestamp, msg.sender,false,false) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"NewStakeing.sol\":1588:1593  false */\n      0x00\n        /* \"NewStakeing.sol\":1510:1600  Stake(tokenIdCounter.current(), amount, duration, block.timestamp, msg.sender,false,false) */\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n        /* \"NewStakeing.sol\":1594:1599  false */\n      0x00\n        /* \"NewStakeing.sol\":1510:1600  Stake(tokenIdCounter.current(), amount, duration, block.timestamp, msg.sender,false,false) */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"NewStakeing.sol\":1486:1600  Stake memory newStake = Stake(tokenIdCounter.current(), amount, duration, block.timestamp, msg.sender,false,false) */\n      swap1\n      pop\n        /* \"NewStakeing.sol\":1611:1621  userStakes */\n      0x02\n        /* \"NewStakeing.sol\":1611:1633  userStakes[msg.sender] */\n      0x00\n        /* \"NewStakeing.sol\":1622:1632  msg.sender */\n      caller\n        /* \"NewStakeing.sol\":1611:1633  userStakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NewStakeing.sol\":1639:1647  newStake */\n      dup2\n        /* \"NewStakeing.sol\":1611:1648  userStakes[msg.sender].push(newStake) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      exp(0x0100, 0x14)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0xc0\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      exp(0x0100, 0x15)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n      pop\n        /* \"NewStakeing.sol\":1659:1664  token */\n      immutable(\"0x3be13e3889ed1ce49da1c0df26b4313d4959f2ec77a18162387c5e1766a078a7\")\n        /* \"NewStakeing.sol\":1659:1677  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"NewStakeing.sol\":1678:1688  msg.sender */\n      caller\n        /* \"NewStakeing.sol\":1698:1702  this */\n      address\n        /* \"NewStakeing.sol\":1705:1711  amount */\n      dup8\n        /* \"NewStakeing.sol\":1659:1712  token.transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_124\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_124:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_125\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_125:\n      pop\n        /* \"NewStakeing.sol\":1753:1761  newStake */\n      dup1\n        /* \"NewStakeing.sol\":1723:1726  cid */\n      0x03\n        /* \"NewStakeing.sol\":1723:1752  cid[tokenIdCounter.current()] */\n      0x00\n        /* \"NewStakeing.sol\":1727:1751  tokenIdCounter.current() */\n      tag_126\n        /* \"NewStakeing.sol\":1727:1741  tokenIdCounter */\n      0x00\n        /* \"NewStakeing.sol\":1727:1749  tokenIdCounter.current */\n      tag_118\n        /* \"NewStakeing.sol\":1727:1751  tokenIdCounter.current() */\n      jump\t// in\n    tag_126:\n        /* \"NewStakeing.sol\":1723:1752  cid[tokenIdCounter.current()] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NewStakeing.sol\":1723:1761  cid[tokenIdCounter.current()]=newStake */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      exp(0x0100, 0x14)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0xc0\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      exp(0x0100, 0x15)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"NewStakeing.sol\":1772:1798  tokenIdCounter.increment() */\n      tag_127\n        /* \"NewStakeing.sol\":1772:1786  tokenIdCounter */\n      0x00\n        /* \"NewStakeing.sol\":1772:1796  tokenIdCounter.increment */\n      tag_128\n        /* \"NewStakeing.sol\":1772:1798  tokenIdCounter.increment() */\n      jump\t// in\n    tag_127:\n        /* \"NewStakeing.sol\":1816:1824  newStake */\n      dup1\n        /* \"NewStakeing.sol\":1809:1824  return newStake */\n      swap2\n      pop\n      pop\n        /* \"NewStakeing.sol\":1122:1834  function stakenow(uint amount, uint duration ) public returns (Stake memory ){... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"NewStakeing.sol\":2056:2163  function ViewDetail(address ads) public view returns (Stake[] memory) {... */\n    tag_38:\n        /* \"NewStakeing.sol\":2110:2124  Stake[] memory */\n      0x60\n        /* \"NewStakeing.sol\":2140:2150  userStakes */\n      0x02\n        /* \"NewStakeing.sol\":2140:2155  userStakes[ads] */\n      0x00\n        /* \"NewStakeing.sol\":2151:2154  ads */\n      dup4\n        /* \"NewStakeing.sol\":2140:2155  userStakes[ads] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NewStakeing.sol\":2133:2155  return userStakes[ads] */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      swap1\n    tag_130:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_131\n      jumpi\n      dup4\n      dup3\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n      mload(0x40)\n      dup1\n      0xe0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      0x15\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_130)\n    tag_131:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"NewStakeing.sol\":2056:2163  function ViewDetail(address ads) public view returns (Stake[] memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"NewStakeing.sol\":501:531  address public immutable owner */\n    tag_42:\n      immutable(\"0x1069acefefa00bf0f327a7661e77e50424d69531627561e1a6ab260aa8994529\")\n      dup2\n      jump\t// out\n        /* \"NewStakeing.sol\":2798:3371  function ClaimReward(uint256 userid) public {... */\n    tag_47:\n        /* \"NewStakeing.sol\":2875:2878  cid */\n      0x03\n        /* \"NewStakeing.sol\":2875:2886  cid[userid] */\n      0x00\n        /* \"NewStakeing.sol\":2879:2885  userid */\n      dup3\n        /* \"NewStakeing.sol\":2875:2886  cid[userid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NewStakeing.sol\":2875:2894  cid[userid].userads */\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NewStakeing.sol\":2861:2894  msg.sender == cid[userid].userads */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NewStakeing.sol\":2861:2871  msg.sender */\n      caller\n        /* \"NewStakeing.sol\":2861:2894  msg.sender == cid[userid].userads */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"NewStakeing.sol\":2853:2934  require(msg.sender == cid[userid].userads, \"You can only claim your own rewards\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_135\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_134:\n        /* \"NewStakeing.sol\":2954:2957  cid */\n      0x03\n        /* \"NewStakeing.sol\":2954:2965  cid[userid] */\n      0x00\n        /* \"NewStakeing.sol\":2958:2964  userid */\n      dup3\n        /* \"NewStakeing.sol\":2954:2965  cid[userid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NewStakeing.sol\":2954:2975  cid[userid].isClaimed */\n      0x04\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"NewStakeing.sol\":2953:2975  !cid[userid].isClaimed */\n      iszero\n        /* \"NewStakeing.sol\":2945:3002  require(!cid[userid].isClaimed, \"Reward already claimed\") */\n      tag_137\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_138\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_137:\n        /* \"NewStakeing.sol\":3077:3081  true */\n      0x01\n        /* \"NewStakeing.sol\":3053:3056  cid */\n      0x03\n        /* \"NewStakeing.sol\":3053:3064  cid[userid] */\n      0x00\n        /* \"NewStakeing.sol\":3057:3063  userid */\n      dup4\n        /* \"NewStakeing.sol\":3053:3064  cid[userid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NewStakeing.sol\":3053:3074  cid[userid].isClaimed */\n      0x04\n      add\n      0x14\n        /* \"NewStakeing.sol\":3053:3081  cid[userid].isClaimed = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"NewStakeing.sol\":3095:3114  address userAddress */\n      0x00\n        /* \"NewStakeing.sol\":3116:3131  uint256 tokenId */\n      dup1\n        /* \"NewStakeing.sol\":3133:3147  uint256 reward */\n      0x00\n        /* \"NewStakeing.sol\":3149:3168  uint256 totalAmount */\n      dup1\n        /* \"NewStakeing.sol\":3172:3195  calculateReward(userid) */\n      tag_140\n        /* \"NewStakeing.sol\":3188:3194  userid */\n      dup6\n        /* \"NewStakeing.sol\":3172:3187  calculateReward */\n      tag_64\n        /* \"NewStakeing.sol\":3172:3195  calculateReward(userid) */\n      jump\t// in\n    tag_140:\n        /* \"NewStakeing.sol\":3094:3195  (address userAddress, uint256 tokenId, uint256 reward, uint256 totalAmount) = calculateReward(userid) */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n        /* \"NewStakeing.sol\":3258:3270  bool success */\n      0x00\n        /* \"NewStakeing.sol\":3272:3277  token */\n      immutable(\"0x3be13e3889ed1ce49da1c0df26b4313d4959f2ec77a18162387c5e1766a078a7\")\n        /* \"NewStakeing.sol\":3272:3286  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"NewStakeing.sol\":3287:3298  userAddress */\n      dup7\n        /* \"NewStakeing.sol\":3300:3306  reward */\n      dup6\n        /* \"NewStakeing.sol\":3272:3307  token.transfer(userAddress, reward) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_141\n      swap3\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_141:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_143\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_143:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_144\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_144:\n        /* \"NewStakeing.sol\":3258:3307  bool success= token.transfer(userAddress, reward) */\n      swap1\n      pop\n        /* \"NewStakeing.sol\":3326:3333  success */\n      dup1\n        /* \"NewStakeing.sol\":3318:3359  require(success, \"Token transfer failed\") */\n      tag_145\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_146\n      swap1\n      tag_103\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_145:\n        /* \"NewStakeing.sol\":2842:3371  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"NewStakeing.sol\":2798:3371  function ClaimReward(uint256 userid) public {... */\n      pop\n      jump\t// out\n        /* \"NewStakeing.sol\":958:991  mapping(uint => Stake) public cid */\n    tag_50:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x04\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      dup1\n      0x04\n      add\n      0x15\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup8\n      jump\t// out\n        /* \"NewStakeing.sol\":905:950  mapping(address => Stake[]) public userStakes */\n    tag_56:\n      mstore(0x20, 0x02)\n      dup2\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_147\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_147:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x04\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      dup1\n      0x04\n      add\n      0x15\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup8\n      jump\t// out\n        /* \"NewStakeing.sol\":1950:2050  function chkid(uint id) public view returns(Stake memory){... */\n    tag_60:\n        /* \"NewStakeing.sol\":1994:2006  Stake memory */\n      tag_149\n      tag_105\n      jump\t// in\n    tag_149:\n        /* \"NewStakeing.sol\":2023:2026  cid */\n      0x03\n        /* \"NewStakeing.sol\":2023:2030  cid[id] */\n      0x00\n        /* \"NewStakeing.sol\":2027:2029  id */\n      dup4\n        /* \"NewStakeing.sol\":2023:2030  cid[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NewStakeing.sol\":2016:2030  return cid[id] */\n      mload(0x40)\n      dup1\n      0xe0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      0x15\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"NewStakeing.sol\":1950:2050  function chkid(uint id) public view returns(Stake memory){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"NewStakeing.sol\":2170:2788  function calculateReward(uint256 userid) public view returns (address,uint256, uint256, uint256)... */\n    tag_64:\n        /* \"NewStakeing.sol\":2232:2239  address */\n      0x00\n        /* \"NewStakeing.sol\":2240:2247  uint256 */\n      dup1\n        /* \"NewStakeing.sol\":2249:2256  uint256 */\n      0x00\n        /* \"NewStakeing.sol\":2258:2265  uint256 */\n      dup1\n        /* \"NewStakeing.sol\":2292:2307  uint256 endTime */\n      0x00\n        /* \"NewStakeing.sol\":2310:2325  block.timestamp */\n      timestamp\n        /* \"NewStakeing.sol\":2292:2325  uint256 endTime = block.timestamp */\n      swap1\n      pop\n        /* \"NewStakeing.sol\":2338:2354  uint256 duration */\n      0x00\n        /* \"NewStakeing.sol\":2368:2371  cid */\n      0x03\n        /* \"NewStakeing.sol\":2368:2379  cid[userid] */\n      0x00\n        /* \"NewStakeing.sol\":2372:2378  userid */\n      dup9\n        /* \"NewStakeing.sol\":2368:2379  cid[userid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NewStakeing.sol\":2368:2389  cid[userid].startTime */\n      0x03\n      add\n      sload\n        /* \"NewStakeing.sol\":2357:2364  endTime */\n      dup3\n        /* \"NewStakeing.sol\":2357:2389  endTime -  cid[userid].startTime */\n      tag_152\n      swap2\n      swap1\n      tag_153\n      jump\t// in\n    tag_152:\n        /* \"NewStakeing.sol\":2338:2389  uint256 duration = endTime -  cid[userid].startTime */\n      swap1\n      pop\n        /* \"NewStakeing.sol\":2439:2441  60 */\n      0x3c\n        /* \"NewStakeing.sol\":2416:2419  cid */\n      0x03\n        /* \"NewStakeing.sol\":2416:2427  cid[userid] */\n      0x00\n        /* \"NewStakeing.sol\":2420:2426  userid */\n      dup10\n        /* \"NewStakeing.sol\":2416:2427  cid[userid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NewStakeing.sol\":2416:2436  cid[userid].duration */\n      0x02\n      add\n      sload\n        /* \"NewStakeing.sol\":2416:2441  cid[userid].duration * 60 */\n      tag_154\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_154:\n        /* \"NewStakeing.sol\":2404:2412  duration */\n      dup2\n        /* \"NewStakeing.sol\":2404:2441  duration >  cid[userid].duration * 60 */\n      gt\n        /* \"NewStakeing.sol\":2400:2506  if (duration >  cid[userid].duration * 60) {... */\n      iszero\n      tag_155\n      jumpi\n        /* \"NewStakeing.sol\":2492:2494  60 */\n      0x3c\n        /* \"NewStakeing.sol\":2469:2472  cid */\n      0x03\n        /* \"NewStakeing.sol\":2469:2480  cid[userid] */\n      0x00\n        /* \"NewStakeing.sol\":2473:2479  userid */\n      dup10\n        /* \"NewStakeing.sol\":2469:2480  cid[userid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NewStakeing.sol\":2469:2489  cid[userid].duration */\n      0x02\n      add\n      sload\n        /* \"NewStakeing.sol\":2469:2494  cid[userid].duration * 60 */\n      tag_156\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_156:\n        /* \"NewStakeing.sol\":2458:2494  duration = cid[userid].duration * 60 */\n      swap1\n      pop\n        /* \"NewStakeing.sol\":2400:2506  if (duration >  cid[userid].duration * 60) {... */\n    tag_155:\n        /* \"NewStakeing.sol\":2648:2662  uint256 reward */\n      0x00\n        /* \"NewStakeing.sol\":2676:2677  1 */\n      0x01\n        /* \"NewStakeing.sol\":2665:2673  duration */\n      dup3\n        /* \"NewStakeing.sol\":2665:2677  duration * 1 */\n      tag_157\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_157:\n        /* \"NewStakeing.sol\":2648:2677  uint256 reward = duration * 1 */\n      swap1\n      pop\n        /* \"NewStakeing.sol\":2698:2701  cid */\n      0x03\n        /* \"NewStakeing.sol\":2698:2709  cid[userid] */\n      0x00\n        /* \"NewStakeing.sol\":2702:2708  userid */\n      dup10\n        /* \"NewStakeing.sol\":2698:2709  cid[userid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NewStakeing.sol\":2698:2717  cid[userid].userads */\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NewStakeing.sol\":2719:2722  cid */\n      0x03\n        /* \"NewStakeing.sol\":2719:2730  cid[userid] */\n      0x00\n        /* \"NewStakeing.sol\":2723:2729  userid */\n      dup11\n        /* \"NewStakeing.sol\":2719:2730  cid[userid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NewStakeing.sol\":2719:2739  cid[userid].tokenIdc */\n      0x00\n      add\n      sload\n        /* \"NewStakeing.sol\":2741:2747  reward */\n      dup3\n        /* \"NewStakeing.sol\":2760:2763  cid */\n      0x03\n        /* \"NewStakeing.sol\":2760:2771  cid[userid] */\n      0x00\n        /* \"NewStakeing.sol\":2764:2770  userid */\n      dup13\n        /* \"NewStakeing.sol\":2760:2771  cid[userid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NewStakeing.sol\":2760:2778  cid[userid].amount */\n      0x01\n      add\n      sload\n        /* \"NewStakeing.sol\":2750:2756  reward */\n      dup5\n        /* \"NewStakeing.sol\":2750:2778  reward +  cid[userid].amount */\n      tag_158\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_158:\n        /* \"NewStakeing.sol\":2690:2780  return (cid[userid].userads, cid[userid].tokenIdc, reward, (reward +  cid[userid].amount)) */\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      pop\n      pop\n      pop\n        /* \"NewStakeing.sol\":2170:2788  function calculateReward(uint256 userid) public view returns (address,uint256, uint256, uint256)... */\n      swap2\n      swap4\n      pop\n      swap2\n      swap4\n      jump\t// out\n        /* \"NewStakeing.sol\":464:494  MyToken public immutable token */\n    tag_68:\n      immutable(\"0x3be13e3889ed1ce49da1c0df26b4313d4959f2ec77a18162387c5e1766a078a7\")\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":892:899  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:925  counter */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      0x00\n      add\n      sload\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":911:932  return counter._value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1050:1051  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1039  counter */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1046  counter._value */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n      pop\n      jump\t// out\n    tag_105:\n      mload(0x40)\n      dup1\n      0xe0\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      iszero(iszero(0x00))\n      dup2\n      mstore\n      0x20\n      add\n      iszero(iszero(0x00))\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:121   */\n    tag_161:\n        /* \"#utility.yul\":74:80   */\n      0x00\n        /* \"#utility.yul\":108:113   */\n      dup2\n        /* \"#utility.yul\":102:114   */\n      mload\n        /* \"#utility.yul\":92:114   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:121   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":127:311   */\n    tag_162:\n        /* \"#utility.yul\":226:237   */\n      0x00\n        /* \"#utility.yul\":260:266   */\n      dup3\n        /* \"#utility.yul\":255:258   */\n      dup3\n        /* \"#utility.yul\":248:267   */\n      mstore\n        /* \"#utility.yul\":300:304   */\n      0x20\n        /* \"#utility.yul\":295:298   */\n      dup3\n        /* \"#utility.yul\":291:305   */\n      add\n        /* \"#utility.yul\":276:305   */\n      swap1\n      pop\n        /* \"#utility.yul\":127:311   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":317:449   */\n    tag_163:\n        /* \"#utility.yul\":384:388   */\n      0x00\n        /* \"#utility.yul\":407:410   */\n      dup2\n        /* \"#utility.yul\":399:410   */\n      swap1\n      pop\n        /* \"#utility.yul\":437:441   */\n      0x20\n        /* \"#utility.yul\":432:435   */\n      dup3\n        /* \"#utility.yul\":428:442   */\n      add\n        /* \"#utility.yul\":420:442   */\n      swap1\n      pop\n        /* \"#utility.yul\":317:449   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":455:532   */\n    tag_164:\n        /* \"#utility.yul\":492:499   */\n      0x00\n        /* \"#utility.yul\":521:526   */\n      dup2\n        /* \"#utility.yul\":510:526   */\n      swap1\n      pop\n        /* \"#utility.yul\":455:532   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":538:646   */\n    tag_165:\n        /* \"#utility.yul\":615:639   */\n      tag_224\n        /* \"#utility.yul\":633:638   */\n      dup2\n        /* \"#utility.yul\":615:639   */\n      tag_164\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":610:613   */\n      dup3\n        /* \"#utility.yul\":603:640   */\n      mstore\n        /* \"#utility.yul\":538:646   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":652:831   */\n    tag_166:\n        /* \"#utility.yul\":721:731   */\n      0x00\n        /* \"#utility.yul\":742:788   */\n      tag_226\n        /* \"#utility.yul\":784:787   */\n      dup4\n        /* \"#utility.yul\":776:782   */\n      dup4\n        /* \"#utility.yul\":742:788   */\n      tag_165\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":820:824   */\n      0x20\n        /* \"#utility.yul\":815:818   */\n      dup4\n        /* \"#utility.yul\":811:825   */\n      add\n        /* \"#utility.yul\":797:825   */\n      swap1\n      pop\n        /* \"#utility.yul\":652:831   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":837:950   */\n    tag_167:\n        /* \"#utility.yul\":907:911   */\n      0x00\n        /* \"#utility.yul\":939:943   */\n      0x20\n        /* \"#utility.yul\":934:937   */\n      dup3\n        /* \"#utility.yul\":930:944   */\n      add\n        /* \"#utility.yul\":922:944   */\n      swap1\n      pop\n        /* \"#utility.yul\":837:950   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":986:1718   */\n    tag_168:\n        /* \"#utility.yul\":1105:1108   */\n      0x00\n        /* \"#utility.yul\":1134:1188   */\n      tag_229\n        /* \"#utility.yul\":1182:1187   */\n      dup3\n        /* \"#utility.yul\":1134:1188   */\n      tag_161\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":1204:1290   */\n      tag_230\n        /* \"#utility.yul\":1283:1289   */\n      dup2\n        /* \"#utility.yul\":1278:1281   */\n      dup6\n        /* \"#utility.yul\":1204:1290   */\n      tag_162\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":1197:1290   */\n      swap4\n      pop\n        /* \"#utility.yul\":1314:1370   */\n      tag_231\n        /* \"#utility.yul\":1364:1369   */\n      dup4\n        /* \"#utility.yul\":1314:1370   */\n      tag_163\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":1393:1400   */\n      dup1\n        /* \"#utility.yul\":1424:1425   */\n      0x00\n        /* \"#utility.yul\":1409:1693   */\n    tag_232:\n        /* \"#utility.yul\":1434:1440   */\n      dup4\n        /* \"#utility.yul\":1431:1432   */\n      dup2\n        /* \"#utility.yul\":1428:1441   */\n      lt\n        /* \"#utility.yul\":1409:1693   */\n      iszero\n      tag_234\n      jumpi\n        /* \"#utility.yul\":1510:1516   */\n      dup2\n        /* \"#utility.yul\":1504:1517   */\n      mload\n        /* \"#utility.yul\":1537:1600   */\n      tag_235\n        /* \"#utility.yul\":1596:1599   */\n      dup9\n        /* \"#utility.yul\":1581:1594   */\n      dup3\n        /* \"#utility.yul\":1537:1600   */\n      tag_166\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":1530:1600   */\n      swap8\n      pop\n        /* \"#utility.yul\":1623:1683   */\n      tag_236\n        /* \"#utility.yul\":1676:1682   */\n      dup4\n        /* \"#utility.yul\":1623:1683   */\n      tag_167\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":1613:1683   */\n      swap3\n      pop\n        /* \"#utility.yul\":1469:1693   */\n      pop\n        /* \"#utility.yul\":1456:1457   */\n      0x01\n        /* \"#utility.yul\":1453:1454   */\n      dup2\n        /* \"#utility.yul\":1449:1458   */\n      add\n        /* \"#utility.yul\":1444:1458   */\n      swap1\n      pop\n        /* \"#utility.yul\":1409:1693   */\n      jump(tag_232)\n    tag_234:\n        /* \"#utility.yul\":1413:1427   */\n      pop\n        /* \"#utility.yul\":1709:1712   */\n      dup6\n        /* \"#utility.yul\":1702:1712   */\n      swap4\n      pop\n        /* \"#utility.yul\":1110:1718   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":986:1718   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1724:2097   */\n    tag_19:\n        /* \"#utility.yul\":1867:1871   */\n      0x00\n        /* \"#utility.yul\":1905:1907   */\n      0x20\n        /* \"#utility.yul\":1894:1903   */\n      dup3\n        /* \"#utility.yul\":1890:1908   */\n      add\n        /* \"#utility.yul\":1882:1908   */\n      swap1\n      pop\n        /* \"#utility.yul\":1954:1963   */\n      dup2\n        /* \"#utility.yul\":1948:1952   */\n      dup2\n        /* \"#utility.yul\":1944:1964   */\n      sub\n        /* \"#utility.yul\":1940:1941   */\n      0x00\n        /* \"#utility.yul\":1929:1938   */\n      dup4\n        /* \"#utility.yul\":1925:1942   */\n      add\n        /* \"#utility.yul\":1918:1965   */\n      mstore\n        /* \"#utility.yul\":1982:2090   */\n      tag_238\n        /* \"#utility.yul\":2085:2089   */\n      dup2\n        /* \"#utility.yul\":2076:2082   */\n      dup5\n        /* \"#utility.yul\":1982:2090   */\n      tag_168\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":1974:2090   */\n      swap1\n      pop\n        /* \"#utility.yul\":1724:2097   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2184:2301   */\n    tag_170:\n        /* \"#utility.yul\":2293:2294   */\n      0x00\n        /* \"#utility.yul\":2290:2291   */\n      dup1\n        /* \"#utility.yul\":2283:2295   */\n      revert\n        /* \"#utility.yul\":2430:2556   */\n    tag_172:\n        /* \"#utility.yul\":2467:2474   */\n      0x00\n        /* \"#utility.yul\":2507:2549   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2500:2505   */\n      dup3\n        /* \"#utility.yul\":2496:2550   */\n      and\n        /* \"#utility.yul\":2485:2550   */\n      swap1\n      pop\n        /* \"#utility.yul\":2430:2556   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2562:2658   */\n    tag_173:\n        /* \"#utility.yul\":2599:2606   */\n      0x00\n        /* \"#utility.yul\":2628:2652   */\n      tag_244\n        /* \"#utility.yul\":2646:2651   */\n      dup3\n        /* \"#utility.yul\":2628:2652   */\n      tag_172\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":2617:2652   */\n      swap1\n      pop\n        /* \"#utility.yul\":2562:2658   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2664:2786   */\n    tag_174:\n        /* \"#utility.yul\":2737:2761   */\n      tag_246\n        /* \"#utility.yul\":2755:2760   */\n      dup2\n        /* \"#utility.yul\":2737:2761   */\n      tag_173\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":2730:2735   */\n      dup2\n        /* \"#utility.yul\":2727:2762   */\n      eq\n        /* \"#utility.yul\":2717:2780   */\n      tag_247\n      jumpi\n        /* \"#utility.yul\":2776:2777   */\n      0x00\n        /* \"#utility.yul\":2773:2774   */\n      dup1\n        /* \"#utility.yul\":2766:2778   */\n      revert\n        /* \"#utility.yul\":2717:2780   */\n    tag_247:\n        /* \"#utility.yul\":2664:2786   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2792:2931   */\n    tag_175:\n        /* \"#utility.yul\":2838:2843   */\n      0x00\n        /* \"#utility.yul\":2876:2882   */\n      dup2\n        /* \"#utility.yul\":2863:2883   */\n      calldataload\n        /* \"#utility.yul\":2854:2883   */\n      swap1\n      pop\n        /* \"#utility.yul\":2892:2925   */\n      tag_249\n        /* \"#utility.yul\":2919:2924   */\n      dup2\n        /* \"#utility.yul\":2892:2925   */\n      tag_174\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":2792:2931   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2937:3266   */\n    tag_22:\n        /* \"#utility.yul\":2996:3002   */\n      0x00\n        /* \"#utility.yul\":3045:3047   */\n      0x20\n        /* \"#utility.yul\":3033:3042   */\n      dup3\n        /* \"#utility.yul\":3024:3031   */\n      dup5\n        /* \"#utility.yul\":3020:3043   */\n      sub\n        /* \"#utility.yul\":3016:3048   */\n      slt\n        /* \"#utility.yul\":3013:3132   */\n      iszero\n      tag_251\n      jumpi\n        /* \"#utility.yul\":3051:3130   */\n      tag_252\n      tag_170\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":3013:3132   */\n    tag_251:\n        /* \"#utility.yul\":3171:3172   */\n      0x00\n        /* \"#utility.yul\":3196:3249   */\n      tag_253\n        /* \"#utility.yul\":3241:3248   */\n      dup5\n        /* \"#utility.yul\":3232:3238   */\n      dup3\n        /* \"#utility.yul\":3221:3230   */\n      dup6\n        /* \"#utility.yul\":3217:3239   */\n      add\n        /* \"#utility.yul\":3196:3249   */\n      tag_175\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":3186:3249   */\n      swap2\n      pop\n        /* \"#utility.yul\":3142:3259   */\n      pop\n        /* \"#utility.yul\":2937:3266   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3272:3390   */\n    tag_176:\n        /* \"#utility.yul\":3359:3383   */\n      tag_255\n        /* \"#utility.yul\":3377:3382   */\n      dup2\n        /* \"#utility.yul\":3359:3383   */\n      tag_164\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":3354:3357   */\n      dup3\n        /* \"#utility.yul\":3347:3384   */\n      mstore\n        /* \"#utility.yul\":3272:3390   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3396:3618   */\n    tag_25:\n        /* \"#utility.yul\":3489:3493   */\n      0x00\n        /* \"#utility.yul\":3527:3529   */\n      0x20\n        /* \"#utility.yul\":3516:3525   */\n      dup3\n        /* \"#utility.yul\":3512:3530   */\n      add\n        /* \"#utility.yul\":3504:3530   */\n      swap1\n      pop\n        /* \"#utility.yul\":3540:3611   */\n      tag_257\n        /* \"#utility.yul\":3608:3609   */\n      0x00\n        /* \"#utility.yul\":3597:3606   */\n      dup4\n        /* \"#utility.yul\":3593:3610   */\n      add\n        /* \"#utility.yul\":3584:3590   */\n      dup5\n        /* \"#utility.yul\":3540:3611   */\n      tag_176\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":3396:3618   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3624:3746   */\n    tag_177:\n        /* \"#utility.yul\":3697:3721   */\n      tag_259\n        /* \"#utility.yul\":3715:3720   */\n      dup2\n        /* \"#utility.yul\":3697:3721   */\n      tag_164\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":3690:3695   */\n      dup2\n        /* \"#utility.yul\":3687:3722   */\n      eq\n        /* \"#utility.yul\":3677:3740   */\n      tag_260\n      jumpi\n        /* \"#utility.yul\":3736:3737   */\n      0x00\n        /* \"#utility.yul\":3733:3734   */\n      dup1\n        /* \"#utility.yul\":3726:3738   */\n      revert\n        /* \"#utility.yul\":3677:3740   */\n    tag_260:\n        /* \"#utility.yul\":3624:3746   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3752:3891   */\n    tag_178:\n        /* \"#utility.yul\":3798:3803   */\n      0x00\n        /* \"#utility.yul\":3836:3842   */\n      dup2\n        /* \"#utility.yul\":3823:3843   */\n      calldataload\n        /* \"#utility.yul\":3814:3843   */\n      swap1\n      pop\n        /* \"#utility.yul\":3852:3885   */\n      tag_262\n        /* \"#utility.yul\":3879:3884   */\n      dup2\n        /* \"#utility.yul\":3852:3885   */\n      tag_177\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":3752:3891   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3897:4226   */\n    tag_28:\n        /* \"#utility.yul\":3956:3962   */\n      0x00\n        /* \"#utility.yul\":4005:4007   */\n      0x20\n        /* \"#utility.yul\":3993:4002   */\n      dup3\n        /* \"#utility.yul\":3984:3991   */\n      dup5\n        /* \"#utility.yul\":3980:4003   */\n      sub\n        /* \"#utility.yul\":3976:4008   */\n      slt\n        /* \"#utility.yul\":3973:4092   */\n      iszero\n      tag_264\n      jumpi\n        /* \"#utility.yul\":4011:4090   */\n      tag_265\n      tag_170\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":3973:4092   */\n    tag_264:\n        /* \"#utility.yul\":4131:4132   */\n      0x00\n        /* \"#utility.yul\":4156:4209   */\n      tag_266\n        /* \"#utility.yul\":4201:4208   */\n      dup5\n        /* \"#utility.yul\":4192:4198   */\n      dup3\n        /* \"#utility.yul\":4181:4190   */\n      dup6\n        /* \"#utility.yul\":4177:4199   */\n      add\n        /* \"#utility.yul\":4156:4209   */\n      tag_178\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":4146:4209   */\n      swap2\n      pop\n        /* \"#utility.yul\":4102:4219   */\n      pop\n        /* \"#utility.yul\":3897:4226   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4232:4706   */\n    tag_32:\n        /* \"#utility.yul\":4300:4306   */\n      0x00\n        /* \"#utility.yul\":4308:4314   */\n      dup1\n        /* \"#utility.yul\":4357:4359   */\n      0x40\n        /* \"#utility.yul\":4345:4354   */\n      dup4\n        /* \"#utility.yul\":4336:4343   */\n      dup6\n        /* \"#utility.yul\":4332:4355   */\n      sub\n        /* \"#utility.yul\":4328:4360   */\n      slt\n        /* \"#utility.yul\":4325:4444   */\n      iszero\n      tag_268\n      jumpi\n        /* \"#utility.yul\":4363:4442   */\n      tag_269\n      tag_170\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":4325:4444   */\n    tag_268:\n        /* \"#utility.yul\":4483:4484   */\n      0x00\n        /* \"#utility.yul\":4508:4561   */\n      tag_270\n        /* \"#utility.yul\":4553:4560   */\n      dup6\n        /* \"#utility.yul\":4544:4550   */\n      dup3\n        /* \"#utility.yul\":4533:4542   */\n      dup7\n        /* \"#utility.yul\":4529:4551   */\n      add\n        /* \"#utility.yul\":4508:4561   */\n      tag_178\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":4498:4561   */\n      swap3\n      pop\n        /* \"#utility.yul\":4454:4571   */\n      pop\n        /* \"#utility.yul\":4610:4612   */\n      0x20\n        /* \"#utility.yul\":4636:4689   */\n      tag_271\n        /* \"#utility.yul\":4681:4688   */\n      dup6\n        /* \"#utility.yul\":4672:4678   */\n      dup3\n        /* \"#utility.yul\":4661:4670   */\n      dup7\n        /* \"#utility.yul\":4657:4679   */\n      add\n        /* \"#utility.yul\":4636:4689   */\n      tag_178\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":4626:4689   */\n      swap2\n      pop\n        /* \"#utility.yul\":4581:4699   */\n      pop\n        /* \"#utility.yul\":4232:4706   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4712:4820   */\n    tag_179:\n        /* \"#utility.yul\":4789:4813   */\n      tag_273\n        /* \"#utility.yul\":4807:4812   */\n      dup2\n        /* \"#utility.yul\":4789:4813   */\n      tag_173\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":4784:4787   */\n      dup3\n        /* \"#utility.yul\":4777:4814   */\n      mstore\n        /* \"#utility.yul\":4712:4820   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4826:4916   */\n    tag_180:\n        /* \"#utility.yul\":4860:4867   */\n      0x00\n        /* \"#utility.yul\":4903:4908   */\n      dup2\n        /* \"#utility.yul\":4896:4909   */\n      iszero\n        /* \"#utility.yul\":4889:4910   */\n      iszero\n        /* \"#utility.yul\":4878:4910   */\n      swap1\n      pop\n        /* \"#utility.yul\":4826:4916   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4922:5021   */\n    tag_181:\n        /* \"#utility.yul\":4993:5014   */\n      tag_276\n        /* \"#utility.yul\":5008:5013   */\n      dup2\n        /* \"#utility.yul\":4993:5014   */\n      tag_180\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":4988:4991   */\n      dup3\n        /* \"#utility.yul\":4981:5015   */\n      mstore\n        /* \"#utility.yul\":4922:5021   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5099:6488   */\n    tag_182:\n        /* \"#utility.yul\":5242:5246   */\n      0xe0\n        /* \"#utility.yul\":5237:5240   */\n      dup3\n        /* \"#utility.yul\":5233:5247   */\n      add\n        /* \"#utility.yul\":5333:5337   */\n      0x00\n        /* \"#utility.yul\":5326:5331   */\n      dup3\n        /* \"#utility.yul\":5322:5338   */\n      add\n        /* \"#utility.yul\":5316:5339   */\n      mload\n        /* \"#utility.yul\":5352:5415   */\n      tag_278\n        /* \"#utility.yul\":5409:5413   */\n      0x00\n        /* \"#utility.yul\":5404:5407   */\n      dup6\n        /* \"#utility.yul\":5400:5414   */\n      add\n        /* \"#utility.yul\":5386:5398   */\n      dup3\n        /* \"#utility.yul\":5352:5415   */\n      tag_165\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":5257:5425   */\n      pop\n        /* \"#utility.yul\":5509:5513   */\n      0x20\n        /* \"#utility.yul\":5502:5507   */\n      dup3\n        /* \"#utility.yul\":5498:5514   */\n      add\n        /* \"#utility.yul\":5492:5515   */\n      mload\n        /* \"#utility.yul\":5528:5591   */\n      tag_279\n        /* \"#utility.yul\":5585:5589   */\n      0x20\n        /* \"#utility.yul\":5580:5583   */\n      dup6\n        /* \"#utility.yul\":5576:5590   */\n      add\n        /* \"#utility.yul\":5562:5574   */\n      dup3\n        /* \"#utility.yul\":5528:5591   */\n      tag_165\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":5435:5601   */\n      pop\n        /* \"#utility.yul\":5687:5691   */\n      0x40\n        /* \"#utility.yul\":5680:5685   */\n      dup3\n        /* \"#utility.yul\":5676:5692   */\n      add\n        /* \"#utility.yul\":5670:5693   */\n      mload\n        /* \"#utility.yul\":5706:5769   */\n      tag_280\n        /* \"#utility.yul\":5763:5767   */\n      0x40\n        /* \"#utility.yul\":5758:5761   */\n      dup6\n        /* \"#utility.yul\":5754:5768   */\n      add\n        /* \"#utility.yul\":5740:5752   */\n      dup3\n        /* \"#utility.yul\":5706:5769   */\n      tag_165\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":5611:5779   */\n      pop\n        /* \"#utility.yul\":5866:5870   */\n      0x60\n        /* \"#utility.yul\":5859:5864   */\n      dup3\n        /* \"#utility.yul\":5855:5871   */\n      add\n        /* \"#utility.yul\":5849:5872   */\n      mload\n        /* \"#utility.yul\":5885:5948   */\n      tag_281\n        /* \"#utility.yul\":5942:5946   */\n      0x60\n        /* \"#utility.yul\":5937:5940   */\n      dup6\n        /* \"#utility.yul\":5933:5947   */\n      add\n        /* \"#utility.yul\":5919:5931   */\n      dup3\n        /* \"#utility.yul\":5885:5948   */\n      tag_165\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":5789:5958   */\n      pop\n        /* \"#utility.yul\":6043:6047   */\n      0x80\n        /* \"#utility.yul\":6036:6041   */\n      dup3\n        /* \"#utility.yul\":6032:6048   */\n      add\n        /* \"#utility.yul\":6026:6049   */\n      mload\n        /* \"#utility.yul\":6062:6125   */\n      tag_282\n        /* \"#utility.yul\":6119:6123   */\n      0x80\n        /* \"#utility.yul\":6114:6117   */\n      dup6\n        /* \"#utility.yul\":6110:6124   */\n      add\n        /* \"#utility.yul\":6096:6108   */\n      dup3\n        /* \"#utility.yul\":6062:6125   */\n      tag_179\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":5968:6135   */\n      pop\n        /* \"#utility.yul\":6222:6226   */\n      0xa0\n        /* \"#utility.yul\":6215:6220   */\n      dup3\n        /* \"#utility.yul\":6211:6227   */\n      add\n        /* \"#utility.yul\":6205:6228   */\n      mload\n        /* \"#utility.yul\":6241:6298   */\n      tag_283\n        /* \"#utility.yul\":6292:6296   */\n      0xa0\n        /* \"#utility.yul\":6287:6290   */\n      dup6\n        /* \"#utility.yul\":6283:6297   */\n      add\n        /* \"#utility.yul\":6269:6281   */\n      dup3\n        /* \"#utility.yul\":6241:6298   */\n      tag_181\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":6145:6308   */\n      pop\n        /* \"#utility.yul\":6395:6399   */\n      0xc0\n        /* \"#utility.yul\":6388:6393   */\n      dup3\n        /* \"#utility.yul\":6384:6400   */\n      add\n        /* \"#utility.yul\":6378:6401   */\n      mload\n        /* \"#utility.yul\":6414:6471   */\n      tag_284\n        /* \"#utility.yul\":6465:6469   */\n      0xc0\n        /* \"#utility.yul\":6460:6463   */\n      dup6\n        /* \"#utility.yul\":6456:6470   */\n      add\n        /* \"#utility.yul\":6442:6454   */\n      dup3\n        /* \"#utility.yul\":6414:6471   */\n      tag_181\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":6318:6481   */\n      pop\n        /* \"#utility.yul\":5211:6488   */\n      pop\n        /* \"#utility.yul\":5099:6488   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6494:6809   */\n    tag_35:\n        /* \"#utility.yul\":6633:6637   */\n      0x00\n        /* \"#utility.yul\":6671:6674   */\n      0xe0\n        /* \"#utility.yul\":6660:6669   */\n      dup3\n        /* \"#utility.yul\":6656:6675   */\n      add\n        /* \"#utility.yul\":6648:6675   */\n      swap1\n      pop\n        /* \"#utility.yul\":6685:6802   */\n      tag_286\n        /* \"#utility.yul\":6799:6800   */\n      0x00\n        /* \"#utility.yul\":6788:6797   */\n      dup4\n        /* \"#utility.yul\":6784:6801   */\n      add\n        /* \"#utility.yul\":6775:6781   */\n      dup5\n        /* \"#utility.yul\":6685:6802   */\n      tag_182\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":6494:6809   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6815:6952   */\n    tag_183:\n        /* \"#utility.yul\":6905:6911   */\n      0x00\n        /* \"#utility.yul\":6939:6944   */\n      dup2\n        /* \"#utility.yul\":6933:6945   */\n      mload\n        /* \"#utility.yul\":6923:6945   */\n      swap1\n      pop\n        /* \"#utility.yul\":6815:6952   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6958:7165   */\n    tag_184:\n        /* \"#utility.yul\":7080:7091   */\n      0x00\n        /* \"#utility.yul\":7114:7120   */\n      dup3\n        /* \"#utility.yul\":7109:7112   */\n      dup3\n        /* \"#utility.yul\":7102:7121   */\n      mstore\n        /* \"#utility.yul\":7154:7158   */\n      0x20\n        /* \"#utility.yul\":7149:7152   */\n      dup3\n        /* \"#utility.yul\":7145:7159   */\n      add\n        /* \"#utility.yul\":7130:7159   */\n      swap1\n      pop\n        /* \"#utility.yul\":6958:7165   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7171:7326   */\n    tag_185:\n        /* \"#utility.yul\":7261:7265   */\n      0x00\n        /* \"#utility.yul\":7284:7287   */\n      dup2\n        /* \"#utility.yul\":7276:7287   */\n      swap1\n      pop\n        /* \"#utility.yul\":7314:7318   */\n      0x20\n        /* \"#utility.yul\":7309:7312   */\n      dup3\n        /* \"#utility.yul\":7305:7319   */\n      add\n        /* \"#utility.yul\":7297:7319   */\n      swap1\n      pop\n        /* \"#utility.yul\":7171:7326   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7404:8783   */\n    tag_186:\n        /* \"#utility.yul\":7537:7541   */\n      0xe0\n        /* \"#utility.yul\":7532:7535   */\n      dup3\n        /* \"#utility.yul\":7528:7542   */\n      add\n        /* \"#utility.yul\":7628:7632   */\n      0x00\n        /* \"#utility.yul\":7621:7626   */\n      dup3\n        /* \"#utility.yul\":7617:7633   */\n      add\n        /* \"#utility.yul\":7611:7634   */\n      mload\n        /* \"#utility.yul\":7647:7710   */\n      tag_291\n        /* \"#utility.yul\":7704:7708   */\n      0x00\n        /* \"#utility.yul\":7699:7702   */\n      dup6\n        /* \"#utility.yul\":7695:7709   */\n      add\n        /* \"#utility.yul\":7681:7693   */\n      dup3\n        /* \"#utility.yul\":7647:7710   */\n      tag_165\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":7552:7720   */\n      pop\n        /* \"#utility.yul\":7804:7808   */\n      0x20\n        /* \"#utility.yul\":7797:7802   */\n      dup3\n        /* \"#utility.yul\":7793:7809   */\n      add\n        /* \"#utility.yul\":7787:7810   */\n      mload\n        /* \"#utility.yul\":7823:7886   */\n      tag_292\n        /* \"#utility.yul\":7880:7884   */\n      0x20\n        /* \"#utility.yul\":7875:7878   */\n      dup6\n        /* \"#utility.yul\":7871:7885   */\n      add\n        /* \"#utility.yul\":7857:7869   */\n      dup3\n        /* \"#utility.yul\":7823:7886   */\n      tag_165\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":7730:7896   */\n      pop\n        /* \"#utility.yul\":7982:7986   */\n      0x40\n        /* \"#utility.yul\":7975:7980   */\n      dup3\n        /* \"#utility.yul\":7971:7987   */\n      add\n        /* \"#utility.yul\":7965:7988   */\n      mload\n        /* \"#utility.yul\":8001:8064   */\n      tag_293\n        /* \"#utility.yul\":8058:8062   */\n      0x40\n        /* \"#utility.yul\":8053:8056   */\n      dup6\n        /* \"#utility.yul\":8049:8063   */\n      add\n        /* \"#utility.yul\":8035:8047   */\n      dup3\n        /* \"#utility.yul\":8001:8064   */\n      tag_165\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":7906:8074   */\n      pop\n        /* \"#utility.yul\":8161:8165   */\n      0x60\n        /* \"#utility.yul\":8154:8159   */\n      dup3\n        /* \"#utility.yul\":8150:8166   */\n      add\n        /* \"#utility.yul\":8144:8167   */\n      mload\n        /* \"#utility.yul\":8180:8243   */\n      tag_294\n        /* \"#utility.yul\":8237:8241   */\n      0x60\n        /* \"#utility.yul\":8232:8235   */\n      dup6\n        /* \"#utility.yul\":8228:8242   */\n      add\n        /* \"#utility.yul\":8214:8226   */\n      dup3\n        /* \"#utility.yul\":8180:8243   */\n      tag_165\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":8084:8253   */\n      pop\n        /* \"#utility.yul\":8338:8342   */\n      0x80\n        /* \"#utility.yul\":8331:8336   */\n      dup3\n        /* \"#utility.yul\":8327:8343   */\n      add\n        /* \"#utility.yul\":8321:8344   */\n      mload\n        /* \"#utility.yul\":8357:8420   */\n      tag_295\n        /* \"#utility.yul\":8414:8418   */\n      0x80\n        /* \"#utility.yul\":8409:8412   */\n      dup6\n        /* \"#utility.yul\":8405:8419   */\n      add\n        /* \"#utility.yul\":8391:8403   */\n      dup3\n        /* \"#utility.yul\":8357:8420   */\n      tag_179\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":8263:8430   */\n      pop\n        /* \"#utility.yul\":8517:8521   */\n      0xa0\n        /* \"#utility.yul\":8510:8515   */\n      dup3\n        /* \"#utility.yul\":8506:8522   */\n      add\n        /* \"#utility.yul\":8500:8523   */\n      mload\n        /* \"#utility.yul\":8536:8593   */\n      tag_296\n        /* \"#utility.yul\":8587:8591   */\n      0xa0\n        /* \"#utility.yul\":8582:8585   */\n      dup6\n        /* \"#utility.yul\":8578:8592   */\n      add\n        /* \"#utility.yul\":8564:8576   */\n      dup3\n        /* \"#utility.yul\":8536:8593   */\n      tag_181\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":8440:8603   */\n      pop\n        /* \"#utility.yul\":8690:8694   */\n      0xc0\n        /* \"#utility.yul\":8683:8688   */\n      dup3\n        /* \"#utility.yul\":8679:8695   */\n      add\n        /* \"#utility.yul\":8673:8696   */\n      mload\n        /* \"#utility.yul\":8709:8766   */\n      tag_297\n        /* \"#utility.yul\":8760:8764   */\n      0xc0\n        /* \"#utility.yul\":8755:8758   */\n      dup6\n        /* \"#utility.yul\":8751:8765   */\n      add\n        /* \"#utility.yul\":8737:8749   */\n      dup3\n        /* \"#utility.yul\":8709:8766   */\n      tag_181\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":8613:8776   */\n      pop\n        /* \"#utility.yul\":7506:8783   */\n      pop\n        /* \"#utility.yul\":7404:8783   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8789:9060   */\n    tag_187:\n        /* \"#utility.yul\":8904:8914   */\n      0x00\n        /* \"#utility.yul\":8925:9017   */\n      tag_299\n        /* \"#utility.yul\":9013:9016   */\n      dup4\n        /* \"#utility.yul\":9005:9011   */\n      dup4\n        /* \"#utility.yul\":8925:9017   */\n      tag_186\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":9049:9053   */\n      0xe0\n        /* \"#utility.yul\":9044:9047   */\n      dup4\n        /* \"#utility.yul\":9040:9054   */\n      add\n        /* \"#utility.yul\":9026:9054   */\n      swap1\n      pop\n        /* \"#utility.yul\":8789:9060   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9066:9202   */\n    tag_188:\n        /* \"#utility.yul\":9159:9163   */\n      0x00\n        /* \"#utility.yul\":9191:9195   */\n      0x20\n        /* \"#utility.yul\":9186:9189   */\n      dup3\n        /* \"#utility.yul\":9182:9196   */\n      add\n        /* \"#utility.yul\":9174:9196   */\n      swap1\n      pop\n        /* \"#utility.yul\":9066:9202   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9284:10200   */\n    tag_189:\n        /* \"#utility.yul\":9449:9452   */\n      0x00\n        /* \"#utility.yul\":9478:9555   */\n      tag_302\n        /* \"#utility.yul\":9549:9554   */\n      dup3\n        /* \"#utility.yul\":9478:9555   */\n      tag_183\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":9571:9680   */\n      tag_303\n        /* \"#utility.yul\":9673:9679   */\n      dup2\n        /* \"#utility.yul\":9668:9671   */\n      dup6\n        /* \"#utility.yul\":9571:9680   */\n      tag_184\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":9564:9680   */\n      swap4\n      pop\n        /* \"#utility.yul\":9704:9783   */\n      tag_304\n        /* \"#utility.yul\":9777:9782   */\n      dup4\n        /* \"#utility.yul\":9704:9783   */\n      tag_185\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":9806:9813   */\n      dup1\n        /* \"#utility.yul\":9837:9838   */\n      0x00\n        /* \"#utility.yul\":9822:10175   */\n    tag_305:\n        /* \"#utility.yul\":9847:9853   */\n      dup4\n        /* \"#utility.yul\":9844:9845   */\n      dup2\n        /* \"#utility.yul\":9841:9854   */\n      lt\n        /* \"#utility.yul\":9822:10175   */\n      iszero\n      tag_307\n      jumpi\n        /* \"#utility.yul\":9923:9929   */\n      dup2\n        /* \"#utility.yul\":9917:9930   */\n      mload\n        /* \"#utility.yul\":9950:10059   */\n      tag_308\n        /* \"#utility.yul\":10055:10058   */\n      dup9\n        /* \"#utility.yul\":10040:10053   */\n      dup3\n        /* \"#utility.yul\":9950:10059   */\n      tag_187\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":9943:10059   */\n      swap8\n      pop\n        /* \"#utility.yul\":10082:10165   */\n      tag_309\n        /* \"#utility.yul\":10158:10164   */\n      dup4\n        /* \"#utility.yul\":10082:10165   */\n      tag_188\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":10072:10165   */\n      swap3\n      pop\n        /* \"#utility.yul\":9882:10175   */\n      pop\n        /* \"#utility.yul\":9869:9870   */\n      0x01\n        /* \"#utility.yul\":9866:9867   */\n      dup2\n        /* \"#utility.yul\":9862:9871   */\n      add\n        /* \"#utility.yul\":9857:9871   */\n      swap1\n      pop\n        /* \"#utility.yul\":9822:10175   */\n      jump(tag_305)\n    tag_307:\n        /* \"#utility.yul\":9826:9840   */\n      pop\n        /* \"#utility.yul\":10191:10194   */\n      dup6\n        /* \"#utility.yul\":10184:10194   */\n      swap4\n      pop\n        /* \"#utility.yul\":9454:10200   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":9284:10200   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10206:10671   */\n    tag_40:\n        /* \"#utility.yul\":10395:10399   */\n      0x00\n        /* \"#utility.yul\":10433:10435   */\n      0x20\n        /* \"#utility.yul\":10422:10431   */\n      dup3\n        /* \"#utility.yul\":10418:10436   */\n      add\n        /* \"#utility.yul\":10410:10436   */\n      swap1\n      pop\n        /* \"#utility.yul\":10482:10491   */\n      dup2\n        /* \"#utility.yul\":10476:10480   */\n      dup2\n        /* \"#utility.yul\":10472:10492   */\n      sub\n        /* \"#utility.yul\":10468:10469   */\n      0x00\n        /* \"#utility.yul\":10457:10466   */\n      dup4\n        /* \"#utility.yul\":10453:10470   */\n      add\n        /* \"#utility.yul\":10446:10493   */\n      mstore\n        /* \"#utility.yul\":10510:10664   */\n      tag_311\n        /* \"#utility.yul\":10659:10663   */\n      dup2\n        /* \"#utility.yul\":10650:10656   */\n      dup5\n        /* \"#utility.yul\":10510:10664   */\n      tag_189\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":10502:10664   */\n      swap1\n      pop\n        /* \"#utility.yul\":10206:10671   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10677:10795   */\n    tag_190:\n        /* \"#utility.yul\":10764:10788   */\n      tag_313\n        /* \"#utility.yul\":10782:10787   */\n      dup2\n        /* \"#utility.yul\":10764:10788   */\n      tag_173\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":10759:10762   */\n      dup3\n        /* \"#utility.yul\":10752:10789   */\n      mstore\n        /* \"#utility.yul\":10677:10795   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10801:11023   */\n    tag_44:\n        /* \"#utility.yul\":10894:10898   */\n      0x00\n        /* \"#utility.yul\":10932:10934   */\n      0x20\n        /* \"#utility.yul\":10921:10930   */\n      dup3\n        /* \"#utility.yul\":10917:10935   */\n      add\n        /* \"#utility.yul\":10909:10935   */\n      swap1\n      pop\n        /* \"#utility.yul\":10945:11016   */\n      tag_315\n        /* \"#utility.yul\":11013:11014   */\n      0x00\n        /* \"#utility.yul\":11002:11011   */\n      dup4\n        /* \"#utility.yul\":10998:11015   */\n      add\n        /* \"#utility.yul\":10989:10995   */\n      dup5\n        /* \"#utility.yul\":10945:11016   */\n      tag_190\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":10801:11023   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11029:11138   */\n    tag_191:\n        /* \"#utility.yul\":11110:11131   */\n      tag_317\n        /* \"#utility.yul\":11125:11130   */\n      dup2\n        /* \"#utility.yul\":11110:11131   */\n      tag_180\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":11105:11108   */\n      dup3\n        /* \"#utility.yul\":11098:11132   */\n      mstore\n        /* \"#utility.yul\":11029:11138   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11144:12006   */\n    tag_52:\n        /* \"#utility.yul\":11393:11397   */\n      0x00\n        /* \"#utility.yul\":11431:11434   */\n      0xe0\n        /* \"#utility.yul\":11420:11429   */\n      dup3\n        /* \"#utility.yul\":11416:11435   */\n      add\n        /* \"#utility.yul\":11408:11435   */\n      swap1\n      pop\n        /* \"#utility.yul\":11445:11516   */\n      tag_319\n        /* \"#utility.yul\":11513:11514   */\n      0x00\n        /* \"#utility.yul\":11502:11511   */\n      dup4\n        /* \"#utility.yul\":11498:11515   */\n      add\n        /* \"#utility.yul\":11489:11495   */\n      dup11\n        /* \"#utility.yul\":11445:11516   */\n      tag_176\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":11526:11598   */\n      tag_320\n        /* \"#utility.yul\":11594:11596   */\n      0x20\n        /* \"#utility.yul\":11583:11592   */\n      dup4\n        /* \"#utility.yul\":11579:11597   */\n      add\n        /* \"#utility.yul\":11570:11576   */\n      dup10\n        /* \"#utility.yul\":11526:11598   */\n      tag_176\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":11608:11680   */\n      tag_321\n        /* \"#utility.yul\":11676:11678   */\n      0x40\n        /* \"#utility.yul\":11665:11674   */\n      dup4\n        /* \"#utility.yul\":11661:11679   */\n      add\n        /* \"#utility.yul\":11652:11658   */\n      dup9\n        /* \"#utility.yul\":11608:11680   */\n      tag_176\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":11690:11762   */\n      tag_322\n        /* \"#utility.yul\":11758:11760   */\n      0x60\n        /* \"#utility.yul\":11747:11756   */\n      dup4\n        /* \"#utility.yul\":11743:11761   */\n      add\n        /* \"#utility.yul\":11734:11740   */\n      dup8\n        /* \"#utility.yul\":11690:11762   */\n      tag_176\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":11772:11845   */\n      tag_323\n        /* \"#utility.yul\":11840:11843   */\n      0x80\n        /* \"#utility.yul\":11829:11838   */\n      dup4\n        /* \"#utility.yul\":11825:11844   */\n      add\n        /* \"#utility.yul\":11816:11822   */\n      dup7\n        /* \"#utility.yul\":11772:11845   */\n      tag_190\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":11855:11922   */\n      tag_324\n        /* \"#utility.yul\":11917:11920   */\n      0xa0\n        /* \"#utility.yul\":11906:11915   */\n      dup4\n        /* \"#utility.yul\":11902:11921   */\n      add\n        /* \"#utility.yul\":11893:11899   */\n      dup6\n        /* \"#utility.yul\":11855:11922   */\n      tag_191\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":11932:11999   */\n      tag_325\n        /* \"#utility.yul\":11994:11997   */\n      0xc0\n        /* \"#utility.yul\":11983:11992   */\n      dup4\n        /* \"#utility.yul\":11979:11998   */\n      add\n        /* \"#utility.yul\":11970:11976   */\n      dup5\n        /* \"#utility.yul\":11932:11999   */\n      tag_191\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":11144:12006   */\n      swap9\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12012:12486   */\n    tag_55:\n        /* \"#utility.yul\":12080:12086   */\n      0x00\n        /* \"#utility.yul\":12088:12094   */\n      dup1\n        /* \"#utility.yul\":12137:12139   */\n      0x40\n        /* \"#utility.yul\":12125:12134   */\n      dup4\n        /* \"#utility.yul\":12116:12123   */\n      dup6\n        /* \"#utility.yul\":12112:12135   */\n      sub\n        /* \"#utility.yul\":12108:12140   */\n      slt\n        /* \"#utility.yul\":12105:12224   */\n      iszero\n      tag_327\n      jumpi\n        /* \"#utility.yul\":12143:12222   */\n      tag_328\n      tag_170\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":12105:12224   */\n    tag_327:\n        /* \"#utility.yul\":12263:12264   */\n      0x00\n        /* \"#utility.yul\":12288:12341   */\n      tag_329\n        /* \"#utility.yul\":12333:12340   */\n      dup6\n        /* \"#utility.yul\":12324:12330   */\n      dup3\n        /* \"#utility.yul\":12313:12322   */\n      dup7\n        /* \"#utility.yul\":12309:12331   */\n      add\n        /* \"#utility.yul\":12288:12341   */\n      tag_175\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":12278:12341   */\n      swap3\n      pop\n        /* \"#utility.yul\":12234:12351   */\n      pop\n        /* \"#utility.yul\":12390:12392   */\n      0x20\n        /* \"#utility.yul\":12416:12469   */\n      tag_330\n        /* \"#utility.yul\":12461:12468   */\n      dup6\n        /* \"#utility.yul\":12452:12458   */\n      dup3\n        /* \"#utility.yul\":12441:12450   */\n      dup7\n        /* \"#utility.yul\":12437:12459   */\n      add\n        /* \"#utility.yul\":12416:12469   */\n      tag_178\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":12406:12469   */\n      swap2\n      pop\n        /* \"#utility.yul\":12361:12479   */\n      pop\n        /* \"#utility.yul\":12012:12486   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12492:13045   */\n    tag_66:\n        /* \"#utility.yul\":12669:12673   */\n      0x00\n        /* \"#utility.yul\":12707:12710   */\n      0x80\n        /* \"#utility.yul\":12696:12705   */\n      dup3\n        /* \"#utility.yul\":12692:12711   */\n      add\n        /* \"#utility.yul\":12684:12711   */\n      swap1\n      pop\n        /* \"#utility.yul\":12721:12792   */\n      tag_332\n        /* \"#utility.yul\":12789:12790   */\n      0x00\n        /* \"#utility.yul\":12778:12787   */\n      dup4\n        /* \"#utility.yul\":12774:12791   */\n      add\n        /* \"#utility.yul\":12765:12771   */\n      dup8\n        /* \"#utility.yul\":12721:12792   */\n      tag_190\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":12802:12874   */\n      tag_333\n        /* \"#utility.yul\":12870:12872   */\n      0x20\n        /* \"#utility.yul\":12859:12868   */\n      dup4\n        /* \"#utility.yul\":12855:12873   */\n      add\n        /* \"#utility.yul\":12846:12852   */\n      dup7\n        /* \"#utility.yul\":12802:12874   */\n      tag_176\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":12884:12956   */\n      tag_334\n        /* \"#utility.yul\":12952:12954   */\n      0x40\n        /* \"#utility.yul\":12941:12950   */\n      dup4\n        /* \"#utility.yul\":12937:12955   */\n      add\n        /* \"#utility.yul\":12928:12934   */\n      dup6\n        /* \"#utility.yul\":12884:12956   */\n      tag_176\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":12966:13038   */\n      tag_335\n        /* \"#utility.yul\":13034:13036   */\n      0x60\n        /* \"#utility.yul\":13023:13032   */\n      dup4\n        /* \"#utility.yul\":13019:13037   */\n      add\n        /* \"#utility.yul\":13010:13016   */\n      dup5\n        /* \"#utility.yul\":12966:13038   */\n      tag_176\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":12492:13045   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13051:13111   */\n    tag_192:\n        /* \"#utility.yul\":13079:13082   */\n      0x00\n        /* \"#utility.yul\":13100:13105   */\n      dup2\n        /* \"#utility.yul\":13093:13105   */\n      swap1\n      pop\n        /* \"#utility.yul\":13051:13111   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13117:13259   */\n    tag_193:\n        /* \"#utility.yul\":13167:13176   */\n      0x00\n        /* \"#utility.yul\":13200:13253   */\n      tag_338\n        /* \"#utility.yul\":13218:13252   */\n      tag_339\n        /* \"#utility.yul\":13227:13251   */\n      tag_340\n        /* \"#utility.yul\":13245:13250   */\n      dup5\n        /* \"#utility.yul\":13227:13251   */\n      tag_172\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":13218:13252   */\n      tag_192\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":13200:13253   */\n      tag_172\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":13187:13253   */\n      swap1\n      pop\n        /* \"#utility.yul\":13117:13259   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13265:13391   */\n    tag_194:\n        /* \"#utility.yul\":13315:13324   */\n      0x00\n        /* \"#utility.yul\":13348:13385   */\n      tag_342\n        /* \"#utility.yul\":13379:13384   */\n      dup3\n        /* \"#utility.yul\":13348:13385   */\n      tag_193\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":13335:13385   */\n      swap1\n      pop\n        /* \"#utility.yul\":13265:13391   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13397:13539   */\n    tag_195:\n        /* \"#utility.yul\":13463:13472   */\n      0x00\n        /* \"#utility.yul\":13496:13533   */\n      tag_344\n        /* \"#utility.yul\":13527:13532   */\n      dup3\n        /* \"#utility.yul\":13496:13533   */\n      tag_194\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":13483:13533   */\n      swap1\n      pop\n        /* \"#utility.yul\":13397:13539   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13545:13708   */\n    tag_196:\n        /* \"#utility.yul\":13648:13701   */\n      tag_346\n        /* \"#utility.yul\":13695:13700   */\n      dup2\n        /* \"#utility.yul\":13648:13701   */\n      tag_195\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":13643:13646   */\n      dup3\n        /* \"#utility.yul\":13636:13702   */\n      mstore\n        /* \"#utility.yul\":13545:13708   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13714:13968   */\n    tag_70:\n        /* \"#utility.yul\":13823:13827   */\n      0x00\n        /* \"#utility.yul\":13861:13863   */\n      0x20\n        /* \"#utility.yul\":13850:13859   */\n      dup3\n        /* \"#utility.yul\":13846:13864   */\n      add\n        /* \"#utility.yul\":13838:13864   */\n      swap1\n      pop\n        /* \"#utility.yul\":13874:13961   */\n      tag_348\n        /* \"#utility.yul\":13958:13959   */\n      0x00\n        /* \"#utility.yul\":13947:13956   */\n      dup4\n        /* \"#utility.yul\":13943:13960   */\n      add\n        /* \"#utility.yul\":13934:13940   */\n      dup5\n        /* \"#utility.yul\":13874:13961   */\n      tag_196\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":13714:13968   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13974:14117   */\n    tag_197:\n        /* \"#utility.yul\":14031:14036   */\n      0x00\n        /* \"#utility.yul\":14062:14068   */\n      dup2\n        /* \"#utility.yul\":14056:14069   */\n      mload\n        /* \"#utility.yul\":14047:14069   */\n      swap1\n      pop\n        /* \"#utility.yul\":14078:14111   */\n      tag_350\n        /* \"#utility.yul\":14105:14110   */\n      dup2\n        /* \"#utility.yul\":14078:14111   */\n      tag_177\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":13974:14117   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14123:14474   */\n    tag_79:\n        /* \"#utility.yul\":14193:14199   */\n      0x00\n        /* \"#utility.yul\":14242:14244   */\n      0x20\n        /* \"#utility.yul\":14230:14239   */\n      dup3\n        /* \"#utility.yul\":14221:14228   */\n      dup5\n        /* \"#utility.yul\":14217:14240   */\n      sub\n        /* \"#utility.yul\":14213:14245   */\n      slt\n        /* \"#utility.yul\":14210:14329   */\n      iszero\n      tag_352\n      jumpi\n        /* \"#utility.yul\":14248:14327   */\n      tag_353\n      tag_170\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":14210:14329   */\n    tag_352:\n        /* \"#utility.yul\":14368:14369   */\n      0x00\n        /* \"#utility.yul\":14393:14457   */\n      tag_354\n        /* \"#utility.yul\":14449:14456   */\n      dup5\n        /* \"#utility.yul\":14440:14446   */\n      dup3\n        /* \"#utility.yul\":14429:14438   */\n      dup6\n        /* \"#utility.yul\":14425:14447   */\n      add\n        /* \"#utility.yul\":14393:14457   */\n      tag_197\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":14383:14457   */\n      swap2\n      pop\n        /* \"#utility.yul\":14339:14467   */\n      pop\n        /* \"#utility.yul\":14123:14474   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14480:14649   */\n    tag_198:\n        /* \"#utility.yul\":14564:14575   */\n      0x00\n        /* \"#utility.yul\":14598:14604   */\n      dup3\n        /* \"#utility.yul\":14593:14596   */\n      dup3\n        /* \"#utility.yul\":14586:14605   */\n      mstore\n        /* \"#utility.yul\":14638:14642   */\n      0x20\n        /* \"#utility.yul\":14633:14636   */\n      dup3\n        /* \"#utility.yul\":14629:14643   */\n      add\n        /* \"#utility.yul\":14614:14643   */\n      swap1\n      pop\n        /* \"#utility.yul\":14480:14649   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14655:14883   */\n    tag_199:\n        /* \"#utility.yul\":14795:14829   */\n      0x596f752063616e206f6e6c7920636c61696d20796f7572206f776e207374616b\n        /* \"#utility.yul\":14791:14792   */\n      0x00\n        /* \"#utility.yul\":14783:14789   */\n      dup3\n        /* \"#utility.yul\":14779:14793   */\n      add\n        /* \"#utility.yul\":14772:14830   */\n      mstore\n        /* \"#utility.yul\":14864:14875   */\n      0x656420616d6f756e740000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14859:14861   */\n      0x20\n        /* \"#utility.yul\":14851:14857   */\n      dup3\n        /* \"#utility.yul\":14847:14862   */\n      add\n        /* \"#utility.yul\":14840:14876   */\n      mstore\n        /* \"#utility.yul\":14655:14883   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14889:15255   */\n    tag_200:\n        /* \"#utility.yul\":15031:15034   */\n      0x00\n        /* \"#utility.yul\":15052:15119   */\n      tag_358\n        /* \"#utility.yul\":15116:15118   */\n      0x29\n        /* \"#utility.yul\":15111:15114   */\n      dup4\n        /* \"#utility.yul\":15052:15119   */\n      tag_198\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":15045:15119   */\n      swap2\n      pop\n        /* \"#utility.yul\":15128:15221   */\n      tag_359\n        /* \"#utility.yul\":15217:15220   */\n      dup3\n        /* \"#utility.yul\":15128:15221   */\n      tag_199\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":15246:15248   */\n      0x40\n        /* \"#utility.yul\":15241:15244   */\n      dup3\n        /* \"#utility.yul\":15237:15249   */\n      add\n        /* \"#utility.yul\":15230:15249   */\n      swap1\n      pop\n        /* \"#utility.yul\":14889:15255   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15261:15680   */\n    tag_83:\n        /* \"#utility.yul\":15427:15431   */\n      0x00\n        /* \"#utility.yul\":15465:15467   */\n      0x20\n        /* \"#utility.yul\":15454:15463   */\n      dup3\n        /* \"#utility.yul\":15450:15468   */\n      add\n        /* \"#utility.yul\":15442:15468   */\n      swap1\n      pop\n        /* \"#utility.yul\":15514:15523   */\n      dup2\n        /* \"#utility.yul\":15508:15512   */\n      dup2\n        /* \"#utility.yul\":15504:15524   */\n      sub\n        /* \"#utility.yul\":15500:15501   */\n      0x00\n        /* \"#utility.yul\":15489:15498   */\n      dup4\n        /* \"#utility.yul\":15485:15502   */\n      add\n        /* \"#utility.yul\":15478:15525   */\n      mstore\n        /* \"#utility.yul\":15542:15673   */\n      tag_361\n        /* \"#utility.yul\":15668:15672   */\n      dup2\n        /* \"#utility.yul\":15542:15673   */\n      tag_200\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":15534:15673   */\n      swap1\n      pop\n        /* \"#utility.yul\":15261:15680   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15686:15907   */\n    tag_201:\n        /* \"#utility.yul\":15826:15860   */\n      0x52657761726420616c726561647920636c61696d656420796f757220616d6f75\n        /* \"#utility.yul\":15822:15823   */\n      0x00\n        /* \"#utility.yul\":15814:15820   */\n      dup3\n        /* \"#utility.yul\":15810:15824   */\n      add\n        /* \"#utility.yul\":15803:15861   */\n      mstore\n        /* \"#utility.yul\":15895:15899   */\n      0x6e74000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15890:15892   */\n      0x20\n        /* \"#utility.yul\":15882:15888   */\n      dup3\n        /* \"#utility.yul\":15878:15893   */\n      add\n        /* \"#utility.yul\":15871:15900   */\n      mstore\n        /* \"#utility.yul\":15686:15907   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15913:16279   */\n    tag_202:\n        /* \"#utility.yul\":16055:16058   */\n      0x00\n        /* \"#utility.yul\":16076:16143   */\n      tag_364\n        /* \"#utility.yul\":16140:16142   */\n      0x22\n        /* \"#utility.yul\":16135:16138   */\n      dup4\n        /* \"#utility.yul\":16076:16143   */\n      tag_198\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":16069:16143   */\n      swap2\n      pop\n        /* \"#utility.yul\":16152:16245   */\n      tag_365\n        /* \"#utility.yul\":16241:16244   */\n      dup3\n        /* \"#utility.yul\":16152:16245   */\n      tag_201\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":16270:16272   */\n      0x40\n        /* \"#utility.yul\":16265:16268   */\n      dup3\n        /* \"#utility.yul\":16261:16273   */\n      add\n        /* \"#utility.yul\":16254:16273   */\n      swap1\n      pop\n        /* \"#utility.yul\":15913:16279   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16285:16704   */\n    tag_86:\n        /* \"#utility.yul\":16451:16455   */\n      0x00\n        /* \"#utility.yul\":16489:16491   */\n      0x20\n        /* \"#utility.yul\":16478:16487   */\n      dup3\n        /* \"#utility.yul\":16474:16492   */\n      add\n        /* \"#utility.yul\":16466:16492   */\n      swap1\n      pop\n        /* \"#utility.yul\":16538:16547   */\n      dup2\n        /* \"#utility.yul\":16532:16536   */\n      dup2\n        /* \"#utility.yul\":16528:16548   */\n      sub\n        /* \"#utility.yul\":16524:16525   */\n      0x00\n        /* \"#utility.yul\":16513:16522   */\n      dup4\n        /* \"#utility.yul\":16509:16526   */\n      add\n        /* \"#utility.yul\":16502:16549   */\n      mstore\n        /* \"#utility.yul\":16566:16697   */\n      tag_367\n        /* \"#utility.yul\":16692:16696   */\n      dup2\n        /* \"#utility.yul\":16566:16697   */\n      tag_202\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":16558:16697   */\n      swap1\n      pop\n        /* \"#utility.yul\":16285:16704   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16710:16890   */\n    tag_203:\n        /* \"#utility.yul\":16758:16835   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16755:16756   */\n      0x00\n        /* \"#utility.yul\":16748:16836   */\n      mstore\n        /* \"#utility.yul\":16855:16859   */\n      0x11\n        /* \"#utility.yul\":16852:16853   */\n      0x04\n        /* \"#utility.yul\":16845:16860   */\n      mstore\n        /* \"#utility.yul\":16879:16883   */\n      0x24\n        /* \"#utility.yul\":16876:16877   */\n      0x00\n        /* \"#utility.yul\":16869:16884   */\n      revert\n        /* \"#utility.yul\":16896:17306   */\n    tag_88:\n        /* \"#utility.yul\":16936:16943   */\n      0x00\n        /* \"#utility.yul\":16959:16979   */\n      tag_370\n        /* \"#utility.yul\":16977:16978   */\n      dup3\n        /* \"#utility.yul\":16959:16979   */\n      tag_164\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":16954:16979   */\n      swap2\n      pop\n        /* \"#utility.yul\":16993:17013   */\n      tag_371\n        /* \"#utility.yul\":17011:17012   */\n      dup4\n        /* \"#utility.yul\":16993:17013   */\n      tag_164\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":16988:17013   */\n      swap3\n      pop\n        /* \"#utility.yul\":17048:17049   */\n      dup3\n        /* \"#utility.yul\":17045:17046   */\n      dup3\n        /* \"#utility.yul\":17041:17050   */\n      mul\n        /* \"#utility.yul\":17070:17100   */\n      tag_372\n        /* \"#utility.yul\":17088:17099   */\n      dup2\n        /* \"#utility.yul\":17070:17100   */\n      tag_164\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":17059:17100   */\n      swap2\n      pop\n        /* \"#utility.yul\":17249:17250   */\n      dup3\n        /* \"#utility.yul\":17240:17247   */\n      dup3\n        /* \"#utility.yul\":17236:17251   */\n      div\n        /* \"#utility.yul\":17233:17234   */\n      dup5\n        /* \"#utility.yul\":17230:17252   */\n      eq\n        /* \"#utility.yul\":17210:17211   */\n      dup4\n        /* \"#utility.yul\":17203:17212   */\n      iszero\n        /* \"#utility.yul\":17183:17266   */\n      or\n        /* \"#utility.yul\":17160:17299   */\n      tag_373\n      jumpi\n        /* \"#utility.yul\":17279:17297   */\n      tag_374\n      tag_203\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":17160:17299   */\n    tag_373:\n        /* \"#utility.yul\":16944:17306   */\n      pop\n        /* \"#utility.yul\":16896:17306   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17312:17503   */\n    tag_90:\n        /* \"#utility.yul\":17352:17355   */\n      0x00\n        /* \"#utility.yul\":17371:17391   */\n      tag_376\n        /* \"#utility.yul\":17389:17390   */\n      dup3\n        /* \"#utility.yul\":17371:17391   */\n      tag_164\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":17366:17391   */\n      swap2\n      pop\n        /* \"#utility.yul\":17405:17425   */\n      tag_377\n        /* \"#utility.yul\":17423:17424   */\n      dup4\n        /* \"#utility.yul\":17405:17425   */\n      tag_164\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":17400:17425   */\n      swap3\n      pop\n        /* \"#utility.yul\":17448:17449   */\n      dup3\n        /* \"#utility.yul\":17445:17446   */\n      dup3\n        /* \"#utility.yul\":17441:17450   */\n      add\n        /* \"#utility.yul\":17434:17450   */\n      swap1\n      pop\n        /* \"#utility.yul\":17469:17472   */\n      dup1\n        /* \"#utility.yul\":17466:17467   */\n      dup3\n        /* \"#utility.yul\":17463:17473   */\n      gt\n        /* \"#utility.yul\":17460:17496   */\n      iszero\n      tag_378\n      jumpi\n        /* \"#utility.yul\":17476:17494   */\n      tag_379\n      tag_203\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":17460:17496   */\n    tag_378:\n        /* \"#utility.yul\":17312:17503   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17509:17752   */\n    tag_204:\n        /* \"#utility.yul\":17649:17683   */\n      0x596f752063616e206f6e6c7920636c61696d2061667465722074686520737461\n        /* \"#utility.yul\":17645:17646   */\n      0x00\n        /* \"#utility.yul\":17637:17643   */\n      dup3\n        /* \"#utility.yul\":17633:17647   */\n      add\n        /* \"#utility.yul\":17626:17684   */\n      mstore\n        /* \"#utility.yul\":17718:17744   */\n      0x6b696e67206475726174696f6e20686173207061737365640000000000000000\n        /* \"#utility.yul\":17713:17715   */\n      0x20\n        /* \"#utility.yul\":17705:17711   */\n      dup3\n        /* \"#utility.yul\":17701:17716   */\n      add\n        /* \"#utility.yul\":17694:17745   */\n      mstore\n        /* \"#utility.yul\":17509:17752   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17758:18124   */\n    tag_205:\n        /* \"#utility.yul\":17900:17903   */\n      0x00\n        /* \"#utility.yul\":17921:17988   */\n      tag_382\n        /* \"#utility.yul\":17985:17987   */\n      0x38\n        /* \"#utility.yul\":17980:17983   */\n      dup4\n        /* \"#utility.yul\":17921:17988   */\n      tag_198\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":17914:17988   */\n      swap2\n      pop\n        /* \"#utility.yul\":17997:18090   */\n      tag_383\n        /* \"#utility.yul\":18086:18089   */\n      dup3\n        /* \"#utility.yul\":17997:18090   */\n      tag_204\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":18115:18117   */\n      0x40\n        /* \"#utility.yul\":18110:18113   */\n      dup3\n        /* \"#utility.yul\":18106:18118   */\n      add\n        /* \"#utility.yul\":18099:18118   */\n      swap1\n      pop\n        /* \"#utility.yul\":17758:18124   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18130:18549   */\n    tag_93:\n        /* \"#utility.yul\":18296:18300   */\n      0x00\n        /* \"#utility.yul\":18334:18336   */\n      0x20\n        /* \"#utility.yul\":18323:18332   */\n      dup3\n        /* \"#utility.yul\":18319:18337   */\n      add\n        /* \"#utility.yul\":18311:18337   */\n      swap1\n      pop\n        /* \"#utility.yul\":18383:18392   */\n      dup2\n        /* \"#utility.yul\":18377:18381   */\n      dup2\n        /* \"#utility.yul\":18373:18393   */\n      sub\n        /* \"#utility.yul\":18369:18370   */\n      0x00\n        /* \"#utility.yul\":18358:18367   */\n      dup4\n        /* \"#utility.yul\":18354:18371   */\n      add\n        /* \"#utility.yul\":18347:18394   */\n      mstore\n        /* \"#utility.yul\":18411:18542   */\n      tag_385\n        /* \"#utility.yul\":18537:18541   */\n      dup2\n        /* \"#utility.yul\":18411:18542   */\n      tag_205\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":18403:18542   */\n      swap1\n      pop\n        /* \"#utility.yul\":18130:18549   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18555:18887   */\n    tag_96:\n        /* \"#utility.yul\":18676:18680   */\n      0x00\n        /* \"#utility.yul\":18714:18716   */\n      0x40\n        /* \"#utility.yul\":18703:18712   */\n      dup3\n        /* \"#utility.yul\":18699:18717   */\n      add\n        /* \"#utility.yul\":18691:18717   */\n      swap1\n      pop\n        /* \"#utility.yul\":18727:18798   */\n      tag_387\n        /* \"#utility.yul\":18795:18796   */\n      0x00\n        /* \"#utility.yul\":18784:18793   */\n      dup4\n        /* \"#utility.yul\":18780:18797   */\n      add\n        /* \"#utility.yul\":18771:18777   */\n      dup6\n        /* \"#utility.yul\":18727:18798   */\n      tag_190\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":18808:18880   */\n      tag_388\n        /* \"#utility.yul\":18876:18878   */\n      0x20\n        /* \"#utility.yul\":18865:18874   */\n      dup4\n        /* \"#utility.yul\":18861:18879   */\n      add\n        /* \"#utility.yul\":18852:18858   */\n      dup5\n        /* \"#utility.yul\":18808:18880   */\n      tag_176\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":18555:18887   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18893:19009   */\n    tag_206:\n        /* \"#utility.yul\":18963:18984   */\n      tag_390\n        /* \"#utility.yul\":18978:18983   */\n      dup2\n        /* \"#utility.yul\":18963:18984   */\n      tag_180\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":18956:18961   */\n      dup2\n        /* \"#utility.yul\":18953:18985   */\n      eq\n        /* \"#utility.yul\":18943:19003   */\n      tag_391\n      jumpi\n        /* \"#utility.yul\":18999:19000   */\n      0x00\n        /* \"#utility.yul\":18996:18997   */\n      dup1\n        /* \"#utility.yul\":18989:19001   */\n      revert\n        /* \"#utility.yul\":18943:19003   */\n    tag_391:\n        /* \"#utility.yul\":18893:19009   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19015:19152   */\n    tag_207:\n        /* \"#utility.yul\":19069:19074   */\n      0x00\n        /* \"#utility.yul\":19100:19106   */\n      dup2\n        /* \"#utility.yul\":19094:19107   */\n      mload\n        /* \"#utility.yul\":19085:19107   */\n      swap1\n      pop\n        /* \"#utility.yul\":19116:19146   */\n      tag_393\n        /* \"#utility.yul\":19140:19145   */\n      dup2\n        /* \"#utility.yul\":19116:19146   */\n      tag_206\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":19015:19152   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19158:19503   */\n    tag_100:\n        /* \"#utility.yul\":19225:19231   */\n      0x00\n        /* \"#utility.yul\":19274:19276   */\n      0x20\n        /* \"#utility.yul\":19262:19271   */\n      dup3\n        /* \"#utility.yul\":19253:19260   */\n      dup5\n        /* \"#utility.yul\":19249:19272   */\n      sub\n        /* \"#utility.yul\":19245:19277   */\n      slt\n        /* \"#utility.yul\":19242:19361   */\n      iszero\n      tag_395\n      jumpi\n        /* \"#utility.yul\":19280:19359   */\n      tag_396\n      tag_170\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":19242:19361   */\n    tag_395:\n        /* \"#utility.yul\":19400:19401   */\n      0x00\n        /* \"#utility.yul\":19425:19486   */\n      tag_397\n        /* \"#utility.yul\":19478:19485   */\n      dup5\n        /* \"#utility.yul\":19469:19475   */\n      dup3\n        /* \"#utility.yul\":19458:19467   */\n      dup6\n        /* \"#utility.yul\":19454:19476   */\n      add\n        /* \"#utility.yul\":19425:19486   */\n      tag_207\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":19415:19486   */\n      swap2\n      pop\n        /* \"#utility.yul\":19371:19496   */\n      pop\n        /* \"#utility.yul\":19158:19503   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19509:19680   */\n    tag_208:\n        /* \"#utility.yul\":19649:19672   */\n      0x546f6b656e207472616e73666572206661696c65640000000000000000000000\n        /* \"#utility.yul\":19645:19646   */\n      0x00\n        /* \"#utility.yul\":19637:19643   */\n      dup3\n        /* \"#utility.yul\":19633:19647   */\n      add\n        /* \"#utility.yul\":19626:19673   */\n      mstore\n        /* \"#utility.yul\":19509:19680   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19686:20052   */\n    tag_209:\n        /* \"#utility.yul\":19828:19831   */\n      0x00\n        /* \"#utility.yul\":19849:19916   */\n      tag_400\n        /* \"#utility.yul\":19913:19915   */\n      0x15\n        /* \"#utility.yul\":19908:19911   */\n      dup4\n        /* \"#utility.yul\":19849:19916   */\n      tag_198\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":19842:19916   */\n      swap2\n      pop\n        /* \"#utility.yul\":19925:20018   */\n      tag_401\n        /* \"#utility.yul\":20014:20017   */\n      dup3\n        /* \"#utility.yul\":19925:20018   */\n      tag_208\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":20043:20045   */\n      0x20\n        /* \"#utility.yul\":20038:20041   */\n      dup3\n        /* \"#utility.yul\":20034:20046   */\n      add\n        /* \"#utility.yul\":20027:20046   */\n      swap1\n      pop\n        /* \"#utility.yul\":19686:20052   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20058:20477   */\n    tag_103:\n        /* \"#utility.yul\":20224:20228   */\n      0x00\n        /* \"#utility.yul\":20262:20264   */\n      0x20\n        /* \"#utility.yul\":20251:20260   */\n      dup3\n        /* \"#utility.yul\":20247:20265   */\n      add\n        /* \"#utility.yul\":20239:20265   */\n      swap1\n      pop\n        /* \"#utility.yul\":20311:20320   */\n      dup2\n        /* \"#utility.yul\":20305:20309   */\n      dup2\n        /* \"#utility.yul\":20301:20321   */\n      sub\n        /* \"#utility.yul\":20297:20298   */\n      0x00\n        /* \"#utility.yul\":20286:20295   */\n      dup4\n        /* \"#utility.yul\":20282:20299   */\n      add\n        /* \"#utility.yul\":20275:20322   */\n      mstore\n        /* \"#utility.yul\":20339:20470   */\n      tag_403\n        /* \"#utility.yul\":20465:20469   */\n      dup2\n        /* \"#utility.yul\":20339:20470   */\n      tag_209\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":20331:20470   */\n      swap1\n      pop\n        /* \"#utility.yul\":20058:20477   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20483:20665   */\n    tag_210:\n        /* \"#utility.yul\":20623:20657   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e207a65726f\n        /* \"#utility.yul\":20619:20620   */\n      0x00\n        /* \"#utility.yul\":20611:20617   */\n      dup3\n        /* \"#utility.yul\":20607:20621   */\n      add\n        /* \"#utility.yul\":20600:20658   */\n      mstore\n        /* \"#utility.yul\":20483:20665   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20671:21037   */\n    tag_211:\n        /* \"#utility.yul\":20813:20816   */\n      0x00\n        /* \"#utility.yul\":20834:20901   */\n      tag_406\n        /* \"#utility.yul\":20898:20900   */\n      0x20\n        /* \"#utility.yul\":20893:20896   */\n      dup4\n        /* \"#utility.yul\":20834:20901   */\n      tag_198\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":20827:20901   */\n      swap2\n      pop\n        /* \"#utility.yul\":20910:21003   */\n      tag_407\n        /* \"#utility.yul\":20999:21002   */\n      dup3\n        /* \"#utility.yul\":20910:21003   */\n      tag_210\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":21028:21030   */\n      0x20\n        /* \"#utility.yul\":21023:21026   */\n      dup3\n        /* \"#utility.yul\":21019:21031   */\n      add\n        /* \"#utility.yul\":21012:21031   */\n      swap1\n      pop\n        /* \"#utility.yul\":20671:21037   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21043:21462   */\n    tag_109:\n        /* \"#utility.yul\":21209:21213   */\n      0x00\n        /* \"#utility.yul\":21247:21249   */\n      0x20\n        /* \"#utility.yul\":21236:21245   */\n      dup3\n        /* \"#utility.yul\":21232:21250   */\n      add\n        /* \"#utility.yul\":21224:21250   */\n      swap1\n      pop\n        /* \"#utility.yul\":21296:21305   */\n      dup2\n        /* \"#utility.yul\":21290:21294   */\n      dup2\n        /* \"#utility.yul\":21286:21306   */\n      sub\n        /* \"#utility.yul\":21282:21283   */\n      0x00\n        /* \"#utility.yul\":21271:21280   */\n      dup4\n        /* \"#utility.yul\":21267:21284   */\n      add\n        /* \"#utility.yul\":21260:21307   */\n      mstore\n        /* \"#utility.yul\":21324:21455   */\n      tag_409\n        /* \"#utility.yul\":21450:21454   */\n      dup2\n        /* \"#utility.yul\":21324:21455   */\n      tag_211\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":21316:21455   */\n      swap1\n      pop\n        /* \"#utility.yul\":21043:21462   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21468:21695   */\n    tag_212:\n        /* \"#utility.yul\":21608:21642   */\n      0x456e746572204475726174696f6e20696e20666f726d61746520636865636b20\n        /* \"#utility.yul\":21604:21605   */\n      0x00\n        /* \"#utility.yul\":21596:21602   */\n      dup3\n        /* \"#utility.yul\":21592:21606   */\n      add\n        /* \"#utility.yul\":21585:21643   */\n      mstore\n        /* \"#utility.yul\":21677:21687   */\n      0x6475726174696f6e000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21672:21674   */\n      0x20\n        /* \"#utility.yul\":21664:21670   */\n      dup3\n        /* \"#utility.yul\":21660:21675   */\n      add\n        /* \"#utility.yul\":21653:21688   */\n      mstore\n        /* \"#utility.yul\":21468:21695   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21701:22067   */\n    tag_213:\n        /* \"#utility.yul\":21843:21846   */\n      0x00\n        /* \"#utility.yul\":21864:21931   */\n      tag_412\n        /* \"#utility.yul\":21928:21930   */\n      0x28\n        /* \"#utility.yul\":21923:21926   */\n      dup4\n        /* \"#utility.yul\":21864:21931   */\n      tag_198\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":21857:21931   */\n      swap2\n      pop\n        /* \"#utility.yul\":21940:22033   */\n      tag_413\n        /* \"#utility.yul\":22029:22032   */\n      dup3\n        /* \"#utility.yul\":21940:22033   */\n      tag_212\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":22058:22060   */\n      0x40\n        /* \"#utility.yul\":22053:22056   */\n      dup3\n        /* \"#utility.yul\":22049:22061   */\n      add\n        /* \"#utility.yul\":22042:22061   */\n      swap1\n      pop\n        /* \"#utility.yul\":21701:22067   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22073:22492   */\n    tag_116:\n        /* \"#utility.yul\":22239:22243   */\n      0x00\n        /* \"#utility.yul\":22277:22279   */\n      0x20\n        /* \"#utility.yul\":22266:22275   */\n      dup3\n        /* \"#utility.yul\":22262:22280   */\n      add\n        /* \"#utility.yul\":22254:22280   */\n      swap1\n      pop\n        /* \"#utility.yul\":22326:22335   */\n      dup2\n        /* \"#utility.yul\":22320:22324   */\n      dup2\n        /* \"#utility.yul\":22316:22336   */\n      sub\n        /* \"#utility.yul\":22312:22313   */\n      0x00\n        /* \"#utility.yul\":22301:22310   */\n      dup4\n        /* \"#utility.yul\":22297:22314   */\n      add\n        /* \"#utility.yul\":22290:22337   */\n      mstore\n        /* \"#utility.yul\":22354:22485   */\n      tag_415\n        /* \"#utility.yul\":22480:22484   */\n      dup2\n        /* \"#utility.yul\":22354:22485   */\n      tag_213\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":22346:22485   */\n      swap1\n      pop\n        /* \"#utility.yul\":22073:22492   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22498:22940   */\n    tag_122:\n        /* \"#utility.yul\":22647:22651   */\n      0x00\n        /* \"#utility.yul\":22685:22687   */\n      0x60\n        /* \"#utility.yul\":22674:22683   */\n      dup3\n        /* \"#utility.yul\":22670:22688   */\n      add\n        /* \"#utility.yul\":22662:22688   */\n      swap1\n      pop\n        /* \"#utility.yul\":22698:22769   */\n      tag_417\n        /* \"#utility.yul\":22766:22767   */\n      0x00\n        /* \"#utility.yul\":22755:22764   */\n      dup4\n        /* \"#utility.yul\":22751:22768   */\n      add\n        /* \"#utility.yul\":22742:22748   */\n      dup7\n        /* \"#utility.yul\":22698:22769   */\n      tag_190\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":22779:22851   */\n      tag_418\n        /* \"#utility.yul\":22847:22849   */\n      0x20\n        /* \"#utility.yul\":22836:22845   */\n      dup4\n        /* \"#utility.yul\":22832:22850   */\n      add\n        /* \"#utility.yul\":22823:22829   */\n      dup6\n        /* \"#utility.yul\":22779:22851   */\n      tag_190\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":22861:22933   */\n      tag_419\n        /* \"#utility.yul\":22929:22931   */\n      0x40\n        /* \"#utility.yul\":22918:22927   */\n      dup4\n        /* \"#utility.yul\":22914:22932   */\n      add\n        /* \"#utility.yul\":22905:22911   */\n      dup5\n        /* \"#utility.yul\":22861:22933   */\n      tag_176\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":22498:22940   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22946:23168   */\n    tag_214:\n        /* \"#utility.yul\":23086:23120   */\n      0x596f752063616e206f6e6c7920636c61696d20796f7572206f776e2072657761\n        /* \"#utility.yul\":23082:23083   */\n      0x00\n        /* \"#utility.yul\":23074:23080   */\n      dup3\n        /* \"#utility.yul\":23070:23084   */\n      add\n        /* \"#utility.yul\":23063:23121   */\n      mstore\n        /* \"#utility.yul\":23155:23160   */\n      0x7264730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":23150:23152   */\n      0x20\n        /* \"#utility.yul\":23142:23148   */\n      dup3\n        /* \"#utility.yul\":23138:23153   */\n      add\n        /* \"#utility.yul\":23131:23161   */\n      mstore\n        /* \"#utility.yul\":22946:23168   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23174:23540   */\n    tag_215:\n        /* \"#utility.yul\":23316:23319   */\n      0x00\n        /* \"#utility.yul\":23337:23404   */\n      tag_422\n        /* \"#utility.yul\":23401:23403   */\n      0x23\n        /* \"#utility.yul\":23396:23399   */\n      dup4\n        /* \"#utility.yul\":23337:23404   */\n      tag_198\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":23330:23404   */\n      swap2\n      pop\n        /* \"#utility.yul\":23413:23506   */\n      tag_423\n        /* \"#utility.yul\":23502:23505   */\n      dup3\n        /* \"#utility.yul\":23413:23506   */\n      tag_214\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":23531:23533   */\n      0x40\n        /* \"#utility.yul\":23526:23529   */\n      dup3\n        /* \"#utility.yul\":23522:23534   */\n      add\n        /* \"#utility.yul\":23515:23534   */\n      swap1\n      pop\n        /* \"#utility.yul\":23174:23540   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23546:23965   */\n    tag_136:\n        /* \"#utility.yul\":23712:23716   */\n      0x00\n        /* \"#utility.yul\":23750:23752   */\n      0x20\n        /* \"#utility.yul\":23739:23748   */\n      dup3\n        /* \"#utility.yul\":23735:23753   */\n      add\n        /* \"#utility.yul\":23727:23753   */\n      swap1\n      pop\n        /* \"#utility.yul\":23799:23808   */\n      dup2\n        /* \"#utility.yul\":23793:23797   */\n      dup2\n        /* \"#utility.yul\":23789:23809   */\n      sub\n        /* \"#utility.yul\":23785:23786   */\n      0x00\n        /* \"#utility.yul\":23774:23783   */\n      dup4\n        /* \"#utility.yul\":23770:23787   */\n      add\n        /* \"#utility.yul\":23763:23810   */\n      mstore\n        /* \"#utility.yul\":23827:23958   */\n      tag_425\n        /* \"#utility.yul\":23953:23957   */\n      dup2\n        /* \"#utility.yul\":23827:23958   */\n      tag_215\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":23819:23958   */\n      swap1\n      pop\n        /* \"#utility.yul\":23546:23965   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23971:24143   */\n    tag_216:\n        /* \"#utility.yul\":24111:24135   */\n      0x52657761726420616c726561647920636c61696d656400000000000000000000\n        /* \"#utility.yul\":24107:24108   */\n      0x00\n        /* \"#utility.yul\":24099:24105   */\n      dup3\n        /* \"#utility.yul\":24095:24109   */\n      add\n        /* \"#utility.yul\":24088:24136   */\n      mstore\n        /* \"#utility.yul\":23971:24143   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24149:24515   */\n    tag_217:\n        /* \"#utility.yul\":24291:24294   */\n      0x00\n        /* \"#utility.yul\":24312:24379   */\n      tag_428\n        /* \"#utility.yul\":24376:24378   */\n      0x16\n        /* \"#utility.yul\":24371:24374   */\n      dup4\n        /* \"#utility.yul\":24312:24379   */\n      tag_198\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":24305:24379   */\n      swap2\n      pop\n        /* \"#utility.yul\":24388:24481   */\n      tag_429\n        /* \"#utility.yul\":24477:24480   */\n      dup3\n        /* \"#utility.yul\":24388:24481   */\n      tag_216\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":24506:24508   */\n      0x20\n        /* \"#utility.yul\":24501:24504   */\n      dup3\n        /* \"#utility.yul\":24497:24509   */\n      add\n        /* \"#utility.yul\":24490:24509   */\n      swap1\n      pop\n        /* \"#utility.yul\":24149:24515   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24521:24940   */\n    tag_139:\n        /* \"#utility.yul\":24687:24691   */\n      0x00\n        /* \"#utility.yul\":24725:24727   */\n      0x20\n        /* \"#utility.yul\":24714:24723   */\n      dup3\n        /* \"#utility.yul\":24710:24728   */\n      add\n        /* \"#utility.yul\":24702:24728   */\n      swap1\n      pop\n        /* \"#utility.yul\":24774:24783   */\n      dup2\n        /* \"#utility.yul\":24768:24772   */\n      dup2\n        /* \"#utility.yul\":24764:24784   */\n      sub\n        /* \"#utility.yul\":24760:24761   */\n      0x00\n        /* \"#utility.yul\":24749:24758   */\n      dup4\n        /* \"#utility.yul\":24745:24762   */\n      add\n        /* \"#utility.yul\":24738:24785   */\n      mstore\n        /* \"#utility.yul\":24802:24933   */\n      tag_431\n        /* \"#utility.yul\":24928:24932   */\n      dup2\n        /* \"#utility.yul\":24802:24933   */\n      tag_217\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":24794:24933   */\n      swap1\n      pop\n        /* \"#utility.yul\":24521:24940   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24946:25140   */\n    tag_153:\n        /* \"#utility.yul\":24986:24990   */\n      0x00\n        /* \"#utility.yul\":25006:25026   */\n      tag_433\n        /* \"#utility.yul\":25024:25025   */\n      dup3\n        /* \"#utility.yul\":25006:25026   */\n      tag_164\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":25001:25026   */\n      swap2\n      pop\n        /* \"#utility.yul\":25040:25060   */\n      tag_434\n        /* \"#utility.yul\":25058:25059   */\n      dup4\n        /* \"#utility.yul\":25040:25060   */\n      tag_164\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":25035:25060   */\n      swap3\n      pop\n        /* \"#utility.yul\":25084:25085   */\n      dup3\n        /* \"#utility.yul\":25081:25082   */\n      dup3\n        /* \"#utility.yul\":25077:25086   */\n      sub\n        /* \"#utility.yul\":25069:25086   */\n      swap1\n      pop\n        /* \"#utility.yul\":25108:25109   */\n      dup2\n        /* \"#utility.yul\":25102:25106   */\n      dup2\n        /* \"#utility.yul\":25099:25110   */\n      gt\n        /* \"#utility.yul\":25096:25133   */\n      iszero\n      tag_435\n      jumpi\n        /* \"#utility.yul\":25113:25131   */\n      tag_436\n      tag_203\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":25096:25133   */\n    tag_435:\n        /* \"#utility.yul\":24946:25140   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203e3a773a39fe0d77236fb576fabfc304716ad5bd708d462b92b2ea64d825430864736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1074": {
									"entryPoint": null,
									"id": 1074,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_MyToken_$1030_fromMemory": {
									"entryPoint": 455,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_MyToken_$1030_fromMemory": {
									"entryPoint": 477,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 392,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_MyToken_$1030": {
									"entryPoint": 411,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 361,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 357,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_MyToken_$1030": {
									"entryPoint": 430,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1413:9",
										"nodeType": "YulBlock",
										"src": "0:1413:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:9",
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nativeSrc": "57:19:9",
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:9",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nativeSrc": "67:9:9",
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:9",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nativeSrc": "177:28:9",
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:9",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:9",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nativeSrc": "187:12:9",
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nativeSrc": "187:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nativeSrc": "300:28:9",
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:9",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:9",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nativeSrc": "310:12:9",
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nativeSrc": "310:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nativeSrc": "379:81:9",
													"nodeType": "YulBlock",
													"src": "379:81:9",
													"statements": [
														{
															"nativeSrc": "389:65:9",
															"nodeType": "YulAssignment",
															"src": "389:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:9",
																		"nodeType": "YulLiteral",
																		"src": "411:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:9"
																},
																"nativeSrc": "400:54:9",
																"nodeType": "YulFunctionCall",
																"src": "400:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:9",
														"nodeType": "YulTypedName",
														"src": "361:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:9",
														"nodeType": "YulTypedName",
														"src": "371:7:9",
														"type": ""
													}
												],
												"src": "334:126:9"
											},
											{
												"body": {
													"nativeSrc": "511:51:9",
													"nodeType": "YulBlock",
													"src": "511:51:9",
													"statements": [
														{
															"nativeSrc": "521:35:9",
															"nodeType": "YulAssignment",
															"src": "521:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:9"
																},
																"nativeSrc": "532:24:9",
																"nodeType": "YulFunctionCall",
																"src": "532:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:9",
														"nodeType": "YulTypedName",
														"src": "493:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:9",
														"nodeType": "YulTypedName",
														"src": "503:7:9",
														"type": ""
													}
												],
												"src": "466:96:9"
											},
											{
												"body": {
													"nativeSrc": "629:51:9",
													"nodeType": "YulBlock",
													"src": "629:51:9",
													"statements": [
														{
															"nativeSrc": "639:35:9",
															"nodeType": "YulAssignment",
															"src": "639:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "668:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "668:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "650:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "650:17:9"
																},
																"nativeSrc": "650:24:9",
																"nodeType": "YulFunctionCall",
																"src": "650:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "639:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "639:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_MyToken_$1030",
												"nativeSrc": "568:112:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:9",
														"nodeType": "YulTypedName",
														"src": "611:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "621:7:9",
														"nodeType": "YulTypedName",
														"src": "621:7:9",
														"type": ""
													}
												],
												"src": "568:112:9"
											},
											{
												"body": {
													"nativeSrc": "745:95:9",
													"nodeType": "YulBlock",
													"src": "745:95:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "818:16:9",
																"nodeType": "YulBlock",
																"src": "818:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "827:1:9",
																					"nodeType": "YulLiteral",
																					"src": "827:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "830:1:9",
																					"nodeType": "YulLiteral",
																					"src": "830:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "820:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "820:6:9"
																			},
																			"nativeSrc": "820:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "820:12:9"
																		},
																		"nativeSrc": "820:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "820:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "768:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "768:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "809:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "809:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_MyToken_$1030",
																					"nativeSrc": "775:33:9",
																					"nodeType": "YulIdentifier",
																					"src": "775:33:9"
																				},
																				"nativeSrc": "775:40:9",
																				"nodeType": "YulFunctionCall",
																				"src": "775:40:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "765:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "765:2:9"
																		},
																		"nativeSrc": "765:51:9",
																		"nodeType": "YulFunctionCall",
																		"src": "765:51:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "758:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "758:6:9"
																},
																"nativeSrc": "758:59:9",
																"nodeType": "YulFunctionCall",
																"src": "758:59:9"
															},
															"nativeSrc": "755:79:9",
															"nodeType": "YulIf",
															"src": "755:79:9"
														}
													]
												},
												"name": "validator_revert_t_contract$_MyToken_$1030",
												"nativeSrc": "686:154:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "738:5:9",
														"nodeType": "YulTypedName",
														"src": "738:5:9",
														"type": ""
													}
												],
												"src": "686:154:9"
											},
											{
												"body": {
													"nativeSrc": "925:96:9",
													"nodeType": "YulBlock",
													"src": "925:96:9",
													"statements": [
														{
															"nativeSrc": "935:22:9",
															"nodeType": "YulAssignment",
															"src": "935:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "950:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "950:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "944:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "944:5:9"
																},
																"nativeSrc": "944:13:9",
																"nodeType": "YulFunctionCall",
																"src": "944:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "935:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "935:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1009:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1009:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_MyToken_$1030",
																	"nativeSrc": "966:42:9",
																	"nodeType": "YulIdentifier",
																	"src": "966:42:9"
																},
																"nativeSrc": "966:49:9",
																"nodeType": "YulFunctionCall",
																"src": "966:49:9"
															},
															"nativeSrc": "966:49:9",
															"nodeType": "YulExpressionStatement",
															"src": "966:49:9"
														}
													]
												},
												"name": "abi_decode_t_contract$_MyToken_$1030_fromMemory",
												"nativeSrc": "846:175:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "903:6:9",
														"nodeType": "YulTypedName",
														"src": "903:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "911:3:9",
														"nodeType": "YulTypedName",
														"src": "911:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "919:5:9",
														"nodeType": "YulTypedName",
														"src": "919:5:9",
														"type": ""
													}
												],
												"src": "846:175:9"
											},
											{
												"body": {
													"nativeSrc": "1120:290:9",
													"nodeType": "YulBlock",
													"src": "1120:290:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1166:83:9",
																"nodeType": "YulBlock",
																"src": "1166:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1168:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "1168:77:9"
																			},
																			"nativeSrc": "1168:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1168:79:9"
																		},
																		"nativeSrc": "1168:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1168:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1141:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1141:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1150:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1150:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1137:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1137:3:9"
																		},
																		"nativeSrc": "1137:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1137:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1162:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1162:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1133:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1133:3:9"
																},
																"nativeSrc": "1133:32:9",
																"nodeType": "YulFunctionCall",
																"src": "1133:32:9"
															},
															"nativeSrc": "1130:119:9",
															"nodeType": "YulIf",
															"src": "1130:119:9"
														},
														{
															"nativeSrc": "1259:144:9",
															"nodeType": "YulBlock",
															"src": "1259:144:9",
															"statements": [
																{
																	"nativeSrc": "1274:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1274:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1288:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1278:6:9",
																			"nodeType": "YulTypedName",
																			"src": "1278:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1303:90:9",
																	"nodeType": "YulAssignment",
																	"src": "1303:90:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1365:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "1365:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1376:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1376:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1361:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1361:3:9"
																				},
																				"nativeSrc": "1361:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1361:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1385:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1385:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_MyToken_$1030_fromMemory",
																			"nativeSrc": "1313:47:9",
																			"nodeType": "YulIdentifier",
																			"src": "1313:47:9"
																		},
																		"nativeSrc": "1313:80:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1313:80:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1303:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1303:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_MyToken_$1030_fromMemory",
												"nativeSrc": "1027:383:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1090:9:9",
														"nodeType": "YulTypedName",
														"src": "1090:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1101:7:9",
														"nodeType": "YulTypedName",
														"src": "1101:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1113:6:9",
														"nodeType": "YulTypedName",
														"src": "1113:6:9",
														"type": ""
													}
												],
												"src": "1027:383:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_MyToken_$1030(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_MyToken_$1030(value) {\n        if iszero(eq(value, cleanup_t_contract$_MyToken_$1030(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_MyToken_$1030_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_MyToken_$1030(value)\n    }\n\n    function abi_decode_tuple_t_contract$_MyToken_$1030_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_MyToken_$1030_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA PUSH1 0xFF AND DUP2 MSTORE POP PUSH1 0x1 SWAP1 PUSH1 0x5 PUSH3 0x51 SWAP3 SWAP2 SWAP1 PUSH3 0xF3 JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH3 0x5E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1F6A CODESIZE SUB DUP1 PUSH3 0x1F6A DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x84 SWAP2 SWAP1 PUSH3 0x1DD JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP PUSH3 0x20D JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH3 0x135 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x134 JUMPI DUP3 MLOAD DUP3 SWAP1 PUSH1 0xFF AND SWAP1 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x112 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x144 SWAP2 SWAP1 PUSH3 0x148 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x161 JUMPI PUSH0 DUP2 PUSH0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x149 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x194 DUP3 PUSH3 0x169 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x1A7 DUP3 PUSH3 0x188 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1B9 DUP2 PUSH3 0x19B JUMP JUMPDEST DUP2 EQ PUSH3 0x1C4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x1D7 DUP2 PUSH3 0x1AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1F5 JUMPI PUSH3 0x1F4 PUSH3 0x165 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x204 DUP5 DUP3 DUP6 ADD PUSH3 0x1C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x1D1F PUSH3 0x24B PUSH0 CODECOPY PUSH0 PUSH2 0xB70 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x300 ADD MSTORE DUP2 DUP2 PUSH2 0x598 ADD MSTORE DUP2 DUP2 PUSH2 0x8AB ADD MSTORE DUP2 DUP2 PUSH2 0xCDA ADD MSTORE PUSH2 0x10A6 ADD MSTORE PUSH2 0x1D1F PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x92CEB12D GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x92CEB12D EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0xB0C479A5 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0xB5D5B5FA EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0xC9757417 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0xD2D7231F EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x289 JUMPI PUSH2 0xB2 JUMP JUMPDEST DUP1 PUSH4 0xB46BA99 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x2FA78085 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x41324EC5 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x47C4D742 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x5EE0D9B4 EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x180 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBE PUSH2 0x2A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x11F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x1276 JUMP JUMPDEST PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x12B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x12F3 JUMP JUMPDEST PUSH2 0x39D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x131E JUMP JUMPDEST PUSH2 0x67C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x147 SWAP2 SWAP1 PUSH2 0x1411 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x165 SWAP2 SWAP1 PUSH2 0x1276 JUMP JUMPDEST PUSH2 0xA23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x177 SWAP2 SWAP1 PUSH2 0x155E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH2 0xB6E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x158D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x12F3 JUMP JUMPDEST PUSH2 0xB92 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CF SWAP2 SWAP1 PUSH2 0x12F3 JUMP JUMPDEST PUSH2 0xDBD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E7 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x205 SWAP2 SWAP1 PUSH2 0x1622 JUMP JUMPDEST PUSH2 0xE34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x240 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23B SWAP2 SWAP1 PUSH2 0x12F3 JUMP JUMPDEST PUSH2 0xEC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x1411 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x270 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x12F3 JUMP JUMPDEST PUSH2 0xFA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x280 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1660 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x291 PUSH2 0x10A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x16FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x2F3 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x2DF JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x357 SWAP2 SWAP1 PUSH2 0x158D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x372 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x396 SWAP2 SWAP1 PUSH2 0x172B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x43E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x435 SWAP1 PUSH2 0x17D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x4A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x497 SWAP1 PUSH2 0x1864 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3C PUSH1 0x3 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x4C1 SWAP2 SWAP1 PUSH2 0x18AF JUMP JUMPDEST PUSH1 0x3 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x4E0 SWAP2 SWAP1 PUSH2 0x18F0 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x522 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x519 SWAP1 PUSH2 0x1993 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x15 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 DUP1 PUSH0 DUP1 PUSH2 0x55C DUP6 PUSH2 0xFA2 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH0 PUSH1 0x3 PUSH0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH0 PUSH1 0x3 PUSH0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP8 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F1 SWAP3 SWAP2 SWAP1 PUSH2 0x19B1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x60D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x631 SWAP2 SWAP1 PUSH2 0x1A02 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x673 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x66A SWAP1 PUSH2 0x1A77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x684 PUSH2 0x10E8 JUMP JUMPDEST PUSH0 DUP4 GT PUSH2 0x6C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6BD SWAP1 PUSH2 0x1ADF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 EQ DUP1 PUSH2 0x6D5 JUMPI POP PUSH1 0x4 DUP3 EQ JUMPDEST DUP1 PUSH2 0x6E0 JUMPI POP PUSH1 0x6 DUP3 EQ JUMPDEST DUP1 PUSH2 0x6EB JUMPI POP PUSH1 0x8 DUP3 EQ JUMPDEST DUP1 PUSH2 0x6F6 JUMPI POP PUSH1 0xA DUP3 EQ JUMPDEST PUSH2 0x735 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72C SWAP1 PUSH2 0x1B6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x73E PUSH0 PUSH2 0x10C8 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x754 PUSH0 PUSH2 0x10C8 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 POP PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x15 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x906 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B8B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x922 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x946 SWAP2 SWAP1 PUSH2 0x1A02 JUMP JUMPDEST POP DUP1 PUSH1 0x3 PUSH0 PUSH2 0x954 PUSH0 PUSH2 0x10C8 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x15 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH2 0xA19 PUSH0 PUSH2 0x10D4 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xB63 JUMPI DUP4 DUP3 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xA81 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC33 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC2A SWAP1 PUSH2 0x1C30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xC95 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC8C SWAP1 PUSH2 0x1C98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 DUP1 PUSH0 DUP1 PUSH2 0xCCF DUP6 PUSH2 0xFA2 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP7 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD33 SWAP3 SWAP2 SWAP1 PUSH2 0x19B1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD4F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD73 SWAP2 SWAP1 PUSH2 0x1A02 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xDB5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDAC SWAP1 PUSH2 0x1A77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP8 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xE4D JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH0 SWAP2 POP SWAP2 POP POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP8 JUMP JUMPDEST PUSH2 0xECD PUSH2 0x10E8 JUMP JUMPDEST PUSH1 0x3 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 TIMESTAMP SWAP1 POP PUSH0 PUSH1 0x3 PUSH0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD SLOAD DUP3 PUSH2 0xFCB SWAP2 SWAP1 PUSH2 0x1CB6 JUMP JUMPDEST SWAP1 POP PUSH1 0x3C PUSH1 0x3 PUSH0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0xFEE SWAP2 SWAP1 PUSH2 0x18AF JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x1019 JUMPI PUSH1 0x3C PUSH1 0x3 PUSH0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x1016 SWAP2 SWAP1 PUSH2 0x18AF JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH0 PUSH1 0x1 DUP3 PUSH2 0x1027 SWAP2 SWAP1 PUSH2 0x18AF JUMP JUMPDEST SWAP1 POP PUSH1 0x3 PUSH0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD DUP3 PUSH1 0x3 PUSH0 DUP13 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP5 PUSH2 0x1092 SWAP2 SWAP1 PUSH2 0x18F0 JUMP JUMPDEST SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP POP POP POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1173 DUP2 PUSH2 0x1161 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1184 DUP4 DUP4 PUSH2 0x116A JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x11A6 DUP3 PUSH2 0x1138 JUMP JUMPDEST PUSH2 0x11B0 DUP2 DUP6 PUSH2 0x1142 JUMP JUMPDEST SWAP4 POP PUSH2 0x11BB DUP4 PUSH2 0x1152 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11EB JUMPI DUP2 MLOAD PUSH2 0x11D2 DUP9 DUP3 PUSH2 0x1179 JUMP JUMPDEST SWAP8 POP PUSH2 0x11DD DUP4 PUSH2 0x1190 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x11BE JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1210 DUP2 DUP5 PUSH2 0x119C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1245 DUP3 PUSH2 0x121C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1255 DUP2 PUSH2 0x123B JUMP JUMPDEST DUP2 EQ PUSH2 0x125F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1270 DUP2 PUSH2 0x124C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x128B JUMPI PUSH2 0x128A PUSH2 0x1218 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1298 DUP5 DUP3 DUP6 ADD PUSH2 0x1262 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12AA DUP2 PUSH2 0x1161 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12C3 PUSH0 DUP4 ADD DUP5 PUSH2 0x12A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12D2 DUP2 PUSH2 0x1161 JUMP JUMPDEST DUP2 EQ PUSH2 0x12DC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12ED DUP2 PUSH2 0x12C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1308 JUMPI PUSH2 0x1307 PUSH2 0x1218 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1315 DUP5 DUP3 DUP6 ADD PUSH2 0x12DF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1334 JUMPI PUSH2 0x1333 PUSH2 0x1218 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1341 DUP6 DUP3 DUP7 ADD PUSH2 0x12DF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1352 DUP6 DUP3 DUP7 ADD PUSH2 0x12DF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1365 DUP2 PUSH2 0x123B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x137F DUP2 PUSH2 0x136B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x1399 PUSH0 DUP6 ADD DUP3 PUSH2 0x116A JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x13AC PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x116A JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x13BF PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x116A JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x13D2 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x116A JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x13E5 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x135C JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x13F8 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x1376 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x140B PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x1376 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x1424 PUSH0 DUP4 ADD DUP5 PUSH2 0x1385 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x1467 PUSH0 DUP6 ADD DUP3 PUSH2 0x116A JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x147A PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x116A JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x148D PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x116A JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x14A0 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x116A JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x14B3 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x135C JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x14C6 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x1376 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x14D9 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x1376 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14EA DUP4 DUP4 PUSH2 0x1453 JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x150C DUP3 PUSH2 0x142A JUMP JUMPDEST PUSH2 0x1516 DUP2 DUP6 PUSH2 0x1434 JUMP JUMPDEST SWAP4 POP PUSH2 0x1521 DUP4 PUSH2 0x1444 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1551 JUMPI DUP2 MLOAD PUSH2 0x1538 DUP9 DUP3 PUSH2 0x14DF JUMP JUMPDEST SWAP8 POP PUSH2 0x1543 DUP4 PUSH2 0x14F6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1524 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1576 DUP2 DUP5 PUSH2 0x1502 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1587 DUP2 PUSH2 0x123B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15A0 PUSH0 DUP4 ADD DUP5 PUSH2 0x157E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15AF DUP2 PUSH2 0x136B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x15C8 PUSH0 DUP4 ADD DUP11 PUSH2 0x12A1 JUMP JUMPDEST PUSH2 0x15D5 PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x12A1 JUMP JUMPDEST PUSH2 0x15E2 PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x12A1 JUMP JUMPDEST PUSH2 0x15EF PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x12A1 JUMP JUMPDEST PUSH2 0x15FC PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x157E JUMP JUMPDEST PUSH2 0x1609 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x15A6 JUMP JUMPDEST PUSH2 0x1616 PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x15A6 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1638 JUMPI PUSH2 0x1637 PUSH2 0x1218 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1645 DUP6 DUP3 DUP7 ADD PUSH2 0x1262 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1656 DUP6 DUP3 DUP7 ADD PUSH2 0x12DF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1673 PUSH0 DUP4 ADD DUP8 PUSH2 0x157E JUMP JUMPDEST PUSH2 0x1680 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x12A1 JUMP JUMPDEST PUSH2 0x168D PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x12A1 JUMP JUMPDEST PUSH2 0x169A PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x12A1 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16C6 PUSH2 0x16C1 PUSH2 0x16BC DUP5 PUSH2 0x121C JUMP JUMPDEST PUSH2 0x16A3 JUMP JUMPDEST PUSH2 0x121C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16D7 DUP3 PUSH2 0x16AC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16E8 DUP3 PUSH2 0x16CD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16F8 DUP2 PUSH2 0x16DE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1711 PUSH0 DUP4 ADD DUP5 PUSH2 0x16EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1725 DUP2 PUSH2 0x12C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1740 JUMPI PUSH2 0x173F PUSH2 0x1218 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x174D DUP5 DUP3 DUP6 ADD PUSH2 0x1717 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F752063616E206F6E6C7920636C61696D20796F7572206F776E207374616B PUSH0 DUP3 ADD MSTORE PUSH32 0x656420616D6F756E740000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x17C0 PUSH1 0x29 DUP4 PUSH2 0x1756 JUMP JUMPDEST SWAP2 POP PUSH2 0x17CB DUP3 PUSH2 0x1766 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17ED DUP2 PUSH2 0x17B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x52657761726420616C726561647920636C61696D656420796F757220616D6F75 PUSH0 DUP3 ADD MSTORE PUSH32 0x6E74000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x184E PUSH1 0x22 DUP4 PUSH2 0x1756 JUMP JUMPDEST SWAP2 POP PUSH2 0x1859 DUP3 PUSH2 0x17F4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x187B DUP2 PUSH2 0x1842 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x18B9 DUP3 PUSH2 0x1161 JUMP JUMPDEST SWAP2 POP PUSH2 0x18C4 DUP4 PUSH2 0x1161 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x18D2 DUP2 PUSH2 0x1161 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x18E9 JUMPI PUSH2 0x18E8 PUSH2 0x1882 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x18FA DUP3 PUSH2 0x1161 JUMP JUMPDEST SWAP2 POP PUSH2 0x1905 DUP4 PUSH2 0x1161 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x191D JUMPI PUSH2 0x191C PUSH2 0x1882 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F752063616E206F6E6C7920636C61696D2061667465722074686520737461 PUSH0 DUP3 ADD MSTORE PUSH32 0x6B696E67206475726174696F6E20686173207061737365640000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x197D PUSH1 0x38 DUP4 PUSH2 0x1756 JUMP JUMPDEST SWAP2 POP PUSH2 0x1988 DUP3 PUSH2 0x1923 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19AA DUP2 PUSH2 0x1971 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x19C4 PUSH0 DUP4 ADD DUP6 PUSH2 0x157E JUMP JUMPDEST PUSH2 0x19D1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x12A1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x19E1 DUP2 PUSH2 0x136B JUMP JUMPDEST DUP2 EQ PUSH2 0x19EB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x19FC DUP2 PUSH2 0x19D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A17 JUMPI PUSH2 0x1A16 PUSH2 0x1218 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A24 DUP5 DUP3 DUP6 ADD PUSH2 0x19EE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E207472616E73666572206661696C65640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A61 PUSH1 0x15 DUP4 PUSH2 0x1756 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A6C DUP3 PUSH2 0x1A2D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A8E DUP2 PUSH2 0x1A55 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AC9 PUSH1 0x20 DUP4 PUSH2 0x1756 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AD4 DUP3 PUSH2 0x1A95 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AF6 DUP2 PUSH2 0x1ABD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x456E746572204475726174696F6E20696E20666F726D61746520636865636B20 PUSH0 DUP3 ADD MSTORE PUSH32 0x6475726174696F6E000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B57 PUSH1 0x28 DUP4 PUSH2 0x1756 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B62 DUP3 PUSH2 0x1AFD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B84 DUP2 PUSH2 0x1B4B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1B9E PUSH0 DUP4 ADD DUP7 PUSH2 0x157E JUMP JUMPDEST PUSH2 0x1BAB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x157E JUMP JUMPDEST PUSH2 0x1BB8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x12A1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x596F752063616E206F6E6C7920636C61696D20796F7572206F776E2072657761 PUSH0 DUP3 ADD MSTORE PUSH32 0x7264730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C1A PUSH1 0x23 DUP4 PUSH2 0x1756 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C25 DUP3 PUSH2 0x1BC0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C47 DUP2 PUSH2 0x1C0E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x52657761726420616C726561647920636C61696D656400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C82 PUSH1 0x16 DUP4 PUSH2 0x1756 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C8D DUP3 PUSH2 0x1C4E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CAF DUP2 PUSH2 0x1C76 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CC0 DUP3 PUSH2 0x1161 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CCB DUP4 PUSH2 0x1161 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1CE3 JUMPI PUSH2 0x1CE2 PUSH2 0x1882 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY GASPRICE PUSH24 0x3A39FE0D77236FB576FABFC304716AD5BD708D462B92B2EA PUSH5 0xD825430864 PUSH20 0x6F6C634300081500330000000000000000000000 ",
							"sourceMap": "340:3985:8:-:0;;;538:33;;;;;;;;556:1;538:33;;;;;;559:1;538:33;;;;;;562:1;538:33;;;;;;565:1;538:33;;;;;;568:2;538:33;;;;;;;;;;;;;:::i;:::-;;580:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;635:6;619:23;;;;;;;;;;662:10;653:19;;;;;;;;;;580:100;340:3985;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;88:117:9:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:112::-;621:7;650:24;668:5;650:24;:::i;:::-;639:35;;568:112;;;:::o;686:154::-;775:40;809:5;775:40;:::i;:::-;768:5;765:51;755:79;;830:1;827;820:12;755:79;686:154;:::o;846:175::-;919:5;950:6;944:13;935:22;;966:49;1009:5;966:49;:::i;:::-;846:175;;;;:::o;1027:383::-;1113:6;1162:2;1150:9;1141:7;1137:23;1133:32;1130:119;;;1168:79;;:::i;:::-;1130:119;1288:1;1313:80;1385:7;1376:6;1365:9;1361:22;1313:80;:::i;:::-;1303:90;;1259:144;1027:383;;;;:::o;340:3985:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ClaimReward_1376": {
									"entryPoint": 2962,
									"id": 1376,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@ViewDetail_1247": {
									"entryPoint": 2595,
									"id": 1247,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@calculateReward_1318": {
									"entryPoint": 4002,
									"id": 1318,
									"parameterSlots": 1,
									"returnSlots": 4
								},
								"@check_duration_1220": {
									"entryPoint": 679,
									"id": 1220,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@chkid_1233": {
									"entryPoint": 3781,
									"id": 1233,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@cid_1100": {
									"entryPoint": 3517,
									"id": 1100,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claimStakedAmount_1466": {
									"entryPoint": 925,
									"id": 1466,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@current_943": {
									"entryPoint": 4296,
									"id": 943,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getBal_1113": {
									"entryPoint": 765,
									"id": 1113,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@increment_957": {
									"entryPoint": 4308,
									"id": 957,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_1047": {
									"entryPoint": 2926,
									"id": 1047,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakenow_1211": {
									"entryPoint": 1660,
									"id": 1211,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@token_1045": {
									"entryPoint": 4260,
									"id": 1045,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@userStakes_1095": {
									"entryPoint": 3636,
									"id": 1095,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 4706,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 6638,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4831,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 5911,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4726,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5666,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4851,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 5931,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 4894,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encodeUpdatedPos_t_struct$_Stake_$1089_memory_ptr_to_t_struct$_Stake_$1089_memory_ptr": {
									"entryPoint": 5343,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 4473,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 4956,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_struct$_Stake_$1089_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$1089_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 5378,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 4508,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool": {
									"entryPoint": 4982,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5542,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_MyToken_$1030_to_t_address_fromStack": {
									"entryPoint": 5871,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_07c0ca133cb093f9404f4c4664ce8fdedbf5c43b51f59b0f309033c8869551f9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7182,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6845,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_358f595c43c5417f683a6d546f36187d1f93d884747b170b9ff8f7ae4de4b92e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6987,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_46b08f77c9f834b9f1b5b936b65297ec5c2879e36c6a697ee9bcda135220d353_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6513,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_59cbfee2a24523c1fd613f6298f3ecd1131edd49036e244040e570087e53f19c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7286,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6741,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_983c2ca2c32b759517ef5d3818bb7f52ae0e3ac0a8ab4d1f11cafb08aad10398_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6068,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c2aed4c0e3286d656612091f61a54c85a469157745fd2030e607e679330a422c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6210,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_Stake_$1089_memory_ptr_to_t_struct$_Stake_$1089_memory_ptr": {
									"entryPoint": 5203,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_struct$_Stake_$1089_memory_ptr_to_t_struct$_Stake_$1089_memory_ptr_fromStack": {
									"entryPoint": 4997,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 4458,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4769,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5517,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7051,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6577,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5728,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_Stake_$1089_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Stake_$1089_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 5470,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4600,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_MyToken_$1030__to_t_address__fromStack_reversed": {
									"entryPoint": 5886,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_07c0ca133cb093f9404f4c4664ce8fdedbf5c43b51f59b0f309033c8869551f9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7216,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6879,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_358f595c43c5417f683a6d546f36187d1f93d884747b170b9ff8f7ae4de4b92e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7021,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_46b08f77c9f834b9f1b5b936b65297ec5c2879e36c6a697ee9bcda135220d353__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6547,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_59cbfee2a24523c1fd613f6298f3ecd1131edd49036e244040e570087e53f19c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7320,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6775,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_983c2ca2c32b759517ef5d3818bb7f52ae0e3ac0a8ab4d1f11cafb08aad10398__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6102,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c2aed4c0e3286d656612091f61a54c85a469157745fd2030e607e679330a422c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6244,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_Stake_$1089_memory_ptr__to_t_struct$_Stake_$1089_memory_ptr__fromStack_reversed": {
									"entryPoint": 5137,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4784,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_address_t_bool_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_address_t_bool_t_bool__fromStack_reversed": {
									"entryPoint": 5557,
									"id": null,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_struct$_Stake_$1089_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 5188,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 4434,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_struct$_Stake_$1089_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 5162,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 4408,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_struct$_Stake_$1089_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 5366,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 4496,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_struct$_Stake_$1089_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 5172,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 4418,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5974,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6384,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6319,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7350,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4667,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4971,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4636,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4449,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_MyToken_$1030_to_t_address": {
									"entryPoint": 5854,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 5837,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 5804,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 5795,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6274,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4632,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_07c0ca133cb093f9404f4c4664ce8fdedbf5c43b51f59b0f309033c8869551f9": {
									"entryPoint": 7104,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887": {
									"entryPoint": 6805,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_358f595c43c5417f683a6d546f36187d1f93d884747b170b9ff8f7ae4de4b92e": {
									"entryPoint": 6909,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_46b08f77c9f834b9f1b5b936b65297ec5c2879e36c6a697ee9bcda135220d353": {
									"entryPoint": 6435,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_59cbfee2a24523c1fd613f6298f3ecd1131edd49036e244040e570087e53f19c": {
									"entryPoint": 7246,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4": {
									"entryPoint": 6701,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_983c2ca2c32b759517ef5d3818bb7f52ae0e3ac0a8ab4d1f11cafb08aad10398": {
									"entryPoint": 5990,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c2aed4c0e3286d656612091f61a54c85a469157745fd2030e607e679330a422c": {
									"entryPoint": 6132,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4684,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6616,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4809,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:25143:9",
										"nodeType": "YulBlock",
										"src": "0:25143:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "81:40:9",
													"nodeType": "YulBlock",
													"src": "81:40:9",
													"statements": [
														{
															"nativeSrc": "92:22:9",
															"nodeType": "YulAssignment",
															"src": "92:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "108:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "108:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "102:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "102:5:9"
																},
																"nativeSrc": "102:12:9",
																"nodeType": "YulFunctionCall",
																"src": "102:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "92:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "92:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "7:114:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "64:5:9",
														"nodeType": "YulTypedName",
														"src": "64:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "74:6:9",
														"nodeType": "YulTypedName",
														"src": "74:6:9",
														"type": ""
													}
												],
												"src": "7:114:9"
											},
											{
												"body": {
													"nativeSrc": "238:73:9",
													"nodeType": "YulBlock",
													"src": "238:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "255:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "255:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "260:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "260:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "248:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "248:6:9"
																},
																"nativeSrc": "248:19:9",
																"nodeType": "YulFunctionCall",
																"src": "248:19:9"
															},
															"nativeSrc": "248:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "248:19:9"
														},
														{
															"nativeSrc": "276:29:9",
															"nodeType": "YulAssignment",
															"src": "276:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "295:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "295:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "300:4:9",
																		"nodeType": "YulLiteral",
																		"src": "300:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "291:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "291:3:9"
																},
																"nativeSrc": "291:14:9",
																"nodeType": "YulFunctionCall",
																"src": "291:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "276:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "276:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "127:184:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "210:3:9",
														"nodeType": "YulTypedName",
														"src": "210:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "215:6:9",
														"nodeType": "YulTypedName",
														"src": "215:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "226:11:9",
														"nodeType": "YulTypedName",
														"src": "226:11:9",
														"type": ""
													}
												],
												"src": "127:184:9"
											},
											{
												"body": {
													"nativeSrc": "389:60:9",
													"nodeType": "YulBlock",
													"src": "389:60:9",
													"statements": [
														{
															"nativeSrc": "399:11:9",
															"nodeType": "YulAssignment",
															"src": "399:11:9",
															"value": {
																"name": "ptr",
																"nativeSrc": "407:3:9",
																"nodeType": "YulIdentifier",
																"src": "407:3:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "399:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "399:4:9"
																}
															]
														},
														{
															"nativeSrc": "420:22:9",
															"nodeType": "YulAssignment",
															"src": "420:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "432:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "432:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "437:4:9",
																		"nodeType": "YulLiteral",
																		"src": "437:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "428:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "428:3:9"
																},
																"nativeSrc": "428:14:9",
																"nodeType": "YulFunctionCall",
																"src": "428:14:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "420:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "420:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "317:132:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "376:3:9",
														"nodeType": "YulTypedName",
														"src": "376:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "384:4:9",
														"nodeType": "YulTypedName",
														"src": "384:4:9",
														"type": ""
													}
												],
												"src": "317:132:9"
											},
											{
												"body": {
													"nativeSrc": "500:32:9",
													"nodeType": "YulBlock",
													"src": "500:32:9",
													"statements": [
														{
															"nativeSrc": "510:16:9",
															"nodeType": "YulAssignment",
															"src": "510:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "521:5:9",
																"nodeType": "YulIdentifier",
																"src": "521:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "510:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "510:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "455:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "482:5:9",
														"nodeType": "YulTypedName",
														"src": "482:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "492:7:9",
														"nodeType": "YulTypedName",
														"src": "492:7:9",
														"type": ""
													}
												],
												"src": "455:77:9"
											},
											{
												"body": {
													"nativeSrc": "593:53:9",
													"nodeType": "YulBlock",
													"src": "593:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "610:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "610:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "633:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "633:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "615:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "615:17:9"
																		},
																		"nativeSrc": "615:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "615:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "603:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "603:6:9"
																},
																"nativeSrc": "603:37:9",
																"nodeType": "YulFunctionCall",
																"src": "603:37:9"
															},
															"nativeSrc": "603:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "603:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "538:108:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "581:5:9",
														"nodeType": "YulTypedName",
														"src": "581:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "588:3:9",
														"nodeType": "YulTypedName",
														"src": "588:3:9",
														"type": ""
													}
												],
												"src": "538:108:9"
											},
											{
												"body": {
													"nativeSrc": "732:99:9",
													"nodeType": "YulBlock",
													"src": "732:99:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "776:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "776:6:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "784:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "784:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nativeSrc": "742:33:9",
																	"nodeType": "YulIdentifier",
																	"src": "742:33:9"
																},
																"nativeSrc": "742:46:9",
																"nodeType": "YulFunctionCall",
																"src": "742:46:9"
															},
															"nativeSrc": "742:46:9",
															"nodeType": "YulExpressionStatement",
															"src": "742:46:9"
														},
														{
															"nativeSrc": "797:28:9",
															"nodeType": "YulAssignment",
															"src": "797:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "815:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "815:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "820:4:9",
																		"nodeType": "YulLiteral",
																		"src": "820:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "811:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:9"
																},
																"nativeSrc": "811:14:9",
																"nodeType": "YulFunctionCall",
																"src": "811:14:9"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "797:10:9",
																	"nodeType": "YulIdentifier",
																	"src": "797:10:9"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nativeSrc": "652:179:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "705:6:9",
														"nodeType": "YulTypedName",
														"src": "705:6:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "713:3:9",
														"nodeType": "YulTypedName",
														"src": "713:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "721:10:9",
														"nodeType": "YulTypedName",
														"src": "721:10:9",
														"type": ""
													}
												],
												"src": "652:179:9"
											},
											{
												"body": {
													"nativeSrc": "912:38:9",
													"nodeType": "YulBlock",
													"src": "912:38:9",
													"statements": [
														{
															"nativeSrc": "922:22:9",
															"nodeType": "YulAssignment",
															"src": "922:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "934:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "934:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:9",
																		"nodeType": "YulLiteral",
																		"src": "939:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "930:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "930:3:9"
																},
																"nativeSrc": "930:14:9",
																"nodeType": "YulFunctionCall",
																"src": "930:14:9"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "922:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "922:4:9"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "837:113:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "899:3:9",
														"nodeType": "YulTypedName",
														"src": "899:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "907:4:9",
														"nodeType": "YulTypedName",
														"src": "907:4:9",
														"type": ""
													}
												],
												"src": "837:113:9"
											},
											{
												"body": {
													"nativeSrc": "1110:608:9",
													"nodeType": "YulBlock",
													"src": "1110:608:9",
													"statements": [
														{
															"nativeSrc": "1120:68:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1120:68:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1182:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1182:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "1134:47:9",
																	"nodeType": "YulIdentifier",
																	"src": "1134:47:9"
																},
																"nativeSrc": "1134:54:9",
																"nodeType": "YulFunctionCall",
																"src": "1134:54:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1124:6:9",
																	"nodeType": "YulTypedName",
																	"src": "1124:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1197:93:9",
															"nodeType": "YulAssignment",
															"src": "1197:93:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1278:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1278:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1283:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1283:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "1204:73:9",
																	"nodeType": "YulIdentifier",
																	"src": "1204:73:9"
																},
																"nativeSrc": "1204:86:9",
																"nodeType": "YulFunctionCall",
																"src": "1204:86:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1197:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1197:3:9"
																}
															]
														},
														{
															"nativeSrc": "1299:71:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:71:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1364:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1364:5:9"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "1314:49:9",
																	"nodeType": "YulIdentifier",
																	"src": "1314:49:9"
																},
																"nativeSrc": "1314:56:9",
																"nodeType": "YulFunctionCall",
																"src": "1314:56:9"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "1303:7:9",
																	"nodeType": "YulTypedName",
																	"src": "1303:7:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1379:21:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1379:21:9",
															"value": {
																"name": "baseRef",
																"nativeSrc": "1393:7:9",
																"nodeType": "YulIdentifier",
																"src": "1393:7:9"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "1383:6:9",
																	"nodeType": "YulTypedName",
																	"src": "1383:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1469:224:9",
																"nodeType": "YulBlock",
																"src": "1469:224:9",
																"statements": [
																	{
																		"nativeSrc": "1483:34:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1483:34:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "1510:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "1510:6:9"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "1504:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1504:5:9"
																			},
																			"nativeSrc": "1504:13:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1504:13:9"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "1487:13:9",
																				"nodeType": "YulTypedName",
																				"src": "1487:13:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1530:70:9",
																		"nodeType": "YulAssignment",
																		"src": "1530:70:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "1581:13:9",
																					"nodeType": "YulIdentifier",
																					"src": "1581:13:9"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "1596:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1596:3:9"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nativeSrc": "1537:43:9",
																				"nodeType": "YulIdentifier",
																				"src": "1537:43:9"
																			},
																			"nativeSrc": "1537:63:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1537:63:9"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "1530:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "1530:3:9"
																			}
																		]
																	},
																	{
																		"nativeSrc": "1613:70:9",
																		"nodeType": "YulAssignment",
																		"src": "1613:70:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "1676:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "1676:6:9"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nativeSrc": "1623:52:9",
																				"nodeType": "YulIdentifier",
																				"src": "1623:52:9"
																			},
																			"nativeSrc": "1623:60:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1623:60:9"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "1613:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1613:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1431:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "1431:1:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1434:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1434:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1428:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "1428:2:9"
																},
																"nativeSrc": "1428:13:9",
																"nodeType": "YulFunctionCall",
																"src": "1428:13:9"
															},
															"nativeSrc": "1409:284:9",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1442:18:9",
																"nodeType": "YulBlock",
																"src": "1442:18:9",
																"statements": [
																	{
																		"nativeSrc": "1444:14:9",
																		"nodeType": "YulAssignment",
																		"src": "1444:14:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1453:1:9",
																					"nodeType": "YulIdentifier",
																					"src": "1453:1:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1456:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1456:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1449:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "1449:3:9"
																			},
																			"nativeSrc": "1449:9:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1449:9:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1444:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "1444:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1413:14:9",
																"nodeType": "YulBlock",
																"src": "1413:14:9",
																"statements": [
																	{
																		"nativeSrc": "1415:10:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1415:10:9",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "1424:1:9",
																			"nodeType": "YulLiteral",
																			"src": "1424:1:9",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "1419:1:9",
																				"nodeType": "YulTypedName",
																				"src": "1419:1:9",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "1409:284:9"
														},
														{
															"nativeSrc": "1702:10:9",
															"nodeType": "YulAssignment",
															"src": "1702:10:9",
															"value": {
																"name": "pos",
																"nativeSrc": "1709:3:9",
																"nodeType": "YulIdentifier",
																"src": "1709:3:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1702:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1702:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "986:732:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1089:5:9",
														"nodeType": "YulTypedName",
														"src": "1089:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1096:3:9",
														"nodeType": "YulTypedName",
														"src": "1096:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1105:3:9",
														"nodeType": "YulTypedName",
														"src": "1105:3:9",
														"type": ""
													}
												],
												"src": "986:732:9"
											},
											{
												"body": {
													"nativeSrc": "1872:225:9",
													"nodeType": "YulBlock",
													"src": "1872:225:9",
													"statements": [
														{
															"nativeSrc": "1882:26:9",
															"nodeType": "YulAssignment",
															"src": "1882:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1894:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1894:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1905:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1905:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1890:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1890:3:9"
																},
																"nativeSrc": "1890:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1890:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1882:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1882:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1929:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1929:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1940:1:9",
																				"nodeType": "YulLiteral",
																				"src": "1940:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1925:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1925:3:9"
																		},
																		"nativeSrc": "1925:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1925:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1948:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "1948:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1954:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1954:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1944:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1944:3:9"
																		},
																		"nativeSrc": "1944:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1944:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1918:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1918:6:9"
																},
																"nativeSrc": "1918:47:9",
																"nodeType": "YulFunctionCall",
																"src": "1918:47:9"
															},
															"nativeSrc": "1918:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "1918:47:9"
														},
														{
															"nativeSrc": "1974:116:9",
															"nodeType": "YulAssignment",
															"src": "1974:116:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2076:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2076:6:9"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2085:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "2085:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "1982:93:9",
																	"nodeType": "YulIdentifier",
																	"src": "1982:93:9"
																},
																"nativeSrc": "1982:108:9",
																"nodeType": "YulFunctionCall",
																"src": "1982:108:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1974:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1974:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "1724:373:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1844:9:9",
														"nodeType": "YulTypedName",
														"src": "1844:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1856:6:9",
														"nodeType": "YulTypedName",
														"src": "1856:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1867:4:9",
														"nodeType": "YulTypedName",
														"src": "1867:4:9",
														"type": ""
													}
												],
												"src": "1724:373:9"
											},
											{
												"body": {
													"nativeSrc": "2143:35:9",
													"nodeType": "YulBlock",
													"src": "2143:35:9",
													"statements": [
														{
															"nativeSrc": "2153:19:9",
															"nodeType": "YulAssignment",
															"src": "2153:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2169:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2169:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2163:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2163:5:9"
																},
																"nativeSrc": "2163:9:9",
																"nodeType": "YulFunctionCall",
																"src": "2163:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "2153:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2153:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "2103:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "2136:6:9",
														"nodeType": "YulTypedName",
														"src": "2136:6:9",
														"type": ""
													}
												],
												"src": "2103:75:9"
											},
											{
												"body": {
													"nativeSrc": "2273:28:9",
													"nodeType": "YulBlock",
													"src": "2273:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2290:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2290:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2293:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2293:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2283:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2283:6:9"
																},
																"nativeSrc": "2283:12:9",
																"nodeType": "YulFunctionCall",
																"src": "2283:12:9"
															},
															"nativeSrc": "2283:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "2283:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "2184:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "2184:117:9"
											},
											{
												"body": {
													"nativeSrc": "2396:28:9",
													"nodeType": "YulBlock",
													"src": "2396:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2413:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2413:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2416:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2416:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2406:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2406:6:9"
																},
																"nativeSrc": "2406:12:9",
																"nodeType": "YulFunctionCall",
																"src": "2406:12:9"
															},
															"nativeSrc": "2406:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "2406:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "2307:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "2307:117:9"
											},
											{
												"body": {
													"nativeSrc": "2475:81:9",
													"nodeType": "YulBlock",
													"src": "2475:81:9",
													"statements": [
														{
															"nativeSrc": "2485:65:9",
															"nodeType": "YulAssignment",
															"src": "2485:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2500:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2500:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2507:42:9",
																		"nodeType": "YulLiteral",
																		"src": "2507:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2496:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2496:3:9"
																},
																"nativeSrc": "2496:54:9",
																"nodeType": "YulFunctionCall",
																"src": "2496:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2485:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2485:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2430:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2457:5:9",
														"nodeType": "YulTypedName",
														"src": "2457:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2467:7:9",
														"nodeType": "YulTypedName",
														"src": "2467:7:9",
														"type": ""
													}
												],
												"src": "2430:126:9"
											},
											{
												"body": {
													"nativeSrc": "2607:51:9",
													"nodeType": "YulBlock",
													"src": "2607:51:9",
													"statements": [
														{
															"nativeSrc": "2617:35:9",
															"nodeType": "YulAssignment",
															"src": "2617:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2646:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2646:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2628:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "2628:17:9"
																},
																"nativeSrc": "2628:24:9",
																"nodeType": "YulFunctionCall",
																"src": "2628:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2617:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2617:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2562:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2589:5:9",
														"nodeType": "YulTypedName",
														"src": "2589:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2599:7:9",
														"nodeType": "YulTypedName",
														"src": "2599:7:9",
														"type": ""
													}
												],
												"src": "2562:96:9"
											},
											{
												"body": {
													"nativeSrc": "2707:79:9",
													"nodeType": "YulBlock",
													"src": "2707:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2764:16:9",
																"nodeType": "YulBlock",
																"src": "2764:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2773:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2773:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2776:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2776:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2766:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2766:6:9"
																			},
																			"nativeSrc": "2766:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2766:12:9"
																		},
																		"nativeSrc": "2766:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2766:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2730:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2730:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2755:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2755:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2737:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "2737:17:9"
																				},
																				"nativeSrc": "2737:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2737:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2727:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2727:2:9"
																		},
																		"nativeSrc": "2727:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2727:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2720:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2720:6:9"
																},
																"nativeSrc": "2720:43:9",
																"nodeType": "YulFunctionCall",
																"src": "2720:43:9"
															},
															"nativeSrc": "2717:63:9",
															"nodeType": "YulIf",
															"src": "2717:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2664:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2700:5:9",
														"nodeType": "YulTypedName",
														"src": "2700:5:9",
														"type": ""
													}
												],
												"src": "2664:122:9"
											},
											{
												"body": {
													"nativeSrc": "2844:87:9",
													"nodeType": "YulBlock",
													"src": "2844:87:9",
													"statements": [
														{
															"nativeSrc": "2854:29:9",
															"nodeType": "YulAssignment",
															"src": "2854:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2876:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2876:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2863:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2863:12:9"
																},
																"nativeSrc": "2863:20:9",
																"nodeType": "YulFunctionCall",
																"src": "2863:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2854:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2854:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2919:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2919:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2892:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "2892:26:9"
																},
																"nativeSrc": "2892:33:9",
																"nodeType": "YulFunctionCall",
																"src": "2892:33:9"
															},
															"nativeSrc": "2892:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "2892:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2792:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2822:6:9",
														"nodeType": "YulTypedName",
														"src": "2822:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2830:3:9",
														"nodeType": "YulTypedName",
														"src": "2830:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2838:5:9",
														"nodeType": "YulTypedName",
														"src": "2838:5:9",
														"type": ""
													}
												],
												"src": "2792:139:9"
											},
											{
												"body": {
													"nativeSrc": "3003:263:9",
													"nodeType": "YulBlock",
													"src": "3003:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3049:83:9",
																"nodeType": "YulBlock",
																"src": "3049:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3051:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "3051:77:9"
																			},
																			"nativeSrc": "3051:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3051:79:9"
																		},
																		"nativeSrc": "3051:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3051:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3024:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3024:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3033:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3033:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3020:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3020:3:9"
																		},
																		"nativeSrc": "3020:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3020:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3045:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3045:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3016:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3016:3:9"
																},
																"nativeSrc": "3016:32:9",
																"nodeType": "YulFunctionCall",
																"src": "3016:32:9"
															},
															"nativeSrc": "3013:119:9",
															"nodeType": "YulIf",
															"src": "3013:119:9"
														},
														{
															"nativeSrc": "3142:117:9",
															"nodeType": "YulBlock",
															"src": "3142:117:9",
															"statements": [
																{
																	"nativeSrc": "3157:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3157:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3171:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3171:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3161:6:9",
																			"nodeType": "YulTypedName",
																			"src": "3161:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3186:63:9",
																	"nodeType": "YulAssignment",
																	"src": "3186:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3221:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "3221:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3232:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "3232:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3217:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3217:3:9"
																				},
																				"nativeSrc": "3217:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3217:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3241:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3241:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3196:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "3196:20:9"
																		},
																		"nativeSrc": "3196:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3196:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3186:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3186:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2937:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2973:9:9",
														"nodeType": "YulTypedName",
														"src": "2973:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2984:7:9",
														"nodeType": "YulTypedName",
														"src": "2984:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2996:6:9",
														"nodeType": "YulTypedName",
														"src": "2996:6:9",
														"type": ""
													}
												],
												"src": "2937:329:9"
											},
											{
												"body": {
													"nativeSrc": "3337:53:9",
													"nodeType": "YulBlock",
													"src": "3337:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3354:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3354:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3377:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3377:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3359:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "3359:17:9"
																		},
																		"nativeSrc": "3359:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3359:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3347:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3347:6:9"
																},
																"nativeSrc": "3347:37:9",
																"nodeType": "YulFunctionCall",
																"src": "3347:37:9"
															},
															"nativeSrc": "3347:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "3347:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3272:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3325:5:9",
														"nodeType": "YulTypedName",
														"src": "3325:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3332:3:9",
														"nodeType": "YulTypedName",
														"src": "3332:3:9",
														"type": ""
													}
												],
												"src": "3272:118:9"
											},
											{
												"body": {
													"nativeSrc": "3494:124:9",
													"nodeType": "YulBlock",
													"src": "3494:124:9",
													"statements": [
														{
															"nativeSrc": "3504:26:9",
															"nodeType": "YulAssignment",
															"src": "3504:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3516:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3516:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3527:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3527:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3512:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3512:3:9"
																},
																"nativeSrc": "3512:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3512:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3504:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3504:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3584:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3584:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3597:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3597:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3608:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3608:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3593:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3593:3:9"
																		},
																		"nativeSrc": "3593:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3593:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3540:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "3540:43:9"
																},
																"nativeSrc": "3540:71:9",
																"nodeType": "YulFunctionCall",
																"src": "3540:71:9"
															},
															"nativeSrc": "3540:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "3540:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3396:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3466:9:9",
														"nodeType": "YulTypedName",
														"src": "3466:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3478:6:9",
														"nodeType": "YulTypedName",
														"src": "3478:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3489:4:9",
														"nodeType": "YulTypedName",
														"src": "3489:4:9",
														"type": ""
													}
												],
												"src": "3396:222:9"
											},
											{
												"body": {
													"nativeSrc": "3667:79:9",
													"nodeType": "YulBlock",
													"src": "3667:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3724:16:9",
																"nodeType": "YulBlock",
																"src": "3724:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3733:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3733:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3736:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3736:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3726:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3726:6:9"
																			},
																			"nativeSrc": "3726:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3726:12:9"
																		},
																		"nativeSrc": "3726:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3726:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3690:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3690:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3715:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "3715:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3697:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "3697:17:9"
																				},
																				"nativeSrc": "3697:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3697:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3687:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "3687:2:9"
																		},
																		"nativeSrc": "3687:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3687:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3680:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3680:6:9"
																},
																"nativeSrc": "3680:43:9",
																"nodeType": "YulFunctionCall",
																"src": "3680:43:9"
															},
															"nativeSrc": "3677:63:9",
															"nodeType": "YulIf",
															"src": "3677:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3624:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3660:5:9",
														"nodeType": "YulTypedName",
														"src": "3660:5:9",
														"type": ""
													}
												],
												"src": "3624:122:9"
											},
											{
												"body": {
													"nativeSrc": "3804:87:9",
													"nodeType": "YulBlock",
													"src": "3804:87:9",
													"statements": [
														{
															"nativeSrc": "3814:29:9",
															"nodeType": "YulAssignment",
															"src": "3814:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3836:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3836:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3823:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "3823:12:9"
																},
																"nativeSrc": "3823:20:9",
																"nodeType": "YulFunctionCall",
																"src": "3823:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3814:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "3814:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3879:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3879:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3852:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "3852:26:9"
																},
																"nativeSrc": "3852:33:9",
																"nodeType": "YulFunctionCall",
																"src": "3852:33:9"
															},
															"nativeSrc": "3852:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "3852:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3752:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3782:6:9",
														"nodeType": "YulTypedName",
														"src": "3782:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3790:3:9",
														"nodeType": "YulTypedName",
														"src": "3790:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3798:5:9",
														"nodeType": "YulTypedName",
														"src": "3798:5:9",
														"type": ""
													}
												],
												"src": "3752:139:9"
											},
											{
												"body": {
													"nativeSrc": "3963:263:9",
													"nodeType": "YulBlock",
													"src": "3963:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "4009:83:9",
																"nodeType": "YulBlock",
																"src": "4009:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4011:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "4011:77:9"
																			},
																			"nativeSrc": "4011:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4011:79:9"
																		},
																		"nativeSrc": "4011:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4011:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3984:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3984:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3993:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3993:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3980:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3980:3:9"
																		},
																		"nativeSrc": "3980:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3980:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4005:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4005:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3976:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3976:3:9"
																},
																"nativeSrc": "3976:32:9",
																"nodeType": "YulFunctionCall",
																"src": "3976:32:9"
															},
															"nativeSrc": "3973:119:9",
															"nodeType": "YulIf",
															"src": "3973:119:9"
														},
														{
															"nativeSrc": "4102:117:9",
															"nodeType": "YulBlock",
															"src": "4102:117:9",
															"statements": [
																{
																	"nativeSrc": "4117:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4117:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4131:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4131:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4121:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4121:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4146:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4146:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4181:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4181:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4192:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4192:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4177:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4177:3:9"
																				},
																				"nativeSrc": "4177:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4177:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4201:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4201:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4156:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4156:20:9"
																		},
																		"nativeSrc": "4156:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4156:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4146:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4146:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3897:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3933:9:9",
														"nodeType": "YulTypedName",
														"src": "3933:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3944:7:9",
														"nodeType": "YulTypedName",
														"src": "3944:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3956:6:9",
														"nodeType": "YulTypedName",
														"src": "3956:6:9",
														"type": ""
													}
												],
												"src": "3897:329:9"
											},
											{
												"body": {
													"nativeSrc": "4315:391:9",
													"nodeType": "YulBlock",
													"src": "4315:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "4361:83:9",
																"nodeType": "YulBlock",
																"src": "4361:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4363:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "4363:77:9"
																			},
																			"nativeSrc": "4363:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4363:79:9"
																		},
																		"nativeSrc": "4363:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4363:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4336:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4336:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4345:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4345:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4332:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4332:3:9"
																		},
																		"nativeSrc": "4332:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4332:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4357:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4357:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4328:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4328:3:9"
																},
																"nativeSrc": "4328:32:9",
																"nodeType": "YulFunctionCall",
																"src": "4328:32:9"
															},
															"nativeSrc": "4325:119:9",
															"nodeType": "YulIf",
															"src": "4325:119:9"
														},
														{
															"nativeSrc": "4454:117:9",
															"nodeType": "YulBlock",
															"src": "4454:117:9",
															"statements": [
																{
																	"nativeSrc": "4469:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4469:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4483:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4483:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4473:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4473:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4498:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4498:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4533:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4533:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4544:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4544:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4529:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4529:3:9"
																				},
																				"nativeSrc": "4529:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4529:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4553:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4553:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4508:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4508:20:9"
																		},
																		"nativeSrc": "4508:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4508:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4498:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4498:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4581:118:9",
															"nodeType": "YulBlock",
															"src": "4581:118:9",
															"statements": [
																{
																	"nativeSrc": "4596:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4596:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4610:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4610:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4600:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4600:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4626:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4626:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4661:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4661:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4672:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4672:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4657:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4657:3:9"
																				},
																				"nativeSrc": "4657:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4657:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4681:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4681:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4636:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4636:20:9"
																		},
																		"nativeSrc": "4636:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4636:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4626:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4626:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "4232:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4277:9:9",
														"nodeType": "YulTypedName",
														"src": "4277:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4288:7:9",
														"nodeType": "YulTypedName",
														"src": "4288:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4300:6:9",
														"nodeType": "YulTypedName",
														"src": "4300:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4308:6:9",
														"nodeType": "YulTypedName",
														"src": "4308:6:9",
														"type": ""
													}
												],
												"src": "4232:474:9"
											},
											{
												"body": {
													"nativeSrc": "4767:53:9",
													"nodeType": "YulBlock",
													"src": "4767:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4784:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4784:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4807:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "4807:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "4789:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "4789:17:9"
																		},
																		"nativeSrc": "4789:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4789:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4777:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4777:6:9"
																},
																"nativeSrc": "4777:37:9",
																"nodeType": "YulFunctionCall",
																"src": "4777:37:9"
															},
															"nativeSrc": "4777:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "4777:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "4712:108:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4755:5:9",
														"nodeType": "YulTypedName",
														"src": "4755:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4762:3:9",
														"nodeType": "YulTypedName",
														"src": "4762:3:9",
														"type": ""
													}
												],
												"src": "4712:108:9"
											},
											{
												"body": {
													"nativeSrc": "4868:48:9",
													"nodeType": "YulBlock",
													"src": "4868:48:9",
													"statements": [
														{
															"nativeSrc": "4878:32:9",
															"nodeType": "YulAssignment",
															"src": "4878:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4903:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "4903:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "4896:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4896:6:9"
																		},
																		"nativeSrc": "4896:13:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4896:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4889:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4889:6:9"
																},
																"nativeSrc": "4889:21:9",
																"nodeType": "YulFunctionCall",
																"src": "4889:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4878:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "4878:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "4826:90:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4850:5:9",
														"nodeType": "YulTypedName",
														"src": "4850:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4860:7:9",
														"nodeType": "YulTypedName",
														"src": "4860:7:9",
														"type": ""
													}
												],
												"src": "4826:90:9"
											},
											{
												"body": {
													"nativeSrc": "4971:50:9",
													"nodeType": "YulBlock",
													"src": "4971:50:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4988:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4988:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5008:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5008:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "4993:14:9",
																			"nodeType": "YulIdentifier",
																			"src": "4993:14:9"
																		},
																		"nativeSrc": "4993:21:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4993:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4981:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4981:6:9"
																},
																"nativeSrc": "4981:34:9",
																"nodeType": "YulFunctionCall",
																"src": "4981:34:9"
															},
															"nativeSrc": "4981:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "4981:34:9"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool",
												"nativeSrc": "4922:99:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4959:5:9",
														"nodeType": "YulTypedName",
														"src": "4959:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4966:3:9",
														"nodeType": "YulTypedName",
														"src": "4966:3:9",
														"type": ""
													}
												],
												"src": "4922:99:9"
											},
											{
												"body": {
													"nativeSrc": "5211:1277:9",
													"nodeType": "YulBlock",
													"src": "5211:1277:9",
													"statements": [
														{
															"nativeSrc": "5221:26:9",
															"nodeType": "YulVariableDeclaration",
															"src": "5221:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5237:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5237:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5242:4:9",
																		"nodeType": "YulLiteral",
																		"src": "5242:4:9",
																		"type": "",
																		"value": "0xe0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5233:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5233:3:9"
																},
																"nativeSrc": "5233:14:9",
																"nodeType": "YulFunctionCall",
																"src": "5233:14:9"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "5225:4:9",
																	"nodeType": "YulTypedName",
																	"src": "5225:4:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5257:168:9",
															"nodeType": "YulBlock",
															"src": "5257:168:9",
															"statements": [
																{
																	"nativeSrc": "5296:43:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5296:43:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5326:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "5326:5:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5333:4:9",
																						"nodeType": "YulLiteral",
																						"src": "5333:4:9",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5322:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5322:3:9"
																				},
																				"nativeSrc": "5322:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5322:16:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "5316:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "5316:5:9"
																		},
																		"nativeSrc": "5316:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5316:23:9"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "5300:12:9",
																			"nodeType": "YulTypedName",
																			"src": "5300:12:9",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "5386:12:9",
																				"nodeType": "YulIdentifier",
																				"src": "5386:12:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "5404:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "5404:3:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5409:4:9",
																						"nodeType": "YulLiteral",
																						"src": "5409:4:9",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5400:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5400:3:9"
																				},
																				"nativeSrc": "5400:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5400:14:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "5352:33:9",
																			"nodeType": "YulIdentifier",
																			"src": "5352:33:9"
																		},
																		"nativeSrc": "5352:63:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5352:63:9"
																	},
																	"nativeSrc": "5352:63:9",
																	"nodeType": "YulExpressionStatement",
																	"src": "5352:63:9"
																}
															]
														},
														{
															"nativeSrc": "5435:166:9",
															"nodeType": "YulBlock",
															"src": "5435:166:9",
															"statements": [
																{
																	"nativeSrc": "5472:43:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5472:43:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5502:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "5502:5:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5509:4:9",
																						"nodeType": "YulLiteral",
																						"src": "5509:4:9",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5498:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5498:3:9"
																				},
																				"nativeSrc": "5498:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5498:16:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "5492:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "5492:5:9"
																		},
																		"nativeSrc": "5492:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5492:23:9"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "5476:12:9",
																			"nodeType": "YulTypedName",
																			"src": "5476:12:9",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "5562:12:9",
																				"nodeType": "YulIdentifier",
																				"src": "5562:12:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "5580:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "5580:3:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5585:4:9",
																						"nodeType": "YulLiteral",
																						"src": "5585:4:9",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5576:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5576:3:9"
																				},
																				"nativeSrc": "5576:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5576:14:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "5528:33:9",
																			"nodeType": "YulIdentifier",
																			"src": "5528:33:9"
																		},
																		"nativeSrc": "5528:63:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5528:63:9"
																	},
																	"nativeSrc": "5528:63:9",
																	"nodeType": "YulExpressionStatement",
																	"src": "5528:63:9"
																}
															]
														},
														{
															"nativeSrc": "5611:168:9",
															"nodeType": "YulBlock",
															"src": "5611:168:9",
															"statements": [
																{
																	"nativeSrc": "5650:43:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5650:43:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5680:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "5680:5:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5687:4:9",
																						"nodeType": "YulLiteral",
																						"src": "5687:4:9",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5676:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5676:3:9"
																				},
																				"nativeSrc": "5676:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5676:16:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "5670:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "5670:5:9"
																		},
																		"nativeSrc": "5670:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5670:23:9"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "5654:12:9",
																			"nodeType": "YulTypedName",
																			"src": "5654:12:9",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "5740:12:9",
																				"nodeType": "YulIdentifier",
																				"src": "5740:12:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "5758:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "5758:3:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5763:4:9",
																						"nodeType": "YulLiteral",
																						"src": "5763:4:9",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5754:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5754:3:9"
																				},
																				"nativeSrc": "5754:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5754:14:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "5706:33:9",
																			"nodeType": "YulIdentifier",
																			"src": "5706:33:9"
																		},
																		"nativeSrc": "5706:63:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5706:63:9"
																	},
																	"nativeSrc": "5706:63:9",
																	"nodeType": "YulExpressionStatement",
																	"src": "5706:63:9"
																}
															]
														},
														{
															"nativeSrc": "5789:169:9",
															"nodeType": "YulBlock",
															"src": "5789:169:9",
															"statements": [
																{
																	"nativeSrc": "5829:43:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5829:43:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5859:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "5859:5:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5866:4:9",
																						"nodeType": "YulLiteral",
																						"src": "5866:4:9",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5855:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5855:3:9"
																				},
																				"nativeSrc": "5855:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5855:16:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "5849:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "5849:5:9"
																		},
																		"nativeSrc": "5849:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5849:23:9"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "5833:12:9",
																			"nodeType": "YulTypedName",
																			"src": "5833:12:9",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "5919:12:9",
																				"nodeType": "YulIdentifier",
																				"src": "5919:12:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "5937:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "5937:3:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5942:4:9",
																						"nodeType": "YulLiteral",
																						"src": "5942:4:9",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5933:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5933:3:9"
																				},
																				"nativeSrc": "5933:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5933:14:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "5885:33:9",
																			"nodeType": "YulIdentifier",
																			"src": "5885:33:9"
																		},
																		"nativeSrc": "5885:63:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5885:63:9"
																	},
																	"nativeSrc": "5885:63:9",
																	"nodeType": "YulExpressionStatement",
																	"src": "5885:63:9"
																}
															]
														},
														{
															"nativeSrc": "5968:167:9",
															"nodeType": "YulBlock",
															"src": "5968:167:9",
															"statements": [
																{
																	"nativeSrc": "6006:43:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6006:43:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6036:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "6036:5:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6043:4:9",
																						"nodeType": "YulLiteral",
																						"src": "6043:4:9",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6032:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6032:3:9"
																				},
																				"nativeSrc": "6032:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6032:16:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "6026:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "6026:5:9"
																		},
																		"nativeSrc": "6026:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6026:23:9"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "6010:12:9",
																			"nodeType": "YulTypedName",
																			"src": "6010:12:9",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "6096:12:9",
																				"nodeType": "YulIdentifier",
																				"src": "6096:12:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "6114:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "6114:3:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6119:4:9",
																						"nodeType": "YulLiteral",
																						"src": "6119:4:9",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6110:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6110:3:9"
																				},
																				"nativeSrc": "6110:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6110:14:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "6062:33:9",
																			"nodeType": "YulIdentifier",
																			"src": "6062:33:9"
																		},
																		"nativeSrc": "6062:63:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6062:63:9"
																	},
																	"nativeSrc": "6062:63:9",
																	"nodeType": "YulExpressionStatement",
																	"src": "6062:63:9"
																}
															]
														},
														{
															"nativeSrc": "6145:163:9",
															"nodeType": "YulBlock",
															"src": "6145:163:9",
															"statements": [
																{
																	"nativeSrc": "6185:43:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6185:43:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6215:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "6215:5:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6222:4:9",
																						"nodeType": "YulLiteral",
																						"src": "6222:4:9",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6211:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6211:3:9"
																				},
																				"nativeSrc": "6211:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6211:16:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "6205:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "6205:5:9"
																		},
																		"nativeSrc": "6205:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6205:23:9"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "6189:12:9",
																			"nodeType": "YulTypedName",
																			"src": "6189:12:9",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "6269:12:9",
																				"nodeType": "YulIdentifier",
																				"src": "6269:12:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "6287:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "6287:3:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6292:4:9",
																						"nodeType": "YulLiteral",
																						"src": "6292:4:9",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6283:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6283:3:9"
																				},
																				"nativeSrc": "6283:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6283:14:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bool_to_t_bool",
																			"nativeSrc": "6241:27:9",
																			"nodeType": "YulIdentifier",
																			"src": "6241:27:9"
																		},
																		"nativeSrc": "6241:57:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6241:57:9"
																	},
																	"nativeSrc": "6241:57:9",
																	"nodeType": "YulExpressionStatement",
																	"src": "6241:57:9"
																}
															]
														},
														{
															"nativeSrc": "6318:163:9",
															"nodeType": "YulBlock",
															"src": "6318:163:9",
															"statements": [
																{
																	"nativeSrc": "6358:43:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6358:43:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6388:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "6388:5:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6395:4:9",
																						"nodeType": "YulLiteral",
																						"src": "6395:4:9",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6384:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6384:3:9"
																				},
																				"nativeSrc": "6384:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6384:16:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "6378:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "6378:5:9"
																		},
																		"nativeSrc": "6378:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6378:23:9"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "6362:12:9",
																			"nodeType": "YulTypedName",
																			"src": "6362:12:9",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "6442:12:9",
																				"nodeType": "YulIdentifier",
																				"src": "6442:12:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "6460:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "6460:3:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6465:4:9",
																						"nodeType": "YulLiteral",
																						"src": "6465:4:9",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6456:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6456:3:9"
																				},
																				"nativeSrc": "6456:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6456:14:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bool_to_t_bool",
																			"nativeSrc": "6414:27:9",
																			"nodeType": "YulIdentifier",
																			"src": "6414:27:9"
																		},
																		"nativeSrc": "6414:57:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6414:57:9"
																	},
																	"nativeSrc": "6414:57:9",
																	"nodeType": "YulExpressionStatement",
																	"src": "6414:57:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_Stake_$1089_memory_ptr_to_t_struct$_Stake_$1089_memory_ptr_fromStack",
												"nativeSrc": "5099:1389:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5198:5:9",
														"nodeType": "YulTypedName",
														"src": "5198:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5205:3:9",
														"nodeType": "YulTypedName",
														"src": "5205:3:9",
														"type": ""
													}
												],
												"src": "5099:1389:9"
											},
											{
												"body": {
													"nativeSrc": "6638:171:9",
													"nodeType": "YulBlock",
													"src": "6638:171:9",
													"statements": [
														{
															"nativeSrc": "6648:27:9",
															"nodeType": "YulAssignment",
															"src": "6648:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6660:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6660:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6671:3:9",
																		"nodeType": "YulLiteral",
																		"src": "6671:3:9",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6656:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6656:3:9"
																},
																"nativeSrc": "6656:19:9",
																"nodeType": "YulFunctionCall",
																"src": "6656:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6648:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6648:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6775:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6775:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6788:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6788:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6799:1:9",
																				"nodeType": "YulLiteral",
																				"src": "6799:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6784:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6784:3:9"
																		},
																		"nativeSrc": "6784:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6784:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_Stake_$1089_memory_ptr_to_t_struct$_Stake_$1089_memory_ptr_fromStack",
																	"nativeSrc": "6685:89:9",
																	"nodeType": "YulIdentifier",
																	"src": "6685:89:9"
																},
																"nativeSrc": "6685:117:9",
																"nodeType": "YulFunctionCall",
																"src": "6685:117:9"
															},
															"nativeSrc": "6685:117:9",
															"nodeType": "YulExpressionStatement",
															"src": "6685:117:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_Stake_$1089_memory_ptr__to_t_struct$_Stake_$1089_memory_ptr__fromStack_reversed",
												"nativeSrc": "6494:315:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6610:9:9",
														"nodeType": "YulTypedName",
														"src": "6610:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6622:6:9",
														"nodeType": "YulTypedName",
														"src": "6622:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6633:4:9",
														"nodeType": "YulTypedName",
														"src": "6633:4:9",
														"type": ""
													}
												],
												"src": "6494:315:9"
											},
											{
												"body": {
													"nativeSrc": "6912:40:9",
													"nodeType": "YulBlock",
													"src": "6912:40:9",
													"statements": [
														{
															"nativeSrc": "6923:22:9",
															"nodeType": "YulAssignment",
															"src": "6923:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6939:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "6939:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6933:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "6933:5:9"
																},
																"nativeSrc": "6933:12:9",
																"nodeType": "YulFunctionCall",
																"src": "6933:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6923:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6923:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_struct$_Stake_$1089_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "6815:137:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6895:5:9",
														"nodeType": "YulTypedName",
														"src": "6895:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6905:6:9",
														"nodeType": "YulTypedName",
														"src": "6905:6:9",
														"type": ""
													}
												],
												"src": "6815:137:9"
											},
											{
												"body": {
													"nativeSrc": "7092:73:9",
													"nodeType": "YulBlock",
													"src": "7092:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7109:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7109:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7114:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7114:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7102:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7102:6:9"
																},
																"nativeSrc": "7102:19:9",
																"nodeType": "YulFunctionCall",
																"src": "7102:19:9"
															},
															"nativeSrc": "7102:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "7102:19:9"
														},
														{
															"nativeSrc": "7130:29:9",
															"nodeType": "YulAssignment",
															"src": "7130:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7149:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7149:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7154:4:9",
																		"nodeType": "YulLiteral",
																		"src": "7154:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7145:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7145:3:9"
																},
																"nativeSrc": "7145:14:9",
																"nodeType": "YulFunctionCall",
																"src": "7145:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "7130:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "7130:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_struct$_Stake_$1089_memory_ptr_$dyn_memory_ptr_fromStack",
												"nativeSrc": "6958:207:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7064:3:9",
														"nodeType": "YulTypedName",
														"src": "7064:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7069:6:9",
														"nodeType": "YulTypedName",
														"src": "7069:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "7080:11:9",
														"nodeType": "YulTypedName",
														"src": "7080:11:9",
														"type": ""
													}
												],
												"src": "6958:207:9"
											},
											{
												"body": {
													"nativeSrc": "7266:60:9",
													"nodeType": "YulBlock",
													"src": "7266:60:9",
													"statements": [
														{
															"nativeSrc": "7276:11:9",
															"nodeType": "YulAssignment",
															"src": "7276:11:9",
															"value": {
																"name": "ptr",
																"nativeSrc": "7284:3:9",
																"nodeType": "YulIdentifier",
																"src": "7284:3:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7276:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7276:4:9"
																}
															]
														},
														{
															"nativeSrc": "7297:22:9",
															"nodeType": "YulAssignment",
															"src": "7297:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "7309:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7309:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7314:4:9",
																		"nodeType": "YulLiteral",
																		"src": "7314:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7305:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7305:3:9"
																},
																"nativeSrc": "7305:14:9",
																"nodeType": "YulFunctionCall",
																"src": "7305:14:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7297:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7297:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_struct$_Stake_$1089_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "7171:155:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "7253:3:9",
														"nodeType": "YulTypedName",
														"src": "7253:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "7261:4:9",
														"nodeType": "YulTypedName",
														"src": "7261:4:9",
														"type": ""
													}
												],
												"src": "7171:155:9"
											},
											{
												"body": {
													"nativeSrc": "7506:1277:9",
													"nodeType": "YulBlock",
													"src": "7506:1277:9",
													"statements": [
														{
															"nativeSrc": "7516:26:9",
															"nodeType": "YulVariableDeclaration",
															"src": "7516:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7532:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7532:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7537:4:9",
																		"nodeType": "YulLiteral",
																		"src": "7537:4:9",
																		"type": "",
																		"value": "0xe0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7528:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7528:3:9"
																},
																"nativeSrc": "7528:14:9",
																"nodeType": "YulFunctionCall",
																"src": "7528:14:9"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "7520:4:9",
																	"nodeType": "YulTypedName",
																	"src": "7520:4:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7552:168:9",
															"nodeType": "YulBlock",
															"src": "7552:168:9",
															"statements": [
																{
																	"nativeSrc": "7591:43:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7591:43:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7621:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "7621:5:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7628:4:9",
																						"nodeType": "YulLiteral",
																						"src": "7628:4:9",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7617:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "7617:3:9"
																				},
																				"nativeSrc": "7617:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "7617:16:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7611:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "7611:5:9"
																		},
																		"nativeSrc": "7611:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7611:23:9"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "7595:12:9",
																			"nodeType": "YulTypedName",
																			"src": "7595:12:9",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "7681:12:9",
																				"nodeType": "YulIdentifier",
																				"src": "7681:12:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "7699:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "7699:3:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7704:4:9",
																						"nodeType": "YulLiteral",
																						"src": "7704:4:9",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7695:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "7695:3:9"
																				},
																				"nativeSrc": "7695:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "7695:14:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "7647:33:9",
																			"nodeType": "YulIdentifier",
																			"src": "7647:33:9"
																		},
																		"nativeSrc": "7647:63:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7647:63:9"
																	},
																	"nativeSrc": "7647:63:9",
																	"nodeType": "YulExpressionStatement",
																	"src": "7647:63:9"
																}
															]
														},
														{
															"nativeSrc": "7730:166:9",
															"nodeType": "YulBlock",
															"src": "7730:166:9",
															"statements": [
																{
																	"nativeSrc": "7767:43:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7767:43:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7797:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "7797:5:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7804:4:9",
																						"nodeType": "YulLiteral",
																						"src": "7804:4:9",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7793:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "7793:3:9"
																				},
																				"nativeSrc": "7793:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "7793:16:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7787:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "7787:5:9"
																		},
																		"nativeSrc": "7787:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7787:23:9"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "7771:12:9",
																			"nodeType": "YulTypedName",
																			"src": "7771:12:9",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "7857:12:9",
																				"nodeType": "YulIdentifier",
																				"src": "7857:12:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "7875:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "7875:3:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7880:4:9",
																						"nodeType": "YulLiteral",
																						"src": "7880:4:9",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7871:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "7871:3:9"
																				},
																				"nativeSrc": "7871:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "7871:14:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "7823:33:9",
																			"nodeType": "YulIdentifier",
																			"src": "7823:33:9"
																		},
																		"nativeSrc": "7823:63:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7823:63:9"
																	},
																	"nativeSrc": "7823:63:9",
																	"nodeType": "YulExpressionStatement",
																	"src": "7823:63:9"
																}
															]
														},
														{
															"nativeSrc": "7906:168:9",
															"nodeType": "YulBlock",
															"src": "7906:168:9",
															"statements": [
																{
																	"nativeSrc": "7945:43:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7945:43:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7975:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "7975:5:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7982:4:9",
																						"nodeType": "YulLiteral",
																						"src": "7982:4:9",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7971:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "7971:3:9"
																				},
																				"nativeSrc": "7971:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "7971:16:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7965:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "7965:5:9"
																		},
																		"nativeSrc": "7965:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7965:23:9"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "7949:12:9",
																			"nodeType": "YulTypedName",
																			"src": "7949:12:9",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "8035:12:9",
																				"nodeType": "YulIdentifier",
																				"src": "8035:12:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "8053:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "8053:3:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8058:4:9",
																						"nodeType": "YulLiteral",
																						"src": "8058:4:9",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8049:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "8049:3:9"
																				},
																				"nativeSrc": "8049:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8049:14:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "8001:33:9",
																			"nodeType": "YulIdentifier",
																			"src": "8001:33:9"
																		},
																		"nativeSrc": "8001:63:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8001:63:9"
																	},
																	"nativeSrc": "8001:63:9",
																	"nodeType": "YulExpressionStatement",
																	"src": "8001:63:9"
																}
															]
														},
														{
															"nativeSrc": "8084:169:9",
															"nodeType": "YulBlock",
															"src": "8084:169:9",
															"statements": [
																{
																	"nativeSrc": "8124:43:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8124:43:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8154:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "8154:5:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8161:4:9",
																						"nodeType": "YulLiteral",
																						"src": "8161:4:9",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8150:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "8150:3:9"
																				},
																				"nativeSrc": "8150:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8150:16:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8144:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "8144:5:9"
																		},
																		"nativeSrc": "8144:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8144:23:9"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "8128:12:9",
																			"nodeType": "YulTypedName",
																			"src": "8128:12:9",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "8214:12:9",
																				"nodeType": "YulIdentifier",
																				"src": "8214:12:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "8232:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "8232:3:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8237:4:9",
																						"nodeType": "YulLiteral",
																						"src": "8237:4:9",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8228:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "8228:3:9"
																				},
																				"nativeSrc": "8228:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8228:14:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "8180:33:9",
																			"nodeType": "YulIdentifier",
																			"src": "8180:33:9"
																		},
																		"nativeSrc": "8180:63:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8180:63:9"
																	},
																	"nativeSrc": "8180:63:9",
																	"nodeType": "YulExpressionStatement",
																	"src": "8180:63:9"
																}
															]
														},
														{
															"nativeSrc": "8263:167:9",
															"nodeType": "YulBlock",
															"src": "8263:167:9",
															"statements": [
																{
																	"nativeSrc": "8301:43:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8301:43:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8331:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "8331:5:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8338:4:9",
																						"nodeType": "YulLiteral",
																						"src": "8338:4:9",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8327:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "8327:3:9"
																				},
																				"nativeSrc": "8327:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8327:16:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8321:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "8321:5:9"
																		},
																		"nativeSrc": "8321:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8321:23:9"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "8305:12:9",
																			"nodeType": "YulTypedName",
																			"src": "8305:12:9",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "8391:12:9",
																				"nodeType": "YulIdentifier",
																				"src": "8391:12:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "8409:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "8409:3:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8414:4:9",
																						"nodeType": "YulLiteral",
																						"src": "8414:4:9",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8405:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "8405:3:9"
																				},
																				"nativeSrc": "8405:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8405:14:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "8357:33:9",
																			"nodeType": "YulIdentifier",
																			"src": "8357:33:9"
																		},
																		"nativeSrc": "8357:63:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8357:63:9"
																	},
																	"nativeSrc": "8357:63:9",
																	"nodeType": "YulExpressionStatement",
																	"src": "8357:63:9"
																}
															]
														},
														{
															"nativeSrc": "8440:163:9",
															"nodeType": "YulBlock",
															"src": "8440:163:9",
															"statements": [
																{
																	"nativeSrc": "8480:43:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8480:43:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8510:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "8510:5:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8517:4:9",
																						"nodeType": "YulLiteral",
																						"src": "8517:4:9",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8506:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "8506:3:9"
																				},
																				"nativeSrc": "8506:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8506:16:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8500:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "8500:5:9"
																		},
																		"nativeSrc": "8500:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8500:23:9"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "8484:12:9",
																			"nodeType": "YulTypedName",
																			"src": "8484:12:9",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "8564:12:9",
																				"nodeType": "YulIdentifier",
																				"src": "8564:12:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "8582:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "8582:3:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8587:4:9",
																						"nodeType": "YulLiteral",
																						"src": "8587:4:9",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8578:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "8578:3:9"
																				},
																				"nativeSrc": "8578:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8578:14:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bool_to_t_bool",
																			"nativeSrc": "8536:27:9",
																			"nodeType": "YulIdentifier",
																			"src": "8536:27:9"
																		},
																		"nativeSrc": "8536:57:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8536:57:9"
																	},
																	"nativeSrc": "8536:57:9",
																	"nodeType": "YulExpressionStatement",
																	"src": "8536:57:9"
																}
															]
														},
														{
															"nativeSrc": "8613:163:9",
															"nodeType": "YulBlock",
															"src": "8613:163:9",
															"statements": [
																{
																	"nativeSrc": "8653:43:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8653:43:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8683:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "8683:5:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8690:4:9",
																						"nodeType": "YulLiteral",
																						"src": "8690:4:9",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8679:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "8679:3:9"
																				},
																				"nativeSrc": "8679:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8679:16:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8673:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "8673:5:9"
																		},
																		"nativeSrc": "8673:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8673:23:9"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "8657:12:9",
																			"nodeType": "YulTypedName",
																			"src": "8657:12:9",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "8737:12:9",
																				"nodeType": "YulIdentifier",
																				"src": "8737:12:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "8755:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "8755:3:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8760:4:9",
																						"nodeType": "YulLiteral",
																						"src": "8760:4:9",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8751:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "8751:3:9"
																				},
																				"nativeSrc": "8751:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8751:14:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bool_to_t_bool",
																			"nativeSrc": "8709:27:9",
																			"nodeType": "YulIdentifier",
																			"src": "8709:27:9"
																		},
																		"nativeSrc": "8709:57:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8709:57:9"
																	},
																	"nativeSrc": "8709:57:9",
																	"nodeType": "YulExpressionStatement",
																	"src": "8709:57:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_Stake_$1089_memory_ptr_to_t_struct$_Stake_$1089_memory_ptr",
												"nativeSrc": "7404:1379:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7493:5:9",
														"nodeType": "YulTypedName",
														"src": "7493:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7500:3:9",
														"nodeType": "YulTypedName",
														"src": "7500:3:9",
														"type": ""
													}
												],
												"src": "7404:1379:9"
											},
											{
												"body": {
													"nativeSrc": "8915:145:9",
													"nodeType": "YulBlock",
													"src": "8915:145:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9005:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9005:6:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "9013:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9013:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_Stake_$1089_memory_ptr_to_t_struct$_Stake_$1089_memory_ptr",
																	"nativeSrc": "8925:79:9",
																	"nodeType": "YulIdentifier",
																	"src": "8925:79:9"
																},
																"nativeSrc": "8925:92:9",
																"nodeType": "YulFunctionCall",
																"src": "8925:92:9"
															},
															"nativeSrc": "8925:92:9",
															"nodeType": "YulExpressionStatement",
															"src": "8925:92:9"
														},
														{
															"nativeSrc": "9026:28:9",
															"nodeType": "YulAssignment",
															"src": "9026:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9044:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9044:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9049:4:9",
																		"nodeType": "YulLiteral",
																		"src": "9049:4:9",
																		"type": "",
																		"value": "0xe0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9040:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9040:3:9"
																},
																"nativeSrc": "9040:14:9",
																"nodeType": "YulFunctionCall",
																"src": "9040:14:9"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "9026:10:9",
																	"nodeType": "YulIdentifier",
																	"src": "9026:10:9"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_struct$_Stake_$1089_memory_ptr_to_t_struct$_Stake_$1089_memory_ptr",
												"nativeSrc": "8789:271:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "8888:6:9",
														"nodeType": "YulTypedName",
														"src": "8888:6:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8896:3:9",
														"nodeType": "YulTypedName",
														"src": "8896:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "8904:10:9",
														"nodeType": "YulTypedName",
														"src": "8904:10:9",
														"type": ""
													}
												],
												"src": "8789:271:9"
											},
											{
												"body": {
													"nativeSrc": "9164:38:9",
													"nodeType": "YulBlock",
													"src": "9164:38:9",
													"statements": [
														{
															"nativeSrc": "9174:22:9",
															"nodeType": "YulAssignment",
															"src": "9174:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "9186:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9186:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9191:4:9",
																		"nodeType": "YulLiteral",
																		"src": "9191:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9182:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9182:3:9"
																},
																"nativeSrc": "9182:14:9",
																"nodeType": "YulFunctionCall",
																"src": "9182:14:9"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "9174:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "9174:4:9"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_struct$_Stake_$1089_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "9066:136:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "9151:3:9",
														"nodeType": "YulTypedName",
														"src": "9151:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "9159:4:9",
														"nodeType": "YulTypedName",
														"src": "9159:4:9",
														"type": ""
													}
												],
												"src": "9066:136:9"
											},
											{
												"body": {
													"nativeSrc": "9454:746:9",
													"nodeType": "YulBlock",
													"src": "9454:746:9",
													"statements": [
														{
															"nativeSrc": "9464:91:9",
															"nodeType": "YulVariableDeclaration",
															"src": "9464:91:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9549:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "9549:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_struct$_Stake_$1089_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "9478:70:9",
																	"nodeType": "YulIdentifier",
																	"src": "9478:70:9"
																},
																"nativeSrc": "9478:77:9",
																"nodeType": "YulFunctionCall",
																"src": "9478:77:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "9468:6:9",
																	"nodeType": "YulTypedName",
																	"src": "9468:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9564:116:9",
															"nodeType": "YulAssignment",
															"src": "9564:116:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9668:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9668:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9673:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9673:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_struct$_Stake_$1089_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "9571:96:9",
																	"nodeType": "YulIdentifier",
																	"src": "9571:96:9"
																},
																"nativeSrc": "9571:109:9",
																"nodeType": "YulFunctionCall",
																"src": "9571:109:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9564:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9564:3:9"
																}
															]
														},
														{
															"nativeSrc": "9689:94:9",
															"nodeType": "YulVariableDeclaration",
															"src": "9689:94:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9777:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "9777:5:9"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_struct$_Stake_$1089_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "9704:72:9",
																	"nodeType": "YulIdentifier",
																	"src": "9704:72:9"
																},
																"nativeSrc": "9704:79:9",
																"nodeType": "YulFunctionCall",
																"src": "9704:79:9"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "9693:7:9",
																	"nodeType": "YulTypedName",
																	"src": "9693:7:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9792:21:9",
															"nodeType": "YulVariableDeclaration",
															"src": "9792:21:9",
															"value": {
																"name": "baseRef",
																"nativeSrc": "9806:7:9",
																"nodeType": "YulIdentifier",
																"src": "9806:7:9"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "9796:6:9",
																	"nodeType": "YulTypedName",
																	"src": "9796:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9882:293:9",
																"nodeType": "YulBlock",
																"src": "9882:293:9",
																"statements": [
																	{
																		"nativeSrc": "9896:34:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9896:34:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "9923:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "9923:6:9"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "9917:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "9917:5:9"
																			},
																			"nativeSrc": "9917:13:9",
																			"nodeType": "YulFunctionCall",
																			"src": "9917:13:9"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "9900:13:9",
																				"nodeType": "YulTypedName",
																				"src": "9900:13:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "9943:116:9",
																		"nodeType": "YulAssignment",
																		"src": "9943:116:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "10040:13:9",
																					"nodeType": "YulIdentifier",
																					"src": "10040:13:9"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "10055:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "10055:3:9"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_struct$_Stake_$1089_memory_ptr_to_t_struct$_Stake_$1089_memory_ptr",
																				"nativeSrc": "9950:89:9",
																				"nodeType": "YulIdentifier",
																				"src": "9950:89:9"
																			},
																			"nativeSrc": "9950:109:9",
																			"nodeType": "YulFunctionCall",
																			"src": "9950:109:9"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "9943:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "9943:3:9"
																			}
																		]
																	},
																	{
																		"nativeSrc": "10072:93:9",
																		"nodeType": "YulAssignment",
																		"src": "10072:93:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "10158:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "10158:6:9"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_struct$_Stake_$1089_memory_ptr_$dyn_memory_ptr",
																				"nativeSrc": "10082:75:9",
																				"nodeType": "YulIdentifier",
																				"src": "10082:75:9"
																			},
																			"nativeSrc": "10082:83:9",
																			"nodeType": "YulFunctionCall",
																			"src": "10082:83:9"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "10072:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "10072:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "9844:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9844:1:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9847:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9847:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "9841:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "9841:2:9"
																},
																"nativeSrc": "9841:13:9",
																"nodeType": "YulFunctionCall",
																"src": "9841:13:9"
															},
															"nativeSrc": "9822:353:9",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "9855:18:9",
																"nodeType": "YulBlock",
																"src": "9855:18:9",
																"statements": [
																	{
																		"nativeSrc": "9857:14:9",
																		"nodeType": "YulAssignment",
																		"src": "9857:14:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "9866:1:9",
																					"nodeType": "YulIdentifier",
																					"src": "9866:1:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9869:1:9",
																					"nodeType": "YulLiteral",
																					"src": "9869:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "9862:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "9862:3:9"
																			},
																			"nativeSrc": "9862:9:9",
																			"nodeType": "YulFunctionCall",
																			"src": "9862:9:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "9857:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "9857:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "9826:14:9",
																"nodeType": "YulBlock",
																"src": "9826:14:9",
																"statements": [
																	{
																		"nativeSrc": "9828:10:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9828:10:9",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "9837:1:9",
																			"nodeType": "YulLiteral",
																			"src": "9837:1:9",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "9832:1:9",
																				"nodeType": "YulTypedName",
																				"src": "9832:1:9",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "9822:353:9"
														},
														{
															"nativeSrc": "10184:10:9",
															"nodeType": "YulAssignment",
															"src": "10184:10:9",
															"value": {
																"name": "pos",
																"nativeSrc": "10191:3:9",
																"nodeType": "YulIdentifier",
																"src": "10191:3:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10184:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10184:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_struct$_Stake_$1089_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$1089_memory_ptr_$dyn_memory_ptr_fromStack",
												"nativeSrc": "9284:916:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9433:5:9",
														"nodeType": "YulTypedName",
														"src": "9433:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9440:3:9",
														"nodeType": "YulTypedName",
														"src": "9440:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9449:3:9",
														"nodeType": "YulTypedName",
														"src": "9449:3:9",
														"type": ""
													}
												],
												"src": "9284:916:9"
											},
											{
												"body": {
													"nativeSrc": "10400:271:9",
													"nodeType": "YulBlock",
													"src": "10400:271:9",
													"statements": [
														{
															"nativeSrc": "10410:26:9",
															"nodeType": "YulAssignment",
															"src": "10410:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10422:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "10422:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10433:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10433:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10418:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10418:3:9"
																},
																"nativeSrc": "10418:18:9",
																"nodeType": "YulFunctionCall",
																"src": "10418:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10410:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10410:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10457:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10457:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10468:1:9",
																				"nodeType": "YulLiteral",
																				"src": "10468:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10453:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10453:3:9"
																		},
																		"nativeSrc": "10453:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10453:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10476:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "10476:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10482:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10482:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10472:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10472:3:9"
																		},
																		"nativeSrc": "10472:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10472:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10446:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10446:6:9"
																},
																"nativeSrc": "10446:47:9",
																"nodeType": "YulFunctionCall",
																"src": "10446:47:9"
															},
															"nativeSrc": "10446:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "10446:47:9"
														},
														{
															"nativeSrc": "10502:162:9",
															"nodeType": "YulAssignment",
															"src": "10502:162:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10650:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "10650:6:9"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "10659:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "10659:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_struct$_Stake_$1089_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$1089_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "10510:139:9",
																	"nodeType": "YulIdentifier",
																	"src": "10510:139:9"
																},
																"nativeSrc": "10510:154:9",
																"nodeType": "YulFunctionCall",
																"src": "10510:154:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10502:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10502:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_Stake_$1089_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Stake_$1089_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "10206:465:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10372:9:9",
														"nodeType": "YulTypedName",
														"src": "10372:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10384:6:9",
														"nodeType": "YulTypedName",
														"src": "10384:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10395:4:9",
														"nodeType": "YulTypedName",
														"src": "10395:4:9",
														"type": ""
													}
												],
												"src": "10206:465:9"
											},
											{
												"body": {
													"nativeSrc": "10742:53:9",
													"nodeType": "YulBlock",
													"src": "10742:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10759:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10759:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10782:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "10782:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "10764:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "10764:17:9"
																		},
																		"nativeSrc": "10764:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10764:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10752:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10752:6:9"
																},
																"nativeSrc": "10752:37:9",
																"nodeType": "YulFunctionCall",
																"src": "10752:37:9"
															},
															"nativeSrc": "10752:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "10752:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "10677:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10730:5:9",
														"nodeType": "YulTypedName",
														"src": "10730:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10737:3:9",
														"nodeType": "YulTypedName",
														"src": "10737:3:9",
														"type": ""
													}
												],
												"src": "10677:118:9"
											},
											{
												"body": {
													"nativeSrc": "10899:124:9",
													"nodeType": "YulBlock",
													"src": "10899:124:9",
													"statements": [
														{
															"nativeSrc": "10909:26:9",
															"nodeType": "YulAssignment",
															"src": "10909:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10921:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "10921:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10932:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10932:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10917:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10917:3:9"
																},
																"nativeSrc": "10917:18:9",
																"nodeType": "YulFunctionCall",
																"src": "10917:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10909:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10909:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10989:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "10989:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11002:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11002:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11013:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11013:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10998:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10998:3:9"
																		},
																		"nativeSrc": "10998:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10998:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10945:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "10945:43:9"
																},
																"nativeSrc": "10945:71:9",
																"nodeType": "YulFunctionCall",
																"src": "10945:71:9"
															},
															"nativeSrc": "10945:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "10945:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "10801:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10871:9:9",
														"nodeType": "YulTypedName",
														"src": "10871:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10883:6:9",
														"nodeType": "YulTypedName",
														"src": "10883:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10894:4:9",
														"nodeType": "YulTypedName",
														"src": "10894:4:9",
														"type": ""
													}
												],
												"src": "10801:222:9"
											},
											{
												"body": {
													"nativeSrc": "11088:50:9",
													"nodeType": "YulBlock",
													"src": "11088:50:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11105:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11105:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11125:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "11125:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "11110:14:9",
																			"nodeType": "YulIdentifier",
																			"src": "11110:14:9"
																		},
																		"nativeSrc": "11110:21:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11110:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11098:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11098:6:9"
																},
																"nativeSrc": "11098:34:9",
																"nodeType": "YulFunctionCall",
																"src": "11098:34:9"
															},
															"nativeSrc": "11098:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "11098:34:9"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "11029:109:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11076:5:9",
														"nodeType": "YulTypedName",
														"src": "11076:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11083:3:9",
														"nodeType": "YulTypedName",
														"src": "11083:3:9",
														"type": ""
													}
												],
												"src": "11029:109:9"
											},
											{
												"body": {
													"nativeSrc": "11398:608:9",
													"nodeType": "YulBlock",
													"src": "11398:608:9",
													"statements": [
														{
															"nativeSrc": "11408:27:9",
															"nodeType": "YulAssignment",
															"src": "11408:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11420:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "11420:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11431:3:9",
																		"nodeType": "YulLiteral",
																		"src": "11431:3:9",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11416:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11416:3:9"
																},
																"nativeSrc": "11416:19:9",
																"nodeType": "YulFunctionCall",
																"src": "11416:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11408:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11408:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11489:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "11489:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11502:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11502:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11513:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11513:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11498:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11498:3:9"
																		},
																		"nativeSrc": "11498:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11498:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11445:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "11445:43:9"
																},
																"nativeSrc": "11445:71:9",
																"nodeType": "YulFunctionCall",
																"src": "11445:71:9"
															},
															"nativeSrc": "11445:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "11445:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11570:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "11570:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11583:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11583:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11594:2:9",
																				"nodeType": "YulLiteral",
																				"src": "11594:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11579:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11579:3:9"
																		},
																		"nativeSrc": "11579:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11579:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11526:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "11526:43:9"
																},
																"nativeSrc": "11526:72:9",
																"nodeType": "YulFunctionCall",
																"src": "11526:72:9"
															},
															"nativeSrc": "11526:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "11526:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11652:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "11652:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11665:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11665:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11676:2:9",
																				"nodeType": "YulLiteral",
																				"src": "11676:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11661:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11661:3:9"
																		},
																		"nativeSrc": "11661:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11661:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11608:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "11608:43:9"
																},
																"nativeSrc": "11608:72:9",
																"nodeType": "YulFunctionCall",
																"src": "11608:72:9"
															},
															"nativeSrc": "11608:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "11608:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "11734:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "11734:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11747:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11747:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11758:2:9",
																				"nodeType": "YulLiteral",
																				"src": "11758:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11743:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11743:3:9"
																		},
																		"nativeSrc": "11743:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11743:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11690:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "11690:43:9"
																},
																"nativeSrc": "11690:72:9",
																"nodeType": "YulFunctionCall",
																"src": "11690:72:9"
															},
															"nativeSrc": "11690:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "11690:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "11816:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "11816:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11829:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11829:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11840:3:9",
																				"nodeType": "YulLiteral",
																				"src": "11840:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11825:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11825:3:9"
																		},
																		"nativeSrc": "11825:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11825:19:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11772:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "11772:43:9"
																},
																"nativeSrc": "11772:73:9",
																"nodeType": "YulFunctionCall",
																"src": "11772:73:9"
															},
															"nativeSrc": "11772:73:9",
															"nodeType": "YulExpressionStatement",
															"src": "11772:73:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "11893:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "11893:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11906:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11906:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11917:3:9",
																				"nodeType": "YulLiteral",
																				"src": "11917:3:9",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11902:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11902:3:9"
																		},
																		"nativeSrc": "11902:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11902:19:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "11855:37:9",
																	"nodeType": "YulIdentifier",
																	"src": "11855:37:9"
																},
																"nativeSrc": "11855:67:9",
																"nodeType": "YulFunctionCall",
																"src": "11855:67:9"
															},
															"nativeSrc": "11855:67:9",
															"nodeType": "YulExpressionStatement",
															"src": "11855:67:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value6",
																		"nativeSrc": "11970:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "11970:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11983:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11983:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11994:3:9",
																				"nodeType": "YulLiteral",
																				"src": "11994:3:9",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11979:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11979:3:9"
																		},
																		"nativeSrc": "11979:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11979:19:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "11932:37:9",
																	"nodeType": "YulIdentifier",
																	"src": "11932:37:9"
																},
																"nativeSrc": "11932:67:9",
																"nodeType": "YulFunctionCall",
																"src": "11932:67:9"
															},
															"nativeSrc": "11932:67:9",
															"nodeType": "YulExpressionStatement",
															"src": "11932:67:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_address_t_bool_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_address_t_bool_t_bool__fromStack_reversed",
												"nativeSrc": "11144:862:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11322:9:9",
														"nodeType": "YulTypedName",
														"src": "11322:9:9",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "11334:6:9",
														"nodeType": "YulTypedName",
														"src": "11334:6:9",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "11342:6:9",
														"nodeType": "YulTypedName",
														"src": "11342:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "11350:6:9",
														"nodeType": "YulTypedName",
														"src": "11350:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "11358:6:9",
														"nodeType": "YulTypedName",
														"src": "11358:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11366:6:9",
														"nodeType": "YulTypedName",
														"src": "11366:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11374:6:9",
														"nodeType": "YulTypedName",
														"src": "11374:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11382:6:9",
														"nodeType": "YulTypedName",
														"src": "11382:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11393:4:9",
														"nodeType": "YulTypedName",
														"src": "11393:4:9",
														"type": ""
													}
												],
												"src": "11144:862:9"
											},
											{
												"body": {
													"nativeSrc": "12095:391:9",
													"nodeType": "YulBlock",
													"src": "12095:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "12141:83:9",
																"nodeType": "YulBlock",
																"src": "12141:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12143:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "12143:77:9"
																			},
																			"nativeSrc": "12143:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "12143:79:9"
																		},
																		"nativeSrc": "12143:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "12143:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12116:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "12116:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12125:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12125:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12112:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12112:3:9"
																		},
																		"nativeSrc": "12112:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12112:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12137:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12137:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12108:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12108:3:9"
																},
																"nativeSrc": "12108:32:9",
																"nodeType": "YulFunctionCall",
																"src": "12108:32:9"
															},
															"nativeSrc": "12105:119:9",
															"nodeType": "YulIf",
															"src": "12105:119:9"
														},
														{
															"nativeSrc": "12234:117:9",
															"nodeType": "YulBlock",
															"src": "12234:117:9",
															"statements": [
																{
																	"nativeSrc": "12249:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12249:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12263:1:9",
																		"nodeType": "YulLiteral",
																		"src": "12263:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12253:6:9",
																			"nodeType": "YulTypedName",
																			"src": "12253:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12278:63:9",
																	"nodeType": "YulAssignment",
																	"src": "12278:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12313:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "12313:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12324:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "12324:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12309:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "12309:3:9"
																				},
																				"nativeSrc": "12309:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "12309:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12333:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "12333:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12288:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "12288:20:9"
																		},
																		"nativeSrc": "12288:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12288:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12278:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "12278:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12361:118:9",
															"nodeType": "YulBlock",
															"src": "12361:118:9",
															"statements": [
																{
																	"nativeSrc": "12376:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12376:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12390:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12390:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12380:6:9",
																			"nodeType": "YulTypedName",
																			"src": "12380:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12406:63:9",
																	"nodeType": "YulAssignment",
																	"src": "12406:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12441:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "12441:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12452:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "12452:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12437:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "12437:3:9"
																				},
																				"nativeSrc": "12437:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "12437:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12461:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "12461:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "12416:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "12416:20:9"
																		},
																		"nativeSrc": "12416:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12416:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12406:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "12406:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "12012:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12057:9:9",
														"nodeType": "YulTypedName",
														"src": "12057:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12068:7:9",
														"nodeType": "YulTypedName",
														"src": "12068:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12080:6:9",
														"nodeType": "YulTypedName",
														"src": "12080:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12088:6:9",
														"nodeType": "YulTypedName",
														"src": "12088:6:9",
														"type": ""
													}
												],
												"src": "12012:474:9"
											},
											{
												"body": {
													"nativeSrc": "12674:371:9",
													"nodeType": "YulBlock",
													"src": "12674:371:9",
													"statements": [
														{
															"nativeSrc": "12684:27:9",
															"nodeType": "YulAssignment",
															"src": "12684:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12696:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "12696:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12707:3:9",
																		"nodeType": "YulLiteral",
																		"src": "12707:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12692:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12692:3:9"
																},
																"nativeSrc": "12692:19:9",
																"nodeType": "YulFunctionCall",
																"src": "12692:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12684:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "12684:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12765:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "12765:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12778:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12778:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12789:1:9",
																				"nodeType": "YulLiteral",
																				"src": "12789:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12774:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12774:3:9"
																		},
																		"nativeSrc": "12774:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12774:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12721:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "12721:43:9"
																},
																"nativeSrc": "12721:71:9",
																"nodeType": "YulFunctionCall",
																"src": "12721:71:9"
															},
															"nativeSrc": "12721:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "12721:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12846:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "12846:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12859:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12859:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12870:2:9",
																				"nodeType": "YulLiteral",
																				"src": "12870:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12855:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12855:3:9"
																		},
																		"nativeSrc": "12855:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12855:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12802:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "12802:43:9"
																},
																"nativeSrc": "12802:72:9",
																"nodeType": "YulFunctionCall",
																"src": "12802:72:9"
															},
															"nativeSrc": "12802:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "12802:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "12928:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "12928:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12941:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12941:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12952:2:9",
																				"nodeType": "YulLiteral",
																				"src": "12952:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12937:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12937:3:9"
																		},
																		"nativeSrc": "12937:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12937:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12884:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "12884:43:9"
																},
																"nativeSrc": "12884:72:9",
																"nodeType": "YulFunctionCall",
																"src": "12884:72:9"
															},
															"nativeSrc": "12884:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "12884:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "13010:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "13010:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13023:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13023:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13034:2:9",
																				"nodeType": "YulLiteral",
																				"src": "13034:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13019:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13019:3:9"
																		},
																		"nativeSrc": "13019:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13019:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12966:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "12966:43:9"
																},
																"nativeSrc": "12966:72:9",
																"nodeType": "YulFunctionCall",
																"src": "12966:72:9"
															},
															"nativeSrc": "12966:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "12966:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "12492:553:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12622:9:9",
														"nodeType": "YulTypedName",
														"src": "12622:9:9",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "12634:6:9",
														"nodeType": "YulTypedName",
														"src": "12634:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12642:6:9",
														"nodeType": "YulTypedName",
														"src": "12642:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12650:6:9",
														"nodeType": "YulTypedName",
														"src": "12650:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12658:6:9",
														"nodeType": "YulTypedName",
														"src": "12658:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12669:4:9",
														"nodeType": "YulTypedName",
														"src": "12669:4:9",
														"type": ""
													}
												],
												"src": "12492:553:9"
											},
											{
												"body": {
													"nativeSrc": "13083:28:9",
													"nodeType": "YulBlock",
													"src": "13083:28:9",
													"statements": [
														{
															"nativeSrc": "13093:12:9",
															"nodeType": "YulAssignment",
															"src": "13093:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "13100:5:9",
																"nodeType": "YulIdentifier",
																"src": "13100:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "13093:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13093:3:9"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "13051:60:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13069:5:9",
														"nodeType": "YulTypedName",
														"src": "13069:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "13079:3:9",
														"nodeType": "YulTypedName",
														"src": "13079:3:9",
														"type": ""
													}
												],
												"src": "13051:60:9"
											},
											{
												"body": {
													"nativeSrc": "13177:82:9",
													"nodeType": "YulBlock",
													"src": "13177:82:9",
													"statements": [
														{
															"nativeSrc": "13187:66:9",
															"nodeType": "YulAssignment",
															"src": "13187:66:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13245:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "13245:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "13227:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "13227:17:9"
																				},
																				"nativeSrc": "13227:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "13227:24:9"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "13218:8:9",
																			"nodeType": "YulIdentifier",
																			"src": "13218:8:9"
																		},
																		"nativeSrc": "13218:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13218:34:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "13200:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "13200:17:9"
																},
																"nativeSrc": "13200:53:9",
																"nodeType": "YulFunctionCall",
																"src": "13200:53:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "13187:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "13187:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "13117:142:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13157:5:9",
														"nodeType": "YulTypedName",
														"src": "13157:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "13167:9:9",
														"nodeType": "YulTypedName",
														"src": "13167:9:9",
														"type": ""
													}
												],
												"src": "13117:142:9"
											},
											{
												"body": {
													"nativeSrc": "13325:66:9",
													"nodeType": "YulBlock",
													"src": "13325:66:9",
													"statements": [
														{
															"nativeSrc": "13335:50:9",
															"nodeType": "YulAssignment",
															"src": "13335:50:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13379:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "13379:5:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "13348:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "13348:30:9"
																},
																"nativeSrc": "13348:37:9",
																"nodeType": "YulFunctionCall",
																"src": "13348:37:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "13335:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "13335:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "13265:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13305:5:9",
														"nodeType": "YulTypedName",
														"src": "13305:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "13315:9:9",
														"nodeType": "YulTypedName",
														"src": "13315:9:9",
														"type": ""
													}
												],
												"src": "13265:126:9"
											},
											{
												"body": {
													"nativeSrc": "13473:66:9",
													"nodeType": "YulBlock",
													"src": "13473:66:9",
													"statements": [
														{
															"nativeSrc": "13483:50:9",
															"nodeType": "YulAssignment",
															"src": "13483:50:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13527:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "13527:5:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "13496:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "13496:30:9"
																},
																"nativeSrc": "13496:37:9",
																"nodeType": "YulFunctionCall",
																"src": "13496:37:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "13483:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "13483:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_MyToken_$1030_to_t_address",
												"nativeSrc": "13397:142:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13453:5:9",
														"nodeType": "YulTypedName",
														"src": "13453:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "13463:9:9",
														"nodeType": "YulTypedName",
														"src": "13463:9:9",
														"type": ""
													}
												],
												"src": "13397:142:9"
											},
											{
												"body": {
													"nativeSrc": "13626:82:9",
													"nodeType": "YulBlock",
													"src": "13626:82:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13643:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13643:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13695:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "13695:5:9"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_MyToken_$1030_to_t_address",
																			"nativeSrc": "13648:46:9",
																			"nodeType": "YulIdentifier",
																			"src": "13648:46:9"
																		},
																		"nativeSrc": "13648:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13648:53:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13636:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13636:6:9"
																},
																"nativeSrc": "13636:66:9",
																"nodeType": "YulFunctionCall",
																"src": "13636:66:9"
															},
															"nativeSrc": "13636:66:9",
															"nodeType": "YulExpressionStatement",
															"src": "13636:66:9"
														}
													]
												},
												"name": "abi_encode_t_contract$_MyToken_$1030_to_t_address_fromStack",
												"nativeSrc": "13545:163:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13614:5:9",
														"nodeType": "YulTypedName",
														"src": "13614:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13621:3:9",
														"nodeType": "YulTypedName",
														"src": "13621:3:9",
														"type": ""
													}
												],
												"src": "13545:163:9"
											},
											{
												"body": {
													"nativeSrc": "13828:140:9",
													"nodeType": "YulBlock",
													"src": "13828:140:9",
													"statements": [
														{
															"nativeSrc": "13838:26:9",
															"nodeType": "YulAssignment",
															"src": "13838:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13850:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "13850:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13861:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13861:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13846:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13846:3:9"
																},
																"nativeSrc": "13846:18:9",
																"nodeType": "YulFunctionCall",
																"src": "13846:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13838:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "13838:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13934:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "13934:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13947:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13947:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13958:1:9",
																				"nodeType": "YulLiteral",
																				"src": "13958:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13943:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13943:3:9"
																		},
																		"nativeSrc": "13943:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13943:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_MyToken_$1030_to_t_address_fromStack",
																	"nativeSrc": "13874:59:9",
																	"nodeType": "YulIdentifier",
																	"src": "13874:59:9"
																},
																"nativeSrc": "13874:87:9",
																"nodeType": "YulFunctionCall",
																"src": "13874:87:9"
															},
															"nativeSrc": "13874:87:9",
															"nodeType": "YulExpressionStatement",
															"src": "13874:87:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_MyToken_$1030__to_t_address__fromStack_reversed",
												"nativeSrc": "13714:254:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13800:9:9",
														"nodeType": "YulTypedName",
														"src": "13800:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13812:6:9",
														"nodeType": "YulTypedName",
														"src": "13812:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13823:4:9",
														"nodeType": "YulTypedName",
														"src": "13823:4:9",
														"type": ""
													}
												],
												"src": "13714:254:9"
											},
											{
												"body": {
													"nativeSrc": "14037:80:9",
													"nodeType": "YulBlock",
													"src": "14037:80:9",
													"statements": [
														{
															"nativeSrc": "14047:22:9",
															"nodeType": "YulAssignment",
															"src": "14047:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "14062:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "14062:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14056:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "14056:5:9"
																},
																"nativeSrc": "14056:13:9",
																"nodeType": "YulFunctionCall",
																"src": "14056:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "14047:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "14047:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14105:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "14105:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "14078:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "14078:26:9"
																},
																"nativeSrc": "14078:33:9",
																"nodeType": "YulFunctionCall",
																"src": "14078:33:9"
															},
															"nativeSrc": "14078:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "14078:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "13974:143:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "14015:6:9",
														"nodeType": "YulTypedName",
														"src": "14015:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "14023:3:9",
														"nodeType": "YulTypedName",
														"src": "14023:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "14031:5:9",
														"nodeType": "YulTypedName",
														"src": "14031:5:9",
														"type": ""
													}
												],
												"src": "13974:143:9"
											},
											{
												"body": {
													"nativeSrc": "14200:274:9",
													"nodeType": "YulBlock",
													"src": "14200:274:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "14246:83:9",
																"nodeType": "YulBlock",
																"src": "14246:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "14248:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "14248:77:9"
																			},
																			"nativeSrc": "14248:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "14248:79:9"
																		},
																		"nativeSrc": "14248:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "14248:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14221:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "14221:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14230:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14230:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14217:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14217:3:9"
																		},
																		"nativeSrc": "14217:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14217:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14242:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14242:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "14213:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14213:3:9"
																},
																"nativeSrc": "14213:32:9",
																"nodeType": "YulFunctionCall",
																"src": "14213:32:9"
															},
															"nativeSrc": "14210:119:9",
															"nodeType": "YulIf",
															"src": "14210:119:9"
														},
														{
															"nativeSrc": "14339:128:9",
															"nodeType": "YulBlock",
															"src": "14339:128:9",
															"statements": [
																{
																	"nativeSrc": "14354:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14354:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14368:1:9",
																		"nodeType": "YulLiteral",
																		"src": "14368:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14358:6:9",
																			"nodeType": "YulTypedName",
																			"src": "14358:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14383:74:9",
																	"nodeType": "YulAssignment",
																	"src": "14383:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14429:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "14429:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14440:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "14440:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14425:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "14425:3:9"
																				},
																				"nativeSrc": "14425:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "14425:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14449:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "14449:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "14393:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "14393:31:9"
																		},
																		"nativeSrc": "14393:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14393:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "14383:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "14383:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "14123:351:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14170:9:9",
														"nodeType": "YulTypedName",
														"src": "14170:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "14181:7:9",
														"nodeType": "YulTypedName",
														"src": "14181:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "14193:6:9",
														"nodeType": "YulTypedName",
														"src": "14193:6:9",
														"type": ""
													}
												],
												"src": "14123:351:9"
											},
											{
												"body": {
													"nativeSrc": "14576:73:9",
													"nodeType": "YulBlock",
													"src": "14576:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14593:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14593:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14598:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "14598:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14586:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14586:6:9"
																},
																"nativeSrc": "14586:19:9",
																"nodeType": "YulFunctionCall",
																"src": "14586:19:9"
															},
															"nativeSrc": "14586:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "14586:19:9"
														},
														{
															"nativeSrc": "14614:29:9",
															"nodeType": "YulAssignment",
															"src": "14614:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14633:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14633:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14638:4:9",
																		"nodeType": "YulLiteral",
																		"src": "14638:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14629:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14629:3:9"
																},
																"nativeSrc": "14629:14:9",
																"nodeType": "YulFunctionCall",
																"src": "14629:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "14614:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "14614:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "14480:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14548:3:9",
														"nodeType": "YulTypedName",
														"src": "14548:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "14553:6:9",
														"nodeType": "YulTypedName",
														"src": "14553:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "14564:11:9",
														"nodeType": "YulTypedName",
														"src": "14564:11:9",
														"type": ""
													}
												],
												"src": "14480:169:9"
											},
											{
												"body": {
													"nativeSrc": "14761:122:9",
													"nodeType": "YulBlock",
													"src": "14761:122:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14783:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "14783:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14791:1:9",
																				"nodeType": "YulLiteral",
																				"src": "14791:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14779:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14779:3:9"
																		},
																		"nativeSrc": "14779:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14779:14:9"
																	},
																	{
																		"hexValue": "596f752063616e206f6e6c7920636c61696d20796f7572206f776e207374616b",
																		"kind": "string",
																		"nativeSrc": "14795:34:9",
																		"nodeType": "YulLiteral",
																		"src": "14795:34:9",
																		"type": "",
																		"value": "You can only claim your own stak"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14772:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14772:6:9"
																},
																"nativeSrc": "14772:58:9",
																"nodeType": "YulFunctionCall",
																"src": "14772:58:9"
															},
															"nativeSrc": "14772:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "14772:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14851:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "14851:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14859:2:9",
																				"nodeType": "YulLiteral",
																				"src": "14859:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14847:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14847:3:9"
																		},
																		"nativeSrc": "14847:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14847:15:9"
																	},
																	{
																		"hexValue": "656420616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "14864:11:9",
																		"nodeType": "YulLiteral",
																		"src": "14864:11:9",
																		"type": "",
																		"value": "ed amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14840:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14840:6:9"
																},
																"nativeSrc": "14840:36:9",
																"nodeType": "YulFunctionCall",
																"src": "14840:36:9"
															},
															"nativeSrc": "14840:36:9",
															"nodeType": "YulExpressionStatement",
															"src": "14840:36:9"
														}
													]
												},
												"name": "store_literal_in_memory_983c2ca2c32b759517ef5d3818bb7f52ae0e3ac0a8ab4d1f11cafb08aad10398",
												"nativeSrc": "14655:228:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14753:6:9",
														"nodeType": "YulTypedName",
														"src": "14753:6:9",
														"type": ""
													}
												],
												"src": "14655:228:9"
											},
											{
												"body": {
													"nativeSrc": "15035:220:9",
													"nodeType": "YulBlock",
													"src": "15035:220:9",
													"statements": [
														{
															"nativeSrc": "15045:74:9",
															"nodeType": "YulAssignment",
															"src": "15045:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15111:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "15111:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15116:2:9",
																		"nodeType": "YulLiteral",
																		"src": "15116:2:9",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15052:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "15052:58:9"
																},
																"nativeSrc": "15052:67:9",
																"nodeType": "YulFunctionCall",
																"src": "15052:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15045:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15045:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15217:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "15217:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_983c2ca2c32b759517ef5d3818bb7f52ae0e3ac0a8ab4d1f11cafb08aad10398",
																	"nativeSrc": "15128:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "15128:88:9"
																},
																"nativeSrc": "15128:93:9",
																"nodeType": "YulFunctionCall",
																"src": "15128:93:9"
															},
															"nativeSrc": "15128:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "15128:93:9"
														},
														{
															"nativeSrc": "15230:19:9",
															"nodeType": "YulAssignment",
															"src": "15230:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15241:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "15241:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15246:2:9",
																		"nodeType": "YulLiteral",
																		"src": "15246:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15237:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15237:3:9"
																},
																"nativeSrc": "15237:12:9",
																"nodeType": "YulFunctionCall",
																"src": "15237:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15230:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15230:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_983c2ca2c32b759517ef5d3818bb7f52ae0e3ac0a8ab4d1f11cafb08aad10398_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14889:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15023:3:9",
														"nodeType": "YulTypedName",
														"src": "15023:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15031:3:9",
														"nodeType": "YulTypedName",
														"src": "15031:3:9",
														"type": ""
													}
												],
												"src": "14889:366:9"
											},
											{
												"body": {
													"nativeSrc": "15432:248:9",
													"nodeType": "YulBlock",
													"src": "15432:248:9",
													"statements": [
														{
															"nativeSrc": "15442:26:9",
															"nodeType": "YulAssignment",
															"src": "15442:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15454:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "15454:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15465:2:9",
																		"nodeType": "YulLiteral",
																		"src": "15465:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15450:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15450:3:9"
																},
																"nativeSrc": "15450:18:9",
																"nodeType": "YulFunctionCall",
																"src": "15450:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15442:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "15442:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15489:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "15489:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15500:1:9",
																				"nodeType": "YulLiteral",
																				"src": "15500:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15485:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15485:3:9"
																		},
																		"nativeSrc": "15485:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15485:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15508:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "15508:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15514:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "15514:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15504:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15504:3:9"
																		},
																		"nativeSrc": "15504:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15504:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15478:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15478:6:9"
																},
																"nativeSrc": "15478:47:9",
																"nodeType": "YulFunctionCall",
																"src": "15478:47:9"
															},
															"nativeSrc": "15478:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "15478:47:9"
														},
														{
															"nativeSrc": "15534:139:9",
															"nodeType": "YulAssignment",
															"src": "15534:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15668:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "15668:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_983c2ca2c32b759517ef5d3818bb7f52ae0e3ac0a8ab4d1f11cafb08aad10398_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15542:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "15542:124:9"
																},
																"nativeSrc": "15542:131:9",
																"nodeType": "YulFunctionCall",
																"src": "15542:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15534:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "15534:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_983c2ca2c32b759517ef5d3818bb7f52ae0e3ac0a8ab4d1f11cafb08aad10398__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15261:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15412:9:9",
														"nodeType": "YulTypedName",
														"src": "15412:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15427:4:9",
														"nodeType": "YulTypedName",
														"src": "15427:4:9",
														"type": ""
													}
												],
												"src": "15261:419:9"
											},
											{
												"body": {
													"nativeSrc": "15792:115:9",
													"nodeType": "YulBlock",
													"src": "15792:115:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15814:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "15814:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15822:1:9",
																				"nodeType": "YulLiteral",
																				"src": "15822:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15810:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15810:3:9"
																		},
																		"nativeSrc": "15810:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15810:14:9"
																	},
																	{
																		"hexValue": "52657761726420616c726561647920636c61696d656420796f757220616d6f75",
																		"kind": "string",
																		"nativeSrc": "15826:34:9",
																		"nodeType": "YulLiteral",
																		"src": "15826:34:9",
																		"type": "",
																		"value": "Reward already claimed your amou"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15803:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15803:6:9"
																},
																"nativeSrc": "15803:58:9",
																"nodeType": "YulFunctionCall",
																"src": "15803:58:9"
															},
															"nativeSrc": "15803:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "15803:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15882:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "15882:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15890:2:9",
																				"nodeType": "YulLiteral",
																				"src": "15890:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15878:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15878:3:9"
																		},
																		"nativeSrc": "15878:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15878:15:9"
																	},
																	{
																		"hexValue": "6e74",
																		"kind": "string",
																		"nativeSrc": "15895:4:9",
																		"nodeType": "YulLiteral",
																		"src": "15895:4:9",
																		"type": "",
																		"value": "nt"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15871:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15871:6:9"
																},
																"nativeSrc": "15871:29:9",
																"nodeType": "YulFunctionCall",
																"src": "15871:29:9"
															},
															"nativeSrc": "15871:29:9",
															"nodeType": "YulExpressionStatement",
															"src": "15871:29:9"
														}
													]
												},
												"name": "store_literal_in_memory_c2aed4c0e3286d656612091f61a54c85a469157745fd2030e607e679330a422c",
												"nativeSrc": "15686:221:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15784:6:9",
														"nodeType": "YulTypedName",
														"src": "15784:6:9",
														"type": ""
													}
												],
												"src": "15686:221:9"
											},
											{
												"body": {
													"nativeSrc": "16059:220:9",
													"nodeType": "YulBlock",
													"src": "16059:220:9",
													"statements": [
														{
															"nativeSrc": "16069:74:9",
															"nodeType": "YulAssignment",
															"src": "16069:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16135:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "16135:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16140:2:9",
																		"nodeType": "YulLiteral",
																		"src": "16140:2:9",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16076:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "16076:58:9"
																},
																"nativeSrc": "16076:67:9",
																"nodeType": "YulFunctionCall",
																"src": "16076:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16069:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16069:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16241:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "16241:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c2aed4c0e3286d656612091f61a54c85a469157745fd2030e607e679330a422c",
																	"nativeSrc": "16152:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "16152:88:9"
																},
																"nativeSrc": "16152:93:9",
																"nodeType": "YulFunctionCall",
																"src": "16152:93:9"
															},
															"nativeSrc": "16152:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "16152:93:9"
														},
														{
															"nativeSrc": "16254:19:9",
															"nodeType": "YulAssignment",
															"src": "16254:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16265:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "16265:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16270:2:9",
																		"nodeType": "YulLiteral",
																		"src": "16270:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16261:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16261:3:9"
																},
																"nativeSrc": "16261:12:9",
																"nodeType": "YulFunctionCall",
																"src": "16261:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16254:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16254:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c2aed4c0e3286d656612091f61a54c85a469157745fd2030e607e679330a422c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15913:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16047:3:9",
														"nodeType": "YulTypedName",
														"src": "16047:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16055:3:9",
														"nodeType": "YulTypedName",
														"src": "16055:3:9",
														"type": ""
													}
												],
												"src": "15913:366:9"
											},
											{
												"body": {
													"nativeSrc": "16456:248:9",
													"nodeType": "YulBlock",
													"src": "16456:248:9",
													"statements": [
														{
															"nativeSrc": "16466:26:9",
															"nodeType": "YulAssignment",
															"src": "16466:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16478:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "16478:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16489:2:9",
																		"nodeType": "YulLiteral",
																		"src": "16489:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16474:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16474:3:9"
																},
																"nativeSrc": "16474:18:9",
																"nodeType": "YulFunctionCall",
																"src": "16474:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16466:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "16466:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16513:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "16513:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16524:1:9",
																				"nodeType": "YulLiteral",
																				"src": "16524:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16509:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "16509:3:9"
																		},
																		"nativeSrc": "16509:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16509:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16532:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "16532:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16538:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "16538:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16528:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "16528:3:9"
																		},
																		"nativeSrc": "16528:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16528:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16502:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "16502:6:9"
																},
																"nativeSrc": "16502:47:9",
																"nodeType": "YulFunctionCall",
																"src": "16502:47:9"
															},
															"nativeSrc": "16502:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "16502:47:9"
														},
														{
															"nativeSrc": "16558:139:9",
															"nodeType": "YulAssignment",
															"src": "16558:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16692:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "16692:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c2aed4c0e3286d656612091f61a54c85a469157745fd2030e607e679330a422c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16566:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "16566:124:9"
																},
																"nativeSrc": "16566:131:9",
																"nodeType": "YulFunctionCall",
																"src": "16566:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16558:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "16558:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c2aed4c0e3286d656612091f61a54c85a469157745fd2030e607e679330a422c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16285:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16436:9:9",
														"nodeType": "YulTypedName",
														"src": "16436:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16451:4:9",
														"nodeType": "YulTypedName",
														"src": "16451:4:9",
														"type": ""
													}
												],
												"src": "16285:419:9"
											},
											{
												"body": {
													"nativeSrc": "16738:152:9",
													"nodeType": "YulBlock",
													"src": "16738:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16755:1:9",
																		"nodeType": "YulLiteral",
																		"src": "16755:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16758:77:9",
																		"nodeType": "YulLiteral",
																		"src": "16758:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16748:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "16748:6:9"
																},
																"nativeSrc": "16748:88:9",
																"nodeType": "YulFunctionCall",
																"src": "16748:88:9"
															},
															"nativeSrc": "16748:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "16748:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16852:1:9",
																		"nodeType": "YulLiteral",
																		"src": "16852:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16855:4:9",
																		"nodeType": "YulLiteral",
																		"src": "16855:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16845:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "16845:6:9"
																},
																"nativeSrc": "16845:15:9",
																"nodeType": "YulFunctionCall",
																"src": "16845:15:9"
															},
															"nativeSrc": "16845:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "16845:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16876:1:9",
																		"nodeType": "YulLiteral",
																		"src": "16876:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16879:4:9",
																		"nodeType": "YulLiteral",
																		"src": "16879:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "16869:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "16869:6:9"
																},
																"nativeSrc": "16869:15:9",
																"nodeType": "YulFunctionCall",
																"src": "16869:15:9"
															},
															"nativeSrc": "16869:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "16869:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "16710:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "16710:180:9"
											},
											{
												"body": {
													"nativeSrc": "16944:362:9",
													"nodeType": "YulBlock",
													"src": "16944:362:9",
													"statements": [
														{
															"nativeSrc": "16954:25:9",
															"nodeType": "YulAssignment",
															"src": "16954:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16977:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "16977:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16959:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "16959:17:9"
																},
																"nativeSrc": "16959:20:9",
																"nodeType": "YulFunctionCall",
																"src": "16959:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "16954:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "16954:1:9"
																}
															]
														},
														{
															"nativeSrc": "16988:25:9",
															"nodeType": "YulAssignment",
															"src": "16988:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "17011:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "17011:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16993:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "16993:17:9"
																},
																"nativeSrc": "16993:20:9",
																"nodeType": "YulFunctionCall",
																"src": "16993:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "16988:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "16988:1:9"
																}
															]
														},
														{
															"nativeSrc": "17022:28:9",
															"nodeType": "YulVariableDeclaration",
															"src": "17022:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17045:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "17045:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "17048:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "17048:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "17041:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17041:3:9"
																},
																"nativeSrc": "17041:9:9",
																"nodeType": "YulFunctionCall",
																"src": "17041:9:9"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "17026:11:9",
																	"nodeType": "YulTypedName",
																	"src": "17026:11:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "17059:41:9",
															"nodeType": "YulAssignment",
															"src": "17059:41:9",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "17088:11:9",
																		"nodeType": "YulIdentifier",
																		"src": "17088:11:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17070:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "17070:17:9"
																},
																"nativeSrc": "17070:30:9",
																"nodeType": "YulFunctionCall",
																"src": "17070:30:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "17059:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "17059:7:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17277:22:9",
																"nodeType": "YulBlock",
																"src": "17277:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "17279:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "17279:16:9"
																			},
																			"nativeSrc": "17279:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "17279:18:9"
																		},
																		"nativeSrc": "17279:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "17279:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "17210:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "17210:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "17203:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "17203:6:9"
																				},
																				"nativeSrc": "17203:9:9",
																				"nodeType": "YulFunctionCall",
																				"src": "17203:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "17233:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "17233:1:9"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "17240:7:9",
																								"nodeType": "YulIdentifier",
																								"src": "17240:7:9"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "17249:1:9",
																								"nodeType": "YulIdentifier",
																								"src": "17249:1:9"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "17236:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "17236:3:9"
																						},
																						"nativeSrc": "17236:15:9",
																						"nodeType": "YulFunctionCall",
																						"src": "17236:15:9"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "17230:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "17230:2:9"
																				},
																				"nativeSrc": "17230:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "17230:22:9"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "17183:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "17183:2:9"
																		},
																		"nativeSrc": "17183:83:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17183:83:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "17163:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "17163:6:9"
																},
																"nativeSrc": "17163:113:9",
																"nodeType": "YulFunctionCall",
																"src": "17163:113:9"
															},
															"nativeSrc": "17160:139:9",
															"nodeType": "YulIf",
															"src": "17160:139:9"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "16896:410:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "16927:1:9",
														"nodeType": "YulTypedName",
														"src": "16927:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "16930:1:9",
														"nodeType": "YulTypedName",
														"src": "16930:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "16936:7:9",
														"nodeType": "YulTypedName",
														"src": "16936:7:9",
														"type": ""
													}
												],
												"src": "16896:410:9"
											},
											{
												"body": {
													"nativeSrc": "17356:147:9",
													"nodeType": "YulBlock",
													"src": "17356:147:9",
													"statements": [
														{
															"nativeSrc": "17366:25:9",
															"nodeType": "YulAssignment",
															"src": "17366:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17389:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "17389:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17371:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "17371:17:9"
																},
																"nativeSrc": "17371:20:9",
																"nodeType": "YulFunctionCall",
																"src": "17371:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "17366:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "17366:1:9"
																}
															]
														},
														{
															"nativeSrc": "17400:25:9",
															"nodeType": "YulAssignment",
															"src": "17400:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "17423:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "17423:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17405:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "17405:17:9"
																},
																"nativeSrc": "17405:20:9",
																"nodeType": "YulFunctionCall",
																"src": "17405:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "17400:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "17400:1:9"
																}
															]
														},
														{
															"nativeSrc": "17434:16:9",
															"nodeType": "YulAssignment",
															"src": "17434:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17445:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "17445:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "17448:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "17448:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17441:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17441:3:9"
																},
																"nativeSrc": "17441:9:9",
																"nodeType": "YulFunctionCall",
																"src": "17441:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "17434:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17434:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17474:22:9",
																"nodeType": "YulBlock",
																"src": "17474:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "17476:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "17476:16:9"
																			},
																			"nativeSrc": "17476:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "17476:18:9"
																		},
																		"nativeSrc": "17476:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "17476:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17466:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "17466:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "17469:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "17469:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17463:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "17463:2:9"
																},
																"nativeSrc": "17463:10:9",
																"nodeType": "YulFunctionCall",
																"src": "17463:10:9"
															},
															"nativeSrc": "17460:36:9",
															"nodeType": "YulIf",
															"src": "17460:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "17312:191:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "17343:1:9",
														"nodeType": "YulTypedName",
														"src": "17343:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "17346:1:9",
														"nodeType": "YulTypedName",
														"src": "17346:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "17352:3:9",
														"nodeType": "YulTypedName",
														"src": "17352:3:9",
														"type": ""
													}
												],
												"src": "17312:191:9"
											},
											{
												"body": {
													"nativeSrc": "17615:137:9",
													"nodeType": "YulBlock",
													"src": "17615:137:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17637:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "17637:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17645:1:9",
																				"nodeType": "YulLiteral",
																				"src": "17645:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17633:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17633:3:9"
																		},
																		"nativeSrc": "17633:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17633:14:9"
																	},
																	{
																		"hexValue": "596f752063616e206f6e6c7920636c61696d2061667465722074686520737461",
																		"kind": "string",
																		"nativeSrc": "17649:34:9",
																		"nodeType": "YulLiteral",
																		"src": "17649:34:9",
																		"type": "",
																		"value": "You can only claim after the sta"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17626:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "17626:6:9"
																},
																"nativeSrc": "17626:58:9",
																"nodeType": "YulFunctionCall",
																"src": "17626:58:9"
															},
															"nativeSrc": "17626:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "17626:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17705:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "17705:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17713:2:9",
																				"nodeType": "YulLiteral",
																				"src": "17713:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17701:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17701:3:9"
																		},
																		"nativeSrc": "17701:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17701:15:9"
																	},
																	{
																		"hexValue": "6b696e67206475726174696f6e2068617320706173736564",
																		"kind": "string",
																		"nativeSrc": "17718:26:9",
																		"nodeType": "YulLiteral",
																		"src": "17718:26:9",
																		"type": "",
																		"value": "king duration has passed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17694:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "17694:6:9"
																},
																"nativeSrc": "17694:51:9",
																"nodeType": "YulFunctionCall",
																"src": "17694:51:9"
															},
															"nativeSrc": "17694:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "17694:51:9"
														}
													]
												},
												"name": "store_literal_in_memory_46b08f77c9f834b9f1b5b936b65297ec5c2879e36c6a697ee9bcda135220d353",
												"nativeSrc": "17509:243:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17607:6:9",
														"nodeType": "YulTypedName",
														"src": "17607:6:9",
														"type": ""
													}
												],
												"src": "17509:243:9"
											},
											{
												"body": {
													"nativeSrc": "17904:220:9",
													"nodeType": "YulBlock",
													"src": "17904:220:9",
													"statements": [
														{
															"nativeSrc": "17914:74:9",
															"nodeType": "YulAssignment",
															"src": "17914:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17980:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "17980:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17985:2:9",
																		"nodeType": "YulLiteral",
																		"src": "17985:2:9",
																		"type": "",
																		"value": "56"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17921:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "17921:58:9"
																},
																"nativeSrc": "17921:67:9",
																"nodeType": "YulFunctionCall",
																"src": "17921:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17914:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17914:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18086:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "18086:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_46b08f77c9f834b9f1b5b936b65297ec5c2879e36c6a697ee9bcda135220d353",
																	"nativeSrc": "17997:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "17997:88:9"
																},
																"nativeSrc": "17997:93:9",
																"nodeType": "YulFunctionCall",
																"src": "17997:93:9"
															},
															"nativeSrc": "17997:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "17997:93:9"
														},
														{
															"nativeSrc": "18099:19:9",
															"nodeType": "YulAssignment",
															"src": "18099:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18110:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "18110:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18115:2:9",
																		"nodeType": "YulLiteral",
																		"src": "18115:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18106:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18106:3:9"
																},
																"nativeSrc": "18106:12:9",
																"nodeType": "YulFunctionCall",
																"src": "18106:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18099:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18099:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_46b08f77c9f834b9f1b5b936b65297ec5c2879e36c6a697ee9bcda135220d353_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17758:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17892:3:9",
														"nodeType": "YulTypedName",
														"src": "17892:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17900:3:9",
														"nodeType": "YulTypedName",
														"src": "17900:3:9",
														"type": ""
													}
												],
												"src": "17758:366:9"
											},
											{
												"body": {
													"nativeSrc": "18301:248:9",
													"nodeType": "YulBlock",
													"src": "18301:248:9",
													"statements": [
														{
															"nativeSrc": "18311:26:9",
															"nodeType": "YulAssignment",
															"src": "18311:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18323:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "18323:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18334:2:9",
																		"nodeType": "YulLiteral",
																		"src": "18334:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18319:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18319:3:9"
																},
																"nativeSrc": "18319:18:9",
																"nodeType": "YulFunctionCall",
																"src": "18319:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18311:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "18311:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18358:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "18358:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18369:1:9",
																				"nodeType": "YulLiteral",
																				"src": "18369:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18354:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18354:3:9"
																		},
																		"nativeSrc": "18354:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18354:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18377:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "18377:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18383:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "18383:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18373:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18373:3:9"
																		},
																		"nativeSrc": "18373:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18373:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18347:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "18347:6:9"
																},
																"nativeSrc": "18347:47:9",
																"nodeType": "YulFunctionCall",
																"src": "18347:47:9"
															},
															"nativeSrc": "18347:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "18347:47:9"
														},
														{
															"nativeSrc": "18403:139:9",
															"nodeType": "YulAssignment",
															"src": "18403:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18537:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "18537:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_46b08f77c9f834b9f1b5b936b65297ec5c2879e36c6a697ee9bcda135220d353_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18411:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "18411:124:9"
																},
																"nativeSrc": "18411:131:9",
																"nodeType": "YulFunctionCall",
																"src": "18411:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18403:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "18403:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_46b08f77c9f834b9f1b5b936b65297ec5c2879e36c6a697ee9bcda135220d353__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18130:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18281:9:9",
														"nodeType": "YulTypedName",
														"src": "18281:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18296:4:9",
														"nodeType": "YulTypedName",
														"src": "18296:4:9",
														"type": ""
													}
												],
												"src": "18130:419:9"
											},
											{
												"body": {
													"nativeSrc": "18681:206:9",
													"nodeType": "YulBlock",
													"src": "18681:206:9",
													"statements": [
														{
															"nativeSrc": "18691:26:9",
															"nodeType": "YulAssignment",
															"src": "18691:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18703:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "18703:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18714:2:9",
																		"nodeType": "YulLiteral",
																		"src": "18714:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18699:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18699:3:9"
																},
																"nativeSrc": "18699:18:9",
																"nodeType": "YulFunctionCall",
																"src": "18699:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18691:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "18691:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18771:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "18771:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18784:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "18784:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18795:1:9",
																				"nodeType": "YulLiteral",
																				"src": "18795:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18780:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18780:3:9"
																		},
																		"nativeSrc": "18780:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18780:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18727:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "18727:43:9"
																},
																"nativeSrc": "18727:71:9",
																"nodeType": "YulFunctionCall",
																"src": "18727:71:9"
															},
															"nativeSrc": "18727:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "18727:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18852:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "18852:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18865:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "18865:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18876:2:9",
																				"nodeType": "YulLiteral",
																				"src": "18876:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18861:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18861:3:9"
																		},
																		"nativeSrc": "18861:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18861:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18808:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "18808:43:9"
																},
																"nativeSrc": "18808:72:9",
																"nodeType": "YulFunctionCall",
																"src": "18808:72:9"
															},
															"nativeSrc": "18808:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "18808:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "18555:332:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18645:9:9",
														"nodeType": "YulTypedName",
														"src": "18645:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18657:6:9",
														"nodeType": "YulTypedName",
														"src": "18657:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18665:6:9",
														"nodeType": "YulTypedName",
														"src": "18665:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18676:4:9",
														"nodeType": "YulTypedName",
														"src": "18676:4:9",
														"type": ""
													}
												],
												"src": "18555:332:9"
											},
											{
												"body": {
													"nativeSrc": "18933:76:9",
													"nodeType": "YulBlock",
													"src": "18933:76:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "18987:16:9",
																"nodeType": "YulBlock",
																"src": "18987:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "18996:1:9",
																					"nodeType": "YulLiteral",
																					"src": "18996:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "18999:1:9",
																					"nodeType": "YulLiteral",
																					"src": "18999:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "18989:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "18989:6:9"
																			},
																			"nativeSrc": "18989:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "18989:12:9"
																		},
																		"nativeSrc": "18989:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "18989:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "18956:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "18956:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "18978:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "18978:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "18963:14:9",
																					"nodeType": "YulIdentifier",
																					"src": "18963:14:9"
																				},
																				"nativeSrc": "18963:21:9",
																				"nodeType": "YulFunctionCall",
																				"src": "18963:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "18953:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "18953:2:9"
																		},
																		"nativeSrc": "18953:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18953:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "18946:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "18946:6:9"
																},
																"nativeSrc": "18946:40:9",
																"nodeType": "YulFunctionCall",
																"src": "18946:40:9"
															},
															"nativeSrc": "18943:60:9",
															"nodeType": "YulIf",
															"src": "18943:60:9"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "18893:116:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18926:5:9",
														"nodeType": "YulTypedName",
														"src": "18926:5:9",
														"type": ""
													}
												],
												"src": "18893:116:9"
											},
											{
												"body": {
													"nativeSrc": "19075:77:9",
													"nodeType": "YulBlock",
													"src": "19075:77:9",
													"statements": [
														{
															"nativeSrc": "19085:22:9",
															"nodeType": "YulAssignment",
															"src": "19085:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "19100:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "19100:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "19094:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "19094:5:9"
																},
																"nativeSrc": "19094:13:9",
																"nodeType": "YulFunctionCall",
																"src": "19094:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "19085:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "19085:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19140:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "19140:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "19116:23:9",
																	"nodeType": "YulIdentifier",
																	"src": "19116:23:9"
																},
																"nativeSrc": "19116:30:9",
																"nodeType": "YulFunctionCall",
																"src": "19116:30:9"
															},
															"nativeSrc": "19116:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "19116:30:9"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "19015:137:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "19053:6:9",
														"nodeType": "YulTypedName",
														"src": "19053:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "19061:3:9",
														"nodeType": "YulTypedName",
														"src": "19061:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "19069:5:9",
														"nodeType": "YulTypedName",
														"src": "19069:5:9",
														"type": ""
													}
												],
												"src": "19015:137:9"
											},
											{
												"body": {
													"nativeSrc": "19232:271:9",
													"nodeType": "YulBlock",
													"src": "19232:271:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "19278:83:9",
																"nodeType": "YulBlock",
																"src": "19278:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "19280:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "19280:77:9"
																			},
																			"nativeSrc": "19280:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "19280:79:9"
																		},
																		"nativeSrc": "19280:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "19280:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19253:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "19253:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19262:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "19262:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19249:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "19249:3:9"
																		},
																		"nativeSrc": "19249:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "19249:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19274:2:9",
																		"nodeType": "YulLiteral",
																		"src": "19274:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "19245:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "19245:3:9"
																},
																"nativeSrc": "19245:32:9",
																"nodeType": "YulFunctionCall",
																"src": "19245:32:9"
															},
															"nativeSrc": "19242:119:9",
															"nodeType": "YulIf",
															"src": "19242:119:9"
														},
														{
															"nativeSrc": "19371:125:9",
															"nodeType": "YulBlock",
															"src": "19371:125:9",
															"statements": [
																{
																	"nativeSrc": "19386:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "19386:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "19400:1:9",
																		"nodeType": "YulLiteral",
																		"src": "19400:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "19390:6:9",
																			"nodeType": "YulTypedName",
																			"src": "19390:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "19415:71:9",
																	"nodeType": "YulAssignment",
																	"src": "19415:71:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "19458:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "19458:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "19469:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "19469:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "19454:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "19454:3:9"
																				},
																				"nativeSrc": "19454:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "19454:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19478:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "19478:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "19425:28:9",
																			"nodeType": "YulIdentifier",
																			"src": "19425:28:9"
																		},
																		"nativeSrc": "19425:61:9",
																		"nodeType": "YulFunctionCall",
																		"src": "19425:61:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "19415:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "19415:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "19158:345:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19202:9:9",
														"nodeType": "YulTypedName",
														"src": "19202:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "19213:7:9",
														"nodeType": "YulTypedName",
														"src": "19213:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "19225:6:9",
														"nodeType": "YulTypedName",
														"src": "19225:6:9",
														"type": ""
													}
												],
												"src": "19158:345:9"
											},
											{
												"body": {
													"nativeSrc": "19615:65:9",
													"nodeType": "YulBlock",
													"src": "19615:65:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19637:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "19637:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19645:1:9",
																				"nodeType": "YulLiteral",
																				"src": "19645:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19633:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "19633:3:9"
																		},
																		"nativeSrc": "19633:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "19633:14:9"
																	},
																	{
																		"hexValue": "546f6b656e207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "19649:23:9",
																		"nodeType": "YulLiteral",
																		"src": "19649:23:9",
																		"type": "",
																		"value": "Token transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19626:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "19626:6:9"
																},
																"nativeSrc": "19626:47:9",
																"nodeType": "YulFunctionCall",
																"src": "19626:47:9"
															},
															"nativeSrc": "19626:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "19626:47:9"
														}
													]
												},
												"name": "store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
												"nativeSrc": "19509:171:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19607:6:9",
														"nodeType": "YulTypedName",
														"src": "19607:6:9",
														"type": ""
													}
												],
												"src": "19509:171:9"
											},
											{
												"body": {
													"nativeSrc": "19832:220:9",
													"nodeType": "YulBlock",
													"src": "19832:220:9",
													"statements": [
														{
															"nativeSrc": "19842:74:9",
															"nodeType": "YulAssignment",
															"src": "19842:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19908:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "19908:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19913:2:9",
																		"nodeType": "YulLiteral",
																		"src": "19913:2:9",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19849:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "19849:58:9"
																},
																"nativeSrc": "19849:67:9",
																"nodeType": "YulFunctionCall",
																"src": "19849:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19842:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "19842:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20014:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "20014:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																	"nativeSrc": "19925:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "19925:88:9"
																},
																"nativeSrc": "19925:93:9",
																"nodeType": "YulFunctionCall",
																"src": "19925:93:9"
															},
															"nativeSrc": "19925:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "19925:93:9"
														},
														{
															"nativeSrc": "20027:19:9",
															"nodeType": "YulAssignment",
															"src": "20027:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20038:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "20038:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20043:2:9",
																		"nodeType": "YulLiteral",
																		"src": "20043:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20034:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "20034:3:9"
																},
																"nativeSrc": "20034:12:9",
																"nodeType": "YulFunctionCall",
																"src": "20034:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20027:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "20027:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19686:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19820:3:9",
														"nodeType": "YulTypedName",
														"src": "19820:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19828:3:9",
														"nodeType": "YulTypedName",
														"src": "19828:3:9",
														"type": ""
													}
												],
												"src": "19686:366:9"
											},
											{
												"body": {
													"nativeSrc": "20229:248:9",
													"nodeType": "YulBlock",
													"src": "20229:248:9",
													"statements": [
														{
															"nativeSrc": "20239:26:9",
															"nodeType": "YulAssignment",
															"src": "20239:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20251:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "20251:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20262:2:9",
																		"nodeType": "YulLiteral",
																		"src": "20262:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20247:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "20247:3:9"
																},
																"nativeSrc": "20247:18:9",
																"nodeType": "YulFunctionCall",
																"src": "20247:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20239:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "20239:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20286:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "20286:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20297:1:9",
																				"nodeType": "YulLiteral",
																				"src": "20297:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20282:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "20282:3:9"
																		},
																		"nativeSrc": "20282:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "20282:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20305:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "20305:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20311:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "20311:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20301:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "20301:3:9"
																		},
																		"nativeSrc": "20301:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "20301:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20275:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "20275:6:9"
																},
																"nativeSrc": "20275:47:9",
																"nodeType": "YulFunctionCall",
																"src": "20275:47:9"
															},
															"nativeSrc": "20275:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "20275:47:9"
														},
														{
															"nativeSrc": "20331:139:9",
															"nodeType": "YulAssignment",
															"src": "20331:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20465:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "20465:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20339:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "20339:124:9"
																},
																"nativeSrc": "20339:131:9",
																"nodeType": "YulFunctionCall",
																"src": "20339:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20331:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "20331:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20058:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20209:9:9",
														"nodeType": "YulTypedName",
														"src": "20209:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20224:4:9",
														"nodeType": "YulTypedName",
														"src": "20224:4:9",
														"type": ""
													}
												],
												"src": "20058:419:9"
											},
											{
												"body": {
													"nativeSrc": "20589:76:9",
													"nodeType": "YulBlock",
													"src": "20589:76:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20611:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "20611:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20619:1:9",
																				"nodeType": "YulLiteral",
																				"src": "20619:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20607:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "20607:3:9"
																		},
																		"nativeSrc": "20607:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "20607:14:9"
																	},
																	{
																		"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "20623:34:9",
																		"nodeType": "YulLiteral",
																		"src": "20623:34:9",
																		"type": "",
																		"value": "Amount must be greater than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20600:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "20600:6:9"
																},
																"nativeSrc": "20600:58:9",
																"nodeType": "YulFunctionCall",
																"src": "20600:58:9"
															},
															"nativeSrc": "20600:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "20600:58:9"
														}
													]
												},
												"name": "store_literal_in_memory_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
												"nativeSrc": "20483:182:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20581:6:9",
														"nodeType": "YulTypedName",
														"src": "20581:6:9",
														"type": ""
													}
												],
												"src": "20483:182:9"
											},
											{
												"body": {
													"nativeSrc": "20817:220:9",
													"nodeType": "YulBlock",
													"src": "20817:220:9",
													"statements": [
														{
															"nativeSrc": "20827:74:9",
															"nodeType": "YulAssignment",
															"src": "20827:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20893:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "20893:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20898:2:9",
																		"nodeType": "YulLiteral",
																		"src": "20898:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20834:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "20834:58:9"
																},
																"nativeSrc": "20834:67:9",
																"nodeType": "YulFunctionCall",
																"src": "20834:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20827:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "20827:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20999:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "20999:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																	"nativeSrc": "20910:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "20910:88:9"
																},
																"nativeSrc": "20910:93:9",
																"nodeType": "YulFunctionCall",
																"src": "20910:93:9"
															},
															"nativeSrc": "20910:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "20910:93:9"
														},
														{
															"nativeSrc": "21012:19:9",
															"nodeType": "YulAssignment",
															"src": "21012:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21023:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "21023:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21028:2:9",
																		"nodeType": "YulLiteral",
																		"src": "21028:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21019:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "21019:3:9"
																},
																"nativeSrc": "21019:12:9",
																"nodeType": "YulFunctionCall",
																"src": "21019:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21012:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "21012:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20671:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20805:3:9",
														"nodeType": "YulTypedName",
														"src": "20805:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20813:3:9",
														"nodeType": "YulTypedName",
														"src": "20813:3:9",
														"type": ""
													}
												],
												"src": "20671:366:9"
											},
											{
												"body": {
													"nativeSrc": "21214:248:9",
													"nodeType": "YulBlock",
													"src": "21214:248:9",
													"statements": [
														{
															"nativeSrc": "21224:26:9",
															"nodeType": "YulAssignment",
															"src": "21224:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21236:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "21236:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21247:2:9",
																		"nodeType": "YulLiteral",
																		"src": "21247:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21232:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "21232:3:9"
																},
																"nativeSrc": "21232:18:9",
																"nodeType": "YulFunctionCall",
																"src": "21232:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21224:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "21224:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21271:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "21271:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21282:1:9",
																				"nodeType": "YulLiteral",
																				"src": "21282:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21267:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "21267:3:9"
																		},
																		"nativeSrc": "21267:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "21267:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21290:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "21290:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21296:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "21296:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21286:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "21286:3:9"
																		},
																		"nativeSrc": "21286:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "21286:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21260:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "21260:6:9"
																},
																"nativeSrc": "21260:47:9",
																"nodeType": "YulFunctionCall",
																"src": "21260:47:9"
															},
															"nativeSrc": "21260:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "21260:47:9"
														},
														{
															"nativeSrc": "21316:139:9",
															"nodeType": "YulAssignment",
															"src": "21316:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21450:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "21450:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21324:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "21324:124:9"
																},
																"nativeSrc": "21324:131:9",
																"nodeType": "YulFunctionCall",
																"src": "21324:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21316:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "21316:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "21043:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21194:9:9",
														"nodeType": "YulTypedName",
														"src": "21194:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21209:4:9",
														"nodeType": "YulTypedName",
														"src": "21209:4:9",
														"type": ""
													}
												],
												"src": "21043:419:9"
											},
											{
												"body": {
													"nativeSrc": "21574:121:9",
													"nodeType": "YulBlock",
													"src": "21574:121:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "21596:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "21596:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21604:1:9",
																				"nodeType": "YulLiteral",
																				"src": "21604:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21592:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "21592:3:9"
																		},
																		"nativeSrc": "21592:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "21592:14:9"
																	},
																	{
																		"hexValue": "456e746572204475726174696f6e20696e20666f726d61746520636865636b20",
																		"kind": "string",
																		"nativeSrc": "21608:34:9",
																		"nodeType": "YulLiteral",
																		"src": "21608:34:9",
																		"type": "",
																		"value": "Enter Duration in formate check "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21585:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "21585:6:9"
																},
																"nativeSrc": "21585:58:9",
																"nodeType": "YulFunctionCall",
																"src": "21585:58:9"
															},
															"nativeSrc": "21585:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "21585:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "21664:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "21664:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21672:2:9",
																				"nodeType": "YulLiteral",
																				"src": "21672:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21660:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "21660:3:9"
																		},
																		"nativeSrc": "21660:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "21660:15:9"
																	},
																	{
																		"hexValue": "6475726174696f6e",
																		"kind": "string",
																		"nativeSrc": "21677:10:9",
																		"nodeType": "YulLiteral",
																		"src": "21677:10:9",
																		"type": "",
																		"value": "duration"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21653:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "21653:6:9"
																},
																"nativeSrc": "21653:35:9",
																"nodeType": "YulFunctionCall",
																"src": "21653:35:9"
															},
															"nativeSrc": "21653:35:9",
															"nodeType": "YulExpressionStatement",
															"src": "21653:35:9"
														}
													]
												},
												"name": "store_literal_in_memory_358f595c43c5417f683a6d546f36187d1f93d884747b170b9ff8f7ae4de4b92e",
												"nativeSrc": "21468:227:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "21566:6:9",
														"nodeType": "YulTypedName",
														"src": "21566:6:9",
														"type": ""
													}
												],
												"src": "21468:227:9"
											},
											{
												"body": {
													"nativeSrc": "21847:220:9",
													"nodeType": "YulBlock",
													"src": "21847:220:9",
													"statements": [
														{
															"nativeSrc": "21857:74:9",
															"nodeType": "YulAssignment",
															"src": "21857:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21923:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "21923:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21928:2:9",
																		"nodeType": "YulLiteral",
																		"src": "21928:2:9",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21864:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "21864:58:9"
																},
																"nativeSrc": "21864:67:9",
																"nodeType": "YulFunctionCall",
																"src": "21864:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21857:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "21857:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22029:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "22029:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_358f595c43c5417f683a6d546f36187d1f93d884747b170b9ff8f7ae4de4b92e",
																	"nativeSrc": "21940:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "21940:88:9"
																},
																"nativeSrc": "21940:93:9",
																"nodeType": "YulFunctionCall",
																"src": "21940:93:9"
															},
															"nativeSrc": "21940:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "21940:93:9"
														},
														{
															"nativeSrc": "22042:19:9",
															"nodeType": "YulAssignment",
															"src": "22042:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22053:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "22053:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22058:2:9",
																		"nodeType": "YulLiteral",
																		"src": "22058:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22049:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "22049:3:9"
																},
																"nativeSrc": "22049:12:9",
																"nodeType": "YulFunctionCall",
																"src": "22049:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22042:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "22042:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_358f595c43c5417f683a6d546f36187d1f93d884747b170b9ff8f7ae4de4b92e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "21701:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21835:3:9",
														"nodeType": "YulTypedName",
														"src": "21835:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21843:3:9",
														"nodeType": "YulTypedName",
														"src": "21843:3:9",
														"type": ""
													}
												],
												"src": "21701:366:9"
											},
											{
												"body": {
													"nativeSrc": "22244:248:9",
													"nodeType": "YulBlock",
													"src": "22244:248:9",
													"statements": [
														{
															"nativeSrc": "22254:26:9",
															"nodeType": "YulAssignment",
															"src": "22254:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22266:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "22266:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22277:2:9",
																		"nodeType": "YulLiteral",
																		"src": "22277:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22262:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "22262:3:9"
																},
																"nativeSrc": "22262:18:9",
																"nodeType": "YulFunctionCall",
																"src": "22262:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22254:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "22254:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22301:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "22301:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22312:1:9",
																				"nodeType": "YulLiteral",
																				"src": "22312:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22297:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "22297:3:9"
																		},
																		"nativeSrc": "22297:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "22297:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22320:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "22320:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22326:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "22326:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22316:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "22316:3:9"
																		},
																		"nativeSrc": "22316:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "22316:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22290:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "22290:6:9"
																},
																"nativeSrc": "22290:47:9",
																"nodeType": "YulFunctionCall",
																"src": "22290:47:9"
															},
															"nativeSrc": "22290:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "22290:47:9"
														},
														{
															"nativeSrc": "22346:139:9",
															"nodeType": "YulAssignment",
															"src": "22346:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "22480:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "22480:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_358f595c43c5417f683a6d546f36187d1f93d884747b170b9ff8f7ae4de4b92e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22354:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "22354:124:9"
																},
																"nativeSrc": "22354:131:9",
																"nodeType": "YulFunctionCall",
																"src": "22354:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22346:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "22346:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_358f595c43c5417f683a6d546f36187d1f93d884747b170b9ff8f7ae4de4b92e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22073:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22224:9:9",
														"nodeType": "YulTypedName",
														"src": "22224:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22239:4:9",
														"nodeType": "YulTypedName",
														"src": "22239:4:9",
														"type": ""
													}
												],
												"src": "22073:419:9"
											},
											{
												"body": {
													"nativeSrc": "22652:288:9",
													"nodeType": "YulBlock",
													"src": "22652:288:9",
													"statements": [
														{
															"nativeSrc": "22662:26:9",
															"nodeType": "YulAssignment",
															"src": "22662:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22674:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "22674:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22685:2:9",
																		"nodeType": "YulLiteral",
																		"src": "22685:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22670:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "22670:3:9"
																},
																"nativeSrc": "22670:18:9",
																"nodeType": "YulFunctionCall",
																"src": "22670:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22662:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "22662:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "22742:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "22742:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22755:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "22755:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22766:1:9",
																				"nodeType": "YulLiteral",
																				"src": "22766:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22751:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "22751:3:9"
																		},
																		"nativeSrc": "22751:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "22751:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "22698:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "22698:43:9"
																},
																"nativeSrc": "22698:71:9",
																"nodeType": "YulFunctionCall",
																"src": "22698:71:9"
															},
															"nativeSrc": "22698:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "22698:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "22823:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "22823:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22836:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "22836:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22847:2:9",
																				"nodeType": "YulLiteral",
																				"src": "22847:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22832:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "22832:3:9"
																		},
																		"nativeSrc": "22832:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "22832:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "22779:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "22779:43:9"
																},
																"nativeSrc": "22779:72:9",
																"nodeType": "YulFunctionCall",
																"src": "22779:72:9"
															},
															"nativeSrc": "22779:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "22779:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "22905:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "22905:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22918:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "22918:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22929:2:9",
																				"nodeType": "YulLiteral",
																				"src": "22929:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22914:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "22914:3:9"
																		},
																		"nativeSrc": "22914:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "22914:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "22861:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "22861:43:9"
																},
																"nativeSrc": "22861:72:9",
																"nodeType": "YulFunctionCall",
																"src": "22861:72:9"
															},
															"nativeSrc": "22861:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "22861:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "22498:442:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22608:9:9",
														"nodeType": "YulTypedName",
														"src": "22608:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "22620:6:9",
														"nodeType": "YulTypedName",
														"src": "22620:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "22628:6:9",
														"nodeType": "YulTypedName",
														"src": "22628:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "22636:6:9",
														"nodeType": "YulTypedName",
														"src": "22636:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22647:4:9",
														"nodeType": "YulTypedName",
														"src": "22647:4:9",
														"type": ""
													}
												],
												"src": "22498:442:9"
											},
											{
												"body": {
													"nativeSrc": "23052:116:9",
													"nodeType": "YulBlock",
													"src": "23052:116:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "23074:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "23074:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23082:1:9",
																				"nodeType": "YulLiteral",
																				"src": "23082:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23070:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "23070:3:9"
																		},
																		"nativeSrc": "23070:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "23070:14:9"
																	},
																	{
																		"hexValue": "596f752063616e206f6e6c7920636c61696d20796f7572206f776e2072657761",
																		"kind": "string",
																		"nativeSrc": "23086:34:9",
																		"nodeType": "YulLiteral",
																		"src": "23086:34:9",
																		"type": "",
																		"value": "You can only claim your own rewa"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23063:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "23063:6:9"
																},
																"nativeSrc": "23063:58:9",
																"nodeType": "YulFunctionCall",
																"src": "23063:58:9"
															},
															"nativeSrc": "23063:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "23063:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "23142:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "23142:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23150:2:9",
																				"nodeType": "YulLiteral",
																				"src": "23150:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23138:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "23138:3:9"
																		},
																		"nativeSrc": "23138:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "23138:15:9"
																	},
																	{
																		"hexValue": "726473",
																		"kind": "string",
																		"nativeSrc": "23155:5:9",
																		"nodeType": "YulLiteral",
																		"src": "23155:5:9",
																		"type": "",
																		"value": "rds"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23131:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "23131:6:9"
																},
																"nativeSrc": "23131:30:9",
																"nodeType": "YulFunctionCall",
																"src": "23131:30:9"
															},
															"nativeSrc": "23131:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "23131:30:9"
														}
													]
												},
												"name": "store_literal_in_memory_07c0ca133cb093f9404f4c4664ce8fdedbf5c43b51f59b0f309033c8869551f9",
												"nativeSrc": "22946:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "23044:6:9",
														"nodeType": "YulTypedName",
														"src": "23044:6:9",
														"type": ""
													}
												],
												"src": "22946:222:9"
											},
											{
												"body": {
													"nativeSrc": "23320:220:9",
													"nodeType": "YulBlock",
													"src": "23320:220:9",
													"statements": [
														{
															"nativeSrc": "23330:74:9",
															"nodeType": "YulAssignment",
															"src": "23330:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23396:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "23396:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23401:2:9",
																		"nodeType": "YulLiteral",
																		"src": "23401:2:9",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23337:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "23337:58:9"
																},
																"nativeSrc": "23337:67:9",
																"nodeType": "YulFunctionCall",
																"src": "23337:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "23330:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "23330:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23502:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "23502:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_07c0ca133cb093f9404f4c4664ce8fdedbf5c43b51f59b0f309033c8869551f9",
																	"nativeSrc": "23413:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "23413:88:9"
																},
																"nativeSrc": "23413:93:9",
																"nodeType": "YulFunctionCall",
																"src": "23413:93:9"
															},
															"nativeSrc": "23413:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "23413:93:9"
														},
														{
															"nativeSrc": "23515:19:9",
															"nodeType": "YulAssignment",
															"src": "23515:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23526:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "23526:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23531:2:9",
																		"nodeType": "YulLiteral",
																		"src": "23531:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23522:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "23522:3:9"
																},
																"nativeSrc": "23522:12:9",
																"nodeType": "YulFunctionCall",
																"src": "23522:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "23515:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "23515:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_07c0ca133cb093f9404f4c4664ce8fdedbf5c43b51f59b0f309033c8869551f9_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "23174:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "23308:3:9",
														"nodeType": "YulTypedName",
														"src": "23308:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "23316:3:9",
														"nodeType": "YulTypedName",
														"src": "23316:3:9",
														"type": ""
													}
												],
												"src": "23174:366:9"
											},
											{
												"body": {
													"nativeSrc": "23717:248:9",
													"nodeType": "YulBlock",
													"src": "23717:248:9",
													"statements": [
														{
															"nativeSrc": "23727:26:9",
															"nodeType": "YulAssignment",
															"src": "23727:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23739:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "23739:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23750:2:9",
																		"nodeType": "YulLiteral",
																		"src": "23750:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23735:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "23735:3:9"
																},
																"nativeSrc": "23735:18:9",
																"nodeType": "YulFunctionCall",
																"src": "23735:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23727:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "23727:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23774:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "23774:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23785:1:9",
																				"nodeType": "YulLiteral",
																				"src": "23785:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23770:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "23770:3:9"
																		},
																		"nativeSrc": "23770:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "23770:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "23793:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "23793:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23799:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "23799:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23789:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "23789:3:9"
																		},
																		"nativeSrc": "23789:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "23789:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23763:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "23763:6:9"
																},
																"nativeSrc": "23763:47:9",
																"nodeType": "YulFunctionCall",
																"src": "23763:47:9"
															},
															"nativeSrc": "23763:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "23763:47:9"
														},
														{
															"nativeSrc": "23819:139:9",
															"nodeType": "YulAssignment",
															"src": "23819:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "23953:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "23953:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_07c0ca133cb093f9404f4c4664ce8fdedbf5c43b51f59b0f309033c8869551f9_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23827:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "23827:124:9"
																},
																"nativeSrc": "23827:131:9",
																"nodeType": "YulFunctionCall",
																"src": "23827:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23819:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "23819:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_07c0ca133cb093f9404f4c4664ce8fdedbf5c43b51f59b0f309033c8869551f9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "23546:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23697:9:9",
														"nodeType": "YulTypedName",
														"src": "23697:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23712:4:9",
														"nodeType": "YulTypedName",
														"src": "23712:4:9",
														"type": ""
													}
												],
												"src": "23546:419:9"
											},
											{
												"body": {
													"nativeSrc": "24077:66:9",
													"nodeType": "YulBlock",
													"src": "24077:66:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "24099:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "24099:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24107:1:9",
																				"nodeType": "YulLiteral",
																				"src": "24107:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24095:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "24095:3:9"
																		},
																		"nativeSrc": "24095:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "24095:14:9"
																	},
																	{
																		"hexValue": "52657761726420616c726561647920636c61696d6564",
																		"kind": "string",
																		"nativeSrc": "24111:24:9",
																		"nodeType": "YulLiteral",
																		"src": "24111:24:9",
																		"type": "",
																		"value": "Reward already claimed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24088:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "24088:6:9"
																},
																"nativeSrc": "24088:48:9",
																"nodeType": "YulFunctionCall",
																"src": "24088:48:9"
															},
															"nativeSrc": "24088:48:9",
															"nodeType": "YulExpressionStatement",
															"src": "24088:48:9"
														}
													]
												},
												"name": "store_literal_in_memory_59cbfee2a24523c1fd613f6298f3ecd1131edd49036e244040e570087e53f19c",
												"nativeSrc": "23971:172:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "24069:6:9",
														"nodeType": "YulTypedName",
														"src": "24069:6:9",
														"type": ""
													}
												],
												"src": "23971:172:9"
											},
											{
												"body": {
													"nativeSrc": "24295:220:9",
													"nodeType": "YulBlock",
													"src": "24295:220:9",
													"statements": [
														{
															"nativeSrc": "24305:74:9",
															"nodeType": "YulAssignment",
															"src": "24305:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24371:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "24371:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24376:2:9",
																		"nodeType": "YulLiteral",
																		"src": "24376:2:9",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24312:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "24312:58:9"
																},
																"nativeSrc": "24312:67:9",
																"nodeType": "YulFunctionCall",
																"src": "24312:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "24305:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "24305:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24477:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "24477:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_59cbfee2a24523c1fd613f6298f3ecd1131edd49036e244040e570087e53f19c",
																	"nativeSrc": "24388:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "24388:88:9"
																},
																"nativeSrc": "24388:93:9",
																"nodeType": "YulFunctionCall",
																"src": "24388:93:9"
															},
															"nativeSrc": "24388:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "24388:93:9"
														},
														{
															"nativeSrc": "24490:19:9",
															"nodeType": "YulAssignment",
															"src": "24490:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24501:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "24501:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24506:2:9",
																		"nodeType": "YulLiteral",
																		"src": "24506:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24497:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "24497:3:9"
																},
																"nativeSrc": "24497:12:9",
																"nodeType": "YulFunctionCall",
																"src": "24497:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "24490:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "24490:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_59cbfee2a24523c1fd613f6298f3ecd1131edd49036e244040e570087e53f19c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "24149:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "24283:3:9",
														"nodeType": "YulTypedName",
														"src": "24283:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "24291:3:9",
														"nodeType": "YulTypedName",
														"src": "24291:3:9",
														"type": ""
													}
												],
												"src": "24149:366:9"
											},
											{
												"body": {
													"nativeSrc": "24692:248:9",
													"nodeType": "YulBlock",
													"src": "24692:248:9",
													"statements": [
														{
															"nativeSrc": "24702:26:9",
															"nodeType": "YulAssignment",
															"src": "24702:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24714:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "24714:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24725:2:9",
																		"nodeType": "YulLiteral",
																		"src": "24725:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24710:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "24710:3:9"
																},
																"nativeSrc": "24710:18:9",
																"nodeType": "YulFunctionCall",
																"src": "24710:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24702:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "24702:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24749:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "24749:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24760:1:9",
																				"nodeType": "YulLiteral",
																				"src": "24760:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24745:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "24745:3:9"
																		},
																		"nativeSrc": "24745:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "24745:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "24768:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "24768:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "24774:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "24774:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "24764:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "24764:3:9"
																		},
																		"nativeSrc": "24764:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "24764:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24738:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "24738:6:9"
																},
																"nativeSrc": "24738:47:9",
																"nodeType": "YulFunctionCall",
																"src": "24738:47:9"
															},
															"nativeSrc": "24738:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "24738:47:9"
														},
														{
															"nativeSrc": "24794:139:9",
															"nodeType": "YulAssignment",
															"src": "24794:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "24928:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "24928:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_59cbfee2a24523c1fd613f6298f3ecd1131edd49036e244040e570087e53f19c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24802:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "24802:124:9"
																},
																"nativeSrc": "24802:131:9",
																"nodeType": "YulFunctionCall",
																"src": "24802:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24794:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "24794:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_59cbfee2a24523c1fd613f6298f3ecd1131edd49036e244040e570087e53f19c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "24521:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24672:9:9",
														"nodeType": "YulTypedName",
														"src": "24672:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24687:4:9",
														"nodeType": "YulTypedName",
														"src": "24687:4:9",
														"type": ""
													}
												],
												"src": "24521:419:9"
											},
											{
												"body": {
													"nativeSrc": "24991:149:9",
													"nodeType": "YulBlock",
													"src": "24991:149:9",
													"statements": [
														{
															"nativeSrc": "25001:25:9",
															"nodeType": "YulAssignment",
															"src": "25001:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "25024:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "25024:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "25006:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "25006:17:9"
																},
																"nativeSrc": "25006:20:9",
																"nodeType": "YulFunctionCall",
																"src": "25006:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "25001:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "25001:1:9"
																}
															]
														},
														{
															"nativeSrc": "25035:25:9",
															"nodeType": "YulAssignment",
															"src": "25035:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "25058:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "25058:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "25040:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "25040:17:9"
																},
																"nativeSrc": "25040:20:9",
																"nodeType": "YulFunctionCall",
																"src": "25040:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "25035:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "25035:1:9"
																}
															]
														},
														{
															"nativeSrc": "25069:17:9",
															"nodeType": "YulAssignment",
															"src": "25069:17:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "25081:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "25081:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "25084:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "25084:1:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "25077:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "25077:3:9"
																},
																"nativeSrc": "25077:9:9",
																"nodeType": "YulFunctionCall",
																"src": "25077:9:9"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "25069:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "25069:4:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "25111:22:9",
																"nodeType": "YulBlock",
																"src": "25111:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "25113:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "25113:16:9"
																			},
																			"nativeSrc": "25113:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "25113:18:9"
																		},
																		"nativeSrc": "25113:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "25113:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "25102:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "25102:4:9"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "25108:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "25108:1:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "25099:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "25099:2:9"
																},
																"nativeSrc": "25099:11:9",
																"nodeType": "YulFunctionCall",
																"src": "25099:11:9"
															},
															"nativeSrc": "25096:37:9",
															"nodeType": "YulIf",
															"src": "25096:37:9"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "24946:194:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "24977:1:9",
														"nodeType": "YulTypedName",
														"src": "24977:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "24980:1:9",
														"nodeType": "YulTypedName",
														"src": "24980:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "24986:4:9",
														"nodeType": "YulTypedName",
														"src": "24986:4:9",
														"type": ""
													}
												],
												"src": "24946:194:9"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    // struct MyStakingContract.Stake -> struct MyStakingContract.Stake\n    function abi_encode_t_struct$_Stake_$1089_memory_ptr_to_t_struct$_Stake_$1089_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0xe0)\n\n        {\n            // tokenIdc\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // duration\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // startTime\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // userads\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // isClaimed\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // isAmountc\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0xc0))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_Stake_$1089_memory_ptr__to_t_struct$_Stake_$1089_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_struct$_Stake_$1089_memory_ptr_to_t_struct$_Stake_$1089_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_array$_t_struct$_Stake_$1089_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_Stake_$1089_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_Stake_$1089_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    // struct MyStakingContract.Stake -> struct MyStakingContract.Stake\n    function abi_encode_t_struct$_Stake_$1089_memory_ptr_to_t_struct$_Stake_$1089_memory_ptr(value, pos)  {\n        let tail := add(pos, 0xe0)\n\n        {\n            // tokenIdc\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // duration\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // startTime\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // userads\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // isClaimed\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // isAmountc\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0xc0))\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_Stake_$1089_memory_ptr_to_t_struct$_Stake_$1089_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_Stake_$1089_memory_ptr_to_t_struct$_Stake_$1089_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0xe0)\n    }\n\n    function array_nextElement_t_array$_t_struct$_Stake_$1089_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct MyStakingContract.Stake[] -> struct MyStakingContract.Stake[]\n    function abi_encode_t_array$_t_struct$_Stake_$1089_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$1089_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_Stake_$1089_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_Stake_$1089_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_Stake_$1089_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_Stake_$1089_memory_ptr_to_t_struct$_Stake_$1089_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_Stake_$1089_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_Stake_$1089_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Stake_$1089_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_Stake_$1089_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$1089_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_address_t_bool_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_address_t_bool_t_bool__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value6,  add(headStart, 192))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_MyToken_$1030_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_MyToken_$1030_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_MyToken_$1030_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_MyToken_$1030__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_MyToken_$1030_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_983c2ca2c32b759517ef5d3818bb7f52ae0e3ac0a8ab4d1f11cafb08aad10398(memPtr) {\n\n        mstore(add(memPtr, 0), \"You can only claim your own stak\")\n\n        mstore(add(memPtr, 32), \"ed amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_983c2ca2c32b759517ef5d3818bb7f52ae0e3ac0a8ab4d1f11cafb08aad10398_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_983c2ca2c32b759517ef5d3818bb7f52ae0e3ac0a8ab4d1f11cafb08aad10398(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_983c2ca2c32b759517ef5d3818bb7f52ae0e3ac0a8ab4d1f11cafb08aad10398__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_983c2ca2c32b759517ef5d3818bb7f52ae0e3ac0a8ab4d1f11cafb08aad10398_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c2aed4c0e3286d656612091f61a54c85a469157745fd2030e607e679330a422c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Reward already claimed your amou\")\n\n        mstore(add(memPtr, 32), \"nt\")\n\n    }\n\n    function abi_encode_t_stringliteral_c2aed4c0e3286d656612091f61a54c85a469157745fd2030e607e679330a422c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_c2aed4c0e3286d656612091f61a54c85a469157745fd2030e607e679330a422c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c2aed4c0e3286d656612091f61a54c85a469157745fd2030e607e679330a422c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c2aed4c0e3286d656612091f61a54c85a469157745fd2030e607e679330a422c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_46b08f77c9f834b9f1b5b936b65297ec5c2879e36c6a697ee9bcda135220d353(memPtr) {\n\n        mstore(add(memPtr, 0), \"You can only claim after the sta\")\n\n        mstore(add(memPtr, 32), \"king duration has passed\")\n\n    }\n\n    function abi_encode_t_stringliteral_46b08f77c9f834b9f1b5b936b65297ec5c2879e36c6a697ee9bcda135220d353_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 56)\n        store_literal_in_memory_46b08f77c9f834b9f1b5b936b65297ec5c2879e36c6a697ee9bcda135220d353(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_46b08f77c9f834b9f1b5b936b65297ec5c2879e36c6a697ee9bcda135220d353__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_46b08f77c9f834b9f1b5b936b65297ec5c2879e36c6a697ee9bcda135220d353_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be greater than zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_358f595c43c5417f683a6d546f36187d1f93d884747b170b9ff8f7ae4de4b92e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Enter Duration in formate check \")\n\n        mstore(add(memPtr, 32), \"duration\")\n\n    }\n\n    function abi_encode_t_stringliteral_358f595c43c5417f683a6d546f36187d1f93d884747b170b9ff8f7ae4de4b92e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_358f595c43c5417f683a6d546f36187d1f93d884747b170b9ff8f7ae4de4b92e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_358f595c43c5417f683a6d546f36187d1f93d884747b170b9ff8f7ae4de4b92e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_358f595c43c5417f683a6d546f36187d1f93d884747b170b9ff8f7ae4de4b92e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_07c0ca133cb093f9404f4c4664ce8fdedbf5c43b51f59b0f309033c8869551f9(memPtr) {\n\n        mstore(add(memPtr, 0), \"You can only claim your own rewa\")\n\n        mstore(add(memPtr, 32), \"rds\")\n\n    }\n\n    function abi_encode_t_stringliteral_07c0ca133cb093f9404f4c4664ce8fdedbf5c43b51f59b0f309033c8869551f9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_07c0ca133cb093f9404f4c4664ce8fdedbf5c43b51f59b0f309033c8869551f9(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_07c0ca133cb093f9404f4c4664ce8fdedbf5c43b51f59b0f309033c8869551f9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_07c0ca133cb093f9404f4c4664ce8fdedbf5c43b51f59b0f309033c8869551f9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_59cbfee2a24523c1fd613f6298f3ecd1131edd49036e244040e570087e53f19c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Reward already claimed\")\n\n    }\n\n    function abi_encode_t_stringliteral_59cbfee2a24523c1fd613f6298f3ecd1131edd49036e244040e570087e53f19c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_59cbfee2a24523c1fd613f6298f3ecd1131edd49036e244040e570087e53f19c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_59cbfee2a24523c1fd613f6298f3ecd1131edd49036e244040e570087e53f19c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_59cbfee2a24523c1fd613f6298f3ecd1131edd49036e244040e570087e53f19c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1045": [
									{
										"length": 32,
										"start": 768
									},
									{
										"length": 32,
										"start": 1432
									},
									{
										"length": 32,
										"start": 2219
									},
									{
										"length": 32,
										"start": 3290
									},
									{
										"length": 32,
										"start": 4262
									}
								],
								"1047": [
									{
										"length": 32,
										"start": 2928
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100b2575f3560e01c806392ceb12d1161006f57806392ceb12d1461019e578063b0c479a5146101ba578063b5d5b5fa146101f0578063c975741714610226578063d2d7231f14610256578063fc0c546a14610289576100b2565b80630b46ba99146100b65780632fa78085146100d457806341324ec51461010457806347c4d742146101205780635ee0d9b4146101505780638da5cb5b14610180575b5f80fd5b6100be6102a7565b6040516100cb91906111f8565b60405180910390f35b6100ee60048036038101906100e99190611276565b6102fd565b6040516100fb91906112b0565b60405180910390f35b61011e600480360381019061011991906112f3565b61039d565b005b61013a6004803603810190610135919061131e565b61067c565b6040516101479190611411565b60405180910390f35b61016a60048036038101906101659190611276565b610a23565b604051610177919061155e565b60405180910390f35b610188610b6e565b604051610195919061158d565b60405180910390f35b6101b860048036038101906101b391906112f3565b610b92565b005b6101d460048036038101906101cf91906112f3565b610dbd565b6040516101e797969594939291906115b5565b60405180910390f35b61020a60048036038101906102059190611622565b610e34565b60405161021d97969594939291906115b5565b60405180910390f35b610240600480360381019061023b91906112f3565b610ec5565b60405161024d9190611411565b60405180910390f35b610270600480360381019061026b91906112f3565b610fa2565b6040516102809493929190611660565b60405180910390f35b6102916110a4565b60405161029e91906116fe565b60405180910390f35b606060018054806020026020016040519081016040528092919081815260200182805480156102f357602002820191905f5260205f20905b8154815260200190600101908083116102df575b5050505050905090565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b8152600401610357919061158d565b602060405180830381865afa158015610372573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610396919061172b565b9050919050565b60035f8281526020019081526020015f206004015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461043e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610435906117d6565b60405180910390fd5b60035f8281526020019081526020015f2060040160159054906101000a900460ff16156104a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049790611864565b60405180910390fd5b603c60035f8381526020019081526020015f20600201546104c191906118af565b60035f8381526020019081526020015f20600301546104e091906118f0565b421015610522576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051990611993565b60405180910390fd5b600160035f8381526020019081526020015f2060040160156101000a81548160ff0219169083151502179055505f805f8061055c85610fa2565b93509350935093505f60035f8781526020019081526020015f206001015490505f60035f8881526020019081526020015f20600101819055505f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb87846040518363ffffffff1660e01b81526004016105f19291906119b1565b6020604051808303815f875af115801561060d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106319190611a02565b905080610673576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066a90611a77565b60405180910390fd5b50505050505050565b6106846110e8565b5f83116106c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106bd90611adf565b60405180910390fd5b60028214806106d55750600482145b806106e05750600682145b806106eb5750600882145b806106f65750600a82145b610735576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072c90611b6d565b60405180910390fd5b61073e5f6110c8565b505f6040518060e001604052806107545f6110c8565b81526020018581526020018481526020014281526020013373ffffffffffffffffffffffffffffffffffffffff1681526020015f151581526020015f1515815250905060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081908060018154018082558091505060019003905f5260205f2090600502015f909190919091505f820151815f01556020820151816001015560408201518160020155606082015181600301556080820151816004015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a08201518160040160146101000a81548160ff02191690831515021790555060c08201518160040160156101000a81548160ff02191690831515021790555050507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b815260040161090693929190611b8b565b6020604051808303815f875af1158015610922573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109469190611a02565b508060035f6109545f6110c8565b81526020019081526020015f205f820151815f01556020820151816001015560408201518160020155606082015181600301556080820151816004015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a08201518160040160146101000a81548160ff02191690831515021790555060c08201518160040160156101000a81548160ff021916908315150217905550905050610a195f6110d4565b8091505092915050565b606060025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805480602002602001604051908101604052809291908181526020015f905b82821015610b63578382905f5260205f2090600502016040518060e00160405290815f8201548152602001600182015481526020016002820154815260200160038201548152602001600482015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160149054906101000a900460ff161515151581526020016004820160159054906101000a900460ff16151515158152505081526020019060010190610a81565b505050509050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60035f8281526020019081526020015f206004015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c33576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2a90611c30565b60405180910390fd5b60035f8281526020019081526020015f2060040160149054906101000a900460ff1615610c95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8c90611c98565b60405180910390fd5b600160035f8381526020019081526020015f2060040160146101000a81548160ff0219169083151502179055505f805f80610ccf85610fa2565b93509350935093505f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb86856040518363ffffffff1660e01b8152600401610d339291906119b1565b6020604051808303815f875af1158015610d4f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d739190611a02565b905080610db5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dac90611a77565b60405180910390fd5b505050505050565b6003602052805f5260405f205f91509050805f015490806001015490806002015490806003015490806004015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040160149054906101000a900460ff16908060040160159054906101000a900460ff16905087565b6002602052815f5260405f208181548110610e4d575f80fd5b905f5260205f2090600502015f9150915050805f015490806001015490806002015490806003015490806004015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040160149054906101000a900460ff16908060040160159054906101000a900460ff16905087565b610ecd6110e8565b60035f8381526020019081526020015f206040518060e00160405290815f8201548152602001600182015481526020016002820154815260200160038201548152602001600482015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160149054906101000a900460ff161515151581526020016004820160159054906101000a900460ff1615151515815250509050919050565b5f805f805f4290505f60035f8881526020019081526020015f206003015482610fcb9190611cb6565b9050603c60035f8981526020019081526020015f2060020154610fee91906118af565b81111561101957603c60035f8981526020019081526020015f206002015461101691906118af565b90505b5f60018261102791906118af565b905060035f8981526020019081526020015f206004015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660035f8a81526020019081526020015f205f01548260035f8c81526020019081526020015f20600101548461109291906118f0565b96509650965096505050509193509193565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f815f01549050919050565b6001815f015f828254019250508190555050565b6040518060e001604052805f81526020015f81526020015f81526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f151581526020015f151581525090565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f819050919050565b61117381611161565b82525050565b5f611184838361116a565b60208301905092915050565b5f602082019050919050565b5f6111a682611138565b6111b08185611142565b93506111bb83611152565b805f5b838110156111eb5781516111d28882611179565b97506111dd83611190565b9250506001810190506111be565b5085935050505092915050565b5f6020820190508181035f830152611210818461119c565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6112458261121c565b9050919050565b6112558161123b565b811461125f575f80fd5b50565b5f813590506112708161124c565b92915050565b5f6020828403121561128b5761128a611218565b5b5f61129884828501611262565b91505092915050565b6112aa81611161565b82525050565b5f6020820190506112c35f8301846112a1565b92915050565b6112d281611161565b81146112dc575f80fd5b50565b5f813590506112ed816112c9565b92915050565b5f6020828403121561130857611307611218565b5b5f611315848285016112df565b91505092915050565b5f806040838503121561133457611333611218565b5b5f611341858286016112df565b9250506020611352858286016112df565b9150509250929050565b6113658161123b565b82525050565b5f8115159050919050565b61137f8161136b565b82525050565b60e082015f8201516113995f85018261116a565b5060208201516113ac602085018261116a565b5060408201516113bf604085018261116a565b5060608201516113d2606085018261116a565b5060808201516113e5608085018261135c565b5060a08201516113f860a0850182611376565b5060c082015161140b60c0850182611376565b50505050565b5f60e0820190506114245f830184611385565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b60e082015f8201516114675f85018261116a565b50602082015161147a602085018261116a565b50604082015161148d604085018261116a565b5060608201516114a0606085018261116a565b5060808201516114b3608085018261135c565b5060a08201516114c660a0850182611376565b5060c08201516114d960c0850182611376565b50505050565b5f6114ea8383611453565b60e08301905092915050565b5f602082019050919050565b5f61150c8261142a565b6115168185611434565b935061152183611444565b805f5b8381101561155157815161153888826114df565b9750611543836114f6565b925050600181019050611524565b5085935050505092915050565b5f6020820190508181035f8301526115768184611502565b905092915050565b6115878161123b565b82525050565b5f6020820190506115a05f83018461157e565b92915050565b6115af8161136b565b82525050565b5f60e0820190506115c85f83018a6112a1565b6115d560208301896112a1565b6115e260408301886112a1565b6115ef60608301876112a1565b6115fc608083018661157e565b61160960a08301856115a6565b61161660c08301846115a6565b98975050505050505050565b5f806040838503121561163857611637611218565b5b5f61164585828601611262565b9250506020611656858286016112df565b9150509250929050565b5f6080820190506116735f83018761157e565b61168060208301866112a1565b61168d60408301856112a1565b61169a60608301846112a1565b95945050505050565b5f819050919050565b5f6116c66116c16116bc8461121c565b6116a3565b61121c565b9050919050565b5f6116d7826116ac565b9050919050565b5f6116e8826116cd565b9050919050565b6116f8816116de565b82525050565b5f6020820190506117115f8301846116ef565b92915050565b5f81519050611725816112c9565b92915050565b5f602082840312156117405761173f611218565b5b5f61174d84828501611717565b91505092915050565b5f82825260208201905092915050565b7f596f752063616e206f6e6c7920636c61696d20796f7572206f776e207374616b5f8201527f656420616d6f756e740000000000000000000000000000000000000000000000602082015250565b5f6117c0602983611756565b91506117cb82611766565b604082019050919050565b5f6020820190508181035f8301526117ed816117b4565b9050919050565b7f52657761726420616c726561647920636c61696d656420796f757220616d6f755f8201527f6e74000000000000000000000000000000000000000000000000000000000000602082015250565b5f61184e602283611756565b9150611859826117f4565b604082019050919050565b5f6020820190508181035f83015261187b81611842565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6118b982611161565b91506118c483611161565b92508282026118d281611161565b915082820484148315176118e9576118e8611882565b5b5092915050565b5f6118fa82611161565b915061190583611161565b925082820190508082111561191d5761191c611882565b5b92915050565b7f596f752063616e206f6e6c7920636c61696d20616674657220746865207374615f8201527f6b696e67206475726174696f6e20686173207061737365640000000000000000602082015250565b5f61197d603883611756565b915061198882611923565b604082019050919050565b5f6020820190508181035f8301526119aa81611971565b9050919050565b5f6040820190506119c45f83018561157e565b6119d160208301846112a1565b9392505050565b6119e18161136b565b81146119eb575f80fd5b50565b5f815190506119fc816119d8565b92915050565b5f60208284031215611a1757611a16611218565b5b5f611a24848285016119ee565b91505092915050565b7f546f6b656e207472616e73666572206661696c656400000000000000000000005f82015250565b5f611a61601583611756565b9150611a6c82611a2d565b602082019050919050565b5f6020820190508181035f830152611a8e81611a55565b9050919050565b7f416d6f756e74206d7573742062652067726561746572207468616e207a65726f5f82015250565b5f611ac9602083611756565b9150611ad482611a95565b602082019050919050565b5f6020820190508181035f830152611af681611abd565b9050919050565b7f456e746572204475726174696f6e20696e20666f726d61746520636865636b205f8201527f6475726174696f6e000000000000000000000000000000000000000000000000602082015250565b5f611b57602883611756565b9150611b6282611afd565b604082019050919050565b5f6020820190508181035f830152611b8481611b4b565b9050919050565b5f606082019050611b9e5f83018661157e565b611bab602083018561157e565b611bb860408301846112a1565b949350505050565b7f596f752063616e206f6e6c7920636c61696d20796f7572206f776e20726577615f8201527f7264730000000000000000000000000000000000000000000000000000000000602082015250565b5f611c1a602383611756565b9150611c2582611bc0565b604082019050919050565b5f6020820190508181035f830152611c4781611c0e565b9050919050565b7f52657761726420616c726561647920636c61696d6564000000000000000000005f82015250565b5f611c82601683611756565b9150611c8d82611c4e565b602082019050919050565b5f6020820190508181035f830152611caf81611c76565b9050919050565b5f611cc082611161565b9150611ccb83611161565b9250828203905081811115611ce357611ce2611882565b5b9291505056fea26469706673582212203e3a773a39fe0d77236fb576fabfc304716ad5bd708d462b92b2ea64d825430864736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x92CEB12D GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x92CEB12D EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0xB0C479A5 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0xB5D5B5FA EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0xC9757417 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0xD2D7231F EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x289 JUMPI PUSH2 0xB2 JUMP JUMPDEST DUP1 PUSH4 0xB46BA99 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x2FA78085 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x41324EC5 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x47C4D742 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x5EE0D9B4 EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x180 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBE PUSH2 0x2A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x11F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x1276 JUMP JUMPDEST PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x12B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x12F3 JUMP JUMPDEST PUSH2 0x39D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x131E JUMP JUMPDEST PUSH2 0x67C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x147 SWAP2 SWAP1 PUSH2 0x1411 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x165 SWAP2 SWAP1 PUSH2 0x1276 JUMP JUMPDEST PUSH2 0xA23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x177 SWAP2 SWAP1 PUSH2 0x155E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH2 0xB6E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x158D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x12F3 JUMP JUMPDEST PUSH2 0xB92 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CF SWAP2 SWAP1 PUSH2 0x12F3 JUMP JUMPDEST PUSH2 0xDBD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E7 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x205 SWAP2 SWAP1 PUSH2 0x1622 JUMP JUMPDEST PUSH2 0xE34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x240 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23B SWAP2 SWAP1 PUSH2 0x12F3 JUMP JUMPDEST PUSH2 0xEC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x1411 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x270 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x12F3 JUMP JUMPDEST PUSH2 0xFA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x280 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1660 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x291 PUSH2 0x10A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x16FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x2F3 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x2DF JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x357 SWAP2 SWAP1 PUSH2 0x158D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x372 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x396 SWAP2 SWAP1 PUSH2 0x172B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x43E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x435 SWAP1 PUSH2 0x17D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x4A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x497 SWAP1 PUSH2 0x1864 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3C PUSH1 0x3 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x4C1 SWAP2 SWAP1 PUSH2 0x18AF JUMP JUMPDEST PUSH1 0x3 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x4E0 SWAP2 SWAP1 PUSH2 0x18F0 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x522 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x519 SWAP1 PUSH2 0x1993 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x15 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 DUP1 PUSH0 DUP1 PUSH2 0x55C DUP6 PUSH2 0xFA2 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH0 PUSH1 0x3 PUSH0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH0 PUSH1 0x3 PUSH0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP8 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F1 SWAP3 SWAP2 SWAP1 PUSH2 0x19B1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x60D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x631 SWAP2 SWAP1 PUSH2 0x1A02 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x673 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x66A SWAP1 PUSH2 0x1A77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x684 PUSH2 0x10E8 JUMP JUMPDEST PUSH0 DUP4 GT PUSH2 0x6C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6BD SWAP1 PUSH2 0x1ADF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 EQ DUP1 PUSH2 0x6D5 JUMPI POP PUSH1 0x4 DUP3 EQ JUMPDEST DUP1 PUSH2 0x6E0 JUMPI POP PUSH1 0x6 DUP3 EQ JUMPDEST DUP1 PUSH2 0x6EB JUMPI POP PUSH1 0x8 DUP3 EQ JUMPDEST DUP1 PUSH2 0x6F6 JUMPI POP PUSH1 0xA DUP3 EQ JUMPDEST PUSH2 0x735 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72C SWAP1 PUSH2 0x1B6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x73E PUSH0 PUSH2 0x10C8 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x754 PUSH0 PUSH2 0x10C8 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 POP PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x15 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x906 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B8B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x922 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x946 SWAP2 SWAP1 PUSH2 0x1A02 JUMP JUMPDEST POP DUP1 PUSH1 0x3 PUSH0 PUSH2 0x954 PUSH0 PUSH2 0x10C8 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x15 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH2 0xA19 PUSH0 PUSH2 0x10D4 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xB63 JUMPI DUP4 DUP3 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xA81 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC33 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC2A SWAP1 PUSH2 0x1C30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xC95 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC8C SWAP1 PUSH2 0x1C98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 DUP1 PUSH0 DUP1 PUSH2 0xCCF DUP6 PUSH2 0xFA2 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP7 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD33 SWAP3 SWAP2 SWAP1 PUSH2 0x19B1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD4F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD73 SWAP2 SWAP1 PUSH2 0x1A02 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xDB5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDAC SWAP1 PUSH2 0x1A77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP8 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xE4D JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH0 SWAP2 POP SWAP2 POP POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP8 JUMP JUMPDEST PUSH2 0xECD PUSH2 0x10E8 JUMP JUMPDEST PUSH1 0x3 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 TIMESTAMP SWAP1 POP PUSH0 PUSH1 0x3 PUSH0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD SLOAD DUP3 PUSH2 0xFCB SWAP2 SWAP1 PUSH2 0x1CB6 JUMP JUMPDEST SWAP1 POP PUSH1 0x3C PUSH1 0x3 PUSH0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0xFEE SWAP2 SWAP1 PUSH2 0x18AF JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x1019 JUMPI PUSH1 0x3C PUSH1 0x3 PUSH0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x1016 SWAP2 SWAP1 PUSH2 0x18AF JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH0 PUSH1 0x1 DUP3 PUSH2 0x1027 SWAP2 SWAP1 PUSH2 0x18AF JUMP JUMPDEST SWAP1 POP PUSH1 0x3 PUSH0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD DUP3 PUSH1 0x3 PUSH0 DUP13 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP5 PUSH2 0x1092 SWAP2 SWAP1 PUSH2 0x18F0 JUMP JUMPDEST SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP POP POP POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1173 DUP2 PUSH2 0x1161 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1184 DUP4 DUP4 PUSH2 0x116A JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x11A6 DUP3 PUSH2 0x1138 JUMP JUMPDEST PUSH2 0x11B0 DUP2 DUP6 PUSH2 0x1142 JUMP JUMPDEST SWAP4 POP PUSH2 0x11BB DUP4 PUSH2 0x1152 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11EB JUMPI DUP2 MLOAD PUSH2 0x11D2 DUP9 DUP3 PUSH2 0x1179 JUMP JUMPDEST SWAP8 POP PUSH2 0x11DD DUP4 PUSH2 0x1190 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x11BE JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1210 DUP2 DUP5 PUSH2 0x119C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1245 DUP3 PUSH2 0x121C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1255 DUP2 PUSH2 0x123B JUMP JUMPDEST DUP2 EQ PUSH2 0x125F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1270 DUP2 PUSH2 0x124C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x128B JUMPI PUSH2 0x128A PUSH2 0x1218 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1298 DUP5 DUP3 DUP6 ADD PUSH2 0x1262 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12AA DUP2 PUSH2 0x1161 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12C3 PUSH0 DUP4 ADD DUP5 PUSH2 0x12A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12D2 DUP2 PUSH2 0x1161 JUMP JUMPDEST DUP2 EQ PUSH2 0x12DC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12ED DUP2 PUSH2 0x12C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1308 JUMPI PUSH2 0x1307 PUSH2 0x1218 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1315 DUP5 DUP3 DUP6 ADD PUSH2 0x12DF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1334 JUMPI PUSH2 0x1333 PUSH2 0x1218 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1341 DUP6 DUP3 DUP7 ADD PUSH2 0x12DF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1352 DUP6 DUP3 DUP7 ADD PUSH2 0x12DF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1365 DUP2 PUSH2 0x123B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x137F DUP2 PUSH2 0x136B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x1399 PUSH0 DUP6 ADD DUP3 PUSH2 0x116A JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x13AC PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x116A JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x13BF PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x116A JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x13D2 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x116A JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x13E5 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x135C JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x13F8 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x1376 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x140B PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x1376 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x1424 PUSH0 DUP4 ADD DUP5 PUSH2 0x1385 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x1467 PUSH0 DUP6 ADD DUP3 PUSH2 0x116A JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x147A PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x116A JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x148D PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x116A JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x14A0 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x116A JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x14B3 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x135C JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x14C6 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x1376 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x14D9 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x1376 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14EA DUP4 DUP4 PUSH2 0x1453 JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x150C DUP3 PUSH2 0x142A JUMP JUMPDEST PUSH2 0x1516 DUP2 DUP6 PUSH2 0x1434 JUMP JUMPDEST SWAP4 POP PUSH2 0x1521 DUP4 PUSH2 0x1444 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1551 JUMPI DUP2 MLOAD PUSH2 0x1538 DUP9 DUP3 PUSH2 0x14DF JUMP JUMPDEST SWAP8 POP PUSH2 0x1543 DUP4 PUSH2 0x14F6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1524 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1576 DUP2 DUP5 PUSH2 0x1502 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1587 DUP2 PUSH2 0x123B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15A0 PUSH0 DUP4 ADD DUP5 PUSH2 0x157E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15AF DUP2 PUSH2 0x136B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x15C8 PUSH0 DUP4 ADD DUP11 PUSH2 0x12A1 JUMP JUMPDEST PUSH2 0x15D5 PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x12A1 JUMP JUMPDEST PUSH2 0x15E2 PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x12A1 JUMP JUMPDEST PUSH2 0x15EF PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x12A1 JUMP JUMPDEST PUSH2 0x15FC PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x157E JUMP JUMPDEST PUSH2 0x1609 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x15A6 JUMP JUMPDEST PUSH2 0x1616 PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x15A6 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1638 JUMPI PUSH2 0x1637 PUSH2 0x1218 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1645 DUP6 DUP3 DUP7 ADD PUSH2 0x1262 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1656 DUP6 DUP3 DUP7 ADD PUSH2 0x12DF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1673 PUSH0 DUP4 ADD DUP8 PUSH2 0x157E JUMP JUMPDEST PUSH2 0x1680 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x12A1 JUMP JUMPDEST PUSH2 0x168D PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x12A1 JUMP JUMPDEST PUSH2 0x169A PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x12A1 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16C6 PUSH2 0x16C1 PUSH2 0x16BC DUP5 PUSH2 0x121C JUMP JUMPDEST PUSH2 0x16A3 JUMP JUMPDEST PUSH2 0x121C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16D7 DUP3 PUSH2 0x16AC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16E8 DUP3 PUSH2 0x16CD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16F8 DUP2 PUSH2 0x16DE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1711 PUSH0 DUP4 ADD DUP5 PUSH2 0x16EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1725 DUP2 PUSH2 0x12C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1740 JUMPI PUSH2 0x173F PUSH2 0x1218 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x174D DUP5 DUP3 DUP6 ADD PUSH2 0x1717 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F752063616E206F6E6C7920636C61696D20796F7572206F776E207374616B PUSH0 DUP3 ADD MSTORE PUSH32 0x656420616D6F756E740000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x17C0 PUSH1 0x29 DUP4 PUSH2 0x1756 JUMP JUMPDEST SWAP2 POP PUSH2 0x17CB DUP3 PUSH2 0x1766 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17ED DUP2 PUSH2 0x17B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x52657761726420616C726561647920636C61696D656420796F757220616D6F75 PUSH0 DUP3 ADD MSTORE PUSH32 0x6E74000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x184E PUSH1 0x22 DUP4 PUSH2 0x1756 JUMP JUMPDEST SWAP2 POP PUSH2 0x1859 DUP3 PUSH2 0x17F4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x187B DUP2 PUSH2 0x1842 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x18B9 DUP3 PUSH2 0x1161 JUMP JUMPDEST SWAP2 POP PUSH2 0x18C4 DUP4 PUSH2 0x1161 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x18D2 DUP2 PUSH2 0x1161 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x18E9 JUMPI PUSH2 0x18E8 PUSH2 0x1882 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x18FA DUP3 PUSH2 0x1161 JUMP JUMPDEST SWAP2 POP PUSH2 0x1905 DUP4 PUSH2 0x1161 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x191D JUMPI PUSH2 0x191C PUSH2 0x1882 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F752063616E206F6E6C7920636C61696D2061667465722074686520737461 PUSH0 DUP3 ADD MSTORE PUSH32 0x6B696E67206475726174696F6E20686173207061737365640000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x197D PUSH1 0x38 DUP4 PUSH2 0x1756 JUMP JUMPDEST SWAP2 POP PUSH2 0x1988 DUP3 PUSH2 0x1923 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19AA DUP2 PUSH2 0x1971 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x19C4 PUSH0 DUP4 ADD DUP6 PUSH2 0x157E JUMP JUMPDEST PUSH2 0x19D1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x12A1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x19E1 DUP2 PUSH2 0x136B JUMP JUMPDEST DUP2 EQ PUSH2 0x19EB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x19FC DUP2 PUSH2 0x19D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A17 JUMPI PUSH2 0x1A16 PUSH2 0x1218 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A24 DUP5 DUP3 DUP6 ADD PUSH2 0x19EE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E207472616E73666572206661696C65640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A61 PUSH1 0x15 DUP4 PUSH2 0x1756 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A6C DUP3 PUSH2 0x1A2D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A8E DUP2 PUSH2 0x1A55 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AC9 PUSH1 0x20 DUP4 PUSH2 0x1756 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AD4 DUP3 PUSH2 0x1A95 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AF6 DUP2 PUSH2 0x1ABD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x456E746572204475726174696F6E20696E20666F726D61746520636865636B20 PUSH0 DUP3 ADD MSTORE PUSH32 0x6475726174696F6E000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B57 PUSH1 0x28 DUP4 PUSH2 0x1756 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B62 DUP3 PUSH2 0x1AFD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B84 DUP2 PUSH2 0x1B4B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1B9E PUSH0 DUP4 ADD DUP7 PUSH2 0x157E JUMP JUMPDEST PUSH2 0x1BAB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x157E JUMP JUMPDEST PUSH2 0x1BB8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x12A1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x596F752063616E206F6E6C7920636C61696D20796F7572206F776E2072657761 PUSH0 DUP3 ADD MSTORE PUSH32 0x7264730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C1A PUSH1 0x23 DUP4 PUSH2 0x1756 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C25 DUP3 PUSH2 0x1BC0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C47 DUP2 PUSH2 0x1C0E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x52657761726420616C726561647920636C61696D656400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C82 PUSH1 0x16 DUP4 PUSH2 0x1756 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C8D DUP3 PUSH2 0x1C4E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CAF DUP2 PUSH2 0x1C76 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CC0 DUP3 PUSH2 0x1161 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CCB DUP4 PUSH2 0x1161 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1CE3 JUMPI PUSH2 0x1CE2 PUSH2 0x1882 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY GASPRICE PUSH24 0x3A39FE0D77236FB576FABFC304716AD5BD708D462B92B2EA PUSH5 0xD825430864 PUSH20 0x6F6C634300081500330000000000000000000000 ",
							"sourceMap": "340:3985:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1847:95;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1007:107;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3379:939;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1122:712;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2056:107;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;501:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2798:573;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;958:33;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;905:45;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;1950:100;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2170:618;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;464:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1847:95;1894:16;1930:4;1923:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1847:95;:::o;1007:107::-;1058:7;1085:5;:15;;;1101:4;1085:21;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1078:28;;1007:107;;;:::o;3379:939::-;3462:3;:11;3466:6;3462:11;;;;;;;;;;;:19;;;;;;;;;;;;3448:33;;:10;:33;;;3440:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;3547:3;:11;3551:6;3547:11;;;;;;;;;;;:21;;;;;;;;;;;;3546:22;3538:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;3692:9;3669:3;:11;3673:6;3669:11;;;;;;;;;;;:20;;;:32;;;;:::i;:::-;3645:3;:11;3649:6;3645:11;;;;;;;;;;;:21;;;:56;;;;:::i;:::-;3626:15;:75;;3618:144;;;;;;;;;;;;:::i;:::-;;;;;;;;;3837:4;3813:3;:11;3817:6;3813:11;;;;;;;;;;;:21;;;:28;;;;;;;;;;;;;;;;;;3855:19;3876:15;3893:14;3909;3927:23;3943:6;3927:15;:23::i;:::-;3854:96;;;;;;;;3965:20;3988:3;:11;3992:6;3988:11;;;;;;;;;;;:18;;;3965:41;;4081:1;4060:3;:11;4064:6;4060:11;;;;;;;;;;;:18;;:22;;;;4199:12;4214:5;:14;;;4229:11;4242:12;4214:41;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4199:56;;4275:7;4267:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;3429:889;;;;;;3379:939;:::o;1122:712::-;1185:12;;:::i;:::-;1237:1;1228:6;:10;1220:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;1309:1;1297:8;:13;:30;;;;1326:1;1314:8;:13;1297:30;:47;;;;1343:1;1331:8;:13;1297:47;:64;;;;1360:1;1348:8;:13;1297:64;:82;;;;1377:2;1365:8;:14;1297:82;1288:150;;;;;;;;;;;;:::i;:::-;;;;;;;;;1451:24;:14;:22;:24::i;:::-;;1486:21;1510:90;;;;;;;;1516:24;:14;:22;:24::i;:::-;1510:90;;;;1542:6;1510:90;;;;1550:8;1510:90;;;;1560:15;1510:90;;;;1577:10;1510:90;;;;;;1588:5;1510:90;;;;;;1594:5;1510:90;;;;;1486:114;;1611:10;:22;1622:10;1611:22;;;;;;;;;;;;;;;1639:8;1611:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1659:5;:18;;;1678:10;1698:4;1705:6;1659:53;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1753:8;1723:3;:29;1727:24;:14;:22;:24::i;:::-;1723:29;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1772:26;:14;:24;:26::i;:::-;1816:8;1809:15;;;1122:712;;;;:::o;2056:107::-;2110:14;2140:10;:15;2151:3;2140:15;;;;;;;;;;;;;;;2133:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2056:107;;;:::o;501:30::-;;;:::o;2798:573::-;2875:3;:11;2879:6;2875:11;;;;;;;;;;;:19;;;;;;;;;;;;2861:33;;:10;:33;;;2853:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;2954:3;:11;2958:6;2954:11;;;;;;;;;;;:21;;;;;;;;;;;;2953:22;2945:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3077:4;3053:3;:11;3057:6;3053:11;;;;;;;;;;;:21;;;:28;;;;;;;;;;;;;;;;;;3095:19;3116:15;3133:14;3149:19;3172:23;3188:6;3172:15;:23::i;:::-;3094:101;;;;;;;;3258:12;3272:5;:14;;;3287:11;3300:6;3272:35;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3258:49;;3326:7;3318:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;2842:529;;;;;2798:573;:::o;958:33::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;905:45::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1950:100::-;1994:12;;:::i;:::-;2023:3;:7;2027:2;2023:7;;;;;;;;;;;2016:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1950:100;;;:::o;2170:618::-;2232:7;2240;2249;2258;2292:15;2310;2292:33;;2338:16;2368:3;:11;2372:6;2368:11;;;;;;;;;;;:21;;;2357:7;:32;;;;:::i;:::-;2338:51;;2439:2;2416:3;:11;2420:6;2416:11;;;;;;;;;;;:20;;;:25;;;;:::i;:::-;2404:8;:37;2400:106;;;2492:2;2469:3;:11;2473:6;2469:11;;;;;;;;;;;:20;;;:25;;;;:::i;:::-;2458:36;;2400:106;2648:14;2676:1;2665:8;:12;;;;:::i;:::-;2648:29;;2698:3;:11;2702:6;2698:11;;;;;;;;;;;:19;;;;;;;;;;;;2719:3;:11;2723:6;2719:11;;;;;;;;;;;:20;;;2741:6;2760:3;:11;2764:6;2760:11;;;;;;;;;;;:18;;;2750:6;:28;;;;:::i;:::-;2690:90;;;;;;;;;;;2170:618;;;;;:::o;464:30::-;;;:::o;827:112:6:-;892:7;918;:14;;;911:21;;827:112;;;:::o;945:123::-;1050:1;1032:7;:14;;;:19;;;;;;;;;;;945:123;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:114:9:-;74:6;108:5;102:12;92:22;;7:114;;;:::o;127:184::-;226:11;260:6;255:3;248:19;300:4;295:3;291:14;276:29;;127:184;;;;:::o;317:132::-;384:4;407:3;399:11;;437:4;432:3;428:14;420:22;;317:132;;;:::o;455:77::-;492:7;521:5;510:16;;455:77;;;:::o;538:108::-;615:24;633:5;615:24;:::i;:::-;610:3;603:37;538:108;;:::o;652:179::-;721:10;742:46;784:3;776:6;742:46;:::i;:::-;820:4;815:3;811:14;797:28;;652:179;;;;:::o;837:113::-;907:4;939;934:3;930:14;922:22;;837:113;;;:::o;986:732::-;1105:3;1134:54;1182:5;1134:54;:::i;:::-;1204:86;1283:6;1278:3;1204:86;:::i;:::-;1197:93;;1314:56;1364:5;1314:56;:::i;:::-;1393:7;1424:1;1409:284;1434:6;1431:1;1428:13;1409:284;;;1510:6;1504:13;1537:63;1596:3;1581:13;1537:63;:::i;:::-;1530:70;;1623:60;1676:6;1623:60;:::i;:::-;1613:70;;1469:224;1456:1;1453;1449:9;1444:14;;1409:284;;;1413:14;1709:3;1702:10;;1110:608;;;986:732;;;;:::o;1724:373::-;1867:4;1905:2;1894:9;1890:18;1882:26;;1954:9;1948:4;1944:20;1940:1;1929:9;1925:17;1918:47;1982:108;2085:4;2076:6;1982:108;:::i;:::-;1974:116;;1724:373;;;;:::o;2184:117::-;2293:1;2290;2283:12;2430:126;2467:7;2507:42;2500:5;2496:54;2485:65;;2430:126;;;:::o;2562:96::-;2599:7;2628:24;2646:5;2628:24;:::i;:::-;2617:35;;2562:96;;;:::o;2664:122::-;2737:24;2755:5;2737:24;:::i;:::-;2730:5;2727:35;2717:63;;2776:1;2773;2766:12;2717:63;2664:122;:::o;2792:139::-;2838:5;2876:6;2863:20;2854:29;;2892:33;2919:5;2892:33;:::i;:::-;2792:139;;;;:::o;2937:329::-;2996:6;3045:2;3033:9;3024:7;3020:23;3016:32;3013:119;;;3051:79;;:::i;:::-;3013:119;3171:1;3196:53;3241:7;3232:6;3221:9;3217:22;3196:53;:::i;:::-;3186:63;;3142:117;2937:329;;;;:::o;3272:118::-;3359:24;3377:5;3359:24;:::i;:::-;3354:3;3347:37;3272:118;;:::o;3396:222::-;3489:4;3527:2;3516:9;3512:18;3504:26;;3540:71;3608:1;3597:9;3593:17;3584:6;3540:71;:::i;:::-;3396:222;;;;:::o;3624:122::-;3697:24;3715:5;3697:24;:::i;:::-;3690:5;3687:35;3677:63;;3736:1;3733;3726:12;3677:63;3624:122;:::o;3752:139::-;3798:5;3836:6;3823:20;3814:29;;3852:33;3879:5;3852:33;:::i;:::-;3752:139;;;;:::o;3897:329::-;3956:6;4005:2;3993:9;3984:7;3980:23;3976:32;3973:119;;;4011:79;;:::i;:::-;3973:119;4131:1;4156:53;4201:7;4192:6;4181:9;4177:22;4156:53;:::i;:::-;4146:63;;4102:117;3897:329;;;;:::o;4232:474::-;4300:6;4308;4357:2;4345:9;4336:7;4332:23;4328:32;4325:119;;;4363:79;;:::i;:::-;4325:119;4483:1;4508:53;4553:7;4544:6;4533:9;4529:22;4508:53;:::i;:::-;4498:63;;4454:117;4610:2;4636:53;4681:7;4672:6;4661:9;4657:22;4636:53;:::i;:::-;4626:63;;4581:118;4232:474;;;;;:::o;4712:108::-;4789:24;4807:5;4789:24;:::i;:::-;4784:3;4777:37;4712:108;;:::o;4826:90::-;4860:7;4903:5;4896:13;4889:21;4878:32;;4826:90;;;:::o;4922:99::-;4993:21;5008:5;4993:21;:::i;:::-;4988:3;4981:34;4922:99;;:::o;5099:1389::-;5242:4;5237:3;5233:14;5333:4;5326:5;5322:16;5316:23;5352:63;5409:4;5404:3;5400:14;5386:12;5352:63;:::i;:::-;5257:168;5509:4;5502:5;5498:16;5492:23;5528:63;5585:4;5580:3;5576:14;5562:12;5528:63;:::i;:::-;5435:166;5687:4;5680:5;5676:16;5670:23;5706:63;5763:4;5758:3;5754:14;5740:12;5706:63;:::i;:::-;5611:168;5866:4;5859:5;5855:16;5849:23;5885:63;5942:4;5937:3;5933:14;5919:12;5885:63;:::i;:::-;5789:169;6043:4;6036:5;6032:16;6026:23;6062:63;6119:4;6114:3;6110:14;6096:12;6062:63;:::i;:::-;5968:167;6222:4;6215:5;6211:16;6205:23;6241:57;6292:4;6287:3;6283:14;6269:12;6241:57;:::i;:::-;6145:163;6395:4;6388:5;6384:16;6378:23;6414:57;6465:4;6460:3;6456:14;6442:12;6414:57;:::i;:::-;6318:163;5211:1277;5099:1389;;:::o;6494:315::-;6633:4;6671:3;6660:9;6656:19;6648:27;;6685:117;6799:1;6788:9;6784:17;6775:6;6685:117;:::i;:::-;6494:315;;;;:::o;6815:137::-;6905:6;6939:5;6933:12;6923:22;;6815:137;;;:::o;6958:207::-;7080:11;7114:6;7109:3;7102:19;7154:4;7149:3;7145:14;7130:29;;6958:207;;;;:::o;7171:155::-;7261:4;7284:3;7276:11;;7314:4;7309:3;7305:14;7297:22;;7171:155;;;:::o;7404:1379::-;7537:4;7532:3;7528:14;7628:4;7621:5;7617:16;7611:23;7647:63;7704:4;7699:3;7695:14;7681:12;7647:63;:::i;:::-;7552:168;7804:4;7797:5;7793:16;7787:23;7823:63;7880:4;7875:3;7871:14;7857:12;7823:63;:::i;:::-;7730:166;7982:4;7975:5;7971:16;7965:23;8001:63;8058:4;8053:3;8049:14;8035:12;8001:63;:::i;:::-;7906:168;8161:4;8154:5;8150:16;8144:23;8180:63;8237:4;8232:3;8228:14;8214:12;8180:63;:::i;:::-;8084:169;8338:4;8331:5;8327:16;8321:23;8357:63;8414:4;8409:3;8405:14;8391:12;8357:63;:::i;:::-;8263:167;8517:4;8510:5;8506:16;8500:23;8536:57;8587:4;8582:3;8578:14;8564:12;8536:57;:::i;:::-;8440:163;8690:4;8683:5;8679:16;8673:23;8709:57;8760:4;8755:3;8751:14;8737:12;8709:57;:::i;:::-;8613:163;7506:1277;7404:1379;;:::o;8789:271::-;8904:10;8925:92;9013:3;9005:6;8925:92;:::i;:::-;9049:4;9044:3;9040:14;9026:28;;8789:271;;;;:::o;9066:136::-;9159:4;9191;9186:3;9182:14;9174:22;;9066:136;;;:::o;9284:916::-;9449:3;9478:77;9549:5;9478:77;:::i;:::-;9571:109;9673:6;9668:3;9571:109;:::i;:::-;9564:116;;9704:79;9777:5;9704:79;:::i;:::-;9806:7;9837:1;9822:353;9847:6;9844:1;9841:13;9822:353;;;9923:6;9917:13;9950:109;10055:3;10040:13;9950:109;:::i;:::-;9943:116;;10082:83;10158:6;10082:83;:::i;:::-;10072:93;;9882:293;9869:1;9866;9862:9;9857:14;;9822:353;;;9826:14;10191:3;10184:10;;9454:746;;;9284:916;;;;:::o;10206:465::-;10395:4;10433:2;10422:9;10418:18;10410:26;;10482:9;10476:4;10472:20;10468:1;10457:9;10453:17;10446:47;10510:154;10659:4;10650:6;10510:154;:::i;:::-;10502:162;;10206:465;;;;:::o;10677:118::-;10764:24;10782:5;10764:24;:::i;:::-;10759:3;10752:37;10677:118;;:::o;10801:222::-;10894:4;10932:2;10921:9;10917:18;10909:26;;10945:71;11013:1;11002:9;10998:17;10989:6;10945:71;:::i;:::-;10801:222;;;;:::o;11029:109::-;11110:21;11125:5;11110:21;:::i;:::-;11105:3;11098:34;11029:109;;:::o;11144:862::-;11393:4;11431:3;11420:9;11416:19;11408:27;;11445:71;11513:1;11502:9;11498:17;11489:6;11445:71;:::i;:::-;11526:72;11594:2;11583:9;11579:18;11570:6;11526:72;:::i;:::-;11608;11676:2;11665:9;11661:18;11652:6;11608:72;:::i;:::-;11690;11758:2;11747:9;11743:18;11734:6;11690:72;:::i;:::-;11772:73;11840:3;11829:9;11825:19;11816:6;11772:73;:::i;:::-;11855:67;11917:3;11906:9;11902:19;11893:6;11855:67;:::i;:::-;11932;11994:3;11983:9;11979:19;11970:6;11932:67;:::i;:::-;11144:862;;;;;;;;;;:::o;12012:474::-;12080:6;12088;12137:2;12125:9;12116:7;12112:23;12108:32;12105:119;;;12143:79;;:::i;:::-;12105:119;12263:1;12288:53;12333:7;12324:6;12313:9;12309:22;12288:53;:::i;:::-;12278:63;;12234:117;12390:2;12416:53;12461:7;12452:6;12441:9;12437:22;12416:53;:::i;:::-;12406:63;;12361:118;12012:474;;;;;:::o;12492:553::-;12669:4;12707:3;12696:9;12692:19;12684:27;;12721:71;12789:1;12778:9;12774:17;12765:6;12721:71;:::i;:::-;12802:72;12870:2;12859:9;12855:18;12846:6;12802:72;:::i;:::-;12884;12952:2;12941:9;12937:18;12928:6;12884:72;:::i;:::-;12966;13034:2;13023:9;13019:18;13010:6;12966:72;:::i;:::-;12492:553;;;;;;;:::o;13051:60::-;13079:3;13100:5;13093:12;;13051:60;;;:::o;13117:142::-;13167:9;13200:53;13218:34;13227:24;13245:5;13227:24;:::i;:::-;13218:34;:::i;:::-;13200:53;:::i;:::-;13187:66;;13117:142;;;:::o;13265:126::-;13315:9;13348:37;13379:5;13348:37;:::i;:::-;13335:50;;13265:126;;;:::o;13397:142::-;13463:9;13496:37;13527:5;13496:37;:::i;:::-;13483:50;;13397:142;;;:::o;13545:163::-;13648:53;13695:5;13648:53;:::i;:::-;13643:3;13636:66;13545:163;;:::o;13714:254::-;13823:4;13861:2;13850:9;13846:18;13838:26;;13874:87;13958:1;13947:9;13943:17;13934:6;13874:87;:::i;:::-;13714:254;;;;:::o;13974:143::-;14031:5;14062:6;14056:13;14047:22;;14078:33;14105:5;14078:33;:::i;:::-;13974:143;;;;:::o;14123:351::-;14193:6;14242:2;14230:9;14221:7;14217:23;14213:32;14210:119;;;14248:79;;:::i;:::-;14210:119;14368:1;14393:64;14449:7;14440:6;14429:9;14425:22;14393:64;:::i;:::-;14383:74;;14339:128;14123:351;;;;:::o;14480:169::-;14564:11;14598:6;14593:3;14586:19;14638:4;14633:3;14629:14;14614:29;;14480:169;;;;:::o;14655:228::-;14795:34;14791:1;14783:6;14779:14;14772:58;14864:11;14859:2;14851:6;14847:15;14840:36;14655:228;:::o;14889:366::-;15031:3;15052:67;15116:2;15111:3;15052:67;:::i;:::-;15045:74;;15128:93;15217:3;15128:93;:::i;:::-;15246:2;15241:3;15237:12;15230:19;;14889:366;;;:::o;15261:419::-;15427:4;15465:2;15454:9;15450:18;15442:26;;15514:9;15508:4;15504:20;15500:1;15489:9;15485:17;15478:47;15542:131;15668:4;15542:131;:::i;:::-;15534:139;;15261:419;;;:::o;15686:221::-;15826:34;15822:1;15814:6;15810:14;15803:58;15895:4;15890:2;15882:6;15878:15;15871:29;15686:221;:::o;15913:366::-;16055:3;16076:67;16140:2;16135:3;16076:67;:::i;:::-;16069:74;;16152:93;16241:3;16152:93;:::i;:::-;16270:2;16265:3;16261:12;16254:19;;15913:366;;;:::o;16285:419::-;16451:4;16489:2;16478:9;16474:18;16466:26;;16538:9;16532:4;16528:20;16524:1;16513:9;16509:17;16502:47;16566:131;16692:4;16566:131;:::i;:::-;16558:139;;16285:419;;;:::o;16710:180::-;16758:77;16755:1;16748:88;16855:4;16852:1;16845:15;16879:4;16876:1;16869:15;16896:410;16936:7;16959:20;16977:1;16959:20;:::i;:::-;16954:25;;16993:20;17011:1;16993:20;:::i;:::-;16988:25;;17048:1;17045;17041:9;17070:30;17088:11;17070:30;:::i;:::-;17059:41;;17249:1;17240:7;17236:15;17233:1;17230:22;17210:1;17203:9;17183:83;17160:139;;17279:18;;:::i;:::-;17160:139;16944:362;16896:410;;;;:::o;17312:191::-;17352:3;17371:20;17389:1;17371:20;:::i;:::-;17366:25;;17405:20;17423:1;17405:20;:::i;:::-;17400:25;;17448:1;17445;17441:9;17434:16;;17469:3;17466:1;17463:10;17460:36;;;17476:18;;:::i;:::-;17460:36;17312:191;;;;:::o;17509:243::-;17649:34;17645:1;17637:6;17633:14;17626:58;17718:26;17713:2;17705:6;17701:15;17694:51;17509:243;:::o;17758:366::-;17900:3;17921:67;17985:2;17980:3;17921:67;:::i;:::-;17914:74;;17997:93;18086:3;17997:93;:::i;:::-;18115:2;18110:3;18106:12;18099:19;;17758:366;;;:::o;18130:419::-;18296:4;18334:2;18323:9;18319:18;18311:26;;18383:9;18377:4;18373:20;18369:1;18358:9;18354:17;18347:47;18411:131;18537:4;18411:131;:::i;:::-;18403:139;;18130:419;;;:::o;18555:332::-;18676:4;18714:2;18703:9;18699:18;18691:26;;18727:71;18795:1;18784:9;18780:17;18771:6;18727:71;:::i;:::-;18808:72;18876:2;18865:9;18861:18;18852:6;18808:72;:::i;:::-;18555:332;;;;;:::o;18893:116::-;18963:21;18978:5;18963:21;:::i;:::-;18956:5;18953:32;18943:60;;18999:1;18996;18989:12;18943:60;18893:116;:::o;19015:137::-;19069:5;19100:6;19094:13;19085:22;;19116:30;19140:5;19116:30;:::i;:::-;19015:137;;;;:::o;19158:345::-;19225:6;19274:2;19262:9;19253:7;19249:23;19245:32;19242:119;;;19280:79;;:::i;:::-;19242:119;19400:1;19425:61;19478:7;19469:6;19458:9;19454:22;19425:61;:::i;:::-;19415:71;;19371:125;19158:345;;;;:::o;19509:171::-;19649:23;19645:1;19637:6;19633:14;19626:47;19509:171;:::o;19686:366::-;19828:3;19849:67;19913:2;19908:3;19849:67;:::i;:::-;19842:74;;19925:93;20014:3;19925:93;:::i;:::-;20043:2;20038:3;20034:12;20027:19;;19686:366;;;:::o;20058:419::-;20224:4;20262:2;20251:9;20247:18;20239:26;;20311:9;20305:4;20301:20;20297:1;20286:9;20282:17;20275:47;20339:131;20465:4;20339:131;:::i;:::-;20331:139;;20058:419;;;:::o;20483:182::-;20623:34;20619:1;20611:6;20607:14;20600:58;20483:182;:::o;20671:366::-;20813:3;20834:67;20898:2;20893:3;20834:67;:::i;:::-;20827:74;;20910:93;20999:3;20910:93;:::i;:::-;21028:2;21023:3;21019:12;21012:19;;20671:366;;;:::o;21043:419::-;21209:4;21247:2;21236:9;21232:18;21224:26;;21296:9;21290:4;21286:20;21282:1;21271:9;21267:17;21260:47;21324:131;21450:4;21324:131;:::i;:::-;21316:139;;21043:419;;;:::o;21468:227::-;21608:34;21604:1;21596:6;21592:14;21585:58;21677:10;21672:2;21664:6;21660:15;21653:35;21468:227;:::o;21701:366::-;21843:3;21864:67;21928:2;21923:3;21864:67;:::i;:::-;21857:74;;21940:93;22029:3;21940:93;:::i;:::-;22058:2;22053:3;22049:12;22042:19;;21701:366;;;:::o;22073:419::-;22239:4;22277:2;22266:9;22262:18;22254:26;;22326:9;22320:4;22316:20;22312:1;22301:9;22297:17;22290:47;22354:131;22480:4;22354:131;:::i;:::-;22346:139;;22073:419;;;:::o;22498:442::-;22647:4;22685:2;22674:9;22670:18;22662:26;;22698:71;22766:1;22755:9;22751:17;22742:6;22698:71;:::i;:::-;22779:72;22847:2;22836:9;22832:18;22823:6;22779:72;:::i;:::-;22861;22929:2;22918:9;22914:18;22905:6;22861:72;:::i;:::-;22498:442;;;;;;:::o;22946:222::-;23086:34;23082:1;23074:6;23070:14;23063:58;23155:5;23150:2;23142:6;23138:15;23131:30;22946:222;:::o;23174:366::-;23316:3;23337:67;23401:2;23396:3;23337:67;:::i;:::-;23330:74;;23413:93;23502:3;23413:93;:::i;:::-;23531:2;23526:3;23522:12;23515:19;;23174:366;;;:::o;23546:419::-;23712:4;23750:2;23739:9;23735:18;23727:26;;23799:9;23793:4;23789:20;23785:1;23774:9;23770:17;23763:47;23827:131;23953:4;23827:131;:::i;:::-;23819:139;;23546:419;;;:::o;23971:172::-;24111:24;24107:1;24099:6;24095:14;24088:48;23971:172;:::o;24149:366::-;24291:3;24312:67;24376:2;24371:3;24312:67;:::i;:::-;24305:74;;24388:93;24477:3;24388:93;:::i;:::-;24506:2;24501:3;24497:12;24490:19;;24149:366;;;:::o;24521:419::-;24687:4;24725:2;24714:9;24710:18;24702:26;;24774:9;24768:4;24764:20;24760:1;24749:9;24745:17;24738:47;24802:131;24928:4;24802:131;:::i;:::-;24794:139;;24521:419;;;:::o;24946:194::-;24986:4;25006:20;25024:1;25006:20;:::i;:::-;25001:25;;25040:20;25058:1;25040:20;:::i;:::-;25035:25;;25084:1;25081;25077:9;25069:17;;25108:1;25102:4;25099:11;25096:37;;;25113:18;;:::i;:::-;25096:37;24946:194;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1491000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ClaimReward(uint256)": "infinite",
								"ViewDetail(address)": "infinite",
								"calculateReward(uint256)": "infinite",
								"check_duration()": "infinite",
								"chkid(uint256)": "infinite",
								"cid(uint256)": "infinite",
								"claimStakedAmount(uint256)": "infinite",
								"getBal(address)": "infinite",
								"owner()": "infinite",
								"stakenow(uint256,uint256)": "infinite",
								"token()": "infinite",
								"userStakes(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 340,
									"end": 4325,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 538,
									"end": 571,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 538,
									"end": 571,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 538,
									"end": 571,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 538,
									"end": 571,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 538,
									"end": 571,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 538,
									"end": 571,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 538,
									"end": 571,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 538,
									"end": 571,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 556,
									"end": 557,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 538,
									"end": 571,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 538,
									"end": 571,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 538,
									"end": 571,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 538,
									"end": 571,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 538,
									"end": 571,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 538,
									"end": 571,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 559,
									"end": 560,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 538,
									"end": 571,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 538,
									"end": 571,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 538,
									"end": 571,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 538,
									"end": 571,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 538,
									"end": 571,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 538,
									"end": 571,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 562,
									"end": 563,
									"name": "PUSH",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 538,
									"end": 571,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 538,
									"end": 571,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 538,
									"end": 571,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 538,
									"end": 571,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 538,
									"end": 571,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 538,
									"end": 571,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 538,
									"end": 571,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 538,
									"end": 571,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 538,
									"end": 571,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 538,
									"end": 571,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 538,
									"end": 571,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 538,
									"end": 571,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 568,
									"end": 570,
									"name": "PUSH",
									"source": 8,
									"value": "A"
								},
								{
									"begin": 538,
									"end": 571,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 538,
									"end": 571,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 538,
									"end": 571,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 538,
									"end": 571,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 538,
									"end": 571,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 538,
									"end": 571,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 538,
									"end": 571,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 538,
									"end": 571,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 538,
									"end": 571,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 538,
									"end": 571,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 538,
									"end": 571,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 538,
									"end": 571,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 538,
									"end": 571,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 538,
									"end": 571,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 538,
									"end": 571,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 538,
									"end": 571,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 538,
									"end": 571,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 580,
									"end": 680,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 580,
									"end": 680,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 580,
									"end": 680,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 580,
									"end": 680,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 580,
									"end": 680,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 580,
									"end": 680,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 580,
									"end": 680,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 580,
									"end": 680,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 580,
									"end": 680,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 580,
									"end": 680,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 580,
									"end": 680,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 580,
									"end": 680,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 580,
									"end": 680,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 580,
									"end": 680,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 580,
									"end": 680,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 580,
									"end": 680,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 580,
									"end": 680,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 580,
									"end": 680,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 580,
									"end": 680,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 580,
									"end": 680,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 580,
									"end": 680,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 580,
									"end": 680,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 580,
									"end": 680,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 580,
									"end": 680,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 580,
									"end": 680,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 580,
									"end": 680,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 580,
									"end": 680,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 580,
									"end": 680,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 580,
									"end": 680,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 580,
									"end": 680,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 580,
									"end": 680,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 580,
									"end": 680,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 580,
									"end": 680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 580,
									"end": 680,
									"name": "tag",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 580,
									"end": 680,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 635,
									"end": 641,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 619,
									"end": 642,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 619,
									"end": 642,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 619,
									"end": 642,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 619,
									"end": 642,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 619,
									"end": 642,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 619,
									"end": 642,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 619,
									"end": 642,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 619,
									"end": 642,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 619,
									"end": 642,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 619,
									"end": 642,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 662,
									"end": 672,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 653,
									"end": 672,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 653,
									"end": 672,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 653,
									"end": 672,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 653,
									"end": 672,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 653,
									"end": 672,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 653,
									"end": 672,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 653,
									"end": 672,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 653,
									"end": 672,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 653,
									"end": 672,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 653,
									"end": 672,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 580,
									"end": 680,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "tag",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "tag",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "tag",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 340,
									"end": 4325,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "tag",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "tag",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "tag",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "tag",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 568,
									"end": 680,
									"name": "tag",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 568,
									"end": 680,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 621,
									"end": 628,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 650,
									"end": 674,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 668,
									"end": 673,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 650,
									"end": 674,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 650,
									"end": 674,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 650,
									"end": 674,
									"name": "tag",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 650,
									"end": 674,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 639,
									"end": 674,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 639,
									"end": 674,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 568,
									"end": 680,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 568,
									"end": 680,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 568,
									"end": 680,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 568,
									"end": 680,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 686,
									"end": 840,
									"name": "tag",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 686,
									"end": 840,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 775,
									"end": 815,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 809,
									"end": 814,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 775,
									"end": 815,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 775,
									"end": 815,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 775,
									"end": 815,
									"name": "tag",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 775,
									"end": 815,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 768,
									"end": 773,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 765,
									"end": 816,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 755,
									"end": 834,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 755,
									"end": 834,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 827,
									"end": 828,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 820,
									"end": 832,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 755,
									"end": 834,
									"name": "tag",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 755,
									"end": 834,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 686,
									"end": 840,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 686,
									"end": 840,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 846,
									"end": 1021,
									"name": "tag",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 846,
									"end": 1021,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 919,
									"end": 924,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 950,
									"end": 956,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 944,
									"end": 957,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 935,
									"end": 957,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 935,
									"end": 957,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 966,
									"end": 1015,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 1009,
									"end": 1014,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 966,
									"end": 1015,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 966,
									"end": 1015,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 966,
									"end": 1015,
									"name": "tag",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 966,
									"end": 1015,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 846,
									"end": 1021,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 846,
									"end": 1021,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 846,
									"end": 1021,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 846,
									"end": 1021,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 846,
									"end": 1021,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1027,
									"end": 1410,
									"name": "tag",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 1027,
									"end": 1410,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1113,
									"end": 1119,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1162,
									"end": 1164,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1150,
									"end": 1159,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1141,
									"end": 1148,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1137,
									"end": 1160,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1133,
									"end": 1165,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 1130,
									"end": 1249,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1130,
									"end": 1249,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 1130,
									"end": 1249,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1168,
									"end": 1247,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1168,
									"end": 1247,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 1168,
									"end": 1247,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1168,
									"end": 1247,
									"name": "tag",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1168,
									"end": 1247,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1130,
									"end": 1249,
									"name": "tag",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 1130,
									"end": 1249,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1313,
									"end": 1393,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 1385,
									"end": 1392,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1376,
									"end": 1382,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1365,
									"end": 1374,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1361,
									"end": 1383,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1313,
									"end": 1393,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 1313,
									"end": 1393,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1313,
									"end": 1393,
									"name": "tag",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 1313,
									"end": 1393,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1303,
									"end": 1393,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1303,
									"end": 1393,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1259,
									"end": 1403,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1027,
									"end": 1410,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1027,
									"end": 1410,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1027,
									"end": 1410,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1027,
									"end": 1410,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1027,
									"end": 1410,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "tag",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "ASSIGNIMMUTABLE",
									"source": 8,
									"value": "1047"
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "ASSIGNIMMUTABLE",
									"source": 8,
									"value": "1045"
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 340,
									"end": 4325,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203e3a773a39fe0d77236fb576fabfc304716ad5bd708d462b92b2ea64d825430864736f6c63430008150033",
									".code": [
										{
											"begin": 340,
											"end": 4325,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "PUSH",
											"source": 8,
											"value": "92CEB12D"
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "PUSH",
											"source": 8,
											"value": "92CEB12D"
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "PUSH",
											"source": 8,
											"value": "B0C479A5"
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "PUSH",
											"source": 8,
											"value": "B5D5B5FA"
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "PUSH",
											"source": 8,
											"value": "C9757417"
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "PUSH",
											"source": 8,
											"value": "D2D7231F"
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "PUSH",
											"source": 8,
											"value": "FC0C546A"
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "PUSH",
											"source": 8,
											"value": "B46BA99"
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "PUSH",
											"source": 8,
											"value": "2FA78085"
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "PUSH",
											"source": 8,
											"value": "41324EC5"
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "PUSH",
											"source": 8,
											"value": "47C4D742"
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "PUSH",
											"source": 8,
											"value": "5EE0D9B4"
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 340,
											"end": 4325,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1847,
											"end": 1942,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1847,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1847,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 1847,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 1847,
											"end": 1942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1847,
											"end": 1942,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 1847,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1847,
											"end": 1942,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1847,
											"end": 1942,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1847,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 1847,
											"end": 1942,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1847,
											"end": 1942,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1847,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 1847,
											"end": 1942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1847,
											"end": 1942,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 1847,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1847,
											"end": 1942,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1847,
											"end": 1942,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1847,
											"end": 1942,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1847,
											"end": 1942,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1847,
											"end": 1942,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1847,
											"end": 1942,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1847,
											"end": 1942,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1007,
											"end": 1114,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1007,
											"end": 1114,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1007,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1007,
											"end": 1114,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1007,
											"end": 1114,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1007,
											"end": 1114,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1007,
											"end": 1114,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1007,
											"end": 1114,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1007,
											"end": 1114,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1007,
											"end": 1114,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1007,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 1007,
											"end": 1114,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1007,
											"end": 1114,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1007,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 1007,
											"end": 1114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1007,
											"end": 1114,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 1007,
											"end": 1114,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1007,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 1007,
											"end": 1114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1007,
											"end": 1114,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1007,
											"end": 1114,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1007,
											"end": 1114,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1007,
											"end": 1114,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1007,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1007,
											"end": 1114,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1007,
											"end": 1114,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1007,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 1007,
											"end": 1114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1007,
											"end": 1114,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1007,
											"end": 1114,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1007,
											"end": 1114,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1007,
											"end": 1114,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1007,
											"end": 1114,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1007,
											"end": 1114,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1007,
											"end": 1114,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1007,
											"end": 1114,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1007,
											"end": 1114,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3379,
											"end": 4318,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 3379,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3379,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 3379,
											"end": 4318,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3379,
											"end": 4318,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3379,
											"end": 4318,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3379,
											"end": 4318,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3379,
											"end": 4318,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3379,
											"end": 4318,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3379,
											"end": 4318,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3379,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 3379,
											"end": 4318,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3379,
											"end": 4318,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3379,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 3379,
											"end": 4318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3379,
											"end": 4318,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 3379,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3379,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 3379,
											"end": 4318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3379,
											"end": 4318,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 3379,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3379,
											"end": 4318,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1122,
											"end": 1834,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 1122,
											"end": 1834,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1122,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 1122,
											"end": 1834,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1122,
											"end": 1834,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1122,
											"end": 1834,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1122,
											"end": 1834,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1122,
											"end": 1834,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1122,
											"end": 1834,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1122,
											"end": 1834,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1122,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 1122,
											"end": 1834,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1122,
											"end": 1834,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1122,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 1122,
											"end": 1834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1122,
											"end": 1834,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 1122,
											"end": 1834,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1122,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 1122,
											"end": 1834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1122,
											"end": 1834,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 1122,
											"end": 1834,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1122,
											"end": 1834,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1122,
											"end": 1834,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1122,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 1122,
											"end": 1834,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1122,
											"end": 1834,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1122,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 1122,
											"end": 1834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1122,
											"end": 1834,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 1122,
											"end": 1834,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1122,
											"end": 1834,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1122,
											"end": 1834,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1122,
											"end": 1834,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1122,
											"end": 1834,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1122,
											"end": 1834,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1122,
											"end": 1834,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1122,
											"end": 1834,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2056,
											"end": 2163,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 2056,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2056,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 2056,
											"end": 2163,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2056,
											"end": 2163,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2056,
											"end": 2163,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2056,
											"end": 2163,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2056,
											"end": 2163,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2056,
											"end": 2163,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2056,
											"end": 2163,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2056,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 2056,
											"end": 2163,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2056,
											"end": 2163,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2056,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 2056,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2056,
											"end": 2163,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 2056,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2056,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 2056,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2056,
											"end": 2163,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 2056,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2056,
											"end": 2163,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2056,
											"end": 2163,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2056,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 2056,
											"end": 2163,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2056,
											"end": 2163,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2056,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2056,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2056,
											"end": 2163,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 2056,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2056,
											"end": 2163,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2056,
											"end": 2163,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2056,
											"end": 2163,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2056,
											"end": 2163,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2056,
											"end": 2163,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2056,
											"end": 2163,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2056,
											"end": 2163,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 501,
											"end": 531,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 501,
											"end": 531,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 501,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 501,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 501,
											"end": 531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 501,
											"end": 531,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 501,
											"end": 531,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 501,
											"end": 531,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 501,
											"end": 531,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 501,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 501,
											"end": 531,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 501,
											"end": 531,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 501,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 501,
											"end": 531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 501,
											"end": 531,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 501,
											"end": 531,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 501,
											"end": 531,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 501,
											"end": 531,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 501,
											"end": 531,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 501,
											"end": 531,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 501,
											"end": 531,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 501,
											"end": 531,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 501,
											"end": 531,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 3371,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 2798,
											"end": 3371,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 2798,
											"end": 3371,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2798,
											"end": 3371,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 3371,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 3371,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 3371,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 3371,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 3371,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 2798,
											"end": 3371,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 3371,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 2798,
											"end": 3371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 3371,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 2798,
											"end": 3371,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 2798,
											"end": 3371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 3371,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 2798,
											"end": 3371,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 3371,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 958,
											"end": 991,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 958,
											"end": 991,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 958,
											"end": 991,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 958,
											"end": 991,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 958,
											"end": 991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 958,
											"end": 991,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 958,
											"end": 991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 958,
											"end": 991,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 958,
											"end": 991,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 958,
											"end": 991,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 958,
											"end": 991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 958,
											"end": 991,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 958,
											"end": 991,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 905,
											"end": 950,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 905,
											"end": 950,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 905,
											"end": 950,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 905,
											"end": 950,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 905,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 905,
											"end": 950,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 905,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 905,
											"end": 950,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 905,
											"end": 950,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 905,
											"end": 950,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 905,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 905,
											"end": 950,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 905,
											"end": 950,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 2050,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 1950,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 1950,
											"end": 2050,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1950,
											"end": 2050,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 2050,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 2050,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 2050,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 2050,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 2050,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 1950,
											"end": 2050,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 2050,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 1950,
											"end": 2050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 2050,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 1950,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1950,
											"end": 2050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 2050,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 1950,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 2050,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1950,
											"end": 2050,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 1950,
											"end": 2050,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 2050,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 1950,
											"end": 2050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 2050,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 1950,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 2050,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1950,
											"end": 2050,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 2050,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 2050,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 2050,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 2050,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 2050,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2170,
											"end": 2788,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 2170,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2170,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 2170,
											"end": 2788,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2170,
											"end": 2788,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2170,
											"end": 2788,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2170,
											"end": 2788,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2170,
											"end": 2788,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2170,
											"end": 2788,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2170,
											"end": 2788,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2170,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 2170,
											"end": 2788,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2170,
											"end": 2788,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2170,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 2170,
											"end": 2788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2170,
											"end": 2788,
											"name": "tag",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 2170,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2170,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 2170,
											"end": 2788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2170,
											"end": 2788,
											"name": "tag",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 2170,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2170,
											"end": 2788,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2170,
											"end": 2788,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2170,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 2170,
											"end": 2788,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 2170,
											"end": 2788,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2170,
											"end": 2788,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2170,
											"end": 2788,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2170,
											"end": 2788,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2170,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 2170,
											"end": 2788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2170,
											"end": 2788,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 2170,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2170,
											"end": 2788,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2170,
											"end": 2788,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2170,
											"end": 2788,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2170,
											"end": 2788,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2170,
											"end": 2788,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2170,
											"end": 2788,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2170,
											"end": 2788,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 464,
											"end": 494,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 464,
											"end": 494,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 464,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 464,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 464,
											"end": 494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 464,
											"end": 494,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 464,
											"end": 494,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 464,
											"end": 494,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 464,
											"end": 494,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 464,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 464,
											"end": 494,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 464,
											"end": 494,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 464,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 464,
											"end": 494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 464,
											"end": 494,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 464,
											"end": 494,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 464,
											"end": 494,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 464,
											"end": 494,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 464,
											"end": 494,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 464,
											"end": 494,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 464,
											"end": 494,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 464,
											"end": 494,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 464,
											"end": 494,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1847,
											"end": 1942,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 1847,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1894,
											"end": 1910,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1930,
											"end": 1934,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "tag",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "tag",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1934,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1847,
											"end": 1942,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1847,
											"end": 1942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1007,
											"end": 1114,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 1007,
											"end": 1114,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1058,
											"end": 1065,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1085,
											"end": 1090,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "1045"
										},
										{
											"begin": 1085,
											"end": 1100,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1085,
											"end": 1100,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1100,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 1101,
											"end": 1105,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 1085,
											"end": 1106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "tag",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 1085,
											"end": 1106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "tag",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1078,
											"end": 1106,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1078,
											"end": 1106,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1007,
											"end": 1114,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1007,
											"end": 1114,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1007,
											"end": 1114,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1007,
											"end": 1114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3379,
											"end": 4318,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 3379,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3465,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3466,
											"end": 3472,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3481,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3462,
											"end": 3481,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3481,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3481,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3481,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3481,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3481,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3462,
											"end": 3481,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3481,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3481,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3481,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3462,
											"end": 3481,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3448,
											"end": 3481,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3448,
											"end": 3481,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3448,
											"end": 3458,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3448,
											"end": 3481,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3448,
											"end": 3481,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3448,
											"end": 3481,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3440,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 3440,
											"end": 3527,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3440,
											"end": 3527,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3440,
											"end": 3527,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3440,
											"end": 3527,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3440,
											"end": 3527,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3440,
											"end": 3527,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3440,
											"end": 3527,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3440,
											"end": 3527,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3440,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 3440,
											"end": 3527,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3440,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 3440,
											"end": 3527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3440,
											"end": 3527,
											"name": "tag",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 3440,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3440,
											"end": 3527,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3440,
											"end": 3527,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3440,
											"end": 3527,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3440,
											"end": 3527,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3440,
											"end": 3527,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3440,
											"end": 3527,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3440,
											"end": 3527,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3440,
											"end": 3527,
											"name": "tag",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 3440,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3547,
											"end": 3550,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 3547,
											"end": 3558,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3551,
											"end": 3557,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3547,
											"end": 3558,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3547,
											"end": 3558,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3547,
											"end": 3558,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3547,
											"end": 3558,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3547,
											"end": 3558,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3547,
											"end": 3558,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3547,
											"end": 3558,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3547,
											"end": 3558,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3547,
											"end": 3558,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3547,
											"end": 3558,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3547,
											"end": 3558,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3547,
											"end": 3568,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3547,
											"end": 3568,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3547,
											"end": 3568,
											"name": "PUSH",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 3547,
											"end": 3568,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3547,
											"end": 3568,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3547,
											"end": 3568,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3547,
											"end": 3568,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3547,
											"end": 3568,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3547,
											"end": 3568,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3547,
											"end": 3568,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3547,
											"end": 3568,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 3547,
											"end": 3568,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3546,
											"end": 3568,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3538,
											"end": 3607,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 3538,
											"end": 3607,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3538,
											"end": 3607,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3538,
											"end": 3607,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3538,
											"end": 3607,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3538,
											"end": 3607,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3538,
											"end": 3607,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3538,
											"end": 3607,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3538,
											"end": 3607,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3538,
											"end": 3607,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 3538,
											"end": 3607,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3538,
											"end": 3607,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 3538,
											"end": 3607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3538,
											"end": 3607,
											"name": "tag",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 3538,
											"end": 3607,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3538,
											"end": 3607,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3538,
											"end": 3607,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3538,
											"end": 3607,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3538,
											"end": 3607,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3538,
											"end": 3607,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3538,
											"end": 3607,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3538,
											"end": 3607,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3538,
											"end": 3607,
											"name": "tag",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 3538,
											"end": 3607,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3692,
											"end": 3701,
											"name": "PUSH",
											"source": 8,
											"value": "3C"
										},
										{
											"begin": 3669,
											"end": 3672,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 3669,
											"end": 3680,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3673,
											"end": 3679,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3669,
											"end": 3680,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3669,
											"end": 3680,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3669,
											"end": 3680,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3669,
											"end": 3680,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3669,
											"end": 3680,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3669,
											"end": 3680,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3669,
											"end": 3680,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3669,
											"end": 3680,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3669,
											"end": 3680,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3669,
											"end": 3680,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3680,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3669,
											"end": 3689,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3669,
											"end": 3689,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3669,
											"end": 3689,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3669,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 3669,
											"end": 3701,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3669,
											"end": 3701,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3669,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 3669,
											"end": 3701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3669,
											"end": 3701,
											"name": "tag",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 3669,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3645,
											"end": 3648,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 3645,
											"end": 3656,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3649,
											"end": 3655,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3645,
											"end": 3656,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3645,
											"end": 3656,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3645,
											"end": 3656,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3645,
											"end": 3656,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3645,
											"end": 3656,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3645,
											"end": 3656,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3645,
											"end": 3656,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3645,
											"end": 3656,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3645,
											"end": 3656,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3645,
											"end": 3656,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3645,
											"end": 3656,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3645,
											"end": 3666,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 3645,
											"end": 3666,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3645,
											"end": 3666,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3645,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 3645,
											"end": 3701,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3645,
											"end": 3701,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3645,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 3645,
											"end": 3701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3645,
											"end": 3701,
											"name": "tag",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 3645,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3626,
											"end": 3641,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 3626,
											"end": 3701,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3626,
											"end": 3701,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3618,
											"end": 3762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 3618,
											"end": 3762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3618,
											"end": 3762,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3618,
											"end": 3762,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3618,
											"end": 3762,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3618,
											"end": 3762,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3618,
											"end": 3762,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3618,
											"end": 3762,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3618,
											"end": 3762,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3618,
											"end": 3762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 3618,
											"end": 3762,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3618,
											"end": 3762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 3618,
											"end": 3762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3618,
											"end": 3762,
											"name": "tag",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 3618,
											"end": 3762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3618,
											"end": 3762,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3618,
											"end": 3762,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3618,
											"end": 3762,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3618,
											"end": 3762,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3618,
											"end": 3762,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3618,
											"end": 3762,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3618,
											"end": 3762,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3618,
											"end": 3762,
											"name": "tag",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 3618,
											"end": 3762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3837,
											"end": 3841,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3813,
											"end": 3816,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 3813,
											"end": 3824,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3817,
											"end": 3823,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3813,
											"end": 3824,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3813,
											"end": 3824,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3813,
											"end": 3824,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3813,
											"end": 3824,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3813,
											"end": 3824,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3813,
											"end": 3824,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3813,
											"end": 3824,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3813,
											"end": 3824,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3813,
											"end": 3824,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3813,
											"end": 3824,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3813,
											"end": 3824,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3813,
											"end": 3834,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3813,
											"end": 3834,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3813,
											"end": 3834,
											"name": "PUSH",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 3813,
											"end": 3841,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3813,
											"end": 3841,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3813,
											"end": 3841,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3813,
											"end": 3841,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3813,
											"end": 3841,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3813,
											"end": 3841,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 3813,
											"end": 3841,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3813,
											"end": 3841,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 3813,
											"end": 3841,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3813,
											"end": 3841,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3813,
											"end": 3841,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3813,
											"end": 3841,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3813,
											"end": 3841,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3813,
											"end": 3841,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3813,
											"end": 3841,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 3813,
											"end": 3841,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3813,
											"end": 3841,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3813,
											"end": 3841,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3855,
											"end": 3874,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3876,
											"end": 3891,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3893,
											"end": 3907,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3909,
											"end": 3923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3927,
											"end": 3950,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 3943,
											"end": 3949,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3927,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3927,
											"end": 3950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3927,
											"end": 3950,
											"name": "tag",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 3927,
											"end": 3950,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3950,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3950,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3950,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3950,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3950,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3950,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3950,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3950,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3965,
											"end": 3985,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3988,
											"end": 3991,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 3988,
											"end": 3999,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3992,
											"end": 3998,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3988,
											"end": 3999,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3988,
											"end": 3999,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3988,
											"end": 3999,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3988,
											"end": 3999,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3988,
											"end": 3999,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3988,
											"end": 3999,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3988,
											"end": 3999,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3988,
											"end": 3999,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3988,
											"end": 3999,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3988,
											"end": 3999,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3988,
											"end": 3999,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3988,
											"end": 4006,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3988,
											"end": 4006,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3988,
											"end": 4006,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3965,
											"end": 4006,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3965,
											"end": 4006,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4081,
											"end": 4082,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4060,
											"end": 4063,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 4060,
											"end": 4071,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4070,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 4060,
											"end": 4071,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4060,
											"end": 4071,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4060,
											"end": 4071,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4060,
											"end": 4071,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4060,
											"end": 4071,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4060,
											"end": 4071,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4060,
											"end": 4071,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4060,
											"end": 4071,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4060,
											"end": 4071,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4060,
											"end": 4071,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4060,
											"end": 4071,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4060,
											"end": 4078,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4060,
											"end": 4078,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4060,
											"end": 4082,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4060,
											"end": 4082,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4060,
											"end": 4082,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4060,
											"end": 4082,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4199,
											"end": 4211,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4214,
											"end": 4219,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "1045"
										},
										{
											"begin": 4214,
											"end": 4228,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4214,
											"end": 4228,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4228,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 4229,
											"end": 4240,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4242,
											"end": 4254,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 4214,
											"end": 4255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "tag",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "tag",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 4214,
											"end": 4255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 4214,
											"end": 4255,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4199,
											"end": 4255,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4199,
											"end": 4255,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4275,
											"end": 4282,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4267,
											"end": 4308,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 4267,
											"end": 4308,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4267,
											"end": 4308,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4267,
											"end": 4308,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4267,
											"end": 4308,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4267,
											"end": 4308,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4267,
											"end": 4308,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4267,
											"end": 4308,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4267,
											"end": 4308,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4267,
											"end": 4308,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 4267,
											"end": 4308,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4267,
											"end": 4308,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 4267,
											"end": 4308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4267,
											"end": 4308,
											"name": "tag",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 4267,
											"end": 4308,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4267,
											"end": 4308,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4267,
											"end": 4308,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4267,
											"end": 4308,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4267,
											"end": 4308,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4267,
											"end": 4308,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4267,
											"end": 4308,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4267,
											"end": 4308,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4267,
											"end": 4308,
											"name": "tag",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 4267,
											"end": 4308,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3429,
											"end": 4318,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3429,
											"end": 4318,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3429,
											"end": 4318,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3429,
											"end": 4318,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3429,
											"end": 4318,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3429,
											"end": 4318,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3379,
											"end": 4318,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3379,
											"end": 4318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1122,
											"end": 1834,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 1122,
											"end": 1834,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1185,
											"end": 1197,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 1185,
											"end": 1197,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 1185,
											"end": 1197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1185,
											"end": 1197,
											"name": "tag",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 1185,
											"end": 1197,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1238,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1228,
											"end": 1234,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1228,
											"end": 1238,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1220,
											"end": 1275,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 1220,
											"end": 1275,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1220,
											"end": 1275,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1220,
											"end": 1275,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1220,
											"end": 1275,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1220,
											"end": 1275,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1220,
											"end": 1275,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1220,
											"end": 1275,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1220,
											"end": 1275,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1220,
											"end": 1275,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 1220,
											"end": 1275,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1220,
											"end": 1275,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 1220,
											"end": 1275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1220,
											"end": 1275,
											"name": "tag",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 1220,
											"end": 1275,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1220,
											"end": 1275,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1220,
											"end": 1275,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1220,
											"end": 1275,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1220,
											"end": 1275,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1220,
											"end": 1275,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1220,
											"end": 1275,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1220,
											"end": 1275,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1220,
											"end": 1275,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 1220,
											"end": 1275,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1309,
											"end": 1310,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1297,
											"end": 1305,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1297,
											"end": 1310,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1297,
											"end": 1327,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1297,
											"end": 1327,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 1297,
											"end": 1327,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1297,
											"end": 1327,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1326,
											"end": 1327,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1314,
											"end": 1322,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1314,
											"end": 1327,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1297,
											"end": 1327,
											"name": "tag",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 1297,
											"end": 1327,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1297,
											"end": 1344,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1297,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 1297,
											"end": 1344,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1297,
											"end": 1344,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1343,
											"end": 1344,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 1331,
											"end": 1339,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1331,
											"end": 1344,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1297,
											"end": 1344,
											"name": "tag",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 1297,
											"end": 1344,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1297,
											"end": 1361,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1297,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 1297,
											"end": 1361,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1297,
											"end": 1361,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1360,
											"end": 1361,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 1348,
											"end": 1356,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1348,
											"end": 1361,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1297,
											"end": 1361,
											"name": "tag",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 1297,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1297,
											"end": 1379,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1297,
											"end": 1379,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 1297,
											"end": 1379,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1297,
											"end": 1379,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1379,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 1365,
											"end": 1373,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1365,
											"end": 1379,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1297,
											"end": 1379,
											"name": "tag",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 1297,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1288,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 1288,
											"end": 1438,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1288,
											"end": 1438,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1288,
											"end": 1438,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1288,
											"end": 1438,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1288,
											"end": 1438,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1288,
											"end": 1438,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1288,
											"end": 1438,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1288,
											"end": 1438,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1288,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 1288,
											"end": 1438,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1288,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 1288,
											"end": 1438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1288,
											"end": 1438,
											"name": "tag",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 1288,
											"end": 1438,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1288,
											"end": 1438,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1288,
											"end": 1438,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1288,
											"end": 1438,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1288,
											"end": 1438,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1288,
											"end": 1438,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1288,
											"end": 1438,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1288,
											"end": 1438,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1288,
											"end": 1438,
											"name": "tag",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 1288,
											"end": 1438,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1451,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 1451,
											"end": 1465,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1451,
											"end": 1473,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 1451,
											"end": 1475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1451,
											"end": 1475,
											"name": "tag",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 1451,
											"end": 1475,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1451,
											"end": 1475,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1486,
											"end": 1507,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1510,
											"end": 1600,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1510,
											"end": 1600,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1510,
											"end": 1600,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1510,
											"end": 1600,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1510,
											"end": 1600,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1510,
											"end": 1600,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1510,
											"end": 1600,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1510,
											"end": 1600,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1516,
											"end": 1540,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 1516,
											"end": 1530,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1516,
											"end": 1538,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 1516,
											"end": 1540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1516,
											"end": 1540,
											"name": "tag",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 1516,
											"end": 1540,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1510,
											"end": 1600,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1510,
											"end": 1600,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1510,
											"end": 1600,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1510,
											"end": 1600,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1542,
											"end": 1548,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1510,
											"end": 1600,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1510,
											"end": 1600,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1510,
											"end": 1600,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1510,
											"end": 1600,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1550,
											"end": 1558,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1510,
											"end": 1600,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1510,
											"end": 1600,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1510,
											"end": 1600,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1510,
											"end": 1600,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1575,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 1510,
											"end": 1600,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1510,
											"end": 1600,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1510,
											"end": 1600,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1510,
											"end": 1600,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1577,
											"end": 1587,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1510,
											"end": 1600,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1510,
											"end": 1600,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1510,
											"end": 1600,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1510,
											"end": 1600,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1510,
											"end": 1600,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1510,
											"end": 1600,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1588,
											"end": 1593,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1510,
											"end": 1600,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1510,
											"end": 1600,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1510,
											"end": 1600,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1510,
											"end": 1600,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1510,
											"end": 1600,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1510,
											"end": 1600,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1594,
											"end": 1599,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1510,
											"end": 1600,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1510,
											"end": 1600,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1510,
											"end": 1600,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1510,
											"end": 1600,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1510,
											"end": 1600,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1486,
											"end": 1600,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1486,
											"end": 1600,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1621,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1611,
											"end": 1633,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1622,
											"end": 1632,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1633,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1611,
											"end": 1633,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1633,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1611,
											"end": 1633,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1633,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1633,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1633,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1611,
											"end": 1633,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1633,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1633,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1633,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1633,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1611,
											"end": 1633,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1633,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1611,
											"end": 1633,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1639,
											"end": 1647,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "PUSH",
											"source": 8,
											"value": "C0"
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "PUSH",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1648,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1664,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "1045"
										},
										{
											"begin": 1659,
											"end": 1677,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1659,
											"end": 1677,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1677,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 1678,
											"end": 1688,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1698,
											"end": 1702,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 1705,
											"end": 1711,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 1659,
											"end": 1712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "tag",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1659,
											"end": 1712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "tag",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1712,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1753,
											"end": 1761,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1726,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1723,
											"end": 1752,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1727,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 1727,
											"end": 1741,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1727,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 1727,
											"end": 1751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1727,
											"end": 1751,
											"name": "tag",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 1727,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1752,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1752,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1752,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1723,
											"end": 1752,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1752,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1752,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1752,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1752,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1723,
											"end": 1752,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1752,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1723,
											"end": 1752,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "PUSH",
											"source": 8,
											"value": "C0"
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "PUSH",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1761,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1772,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1772,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 1772,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1772,
											"end": 1798,
											"name": "tag",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 1772,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1816,
											"end": 1824,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1122,
											"end": 1834,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1122,
											"end": 1834,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1122,
											"end": 1834,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1122,
											"end": 1834,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1122,
											"end": 1834,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2056,
											"end": 2163,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 2056,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2110,
											"end": 2124,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2140,
											"end": 2150,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2140,
											"end": 2155,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2151,
											"end": 2154,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2140,
											"end": 2155,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2140,
											"end": 2155,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2140,
											"end": 2155,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2140,
											"end": 2155,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2140,
											"end": 2155,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2140,
											"end": 2155,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2140,
											"end": 2155,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2140,
											"end": 2155,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2140,
											"end": 2155,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2140,
											"end": 2155,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2140,
											"end": 2155,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2140,
											"end": 2155,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2140,
											"end": 2155,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2140,
											"end": 2155,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2140,
											"end": 2155,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "tag",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "PUSH",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "tag",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2056,
											"end": 2163,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2056,
											"end": 2163,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2056,
											"end": 2163,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2056,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 501,
											"end": 531,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 501,
											"end": 531,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 501,
											"end": 531,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "1047"
										},
										{
											"begin": 501,
											"end": 531,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 501,
											"end": 531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 3371,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 2798,
											"end": 3371,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2878,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2875,
											"end": 2886,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2879,
											"end": 2885,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2886,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2886,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2886,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2875,
											"end": 2886,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2886,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2886,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2886,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2886,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2875,
											"end": 2886,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2886,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2875,
											"end": 2886,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2894,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2875,
											"end": 2894,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2894,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2875,
											"end": 2894,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2894,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2894,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2894,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2875,
											"end": 2894,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2894,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2894,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2894,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2875,
											"end": 2894,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2861,
											"end": 2894,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2861,
											"end": 2894,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2861,
											"end": 2871,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2861,
											"end": 2894,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2861,
											"end": 2894,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2861,
											"end": 2894,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2853,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 2853,
											"end": 2934,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2853,
											"end": 2934,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2853,
											"end": 2934,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2853,
											"end": 2934,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2853,
											"end": 2934,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2853,
											"end": 2934,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2853,
											"end": 2934,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2853,
											"end": 2934,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2853,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 2853,
											"end": 2934,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2853,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 2853,
											"end": 2934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2853,
											"end": 2934,
											"name": "tag",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 2853,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2853,
											"end": 2934,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2853,
											"end": 2934,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2853,
											"end": 2934,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2853,
											"end": 2934,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2853,
											"end": 2934,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2853,
											"end": 2934,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2853,
											"end": 2934,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2853,
											"end": 2934,
											"name": "tag",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 2853,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2954,
											"end": 2957,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2954,
											"end": 2965,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2958,
											"end": 2964,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2954,
											"end": 2965,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2954,
											"end": 2965,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2954,
											"end": 2965,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2965,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2954,
											"end": 2965,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2954,
											"end": 2965,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2954,
											"end": 2965,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2954,
											"end": 2965,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2965,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2954,
											"end": 2965,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2965,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2954,
											"end": 2975,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2954,
											"end": 2975,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2954,
											"end": 2975,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 2954,
											"end": 2975,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2954,
											"end": 2975,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2954,
											"end": 2975,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2954,
											"end": 2975,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2954,
											"end": 2975,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2954,
											"end": 2975,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2954,
											"end": 2975,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2954,
											"end": 2975,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2954,
											"end": 2975,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2953,
											"end": 2975,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2945,
											"end": 3002,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 2945,
											"end": 3002,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2945,
											"end": 3002,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2945,
											"end": 3002,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2945,
											"end": 3002,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2945,
											"end": 3002,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2945,
											"end": 3002,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2945,
											"end": 3002,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2945,
											"end": 3002,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2945,
											"end": 3002,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 2945,
											"end": 3002,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2945,
											"end": 3002,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 2945,
											"end": 3002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2945,
											"end": 3002,
											"name": "tag",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 2945,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2945,
											"end": 3002,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2945,
											"end": 3002,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2945,
											"end": 3002,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2945,
											"end": 3002,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2945,
											"end": 3002,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2945,
											"end": 3002,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2945,
											"end": 3002,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2945,
											"end": 3002,
											"name": "tag",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 2945,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3077,
											"end": 3081,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3053,
											"end": 3056,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 3053,
											"end": 3064,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3057,
											"end": 3063,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3053,
											"end": 3064,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3053,
											"end": 3064,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3053,
											"end": 3064,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3053,
											"end": 3064,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3053,
											"end": 3064,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3053,
											"end": 3064,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3053,
											"end": 3064,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3053,
											"end": 3064,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3053,
											"end": 3064,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3053,
											"end": 3064,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3053,
											"end": 3064,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3053,
											"end": 3074,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3053,
											"end": 3074,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3053,
											"end": 3074,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 3053,
											"end": 3081,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3053,
											"end": 3081,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3053,
											"end": 3081,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3053,
											"end": 3081,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3053,
											"end": 3081,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3053,
											"end": 3081,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 3053,
											"end": 3081,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3053,
											"end": 3081,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 3053,
											"end": 3081,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3053,
											"end": 3081,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3053,
											"end": 3081,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3053,
											"end": 3081,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3053,
											"end": 3081,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3053,
											"end": 3081,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3053,
											"end": 3081,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 3053,
											"end": 3081,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3053,
											"end": 3081,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3053,
											"end": 3081,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3095,
											"end": 3114,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3116,
											"end": 3131,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3133,
											"end": 3147,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3149,
											"end": 3168,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3172,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 3188,
											"end": 3194,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3172,
											"end": 3187,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3172,
											"end": 3195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3172,
											"end": 3195,
											"name": "tag",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 3172,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3094,
											"end": 3195,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3094,
											"end": 3195,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3094,
											"end": 3195,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3094,
											"end": 3195,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3094,
											"end": 3195,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3094,
											"end": 3195,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3094,
											"end": 3195,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3094,
											"end": 3195,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3272,
											"end": 3277,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "1045"
										},
										{
											"begin": 3272,
											"end": 3286,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3272,
											"end": 3286,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3272,
											"end": 3286,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 3287,
											"end": 3298,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3300,
											"end": 3306,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 3272,
											"end": 3307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "tag",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3272,
											"end": 3307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "tag",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 3272,
											"end": 3307,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3258,
											"end": 3307,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3258,
											"end": 3307,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3333,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3318,
											"end": 3359,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 3318,
											"end": 3359,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3318,
											"end": 3359,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3318,
											"end": 3359,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3318,
											"end": 3359,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3318,
											"end": 3359,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3318,
											"end": 3359,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3318,
											"end": 3359,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3318,
											"end": 3359,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3318,
											"end": 3359,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 3318,
											"end": 3359,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3318,
											"end": 3359,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 3318,
											"end": 3359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3318,
											"end": 3359,
											"name": "tag",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 3318,
											"end": 3359,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3318,
											"end": 3359,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3318,
											"end": 3359,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3318,
											"end": 3359,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3318,
											"end": 3359,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3318,
											"end": 3359,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3318,
											"end": 3359,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3318,
											"end": 3359,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3318,
											"end": 3359,
											"name": "tag",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 3318,
											"end": 3359,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2842,
											"end": 3371,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2842,
											"end": 3371,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2842,
											"end": 3371,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2842,
											"end": 3371,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2842,
											"end": 3371,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 3371,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 3371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 958,
											"end": 991,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 958,
											"end": 991,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 958,
											"end": 991,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 958,
											"end": 991,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 958,
											"end": 991,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 958,
											"end": 991,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 958,
											"end": 991,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 958,
											"end": 991,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 958,
											"end": 991,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 958,
											"end": 991,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 958,
											"end": 991,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 958,
											"end": 991,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 958,
											"end": 991,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 958,
											"end": 991,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 958,
											"end": 991,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 958,
											"end": 991,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 958,
											"end": 991,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 958,
											"end": 991,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 958,
											"end": 991,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 958,
											"end": 991,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "PUSH",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 958,
											"end": 991,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 958,
											"end": 991,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 958,
											"end": 991,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 958,
											"end": 991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "tag",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 905,
											"end": 950,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 905,
											"end": 950,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 905,
											"end": 950,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 905,
											"end": 950,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 905,
											"end": 950,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 905,
											"end": 950,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 905,
											"end": 950,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 905,
											"end": 950,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "tag",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 905,
											"end": 950,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 905,
											"end": 950,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 905,
											"end": 950,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 905,
											"end": 950,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 905,
											"end": 950,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 905,
											"end": 950,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 905,
											"end": 950,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 905,
											"end": 950,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 905,
											"end": 950,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 905,
											"end": 950,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 905,
											"end": 950,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 905,
											"end": 950,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 905,
											"end": 950,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 905,
											"end": 950,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 905,
											"end": 950,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 905,
											"end": 950,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 905,
											"end": 950,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 905,
											"end": 950,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 905,
											"end": 950,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "PUSH",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 905,
											"end": 950,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 905,
											"end": 950,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 905,
											"end": 950,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 905,
											"end": 950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 2050,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1950,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1994,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 1994,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 1994,
											"end": 2006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1994,
											"end": 2006,
											"name": "tag",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 1994,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2026,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2023,
											"end": 2030,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2029,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2030,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2030,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2030,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2023,
											"end": 2030,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2030,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2030,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2030,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2030,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2023,
											"end": 2030,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2030,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2030,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "PUSH",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 2050,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 2050,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 2050,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 2050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2170,
											"end": 2788,
											"name": "tag",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 2170,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2239,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2240,
											"end": 2247,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2249,
											"end": 2256,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2258,
											"end": 2265,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2292,
											"end": 2307,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2310,
											"end": 2325,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 2292,
											"end": 2325,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2292,
											"end": 2325,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2338,
											"end": 2354,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2368,
											"end": 2371,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2368,
											"end": 2379,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2372,
											"end": 2378,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 2368,
											"end": 2379,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2368,
											"end": 2379,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2368,
											"end": 2379,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2368,
											"end": 2379,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2368,
											"end": 2379,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2368,
											"end": 2379,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2368,
											"end": 2379,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2368,
											"end": 2379,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2368,
											"end": 2379,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2368,
											"end": 2379,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2368,
											"end": 2379,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2368,
											"end": 2389,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2368,
											"end": 2389,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2368,
											"end": 2389,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2357,
											"end": 2364,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2357,
											"end": 2389,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 2357,
											"end": 2389,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2357,
											"end": 2389,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2357,
											"end": 2389,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 2357,
											"end": 2389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2357,
											"end": 2389,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 2357,
											"end": 2389,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2338,
											"end": 2389,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2338,
											"end": 2389,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2439,
											"end": 2441,
											"name": "PUSH",
											"source": 8,
											"value": "3C"
										},
										{
											"begin": 2416,
											"end": 2419,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2416,
											"end": 2427,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2420,
											"end": 2426,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 2416,
											"end": 2427,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2416,
											"end": 2427,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2416,
											"end": 2427,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2416,
											"end": 2427,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2416,
											"end": 2427,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2416,
											"end": 2427,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2416,
											"end": 2427,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2416,
											"end": 2427,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2416,
											"end": 2427,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2416,
											"end": 2427,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2416,
											"end": 2427,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2416,
											"end": 2436,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2416,
											"end": 2436,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2416,
											"end": 2436,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2416,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 2416,
											"end": 2441,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2416,
											"end": 2441,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2416,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 2416,
											"end": 2441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2416,
											"end": 2441,
											"name": "tag",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 2416,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2404,
											"end": 2412,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2404,
											"end": 2441,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2400,
											"end": 2506,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2400,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 2400,
											"end": 2506,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2492,
											"end": 2494,
											"name": "PUSH",
											"source": 8,
											"value": "3C"
										},
										{
											"begin": 2469,
											"end": 2472,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2469,
											"end": 2480,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2473,
											"end": 2479,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 2469,
											"end": 2480,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2469,
											"end": 2480,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2469,
											"end": 2480,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2469,
											"end": 2480,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2469,
											"end": 2480,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2469,
											"end": 2480,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2469,
											"end": 2480,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2469,
											"end": 2480,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2469,
											"end": 2480,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2469,
											"end": 2480,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2469,
											"end": 2480,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2469,
											"end": 2489,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2469,
											"end": 2489,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2469,
											"end": 2489,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2469,
											"end": 2494,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 2469,
											"end": 2494,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2469,
											"end": 2494,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2469,
											"end": 2494,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 2469,
											"end": 2494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2469,
											"end": 2494,
											"name": "tag",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 2469,
											"end": 2494,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2458,
											"end": 2494,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2458,
											"end": 2494,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2400,
											"end": 2506,
											"name": "tag",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 2400,
											"end": 2506,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2648,
											"end": 2662,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2676,
											"end": 2677,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2665,
											"end": 2673,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2665,
											"end": 2677,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 2665,
											"end": 2677,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2665,
											"end": 2677,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2665,
											"end": 2677,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 2665,
											"end": 2677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2665,
											"end": 2677,
											"name": "tag",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 2665,
											"end": 2677,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2648,
											"end": 2677,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2648,
											"end": 2677,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2701,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2698,
											"end": 2709,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2702,
											"end": 2708,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2709,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2709,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2709,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2698,
											"end": 2709,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2709,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2709,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2709,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2709,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2698,
											"end": 2709,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2709,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2698,
											"end": 2709,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2717,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2698,
											"end": 2717,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2717,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2698,
											"end": 2717,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2717,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2717,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2717,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2698,
											"end": 2717,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2717,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2717,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2717,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2698,
											"end": 2717,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2719,
											"end": 2722,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2719,
											"end": 2730,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2723,
											"end": 2729,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 2719,
											"end": 2730,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2719,
											"end": 2730,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2719,
											"end": 2730,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2719,
											"end": 2730,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2719,
											"end": 2730,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2719,
											"end": 2730,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2719,
											"end": 2730,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2719,
											"end": 2730,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2719,
											"end": 2730,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2719,
											"end": 2730,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2719,
											"end": 2730,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2719,
											"end": 2739,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2719,
											"end": 2739,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2719,
											"end": 2739,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2741,
											"end": 2747,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2760,
											"end": 2763,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2760,
											"end": 2771,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2764,
											"end": 2770,
											"name": "DUP13",
											"source": 8
										},
										{
											"begin": 2760,
											"end": 2771,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2760,
											"end": 2771,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2760,
											"end": 2771,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2760,
											"end": 2771,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2760,
											"end": 2771,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2760,
											"end": 2771,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2760,
											"end": 2771,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2760,
											"end": 2771,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2760,
											"end": 2771,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2760,
											"end": 2771,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2760,
											"end": 2771,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2760,
											"end": 2778,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2760,
											"end": 2778,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2760,
											"end": 2778,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2750,
											"end": 2756,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2750,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 2750,
											"end": 2778,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2750,
											"end": 2778,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2750,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 2750,
											"end": 2778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2750,
											"end": 2778,
											"name": "tag",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 2750,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2780,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2780,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2780,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2780,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2780,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2780,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2780,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2780,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2780,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2780,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2780,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2170,
											"end": 2788,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2170,
											"end": 2788,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2170,
											"end": 2788,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2170,
											"end": 2788,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2170,
											"end": 2788,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2170,
											"end": 2788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 464,
											"end": 494,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 464,
											"end": 494,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 464,
											"end": 494,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "1045"
										},
										{
											"begin": 464,
											"end": 494,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 464,
											"end": 494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 827,
											"end": 939,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 892,
											"end": 899,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 925,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 918,
											"end": 932,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 911,
											"end": 932,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 911,
											"end": 932,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 827,
											"end": 939,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 827,
											"end": 939,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 827,
											"end": 939,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 827,
											"end": 939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1051,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1039,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 945,
											"end": 1068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "105"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 121,
											"name": "tag",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 7,
											"end": 121,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 74,
											"end": 80,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 108,
											"end": 113,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 102,
											"end": 114,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 92,
											"end": 114,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 92,
											"end": 114,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 121,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7,
											"end": 121,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7,
											"end": 121,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 127,
											"end": 311,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 127,
											"end": 311,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 226,
											"end": 237,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 266,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 255,
											"end": 258,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 248,
											"end": 267,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 300,
											"end": 304,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 295,
											"end": 298,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 291,
											"end": 305,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 276,
											"end": 305,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 276,
											"end": 305,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 127,
											"end": 311,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 127,
											"end": 311,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 127,
											"end": 311,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 127,
											"end": 311,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 127,
											"end": 311,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 317,
											"end": 449,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 317,
											"end": 449,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 384,
											"end": 388,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 410,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 399,
											"end": 410,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 399,
											"end": 410,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 437,
											"end": 441,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 432,
											"end": 435,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 442,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 420,
											"end": 442,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 420,
											"end": 442,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 317,
											"end": 449,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 317,
											"end": 449,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 317,
											"end": 449,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 317,
											"end": 449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 455,
											"end": 532,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 455,
											"end": 532,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 492,
											"end": 499,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 521,
											"end": 526,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 510,
											"end": 526,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 510,
											"end": 526,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 455,
											"end": 532,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 455,
											"end": 532,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 455,
											"end": 532,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 455,
											"end": 532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 538,
											"end": 646,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 538,
											"end": 646,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 615,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 633,
											"end": 638,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 615,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 615,
											"end": 639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 615,
											"end": 639,
											"name": "tag",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 615,
											"end": 639,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 610,
											"end": 613,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 603,
											"end": 640,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 538,
											"end": 646,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 538,
											"end": 646,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 538,
											"end": 646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 652,
											"end": 831,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 652,
											"end": 831,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 721,
											"end": 731,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 742,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 784,
											"end": 787,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 776,
											"end": 782,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 742,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 742,
											"end": 788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 742,
											"end": 788,
											"name": "tag",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 742,
											"end": 788,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 820,
											"end": 824,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 815,
											"end": 818,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 811,
											"end": 825,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 797,
											"end": 825,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 797,
											"end": 825,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 652,
											"end": 831,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 652,
											"end": 831,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 652,
											"end": 831,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 652,
											"end": 831,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 652,
											"end": 831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 837,
											"end": 950,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 837,
											"end": 950,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 907,
											"end": 911,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 939,
											"end": 943,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 934,
											"end": 937,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 930,
											"end": 944,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 922,
											"end": 944,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 922,
											"end": 944,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 837,
											"end": 950,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 837,
											"end": 950,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 837,
											"end": 950,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 837,
											"end": 950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 986,
											"end": 1718,
											"name": "tag",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 986,
											"end": 1718,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1105,
											"end": 1108,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1134,
											"end": 1188,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 1182,
											"end": 1187,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1134,
											"end": 1188,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 1134,
											"end": 1188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1134,
											"end": 1188,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 1134,
											"end": 1188,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1204,
											"end": 1290,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 1283,
											"end": 1289,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1278,
											"end": 1281,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1204,
											"end": 1290,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 1204,
											"end": 1290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1204,
											"end": 1290,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 1204,
											"end": 1290,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1290,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1290,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1314,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1314,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 1314,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1314,
											"end": 1370,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 1314,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1393,
											"end": 1400,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1424,
											"end": 1425,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1409,
											"end": 1693,
											"name": "tag",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 1409,
											"end": 1693,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1434,
											"end": 1440,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1431,
											"end": 1432,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1428,
											"end": 1441,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 1693,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 1409,
											"end": 1693,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1510,
											"end": 1516,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1504,
											"end": 1517,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1537,
											"end": 1600,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 1596,
											"end": 1599,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 1581,
											"end": 1594,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1537,
											"end": 1600,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 1537,
											"end": 1600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1537,
											"end": 1600,
											"name": "tag",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 1537,
											"end": 1600,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1530,
											"end": 1600,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 1530,
											"end": 1600,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1623,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 1676,
											"end": 1682,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1623,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 1623,
											"end": 1683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1623,
											"end": 1683,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 1623,
											"end": 1683,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1613,
											"end": 1683,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1613,
											"end": 1683,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1469,
											"end": 1693,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1456,
											"end": 1457,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1453,
											"end": 1454,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1449,
											"end": 1458,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1444,
											"end": 1458,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1444,
											"end": 1458,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 1409,
											"end": 1693,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 1693,
											"name": "tag",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 1409,
											"end": 1693,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1413,
											"end": 1427,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1709,
											"end": 1712,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1702,
											"end": 1712,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1702,
											"end": 1712,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1110,
											"end": 1718,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1110,
											"end": 1718,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1110,
											"end": 1718,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 986,
											"end": 1718,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 986,
											"end": 1718,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 986,
											"end": 1718,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 986,
											"end": 1718,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 986,
											"end": 1718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1724,
											"end": 2097,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 1724,
											"end": 2097,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1867,
											"end": 1871,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1905,
											"end": 1907,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1894,
											"end": 1903,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1890,
											"end": 1908,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1882,
											"end": 1908,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1882,
											"end": 1908,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1954,
											"end": 1963,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1948,
											"end": 1952,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1944,
											"end": 1964,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1940,
											"end": 1941,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1929,
											"end": 1938,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1925,
											"end": 1942,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1918,
											"end": 1965,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1982,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 2085,
											"end": 2089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2076,
											"end": 2082,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1982,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 1982,
											"end": 2090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1982,
											"end": 2090,
											"name": "tag",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 1982,
											"end": 2090,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1974,
											"end": 2090,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1974,
											"end": 2090,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1724,
											"end": 2097,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1724,
											"end": 2097,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1724,
											"end": 2097,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1724,
											"end": 2097,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1724,
											"end": 2097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2184,
											"end": 2301,
											"name": "tag",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 2184,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2294,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2290,
											"end": 2291,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2430,
											"end": 2556,
											"name": "tag",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 2430,
											"end": 2556,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2467,
											"end": 2474,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2507,
											"end": 2549,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2500,
											"end": 2505,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2496,
											"end": 2550,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2485,
											"end": 2550,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2485,
											"end": 2550,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2430,
											"end": 2556,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2430,
											"end": 2556,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2430,
											"end": 2556,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2430,
											"end": 2556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2562,
											"end": 2658,
											"name": "tag",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 2562,
											"end": 2658,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2606,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2628,
											"end": 2652,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 2646,
											"end": 2651,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2628,
											"end": 2652,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 2628,
											"end": 2652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2628,
											"end": 2652,
											"name": "tag",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 2628,
											"end": 2652,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2617,
											"end": 2652,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2617,
											"end": 2652,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2562,
											"end": 2658,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2562,
											"end": 2658,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2562,
											"end": 2658,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2562,
											"end": 2658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2664,
											"end": 2786,
											"name": "tag",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 2664,
											"end": 2786,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2737,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 2755,
											"end": 2760,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2737,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 2737,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2737,
											"end": 2761,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 2737,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2730,
											"end": 2735,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2727,
											"end": 2762,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2717,
											"end": 2780,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 2717,
											"end": 2780,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2777,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2773,
											"end": 2774,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2766,
											"end": 2778,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2717,
											"end": 2780,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 2717,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2664,
											"end": 2786,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2664,
											"end": 2786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2792,
											"end": 2931,
											"name": "tag",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 2792,
											"end": 2931,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2838,
											"end": 2843,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2876,
											"end": 2882,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2863,
											"end": 2883,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2854,
											"end": 2883,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2854,
											"end": 2883,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2892,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 2919,
											"end": 2924,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2892,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 2892,
											"end": 2925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2892,
											"end": 2925,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 2892,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2792,
											"end": 2931,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2792,
											"end": 2931,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2792,
											"end": 2931,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2792,
											"end": 2931,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2792,
											"end": 2931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2937,
											"end": 3266,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 2937,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2996,
											"end": 3002,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3045,
											"end": 3047,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3033,
											"end": 3042,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3024,
											"end": 3031,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3020,
											"end": 3043,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3016,
											"end": 3048,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3013,
											"end": 3132,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3013,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 3013,
											"end": 3132,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3051,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 3051,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 3051,
											"end": 3130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3051,
											"end": 3130,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 3051,
											"end": 3130,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3013,
											"end": 3132,
											"name": "tag",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 3013,
											"end": 3132,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3171,
											"end": 3172,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3196,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 3241,
											"end": 3248,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3232,
											"end": 3238,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3221,
											"end": 3230,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3217,
											"end": 3239,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3196,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 3196,
											"end": 3249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3196,
											"end": 3249,
											"name": "tag",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 3196,
											"end": 3249,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3186,
											"end": 3249,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3186,
											"end": 3249,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3142,
											"end": 3259,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2937,
											"end": 3266,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2937,
											"end": 3266,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2937,
											"end": 3266,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2937,
											"end": 3266,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2937,
											"end": 3266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3272,
											"end": 3390,
											"name": "tag",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 3272,
											"end": 3390,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3359,
											"end": 3383,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 3377,
											"end": 3382,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3359,
											"end": 3383,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 3359,
											"end": 3383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3359,
											"end": 3383,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 3359,
											"end": 3383,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3354,
											"end": 3357,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3272,
											"end": 3390,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3272,
											"end": 3390,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3272,
											"end": 3390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3396,
											"end": 3618,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 3396,
											"end": 3618,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3489,
											"end": 3493,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3527,
											"end": 3529,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3516,
											"end": 3525,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3512,
											"end": 3530,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3504,
											"end": 3530,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3504,
											"end": 3530,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3540,
											"end": 3611,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 3608,
											"end": 3609,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3597,
											"end": 3606,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3593,
											"end": 3610,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3584,
											"end": 3590,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3540,
											"end": 3611,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 3540,
											"end": 3611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3540,
											"end": 3611,
											"name": "tag",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 3540,
											"end": 3611,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3396,
											"end": 3618,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3396,
											"end": 3618,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3396,
											"end": 3618,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3396,
											"end": 3618,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3396,
											"end": 3618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3624,
											"end": 3746,
											"name": "tag",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 3624,
											"end": 3746,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3697,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 3715,
											"end": 3720,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3697,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 3697,
											"end": 3721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3697,
											"end": 3721,
											"name": "tag",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 3697,
											"end": 3721,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3695,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3687,
											"end": 3722,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3677,
											"end": 3740,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 3677,
											"end": 3740,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3736,
											"end": 3737,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3733,
											"end": 3734,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3726,
											"end": 3738,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3677,
											"end": 3740,
											"name": "tag",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 3677,
											"end": 3740,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3624,
											"end": 3746,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3624,
											"end": 3746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3752,
											"end": 3891,
											"name": "tag",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 3752,
											"end": 3891,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3798,
											"end": 3803,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3836,
											"end": 3842,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3823,
											"end": 3843,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3814,
											"end": 3843,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3814,
											"end": 3843,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3852,
											"end": 3885,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 3879,
											"end": 3884,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3852,
											"end": 3885,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 3852,
											"end": 3885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3852,
											"end": 3885,
											"name": "tag",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 3852,
											"end": 3885,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3752,
											"end": 3891,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3752,
											"end": 3891,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3752,
											"end": 3891,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3752,
											"end": 3891,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3752,
											"end": 3891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3897,
											"end": 4226,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 3897,
											"end": 4226,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3956,
											"end": 3962,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4005,
											"end": 4007,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3993,
											"end": 4002,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3984,
											"end": 3991,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3980,
											"end": 4003,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3976,
											"end": 4008,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3973,
											"end": 4092,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3973,
											"end": 4092,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 3973,
											"end": 4092,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4011,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 4011,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 4011,
											"end": 4090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4011,
											"end": 4090,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 4011,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3973,
											"end": 4092,
											"name": "tag",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 3973,
											"end": 4092,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4131,
											"end": 4132,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4156,
											"end": 4209,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 4201,
											"end": 4208,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4192,
											"end": 4198,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4181,
											"end": 4190,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4177,
											"end": 4199,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4156,
											"end": 4209,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 4156,
											"end": 4209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4156,
											"end": 4209,
											"name": "tag",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 4156,
											"end": 4209,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4209,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4209,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4102,
											"end": 4219,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3897,
											"end": 4226,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3897,
											"end": 4226,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3897,
											"end": 4226,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3897,
											"end": 4226,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3897,
											"end": 4226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4706,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 4232,
											"end": 4706,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4300,
											"end": 4306,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4308,
											"end": 4314,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4357,
											"end": 4359,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4345,
											"end": 4354,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4336,
											"end": 4343,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4332,
											"end": 4355,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4328,
											"end": 4360,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4325,
											"end": 4444,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4325,
											"end": 4444,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 4325,
											"end": 4444,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4363,
											"end": 4442,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 4363,
											"end": 4442,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 4363,
											"end": 4442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4363,
											"end": 4442,
											"name": "tag",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 4363,
											"end": 4442,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4325,
											"end": 4444,
											"name": "tag",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 4325,
											"end": 4444,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4483,
											"end": 4484,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4508,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 4553,
											"end": 4560,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4544,
											"end": 4550,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 4542,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4529,
											"end": 4551,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 4508,
											"end": 4561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4561,
											"name": "tag",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 4508,
											"end": 4561,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4561,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4561,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4454,
											"end": 4571,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4610,
											"end": 4612,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4636,
											"end": 4689,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 4681,
											"end": 4688,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4672,
											"end": 4678,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4661,
											"end": 4670,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4657,
											"end": 4679,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4636,
											"end": 4689,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 4636,
											"end": 4689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4636,
											"end": 4689,
											"name": "tag",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 4636,
											"end": 4689,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4626,
											"end": 4689,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4626,
											"end": 4689,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4581,
											"end": 4699,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4706,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4706,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4706,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4706,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4706,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4712,
											"end": 4820,
											"name": "tag",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 4712,
											"end": 4820,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4789,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 4807,
											"end": 4812,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4789,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 4789,
											"end": 4813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4789,
											"end": 4813,
											"name": "tag",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 4789,
											"end": 4813,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4784,
											"end": 4787,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4777,
											"end": 4814,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4712,
											"end": 4820,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4712,
											"end": 4820,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4712,
											"end": 4820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4826,
											"end": 4916,
											"name": "tag",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 4826,
											"end": 4916,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4860,
											"end": 4867,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4903,
											"end": 4908,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4896,
											"end": 4909,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4889,
											"end": 4910,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4878,
											"end": 4910,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4878,
											"end": 4910,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4826,
											"end": 4916,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4826,
											"end": 4916,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4826,
											"end": 4916,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4826,
											"end": 4916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4922,
											"end": 5021,
											"name": "tag",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 4922,
											"end": 5021,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4993,
											"end": 5014,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 5008,
											"end": 5013,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4993,
											"end": 5014,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 4993,
											"end": 5014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4993,
											"end": 5014,
											"name": "tag",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 4993,
											"end": 5014,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4988,
											"end": 4991,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4981,
											"end": 5015,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4922,
											"end": 5021,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4922,
											"end": 5021,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4922,
											"end": 5021,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 6488,
											"name": "tag",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 5099,
											"end": 6488,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5242,
											"end": 5246,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 5237,
											"end": 5240,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5233,
											"end": 5247,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5333,
											"end": 5337,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5326,
											"end": 5331,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5322,
											"end": 5338,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5316,
											"end": 5339,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5352,
											"end": 5415,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 5409,
											"end": 5413,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5404,
											"end": 5407,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5400,
											"end": 5414,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5386,
											"end": 5398,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5352,
											"end": 5415,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 5352,
											"end": 5415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5352,
											"end": 5415,
											"name": "tag",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 5352,
											"end": 5415,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5257,
											"end": 5425,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5509,
											"end": 5513,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5502,
											"end": 5507,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5498,
											"end": 5514,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5492,
											"end": 5515,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5528,
											"end": 5591,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 5585,
											"end": 5589,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5580,
											"end": 5583,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5590,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5562,
											"end": 5574,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5528,
											"end": 5591,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 5528,
											"end": 5591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5528,
											"end": 5591,
											"name": "tag",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 5528,
											"end": 5591,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5435,
											"end": 5601,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5687,
											"end": 5691,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5676,
											"end": 5692,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5670,
											"end": 5693,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5706,
											"end": 5769,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 5763,
											"end": 5767,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5758,
											"end": 5761,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5754,
											"end": 5768,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5740,
											"end": 5752,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5706,
											"end": 5769,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 5706,
											"end": 5769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5706,
											"end": 5769,
											"name": "tag",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 5706,
											"end": 5769,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5611,
											"end": 5779,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5866,
											"end": 5870,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5859,
											"end": 5864,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5855,
											"end": 5871,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5849,
											"end": 5872,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5885,
											"end": 5948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 5942,
											"end": 5946,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5937,
											"end": 5940,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5933,
											"end": 5947,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5919,
											"end": 5931,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5885,
											"end": 5948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 5885,
											"end": 5948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5885,
											"end": 5948,
											"name": "tag",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 5885,
											"end": 5948,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5789,
											"end": 5958,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6043,
											"end": 6047,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 6036,
											"end": 6041,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6032,
											"end": 6048,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6026,
											"end": 6049,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6062,
											"end": 6125,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 6119,
											"end": 6123,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 6114,
											"end": 6117,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6110,
											"end": 6124,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6096,
											"end": 6108,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6062,
											"end": 6125,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 6062,
											"end": 6125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6062,
											"end": 6125,
											"name": "tag",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 6062,
											"end": 6125,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5968,
											"end": 6135,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6222,
											"end": 6226,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 6215,
											"end": 6220,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6211,
											"end": 6227,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6205,
											"end": 6228,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6241,
											"end": 6298,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 6292,
											"end": 6296,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 6287,
											"end": 6290,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6283,
											"end": 6297,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6269,
											"end": 6281,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6241,
											"end": 6298,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 6241,
											"end": 6298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6241,
											"end": 6298,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 6241,
											"end": 6298,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6145,
											"end": 6308,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6395,
											"end": 6399,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 6388,
											"end": 6393,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6384,
											"end": 6400,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6378,
											"end": 6401,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6414,
											"end": 6471,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 6465,
											"end": 6469,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 6460,
											"end": 6463,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6456,
											"end": 6470,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6442,
											"end": 6454,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6414,
											"end": 6471,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 6414,
											"end": 6471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6414,
											"end": 6471,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 6414,
											"end": 6471,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6318,
											"end": 6481,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5211,
											"end": 6488,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 6488,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 6488,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 6488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6494,
											"end": 6809,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 6494,
											"end": 6809,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6633,
											"end": 6637,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6671,
											"end": 6674,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 6660,
											"end": 6669,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6656,
											"end": 6675,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6648,
											"end": 6675,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6648,
											"end": 6675,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6685,
											"end": 6802,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 6799,
											"end": 6800,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6788,
											"end": 6797,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6784,
											"end": 6801,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6775,
											"end": 6781,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6685,
											"end": 6802,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 6685,
											"end": 6802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6685,
											"end": 6802,
											"name": "tag",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 6685,
											"end": 6802,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6494,
											"end": 6809,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6494,
											"end": 6809,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6494,
											"end": 6809,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6494,
											"end": 6809,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6494,
											"end": 6809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6815,
											"end": 6952,
											"name": "tag",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 6815,
											"end": 6952,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6905,
											"end": 6911,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6939,
											"end": 6944,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6933,
											"end": 6945,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6923,
											"end": 6945,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6923,
											"end": 6945,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6815,
											"end": 6952,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6815,
											"end": 6952,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6815,
											"end": 6952,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6815,
											"end": 6952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6958,
											"end": 7165,
											"name": "tag",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 6958,
											"end": 7165,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7080,
											"end": 7091,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7114,
											"end": 7120,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7109,
											"end": 7112,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7102,
											"end": 7121,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7154,
											"end": 7158,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7149,
											"end": 7152,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7145,
											"end": 7159,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7130,
											"end": 7159,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7130,
											"end": 7159,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6958,
											"end": 7165,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6958,
											"end": 7165,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6958,
											"end": 7165,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6958,
											"end": 7165,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6958,
											"end": 7165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7171,
											"end": 7326,
											"name": "tag",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 7171,
											"end": 7326,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7265,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7287,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7276,
											"end": 7287,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7276,
											"end": 7287,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7314,
											"end": 7318,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7309,
											"end": 7312,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7305,
											"end": 7319,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7297,
											"end": 7319,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7297,
											"end": 7319,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7171,
											"end": 7326,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7171,
											"end": 7326,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7171,
											"end": 7326,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7171,
											"end": 7326,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7404,
											"end": 8783,
											"name": "tag",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 7404,
											"end": 8783,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7537,
											"end": 7541,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 7532,
											"end": 7535,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7528,
											"end": 7542,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7628,
											"end": 7632,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7621,
											"end": 7626,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7617,
											"end": 7633,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7611,
											"end": 7634,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7647,
											"end": 7710,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 7704,
											"end": 7708,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7699,
											"end": 7702,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7695,
											"end": 7709,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7681,
											"end": 7693,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7647,
											"end": 7710,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 7647,
											"end": 7710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7647,
											"end": 7710,
											"name": "tag",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 7647,
											"end": 7710,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7552,
											"end": 7720,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7804,
											"end": 7808,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7797,
											"end": 7802,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7793,
											"end": 7809,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7787,
											"end": 7810,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7823,
											"end": 7886,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 7880,
											"end": 7884,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7875,
											"end": 7878,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7871,
											"end": 7885,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7857,
											"end": 7869,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7823,
											"end": 7886,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 7823,
											"end": 7886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7823,
											"end": 7886,
											"name": "tag",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 7823,
											"end": 7886,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7730,
											"end": 7896,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7982,
											"end": 7986,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7975,
											"end": 7980,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7971,
											"end": 7987,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7965,
											"end": 7988,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8001,
											"end": 8064,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 8058,
											"end": 8062,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8053,
											"end": 8056,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8049,
											"end": 8063,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8035,
											"end": 8047,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8001,
											"end": 8064,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 8001,
											"end": 8064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8001,
											"end": 8064,
											"name": "tag",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 8001,
											"end": 8064,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7906,
											"end": 8074,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8161,
											"end": 8165,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 8154,
											"end": 8159,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8150,
											"end": 8166,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8144,
											"end": 8167,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8180,
											"end": 8243,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 8237,
											"end": 8241,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 8232,
											"end": 8235,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8228,
											"end": 8242,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8226,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8180,
											"end": 8243,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 8180,
											"end": 8243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8180,
											"end": 8243,
											"name": "tag",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 8180,
											"end": 8243,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8084,
											"end": 8253,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8338,
											"end": 8342,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 8331,
											"end": 8336,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8327,
											"end": 8343,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8321,
											"end": 8344,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8357,
											"end": 8420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 8414,
											"end": 8418,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 8409,
											"end": 8412,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8405,
											"end": 8419,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8391,
											"end": 8403,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8357,
											"end": 8420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 8357,
											"end": 8420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8357,
											"end": 8420,
											"name": "tag",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 8357,
											"end": 8420,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8263,
											"end": 8430,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8517,
											"end": 8521,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 8510,
											"end": 8515,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8506,
											"end": 8522,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8500,
											"end": 8523,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8536,
											"end": 8593,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 8587,
											"end": 8591,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 8582,
											"end": 8585,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8578,
											"end": 8592,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8564,
											"end": 8576,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8536,
											"end": 8593,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 8536,
											"end": 8593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8536,
											"end": 8593,
											"name": "tag",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 8536,
											"end": 8593,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8440,
											"end": 8603,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8690,
											"end": 8694,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 8683,
											"end": 8688,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8679,
											"end": 8695,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8673,
											"end": 8696,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8709,
											"end": 8766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 8760,
											"end": 8764,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 8755,
											"end": 8758,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8751,
											"end": 8765,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8737,
											"end": 8749,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8709,
											"end": 8766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 8709,
											"end": 8766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8709,
											"end": 8766,
											"name": "tag",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 8709,
											"end": 8766,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8613,
											"end": 8776,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7506,
											"end": 8783,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7404,
											"end": 8783,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7404,
											"end": 8783,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7404,
											"end": 8783,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8789,
											"end": 9060,
											"name": "tag",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 8789,
											"end": 9060,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8904,
											"end": 8914,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8925,
											"end": 9017,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 9013,
											"end": 9016,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9005,
											"end": 9011,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8925,
											"end": 9017,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 8925,
											"end": 9017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8925,
											"end": 9017,
											"name": "tag",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 8925,
											"end": 9017,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9049,
											"end": 9053,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 9044,
											"end": 9047,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9040,
											"end": 9054,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9026,
											"end": 9054,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9026,
											"end": 9054,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8789,
											"end": 9060,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8789,
											"end": 9060,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8789,
											"end": 9060,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8789,
											"end": 9060,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8789,
											"end": 9060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9066,
											"end": 9202,
											"name": "tag",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 9066,
											"end": 9202,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9159,
											"end": 9163,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9191,
											"end": 9195,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9186,
											"end": 9189,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9182,
											"end": 9196,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9174,
											"end": 9196,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9174,
											"end": 9196,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9066,
											"end": 9202,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9066,
											"end": 9202,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9066,
											"end": 9202,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9066,
											"end": 9202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9284,
											"end": 10200,
											"name": "tag",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 9284,
											"end": 10200,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9449,
											"end": 9452,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9478,
											"end": 9555,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 9549,
											"end": 9554,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9478,
											"end": 9555,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 9478,
											"end": 9555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9478,
											"end": 9555,
											"name": "tag",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 9478,
											"end": 9555,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9571,
											"end": 9680,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 9673,
											"end": 9679,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9668,
											"end": 9671,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9571,
											"end": 9680,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 9571,
											"end": 9680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9571,
											"end": 9680,
											"name": "tag",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 9571,
											"end": 9680,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9564,
											"end": 9680,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 9564,
											"end": 9680,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9704,
											"end": 9783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 9777,
											"end": 9782,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9704,
											"end": 9783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 9704,
											"end": 9783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9704,
											"end": 9783,
											"name": "tag",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 9704,
											"end": 9783,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9806,
											"end": 9813,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9837,
											"end": 9838,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9822,
											"end": 10175,
											"name": "tag",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 9822,
											"end": 10175,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9847,
											"end": 9853,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9844,
											"end": 9845,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9841,
											"end": 9854,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 9822,
											"end": 10175,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9822,
											"end": 10175,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 9822,
											"end": 10175,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9923,
											"end": 9929,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9917,
											"end": 9930,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9950,
											"end": 10059,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 10055,
											"end": 10058,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 10040,
											"end": 10053,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9950,
											"end": 10059,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 9950,
											"end": 10059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9950,
											"end": 10059,
											"name": "tag",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 9950,
											"end": 10059,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9943,
											"end": 10059,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 9943,
											"end": 10059,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10082,
											"end": 10165,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 10158,
											"end": 10164,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10082,
											"end": 10165,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 10082,
											"end": 10165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10082,
											"end": 10165,
											"name": "tag",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 10082,
											"end": 10165,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10072,
											"end": 10165,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10072,
											"end": 10165,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9882,
											"end": 10175,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9869,
											"end": 9870,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 9866,
											"end": 9867,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9862,
											"end": 9871,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9857,
											"end": 9871,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9857,
											"end": 9871,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9822,
											"end": 10175,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 9822,
											"end": 10175,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9822,
											"end": 10175,
											"name": "tag",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 9822,
											"end": 10175,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9826,
											"end": 9840,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10191,
											"end": 10194,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10184,
											"end": 10194,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 10184,
											"end": 10194,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9454,
											"end": 10200,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9454,
											"end": 10200,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9454,
											"end": 10200,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9284,
											"end": 10200,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9284,
											"end": 10200,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9284,
											"end": 10200,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9284,
											"end": 10200,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9284,
											"end": 10200,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10206,
											"end": 10671,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10206,
											"end": 10671,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10395,
											"end": 10399,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10433,
											"end": 10435,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10422,
											"end": 10431,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10418,
											"end": 10436,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10410,
											"end": 10436,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10410,
											"end": 10436,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10482,
											"end": 10491,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10476,
											"end": 10480,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10472,
											"end": 10492,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10468,
											"end": 10469,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10457,
											"end": 10466,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10453,
											"end": 10470,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10446,
											"end": 10493,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10510,
											"end": 10664,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 10659,
											"end": 10663,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10650,
											"end": 10656,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10510,
											"end": 10664,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 10510,
											"end": 10664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10510,
											"end": 10664,
											"name": "tag",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 10510,
											"end": 10664,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10502,
											"end": 10664,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10502,
											"end": 10664,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10206,
											"end": 10671,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10206,
											"end": 10671,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10206,
											"end": 10671,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10206,
											"end": 10671,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10206,
											"end": 10671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10677,
											"end": 10795,
											"name": "tag",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 10677,
											"end": 10795,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10764,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 10782,
											"end": 10787,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10764,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 10764,
											"end": 10788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10764,
											"end": 10788,
											"name": "tag",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 10764,
											"end": 10788,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10759,
											"end": 10762,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10752,
											"end": 10789,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10677,
											"end": 10795,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10677,
											"end": 10795,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10677,
											"end": 10795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10801,
											"end": 11023,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 10801,
											"end": 11023,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10894,
											"end": 10898,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10932,
											"end": 10934,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10921,
											"end": 10930,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10917,
											"end": 10935,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10909,
											"end": 10935,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10909,
											"end": 10935,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10945,
											"end": 11016,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 11013,
											"end": 11014,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11002,
											"end": 11011,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10998,
											"end": 11015,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10989,
											"end": 10995,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10945,
											"end": 11016,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 10945,
											"end": 11016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10945,
											"end": 11016,
											"name": "tag",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 10945,
											"end": 11016,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10801,
											"end": 11023,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10801,
											"end": 11023,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10801,
											"end": 11023,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10801,
											"end": 11023,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10801,
											"end": 11023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11029,
											"end": 11138,
											"name": "tag",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 11029,
											"end": 11138,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11110,
											"end": 11131,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 11125,
											"end": 11130,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11110,
											"end": 11131,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 11110,
											"end": 11131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11110,
											"end": 11131,
											"name": "tag",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 11110,
											"end": 11131,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11105,
											"end": 11108,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11098,
											"end": 11132,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11029,
											"end": 11138,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11029,
											"end": 11138,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11029,
											"end": 11138,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11144,
											"end": 12006,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 11144,
											"end": 12006,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11393,
											"end": 11397,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11431,
											"end": 11434,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 11420,
											"end": 11429,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11416,
											"end": 11435,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11408,
											"end": 11435,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11408,
											"end": 11435,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11445,
											"end": 11516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 11513,
											"end": 11514,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11502,
											"end": 11511,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11498,
											"end": 11515,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11489,
											"end": 11495,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 11445,
											"end": 11516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 11445,
											"end": 11516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11445,
											"end": 11516,
											"name": "tag",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 11445,
											"end": 11516,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11526,
											"end": 11598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 11594,
											"end": 11596,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11583,
											"end": 11592,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11579,
											"end": 11597,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11570,
											"end": 11576,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 11526,
											"end": 11598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 11526,
											"end": 11598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11526,
											"end": 11598,
											"name": "tag",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 11526,
											"end": 11598,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11608,
											"end": 11680,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 11676,
											"end": 11678,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11665,
											"end": 11674,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11661,
											"end": 11679,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11652,
											"end": 11658,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 11608,
											"end": 11680,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 11608,
											"end": 11680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11608,
											"end": 11680,
											"name": "tag",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 11608,
											"end": 11680,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11690,
											"end": 11762,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 11758,
											"end": 11760,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 11747,
											"end": 11756,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11743,
											"end": 11761,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11734,
											"end": 11740,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 11690,
											"end": 11762,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 11690,
											"end": 11762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11690,
											"end": 11762,
											"name": "tag",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 11690,
											"end": 11762,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11772,
											"end": 11845,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 11840,
											"end": 11843,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 11829,
											"end": 11838,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11825,
											"end": 11844,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11816,
											"end": 11822,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 11772,
											"end": 11845,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 11772,
											"end": 11845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11772,
											"end": 11845,
											"name": "tag",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 11772,
											"end": 11845,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11855,
											"end": 11922,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 11917,
											"end": 11920,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 11906,
											"end": 11915,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11902,
											"end": 11921,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11893,
											"end": 11899,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11855,
											"end": 11922,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 11855,
											"end": 11922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11855,
											"end": 11922,
											"name": "tag",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 11855,
											"end": 11922,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11932,
											"end": 11999,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 11994,
											"end": 11997,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 11983,
											"end": 11992,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11979,
											"end": 11998,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11970,
											"end": 11976,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11932,
											"end": 11999,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 11932,
											"end": 11999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11932,
											"end": 11999,
											"name": "tag",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 11932,
											"end": 11999,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11144,
											"end": 12006,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 11144,
											"end": 12006,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 11144,
											"end": 12006,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11144,
											"end": 12006,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11144,
											"end": 12006,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11144,
											"end": 12006,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11144,
											"end": 12006,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11144,
											"end": 12006,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11144,
											"end": 12006,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11144,
											"end": 12006,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11144,
											"end": 12006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12012,
											"end": 12486,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 12012,
											"end": 12486,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12080,
											"end": 12086,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12088,
											"end": 12094,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12137,
											"end": 12139,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12116,
											"end": 12123,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12112,
											"end": 12135,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12108,
											"end": 12140,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 12105,
											"end": 12224,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12105,
											"end": 12224,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 12105,
											"end": 12224,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12143,
											"end": 12222,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 12143,
											"end": 12222,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 12143,
											"end": 12222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12143,
											"end": 12222,
											"name": "tag",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 12143,
											"end": 12222,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12105,
											"end": 12224,
											"name": "tag",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 12105,
											"end": 12224,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12263,
											"end": 12264,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12288,
											"end": 12341,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 12333,
											"end": 12340,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12324,
											"end": 12330,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12313,
											"end": 12322,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 12309,
											"end": 12331,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12288,
											"end": 12341,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 12288,
											"end": 12341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12288,
											"end": 12341,
											"name": "tag",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 12288,
											"end": 12341,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12278,
											"end": 12341,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12278,
											"end": 12341,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12234,
											"end": 12351,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12390,
											"end": 12392,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12416,
											"end": 12469,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 12461,
											"end": 12468,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12452,
											"end": 12458,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12441,
											"end": 12450,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 12437,
											"end": 12459,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12416,
											"end": 12469,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 12416,
											"end": 12469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12416,
											"end": 12469,
											"name": "tag",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 12416,
											"end": 12469,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12406,
											"end": 12469,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12406,
											"end": 12469,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12361,
											"end": 12479,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12012,
											"end": 12486,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12012,
											"end": 12486,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12012,
											"end": 12486,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12012,
											"end": 12486,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12012,
											"end": 12486,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12012,
											"end": 12486,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12492,
											"end": 13045,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 12492,
											"end": 13045,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12669,
											"end": 12673,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12707,
											"end": 12710,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 12696,
											"end": 12705,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12692,
											"end": 12711,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12684,
											"end": 12711,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12684,
											"end": 12711,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12721,
											"end": 12792,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 12789,
											"end": 12790,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12778,
											"end": 12787,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12774,
											"end": 12791,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12765,
											"end": 12771,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 12721,
											"end": 12792,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 12721,
											"end": 12792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12721,
											"end": 12792,
											"name": "tag",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 12721,
											"end": 12792,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12802,
											"end": 12874,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 12870,
											"end": 12872,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12859,
											"end": 12868,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12855,
											"end": 12873,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12846,
											"end": 12852,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 12802,
											"end": 12874,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 12802,
											"end": 12874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12802,
											"end": 12874,
											"name": "tag",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 12802,
											"end": 12874,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12884,
											"end": 12956,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 12952,
											"end": 12954,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12941,
											"end": 12950,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12937,
											"end": 12955,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12928,
											"end": 12934,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12884,
											"end": 12956,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 12884,
											"end": 12956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12884,
											"end": 12956,
											"name": "tag",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 12884,
											"end": 12956,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12966,
											"end": 13038,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 13034,
											"end": 13036,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 13023,
											"end": 13032,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13019,
											"end": 13037,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13010,
											"end": 13016,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12966,
											"end": 13038,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 12966,
											"end": 13038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12966,
											"end": 13038,
											"name": "tag",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 12966,
											"end": 13038,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12492,
											"end": 13045,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 12492,
											"end": 13045,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 12492,
											"end": 13045,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12492,
											"end": 13045,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12492,
											"end": 13045,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12492,
											"end": 13045,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12492,
											"end": 13045,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12492,
											"end": 13045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13051,
											"end": 13111,
											"name": "tag",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 13051,
											"end": 13111,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13079,
											"end": 13082,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13100,
											"end": 13105,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13093,
											"end": 13105,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13093,
											"end": 13105,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13051,
											"end": 13111,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13051,
											"end": 13111,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13051,
											"end": 13111,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13051,
											"end": 13111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13117,
											"end": 13259,
											"name": "tag",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 13117,
											"end": 13259,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13167,
											"end": 13176,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13200,
											"end": 13253,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 13218,
											"end": 13252,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 13227,
											"end": 13251,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 13245,
											"end": 13250,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13227,
											"end": 13251,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 13227,
											"end": 13251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13227,
											"end": 13251,
											"name": "tag",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 13227,
											"end": 13251,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13218,
											"end": 13252,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 13218,
											"end": 13252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13218,
											"end": 13252,
											"name": "tag",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 13218,
											"end": 13252,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13200,
											"end": 13253,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 13200,
											"end": 13253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13200,
											"end": 13253,
											"name": "tag",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 13200,
											"end": 13253,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13187,
											"end": 13253,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13187,
											"end": 13253,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13117,
											"end": 13259,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13117,
											"end": 13259,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13117,
											"end": 13259,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13117,
											"end": 13259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13265,
											"end": 13391,
											"name": "tag",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 13265,
											"end": 13391,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13315,
											"end": 13324,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13348,
											"end": 13385,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 13379,
											"end": 13384,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13348,
											"end": 13385,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 13348,
											"end": 13385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13348,
											"end": 13385,
											"name": "tag",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 13348,
											"end": 13385,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13335,
											"end": 13385,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13335,
											"end": 13385,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13265,
											"end": 13391,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13265,
											"end": 13391,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13265,
											"end": 13391,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13265,
											"end": 13391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13397,
											"end": 13539,
											"name": "tag",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 13397,
											"end": 13539,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13463,
											"end": 13472,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13496,
											"end": 13533,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 13527,
											"end": 13532,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13496,
											"end": 13533,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 13496,
											"end": 13533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13496,
											"end": 13533,
											"name": "tag",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 13496,
											"end": 13533,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13483,
											"end": 13533,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13483,
											"end": 13533,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13397,
											"end": 13539,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13397,
											"end": 13539,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13397,
											"end": 13539,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13397,
											"end": 13539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13545,
											"end": 13708,
											"name": "tag",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 13545,
											"end": 13708,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13648,
											"end": 13701,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 13695,
											"end": 13700,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13648,
											"end": 13701,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 13648,
											"end": 13701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13648,
											"end": 13701,
											"name": "tag",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 13648,
											"end": 13701,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13643,
											"end": 13646,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13636,
											"end": 13702,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13545,
											"end": 13708,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13545,
											"end": 13708,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13545,
											"end": 13708,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13714,
											"end": 13968,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 13714,
											"end": 13968,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13823,
											"end": 13827,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13861,
											"end": 13863,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13850,
											"end": 13859,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13846,
											"end": 13864,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13838,
											"end": 13864,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13838,
											"end": 13864,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13874,
											"end": 13961,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 13958,
											"end": 13959,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13947,
											"end": 13956,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13943,
											"end": 13960,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13934,
											"end": 13940,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13874,
											"end": 13961,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 13874,
											"end": 13961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13874,
											"end": 13961,
											"name": "tag",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 13874,
											"end": 13961,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13714,
											"end": 13968,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13714,
											"end": 13968,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13714,
											"end": 13968,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13714,
											"end": 13968,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13714,
											"end": 13968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13974,
											"end": 14117,
											"name": "tag",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 13974,
											"end": 14117,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14031,
											"end": 14036,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14062,
											"end": 14068,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14056,
											"end": 14069,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14047,
											"end": 14069,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14047,
											"end": 14069,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14078,
											"end": 14111,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 14105,
											"end": 14110,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14078,
											"end": 14111,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 14078,
											"end": 14111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14078,
											"end": 14111,
											"name": "tag",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 14078,
											"end": 14111,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13974,
											"end": 14117,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13974,
											"end": 14117,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13974,
											"end": 14117,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13974,
											"end": 14117,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13974,
											"end": 14117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14123,
											"end": 14474,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 14123,
											"end": 14474,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14193,
											"end": 14199,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14242,
											"end": 14244,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14230,
											"end": 14239,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14221,
											"end": 14228,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 14217,
											"end": 14240,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14213,
											"end": 14245,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 14210,
											"end": 14329,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14210,
											"end": 14329,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 14210,
											"end": 14329,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14248,
											"end": 14327,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 14248,
											"end": 14327,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 14248,
											"end": 14327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14248,
											"end": 14327,
											"name": "tag",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 14248,
											"end": 14327,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14210,
											"end": 14329,
											"name": "tag",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 14210,
											"end": 14329,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14368,
											"end": 14369,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14393,
											"end": 14457,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 14449,
											"end": 14456,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 14440,
											"end": 14446,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14429,
											"end": 14438,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 14425,
											"end": 14447,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14393,
											"end": 14457,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 14393,
											"end": 14457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14393,
											"end": 14457,
											"name": "tag",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 14393,
											"end": 14457,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14383,
											"end": 14457,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14383,
											"end": 14457,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14339,
											"end": 14467,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14123,
											"end": 14474,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14123,
											"end": 14474,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14123,
											"end": 14474,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14123,
											"end": 14474,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14123,
											"end": 14474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14480,
											"end": 14649,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 14480,
											"end": 14649,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14564,
											"end": 14575,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14598,
											"end": 14604,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14593,
											"end": 14596,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14586,
											"end": 14605,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14638,
											"end": 14642,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14633,
											"end": 14636,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14629,
											"end": 14643,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14614,
											"end": 14643,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14614,
											"end": 14643,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14480,
											"end": 14649,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14480,
											"end": 14649,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14480,
											"end": 14649,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14480,
											"end": 14649,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14480,
											"end": 14649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14655,
											"end": 14883,
											"name": "tag",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 14655,
											"end": 14883,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14795,
											"end": 14829,
											"name": "PUSH",
											"source": 9,
											"value": "596F752063616E206F6E6C7920636C61696D20796F7572206F776E207374616B"
										},
										{
											"begin": 14791,
											"end": 14792,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14783,
											"end": 14789,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14779,
											"end": 14793,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14772,
											"end": 14830,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14864,
											"end": 14875,
											"name": "PUSH",
											"source": 9,
											"value": "656420616D6F756E740000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14859,
											"end": 14861,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14851,
											"end": 14857,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14847,
											"end": 14862,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14840,
											"end": 14876,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14655,
											"end": 14883,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14655,
											"end": 14883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14889,
											"end": 15255,
											"name": "tag",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 14889,
											"end": 15255,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15031,
											"end": 15034,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15052,
											"end": 15119,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 15116,
											"end": 15118,
											"name": "PUSH",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 15111,
											"end": 15114,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15052,
											"end": 15119,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 15052,
											"end": 15119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15052,
											"end": 15119,
											"name": "tag",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 15052,
											"end": 15119,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15045,
											"end": 15119,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15045,
											"end": 15119,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15128,
											"end": 15221,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 15217,
											"end": 15220,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15128,
											"end": 15221,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 15128,
											"end": 15221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15128,
											"end": 15221,
											"name": "tag",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 15128,
											"end": 15221,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15246,
											"end": 15248,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15241,
											"end": 15244,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15237,
											"end": 15249,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15230,
											"end": 15249,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15230,
											"end": 15249,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14889,
											"end": 15255,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14889,
											"end": 15255,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14889,
											"end": 15255,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14889,
											"end": 15255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15261,
											"end": 15680,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 15261,
											"end": 15680,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15427,
											"end": 15431,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15465,
											"end": 15467,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15454,
											"end": 15463,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15450,
											"end": 15468,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15442,
											"end": 15468,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15442,
											"end": 15468,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15514,
											"end": 15523,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15508,
											"end": 15512,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15504,
											"end": 15524,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15500,
											"end": 15501,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15489,
											"end": 15498,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15485,
											"end": 15502,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15478,
											"end": 15525,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15542,
											"end": 15673,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 15668,
											"end": 15672,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15542,
											"end": 15673,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 15542,
											"end": 15673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15542,
											"end": 15673,
											"name": "tag",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 15542,
											"end": 15673,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15534,
											"end": 15673,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15534,
											"end": 15673,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15261,
											"end": 15680,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15261,
											"end": 15680,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15261,
											"end": 15680,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15261,
											"end": 15680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15686,
											"end": 15907,
											"name": "tag",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 15686,
											"end": 15907,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15826,
											"end": 15860,
											"name": "PUSH",
											"source": 9,
											"value": "52657761726420616C726561647920636C61696D656420796F757220616D6F75"
										},
										{
											"begin": 15822,
											"end": 15823,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15814,
											"end": 15820,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15810,
											"end": 15824,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15803,
											"end": 15861,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15895,
											"end": 15899,
											"name": "PUSH",
											"source": 9,
											"value": "6E74000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15890,
											"end": 15892,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15882,
											"end": 15888,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15878,
											"end": 15893,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15871,
											"end": 15900,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15686,
											"end": 15907,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15686,
											"end": 15907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15913,
											"end": 16279,
											"name": "tag",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 15913,
											"end": 16279,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16055,
											"end": 16058,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16076,
											"end": 16143,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 16140,
											"end": 16142,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 16135,
											"end": 16138,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16076,
											"end": 16143,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 16076,
											"end": 16143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16076,
											"end": 16143,
											"name": "tag",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 16076,
											"end": 16143,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16069,
											"end": 16143,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16069,
											"end": 16143,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16152,
											"end": 16245,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 16241,
											"end": 16244,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16152,
											"end": 16245,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 16152,
											"end": 16245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16152,
											"end": 16245,
											"name": "tag",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 16152,
											"end": 16245,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16270,
											"end": 16272,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 16265,
											"end": 16268,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16261,
											"end": 16273,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16254,
											"end": 16273,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16254,
											"end": 16273,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15913,
											"end": 16279,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15913,
											"end": 16279,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15913,
											"end": 16279,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15913,
											"end": 16279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16285,
											"end": 16704,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 16285,
											"end": 16704,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16451,
											"end": 16455,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16489,
											"end": 16491,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16478,
											"end": 16487,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16474,
											"end": 16492,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16466,
											"end": 16492,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16466,
											"end": 16492,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16538,
											"end": 16547,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16532,
											"end": 16536,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16528,
											"end": 16548,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 16524,
											"end": 16525,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16513,
											"end": 16522,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16509,
											"end": 16526,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16502,
											"end": 16549,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16566,
											"end": 16697,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 16692,
											"end": 16696,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16566,
											"end": 16697,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 16566,
											"end": 16697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16566,
											"end": 16697,
											"name": "tag",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 16566,
											"end": 16697,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16558,
											"end": 16697,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16558,
											"end": 16697,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16285,
											"end": 16704,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16285,
											"end": 16704,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16285,
											"end": 16704,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16285,
											"end": 16704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16710,
											"end": 16890,
											"name": "tag",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 16710,
											"end": 16890,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16758,
											"end": 16835,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16755,
											"end": 16756,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16748,
											"end": 16836,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16855,
											"end": 16859,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 16852,
											"end": 16853,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 16845,
											"end": 16860,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16879,
											"end": 16883,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 16876,
											"end": 16877,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16869,
											"end": 16884,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 16896,
											"end": 17306,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 16896,
											"end": 17306,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16936,
											"end": 16943,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16959,
											"end": 16979,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 16977,
											"end": 16978,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16959,
											"end": 16979,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 16959,
											"end": 16979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16959,
											"end": 16979,
											"name": "tag",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 16959,
											"end": 16979,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16954,
											"end": 16979,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16954,
											"end": 16979,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16993,
											"end": 17013,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 17011,
											"end": 17012,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16993,
											"end": 17013,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 16993,
											"end": 17013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16993,
											"end": 17013,
											"name": "tag",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 16993,
											"end": 17013,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16988,
											"end": 17013,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 16988,
											"end": 17013,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17048,
											"end": 17049,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17045,
											"end": 17046,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17041,
											"end": 17050,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 17070,
											"end": 17100,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 17088,
											"end": 17099,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17070,
											"end": 17100,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 17070,
											"end": 17100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17070,
											"end": 17100,
											"name": "tag",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 17070,
											"end": 17100,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17059,
											"end": 17100,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17059,
											"end": 17100,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17249,
											"end": 17250,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17240,
											"end": 17247,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17236,
											"end": 17251,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 17233,
											"end": 17234,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 17230,
											"end": 17252,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 17210,
											"end": 17211,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17203,
											"end": 17212,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 17183,
											"end": 17266,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 17160,
											"end": 17299,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 17160,
											"end": 17299,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17279,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 17279,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 17279,
											"end": 17297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17279,
											"end": 17297,
											"name": "tag",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 17279,
											"end": 17297,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17160,
											"end": 17299,
											"name": "tag",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 17160,
											"end": 17299,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16944,
											"end": 17306,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16896,
											"end": 17306,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 16896,
											"end": 17306,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16896,
											"end": 17306,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16896,
											"end": 17306,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16896,
											"end": 17306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17312,
											"end": 17503,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 17312,
											"end": 17503,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17352,
											"end": 17355,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17371,
											"end": 17391,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 17389,
											"end": 17390,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17371,
											"end": 17391,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 17371,
											"end": 17391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17371,
											"end": 17391,
											"name": "tag",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 17371,
											"end": 17391,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17366,
											"end": 17391,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17366,
											"end": 17391,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17405,
											"end": 17425,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 17423,
											"end": 17424,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17405,
											"end": 17425,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 17405,
											"end": 17425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17405,
											"end": 17425,
											"name": "tag",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 17405,
											"end": 17425,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17400,
											"end": 17425,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 17400,
											"end": 17425,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17448,
											"end": 17449,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17445,
											"end": 17446,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17441,
											"end": 17450,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17434,
											"end": 17450,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17434,
											"end": 17450,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17469,
											"end": 17472,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 17466,
											"end": 17467,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17463,
											"end": 17473,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 17460,
											"end": 17496,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 17460,
											"end": 17496,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 17460,
											"end": 17496,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17476,
											"end": 17494,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 17476,
											"end": 17494,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 17476,
											"end": 17494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17476,
											"end": 17494,
											"name": "tag",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 17476,
											"end": 17494,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17460,
											"end": 17496,
											"name": "tag",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 17460,
											"end": 17496,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17312,
											"end": 17503,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 17312,
											"end": 17503,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17312,
											"end": 17503,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17312,
											"end": 17503,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17312,
											"end": 17503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17509,
											"end": 17752,
											"name": "tag",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 17509,
											"end": 17752,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17649,
											"end": 17683,
											"name": "PUSH",
											"source": 9,
											"value": "596F752063616E206F6E6C7920636C61696D2061667465722074686520737461"
										},
										{
											"begin": 17645,
											"end": 17646,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17637,
											"end": 17643,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17633,
											"end": 17647,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17626,
											"end": 17684,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17718,
											"end": 17744,
											"name": "PUSH",
											"source": 9,
											"value": "6B696E67206475726174696F6E20686173207061737365640000000000000000"
										},
										{
											"begin": 17713,
											"end": 17715,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17705,
											"end": 17711,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17701,
											"end": 17716,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17694,
											"end": 17745,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17509,
											"end": 17752,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17509,
											"end": 17752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17758,
											"end": 18124,
											"name": "tag",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 17758,
											"end": 18124,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17900,
											"end": 17903,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17921,
											"end": 17988,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 17985,
											"end": 17987,
											"name": "PUSH",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 17980,
											"end": 17983,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17921,
											"end": 17988,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 17921,
											"end": 17988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17921,
											"end": 17988,
											"name": "tag",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 17921,
											"end": 17988,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17914,
											"end": 17988,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17914,
											"end": 17988,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17997,
											"end": 18090,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 18086,
											"end": 18089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17997,
											"end": 18090,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 17997,
											"end": 18090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17997,
											"end": 18090,
											"name": "tag",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 17997,
											"end": 18090,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18115,
											"end": 18117,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 18110,
											"end": 18113,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18106,
											"end": 18118,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18099,
											"end": 18118,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18099,
											"end": 18118,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17758,
											"end": 18124,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17758,
											"end": 18124,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17758,
											"end": 18124,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17758,
											"end": 18124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18130,
											"end": 18549,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 18130,
											"end": 18549,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18296,
											"end": 18300,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18334,
											"end": 18336,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18323,
											"end": 18332,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18319,
											"end": 18337,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18311,
											"end": 18337,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18311,
											"end": 18337,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18383,
											"end": 18392,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18377,
											"end": 18381,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18373,
											"end": 18393,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 18369,
											"end": 18370,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18358,
											"end": 18367,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18354,
											"end": 18371,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18347,
											"end": 18394,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18411,
											"end": 18542,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 18537,
											"end": 18541,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18411,
											"end": 18542,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 18411,
											"end": 18542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18411,
											"end": 18542,
											"name": "tag",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 18411,
											"end": 18542,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18403,
											"end": 18542,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18403,
											"end": 18542,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18130,
											"end": 18549,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18130,
											"end": 18549,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18130,
											"end": 18549,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18130,
											"end": 18549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18555,
											"end": 18887,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 18555,
											"end": 18887,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18676,
											"end": 18680,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18714,
											"end": 18716,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 18703,
											"end": 18712,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18699,
											"end": 18717,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18691,
											"end": 18717,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18691,
											"end": 18717,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18727,
											"end": 18798,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 18795,
											"end": 18796,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18784,
											"end": 18793,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18780,
											"end": 18797,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18771,
											"end": 18777,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 18727,
											"end": 18798,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 18727,
											"end": 18798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18727,
											"end": 18798,
											"name": "tag",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 18727,
											"end": 18798,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18808,
											"end": 18880,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 18876,
											"end": 18878,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18865,
											"end": 18874,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18861,
											"end": 18879,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18852,
											"end": 18858,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 18808,
											"end": 18880,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 18808,
											"end": 18880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18808,
											"end": 18880,
											"name": "tag",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 18808,
											"end": 18880,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18555,
											"end": 18887,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 18555,
											"end": 18887,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 18555,
											"end": 18887,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18555,
											"end": 18887,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18555,
											"end": 18887,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18555,
											"end": 18887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18893,
											"end": 19009,
											"name": "tag",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 18893,
											"end": 19009,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18963,
											"end": 18984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 18978,
											"end": 18983,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18963,
											"end": 18984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 18963,
											"end": 18984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18963,
											"end": 18984,
											"name": "tag",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 18963,
											"end": 18984,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18956,
											"end": 18961,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18953,
											"end": 18985,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 18943,
											"end": 19003,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 18943,
											"end": 19003,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 18999,
											"end": 19000,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18996,
											"end": 18997,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 18989,
											"end": 19001,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 18943,
											"end": 19003,
											"name": "tag",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 18943,
											"end": 19003,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18893,
											"end": 19009,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18893,
											"end": 19009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19015,
											"end": 19152,
											"name": "tag",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 19015,
											"end": 19152,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19069,
											"end": 19074,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19100,
											"end": 19106,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19094,
											"end": 19107,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 19085,
											"end": 19107,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19085,
											"end": 19107,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19116,
											"end": 19146,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 19140,
											"end": 19145,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19116,
											"end": 19146,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 19116,
											"end": 19146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19116,
											"end": 19146,
											"name": "tag",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 19116,
											"end": 19146,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19015,
											"end": 19152,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 19015,
											"end": 19152,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19015,
											"end": 19152,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19015,
											"end": 19152,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19015,
											"end": 19152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19158,
											"end": 19503,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 19158,
											"end": 19503,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19225,
											"end": 19231,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19274,
											"end": 19276,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 19262,
											"end": 19271,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19253,
											"end": 19260,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 19249,
											"end": 19272,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 19245,
											"end": 19277,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 19242,
											"end": 19361,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 19242,
											"end": 19361,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 19242,
											"end": 19361,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 19280,
											"end": 19359,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 19280,
											"end": 19359,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 19280,
											"end": 19359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19280,
											"end": 19359,
											"name": "tag",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 19280,
											"end": 19359,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19242,
											"end": 19361,
											"name": "tag",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 19242,
											"end": 19361,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19400,
											"end": 19401,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19425,
											"end": 19486,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 19478,
											"end": 19485,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 19469,
											"end": 19475,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19458,
											"end": 19467,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 19454,
											"end": 19476,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19425,
											"end": 19486,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 19425,
											"end": 19486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19425,
											"end": 19486,
											"name": "tag",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 19425,
											"end": 19486,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19415,
											"end": 19486,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19415,
											"end": 19486,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19371,
											"end": 19496,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19158,
											"end": 19503,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 19158,
											"end": 19503,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19158,
											"end": 19503,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19158,
											"end": 19503,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19158,
											"end": 19503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19509,
											"end": 19680,
											"name": "tag",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 19509,
											"end": 19680,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19649,
											"end": 19672,
											"name": "PUSH",
											"source": 9,
											"value": "546F6B656E207472616E73666572206661696C65640000000000000000000000"
										},
										{
											"begin": 19645,
											"end": 19646,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19637,
											"end": 19643,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19633,
											"end": 19647,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19626,
											"end": 19673,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19509,
											"end": 19680,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19509,
											"end": 19680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19686,
											"end": 20052,
											"name": "tag",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 19686,
											"end": 20052,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19828,
											"end": 19831,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19849,
											"end": 19916,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 19913,
											"end": 19915,
											"name": "PUSH",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 19908,
											"end": 19911,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 19849,
											"end": 19916,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 19849,
											"end": 19916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19849,
											"end": 19916,
											"name": "tag",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 19849,
											"end": 19916,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19842,
											"end": 19916,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19842,
											"end": 19916,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19925,
											"end": 20018,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 20014,
											"end": 20017,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19925,
											"end": 20018,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 19925,
											"end": 20018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19925,
											"end": 20018,
											"name": "tag",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 19925,
											"end": 20018,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20043,
											"end": 20045,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 20038,
											"end": 20041,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20034,
											"end": 20046,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20027,
											"end": 20046,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20027,
											"end": 20046,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19686,
											"end": 20052,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19686,
											"end": 20052,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19686,
											"end": 20052,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19686,
											"end": 20052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20058,
											"end": 20477,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 20058,
											"end": 20477,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20224,
											"end": 20228,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20262,
											"end": 20264,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 20251,
											"end": 20260,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20247,
											"end": 20265,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20239,
											"end": 20265,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20239,
											"end": 20265,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20311,
											"end": 20320,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20305,
											"end": 20309,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20301,
											"end": 20321,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 20297,
											"end": 20298,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20286,
											"end": 20295,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20282,
											"end": 20299,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20275,
											"end": 20322,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20339,
											"end": 20470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 20465,
											"end": 20469,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20339,
											"end": 20470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 20339,
											"end": 20470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20339,
											"end": 20470,
											"name": "tag",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 20339,
											"end": 20470,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20331,
											"end": 20470,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20331,
											"end": 20470,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20058,
											"end": 20477,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20058,
											"end": 20477,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20058,
											"end": 20477,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20058,
											"end": 20477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20483,
											"end": 20665,
											"name": "tag",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 20483,
											"end": 20665,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20623,
											"end": 20657,
											"name": "PUSH",
											"source": 9,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E207A65726F"
										},
										{
											"begin": 20619,
											"end": 20620,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20611,
											"end": 20617,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20607,
											"end": 20621,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20600,
											"end": 20658,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20483,
											"end": 20665,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20483,
											"end": 20665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20671,
											"end": 21037,
											"name": "tag",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 20671,
											"end": 21037,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20813,
											"end": 20816,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20834,
											"end": 20901,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 20898,
											"end": 20900,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 20893,
											"end": 20896,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20834,
											"end": 20901,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 20834,
											"end": 20901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20834,
											"end": 20901,
											"name": "tag",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 20834,
											"end": 20901,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20827,
											"end": 20901,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20827,
											"end": 20901,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20910,
											"end": 21003,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 20999,
											"end": 21002,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20910,
											"end": 21003,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 20910,
											"end": 21003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20910,
											"end": 21003,
											"name": "tag",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 20910,
											"end": 21003,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21028,
											"end": 21030,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 21023,
											"end": 21026,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21019,
											"end": 21031,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21012,
											"end": 21031,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21012,
											"end": 21031,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20671,
											"end": 21037,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20671,
											"end": 21037,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20671,
											"end": 21037,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20671,
											"end": 21037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21043,
											"end": 21462,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 21043,
											"end": 21462,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21209,
											"end": 21213,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21247,
											"end": 21249,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 21236,
											"end": 21245,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21232,
											"end": 21250,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21224,
											"end": 21250,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21224,
											"end": 21250,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21296,
											"end": 21305,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21290,
											"end": 21294,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21286,
											"end": 21306,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 21282,
											"end": 21283,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21271,
											"end": 21280,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 21267,
											"end": 21284,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21260,
											"end": 21307,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21324,
											"end": 21455,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "409"
										},
										{
											"begin": 21450,
											"end": 21454,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21324,
											"end": 21455,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 21324,
											"end": 21455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21324,
											"end": 21455,
											"name": "tag",
											"source": 9,
											"value": "409"
										},
										{
											"begin": 21324,
											"end": 21455,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21316,
											"end": 21455,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21316,
											"end": 21455,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21043,
											"end": 21462,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21043,
											"end": 21462,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21043,
											"end": 21462,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21043,
											"end": 21462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21468,
											"end": 21695,
											"name": "tag",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 21468,
											"end": 21695,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21608,
											"end": 21642,
											"name": "PUSH",
											"source": 9,
											"value": "456E746572204475726174696F6E20696E20666F726D61746520636865636B20"
										},
										{
											"begin": 21604,
											"end": 21605,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21596,
											"end": 21602,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21592,
											"end": 21606,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21585,
											"end": 21643,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21677,
											"end": 21687,
											"name": "PUSH",
											"source": 9,
											"value": "6475726174696F6E000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21672,
											"end": 21674,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 21664,
											"end": 21670,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21660,
											"end": 21675,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21653,
											"end": 21688,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21468,
											"end": 21695,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21468,
											"end": 21695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21701,
											"end": 22067,
											"name": "tag",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 21701,
											"end": 22067,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21843,
											"end": 21846,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21864,
											"end": 21931,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 21928,
											"end": 21930,
											"name": "PUSH",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 21923,
											"end": 21926,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 21864,
											"end": 21931,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 21864,
											"end": 21931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21864,
											"end": 21931,
											"name": "tag",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 21864,
											"end": 21931,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21857,
											"end": 21931,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21857,
											"end": 21931,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21940,
											"end": 22033,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 22029,
											"end": 22032,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21940,
											"end": 22033,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 21940,
											"end": 22033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21940,
											"end": 22033,
											"name": "tag",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 21940,
											"end": 22033,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22058,
											"end": 22060,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 22053,
											"end": 22056,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22049,
											"end": 22061,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22042,
											"end": 22061,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22042,
											"end": 22061,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21701,
											"end": 22067,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21701,
											"end": 22067,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21701,
											"end": 22067,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21701,
											"end": 22067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22073,
											"end": 22492,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 22073,
											"end": 22492,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22239,
											"end": 22243,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22277,
											"end": 22279,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 22266,
											"end": 22275,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22262,
											"end": 22280,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22254,
											"end": 22280,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22254,
											"end": 22280,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22326,
											"end": 22335,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22320,
											"end": 22324,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22316,
											"end": 22336,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 22312,
											"end": 22313,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22301,
											"end": 22310,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 22297,
											"end": 22314,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22290,
											"end": 22337,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22354,
											"end": 22485,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 22480,
											"end": 22484,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22354,
											"end": 22485,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 22354,
											"end": 22485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22354,
											"end": 22485,
											"name": "tag",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 22354,
											"end": 22485,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22346,
											"end": 22485,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22346,
											"end": 22485,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22073,
											"end": 22492,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22073,
											"end": 22492,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22073,
											"end": 22492,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22073,
											"end": 22492,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22498,
											"end": 22940,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 22498,
											"end": 22940,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22647,
											"end": 22651,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22685,
											"end": 22687,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 22674,
											"end": 22683,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22670,
											"end": 22688,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22662,
											"end": 22688,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22662,
											"end": 22688,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22698,
											"end": 22769,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 22766,
											"end": 22767,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22755,
											"end": 22764,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 22751,
											"end": 22768,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22742,
											"end": 22748,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 22698,
											"end": 22769,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 22698,
											"end": 22769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22698,
											"end": 22769,
											"name": "tag",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 22698,
											"end": 22769,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22779,
											"end": 22851,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 22847,
											"end": 22849,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 22836,
											"end": 22845,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 22832,
											"end": 22850,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22823,
											"end": 22829,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 22779,
											"end": 22851,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 22779,
											"end": 22851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22779,
											"end": 22851,
											"name": "tag",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 22779,
											"end": 22851,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22861,
											"end": 22933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 22929,
											"end": 22931,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 22918,
											"end": 22927,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 22914,
											"end": 22932,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22905,
											"end": 22911,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 22861,
											"end": 22933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 22861,
											"end": 22933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22861,
											"end": 22933,
											"name": "tag",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 22861,
											"end": 22933,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22498,
											"end": 22940,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 22498,
											"end": 22940,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 22498,
											"end": 22940,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22498,
											"end": 22940,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22498,
											"end": 22940,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22498,
											"end": 22940,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22498,
											"end": 22940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22946,
											"end": 23168,
											"name": "tag",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 22946,
											"end": 23168,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23086,
											"end": 23120,
											"name": "PUSH",
											"source": 9,
											"value": "596F752063616E206F6E6C7920636C61696D20796F7572206F776E2072657761"
										},
										{
											"begin": 23082,
											"end": 23083,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23074,
											"end": 23080,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23070,
											"end": 23084,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23063,
											"end": 23121,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 23155,
											"end": 23160,
											"name": "PUSH",
											"source": 9,
											"value": "7264730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23150,
											"end": 23152,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 23142,
											"end": 23148,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23138,
											"end": 23153,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23131,
											"end": 23161,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22946,
											"end": 23168,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22946,
											"end": 23168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23174,
											"end": 23540,
											"name": "tag",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 23174,
											"end": 23540,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23316,
											"end": 23319,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23337,
											"end": 23404,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 23401,
											"end": 23403,
											"name": "PUSH",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 23396,
											"end": 23399,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 23337,
											"end": 23404,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 23337,
											"end": 23404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23337,
											"end": 23404,
											"name": "tag",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 23337,
											"end": 23404,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23330,
											"end": 23404,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 23330,
											"end": 23404,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23413,
											"end": 23506,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 23502,
											"end": 23505,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23413,
											"end": 23506,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 23413,
											"end": 23506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23413,
											"end": 23506,
											"name": "tag",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 23413,
											"end": 23506,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23531,
											"end": 23533,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 23526,
											"end": 23529,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23522,
											"end": 23534,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23515,
											"end": 23534,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23515,
											"end": 23534,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23174,
											"end": 23540,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 23174,
											"end": 23540,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23174,
											"end": 23540,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23174,
											"end": 23540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23546,
											"end": 23965,
											"name": "tag",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 23546,
											"end": 23965,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23712,
											"end": 23716,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23750,
											"end": 23752,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 23739,
											"end": 23748,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23735,
											"end": 23753,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23727,
											"end": 23753,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23727,
											"end": 23753,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23799,
											"end": 23808,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23793,
											"end": 23797,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23789,
											"end": 23809,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 23785,
											"end": 23786,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23774,
											"end": 23783,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 23770,
											"end": 23787,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23763,
											"end": 23810,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 23827,
											"end": 23958,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 23953,
											"end": 23957,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23827,
											"end": 23958,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 23827,
											"end": 23958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23827,
											"end": 23958,
											"name": "tag",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 23827,
											"end": 23958,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23819,
											"end": 23958,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23819,
											"end": 23958,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23546,
											"end": 23965,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 23546,
											"end": 23965,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23546,
											"end": 23965,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23546,
											"end": 23965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23971,
											"end": 24143,
											"name": "tag",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 23971,
											"end": 24143,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24111,
											"end": 24135,
											"name": "PUSH",
											"source": 9,
											"value": "52657761726420616C726561647920636C61696D656400000000000000000000"
										},
										{
											"begin": 24107,
											"end": 24108,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24099,
											"end": 24105,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24095,
											"end": 24109,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24088,
											"end": 24136,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 23971,
											"end": 24143,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23971,
											"end": 24143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24149,
											"end": 24515,
											"name": "tag",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 24149,
											"end": 24515,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24291,
											"end": 24294,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24312,
											"end": 24379,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "428"
										},
										{
											"begin": 24376,
											"end": 24378,
											"name": "PUSH",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 24371,
											"end": 24374,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 24312,
											"end": 24379,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 24312,
											"end": 24379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24312,
											"end": 24379,
											"name": "tag",
											"source": 9,
											"value": "428"
										},
										{
											"begin": 24312,
											"end": 24379,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24305,
											"end": 24379,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24305,
											"end": 24379,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24388,
											"end": 24481,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 24477,
											"end": 24480,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24388,
											"end": 24481,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 24388,
											"end": 24481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24388,
											"end": 24481,
											"name": "tag",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 24388,
											"end": 24481,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24506,
											"end": 24508,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 24501,
											"end": 24504,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24497,
											"end": 24509,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24490,
											"end": 24509,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24490,
											"end": 24509,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24149,
											"end": 24515,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24149,
											"end": 24515,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24149,
											"end": 24515,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24149,
											"end": 24515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24521,
											"end": 24940,
											"name": "tag",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 24521,
											"end": 24940,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24687,
											"end": 24691,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24725,
											"end": 24727,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 24714,
											"end": 24723,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24710,
											"end": 24728,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24702,
											"end": 24728,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24702,
											"end": 24728,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24774,
											"end": 24783,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24768,
											"end": 24772,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24764,
											"end": 24784,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 24760,
											"end": 24761,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24749,
											"end": 24758,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 24745,
											"end": 24762,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24738,
											"end": 24785,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 24802,
											"end": 24933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 24928,
											"end": 24932,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24802,
											"end": 24933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 24802,
											"end": 24933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24802,
											"end": 24933,
											"name": "tag",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 24802,
											"end": 24933,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24794,
											"end": 24933,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24794,
											"end": 24933,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24521,
											"end": 24940,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24521,
											"end": 24940,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24521,
											"end": 24940,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24521,
											"end": 24940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24946,
											"end": 25140,
											"name": "tag",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 24946,
											"end": 25140,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24986,
											"end": 24990,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 25006,
											"end": 25026,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 25024,
											"end": 25025,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25006,
											"end": 25026,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 25006,
											"end": 25026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 25006,
											"end": 25026,
											"name": "tag",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 25006,
											"end": 25026,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25001,
											"end": 25026,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 25001,
											"end": 25026,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25040,
											"end": 25060,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 25058,
											"end": 25059,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 25040,
											"end": 25060,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 25040,
											"end": 25060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 25040,
											"end": 25060,
											"name": "tag",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 25040,
											"end": 25060,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25035,
											"end": 25060,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 25035,
											"end": 25060,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25084,
											"end": 25085,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25081,
											"end": 25082,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25077,
											"end": 25086,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 25069,
											"end": 25086,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25069,
											"end": 25086,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25108,
											"end": 25109,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 25102,
											"end": 25106,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 25099,
											"end": 25110,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 25096,
											"end": 25133,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 25096,
											"end": 25133,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 25096,
											"end": 25133,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 25113,
											"end": 25131,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 25113,
											"end": 25131,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 25113,
											"end": 25131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 25113,
											"end": 25131,
											"name": "tag",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 25113,
											"end": 25131,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25096,
											"end": 25133,
											"name": "tag",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 25096,
											"end": 25133,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24946,
											"end": 25140,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 24946,
											"end": 25140,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24946,
											"end": 25140,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24946,
											"end": 25140,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24946,
											"end": 25140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"MyToken.sol",
								"NewStakeing.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ClaimReward(uint256)": "92ceb12d",
							"ViewDetail(address)": "5ee0d9b4",
							"calculateReward(uint256)": "d2d7231f",
							"check_duration()": "0b46ba99",
							"chkid(uint256)": "c9757417",
							"cid(uint256)": "b0c479a5",
							"claimStakedAmount(uint256)": "41324ec5",
							"getBal(address)": "2fa78085",
							"owner()": "8da5cb5b",
							"stakenow(uint256,uint256)": "47c4d742",
							"token()": "fc0c546a",
							"userStakes(address,uint256)": "b5d5b5fa"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract MyToken\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"userid\",\"type\":\"uint256\"}],\"name\":\"ClaimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ads\",\"type\":\"address\"}],\"name\":\"ViewDetail\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenIdc\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"userads\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isClaimed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isAmountc\",\"type\":\"bool\"}],\"internalType\":\"struct MyStakingContract.Stake[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"userid\",\"type\":\"uint256\"}],\"name\":\"calculateReward\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"check_duration\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"chkid\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenIdc\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"userads\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isClaimed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isAmountc\",\"type\":\"bool\"}],\"internalType\":\"struct MyStakingContract.Stake\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"cid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenIdc\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"userads\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isClaimed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isAmountc\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"userid\",\"type\":\"uint256\"}],\"name\":\"claimStakedAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adrs\",\"type\":\"address\"}],\"name\":\"getBal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"stakenow\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenIdc\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"userads\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isClaimed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isAmountc\",\"type\":\"bool\"}],\"internalType\":\"struct MyStakingContract.Stake\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract MyToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userStakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenIdc\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"userads\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isClaimed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isAmountc\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"The name of the author\",\"details\":\"Explain to a developer any extra details\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A title that should describe the contract/interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Explain to an end user what this does\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"NewStakeing.sol\":\"MyStakingContract\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"MyToken.sol\":{\"keccak256\":\"0xcde3020b3d2b838086644d2494e5b417f1e133b3f768d794f8654094f37ce414\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://584aa21127ff966474be00415bb0257fa0129e3cb43536418fe605e8cfdcf349\",\"dweb:/ipfs/QmUEQUD9s9ZHByrgQQLXRyjkv16kWU4aTvsEmfJp5vfSai\"]},\"NewStakeing.sol\":{\"keccak256\":\"0x158f29d582669b630fbb86bf2b20ead9345bf06a7e6d91648188259c74deef1d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://27bd3bd83d651c3ff4683cbc051df1aed527805f1a6ae3e778cbd7897f6031c5\",\"dweb:/ipfs/QmYvYxxPj2UqAR2zPNTackD4oeHYWpPZhqWmpww8bdyuTS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1042,
								"contract": "NewStakeing.sol:MyStakingContract",
								"label": "tokenIdCounter",
								"offset": 0,
								"slot": "0",
								"type": "t_struct(Counter)931_storage"
							},
							{
								"astId": 1056,
								"contract": "NewStakeing.sol:MyStakingContract",
								"label": "time",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 1095,
								"contract": "NewStakeing.sol:MyStakingContract",
								"label": "userStakes",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_array(t_struct(Stake)1089_storage)dyn_storage)"
							},
							{
								"astId": 1100,
								"contract": "NewStakeing.sol:MyStakingContract",
								"label": "cid",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_struct(Stake)1089_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Stake)1089_storage)dyn_storage": {
								"base": "t_struct(Stake)1089_storage",
								"encoding": "dynamic_array",
								"label": "struct MyStakingContract.Stake[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_array(t_struct(Stake)1089_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct MyStakingContract.Stake[])",
								"numberOfBytes": "32",
								"value": "t_array(t_struct(Stake)1089_storage)dyn_storage"
							},
							"t_mapping(t_uint256,t_struct(Stake)1089_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct MyStakingContract.Stake)",
								"numberOfBytes": "32",
								"value": "t_struct(Stake)1089_storage"
							},
							"t_struct(Counter)931_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 930,
										"contract": "NewStakeing.sol:MyStakingContract",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(Stake)1089_storage": {
								"encoding": "inplace",
								"label": "struct MyStakingContract.Stake",
								"members": [
									{
										"astId": 1076,
										"contract": "NewStakeing.sol:MyStakingContract",
										"label": "tokenIdc",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1078,
										"contract": "NewStakeing.sol:MyStakingContract",
										"label": "amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1080,
										"contract": "NewStakeing.sol:MyStakingContract",
										"label": "duration",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1082,
										"contract": "NewStakeing.sol:MyStakingContract",
										"label": "startTime",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1084,
										"contract": "NewStakeing.sol:MyStakingContract",
										"label": "userads",
										"offset": 0,
										"slot": "4",
										"type": "t_address"
									},
									{
										"astId": 1086,
										"contract": "NewStakeing.sol:MyStakingContract",
										"label": "isClaimed",
										"offset": 20,
										"slot": "4",
										"type": "t_bool"
									},
									{
										"astId": 1088,
										"contract": "NewStakeing.sol:MyStakingContract",
										"label": "isAmountc",
										"offset": 21,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Explain to an end user what this does",
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n   --> NewStakeing.sol:101:31:\n    |\n101 |         (address userAddress, uint256 tokenId, uint256 reward, uint256 totalAmount) = calculateReward(userid);\n    |                               ^^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 3131,
					"file": "NewStakeing.sol",
					"start": 3116
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n   --> NewStakeing.sol:101:64:\n    |\n101 |         (address userAddress, uint256 tokenId, uint256 reward, uint256 totalAmount) = calculateReward(userid);\n    |                                                                ^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 3168,
					"file": "NewStakeing.sol",
					"start": 3149
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n   --> NewStakeing.sol:118:31:\n    |\n118 |         (address userAddress, uint256 tokenId, uint256 reward, uint256 Amount) = calculateReward(userid);\n    |                               ^^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 3891,
					"file": "NewStakeing.sol",
					"start": 3876
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n   --> NewStakeing.sol:118:48:\n    |\n118 |         (address userAddress, uint256 tokenId, uint256 reward, uint256 Amount) = calculateReward(userid);\n    |                                                ^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 3907,
					"file": "NewStakeing.sol",
					"start": 3893
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n   --> NewStakeing.sol:118:64:\n    |\n118 |         (address userAddress, uint256 tokenId, uint256 reward, uint256 Amount) = calculateReward(userid);\n    |                                                                ^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 3923,
					"file": "NewStakeing.sol",
					"start": 3909
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							925
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 926,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 925,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 925,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								925
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							925
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 926,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 925,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1428:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 925,
										"src": "1428:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1437:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1445:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1461:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								925
							],
							"name": "ERC20",
							"nameLocation": "1419:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1480:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1496:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1540:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1556:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1583:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1630:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1665:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1691:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1952:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1962:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1970:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1985:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1995:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1908:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1929:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:2"
									},
									"scope": 799,
									"src": "1896:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "2134:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "2151:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "2144:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "2119:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:2"
									},
									"scope": 799,
									"src": "2074:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2338:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2348:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2323:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:2"
									},
									"scope": 799,
									"src": "2276:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "3058:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "3068:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "3051:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:2"
									},
									"scope": 799,
									"src": "3002:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "3205:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "3222:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "3215:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "3196:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:2"
									},
									"scope": 799,
									"src": "3144:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3373:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3390:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3400:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3383:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3318:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3364:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:2"
									},
									"scope": 799,
									"src": "3299:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3685:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3695:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3711:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3743:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3750:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3754:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3733:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3770:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3628:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3640:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3679:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:2"
									},
									"scope": 799,
									"src": "3610:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3935:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3952:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3964:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3971:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3945:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3865:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3880:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:2"
									},
									"scope": 799,
									"src": "3846:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4372:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4382:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4398:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4436:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4445:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4420:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4461:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4310:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4327:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4366:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:2"
									},
									"scope": 799,
									"src": "4293:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "5132:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "5142:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "5160:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5198:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "5204:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5213:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "5182:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5239:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "5245:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5249:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "5229:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5265:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5061:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5075:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5087:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5126:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:2"
									},
									"scope": 799,
									"src": "5039:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5725:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5739:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5735:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5759:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5780:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5773:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5834:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5830:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5852:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5873:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5866:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5933:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5939:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5943:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5925:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5675:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5689:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5701:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:2"
									},
									"scope": 799,
									"src": "5656:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6346:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6360:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6534:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6548:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6570:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6580:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6603:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6617:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6599:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6624:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6674:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6680:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6693:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6649:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6834:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6844:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6852:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6866:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6356:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6380:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6496:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6910:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "7125:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7284:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7294:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7301:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6906:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6928:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "7073:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7089:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7355:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7361:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7365:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7346:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7341:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6288:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6302:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6314:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:2"
									},
									"scope": 799,
									"src": "6271:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7777:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7791:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7787:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7814:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7835:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7828:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7907:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7916:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7887:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7736:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7753:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:2"
									},
									"scope": 799,
									"src": "7721:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8303:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8317:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8313:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8340:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8361:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8354:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8419:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8411:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8262:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8279:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:2"
									},
									"scope": 799,
									"src": "8247:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "9063:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "9082:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "9089:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "9098:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "9073:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9007:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9022:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:2"
									},
									"scope": 799,
									"src": "8989:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "10047:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "10061:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "10057:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "10082:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "10103:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "10096:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "10159:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "10155:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "10182:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "10203:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "10196:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10254:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10266:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10273:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10284:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10303:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10299:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10314:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10342:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10349:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10358:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10333:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10328:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9967:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9982:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9999:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "10014:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:2"
									},
									"scope": 799,
									"src": "9949:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10752:388:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10762:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10799:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10806:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10789:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10828:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10824:310:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10867:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10885:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10904:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10881:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10911:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10963:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10972:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10990:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10936:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "11061:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "11068:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "11077:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "11096:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "11052:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10688:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10720:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:2"
									},
									"scope": 799,
									"src": "10663:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1401:9741:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:11038:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "213:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "395:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "404:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "426:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:3"
									},
									"src": "389:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "626:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "635:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "658:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:3"
									},
									"src": "620:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 877,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 877,
									"src": "911:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1233:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1266:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:3"
									},
									"scope": 877,
									"src": "1203:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1581:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1621:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:3"
									},
									"scope": 877,
									"src": "1547:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2375:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:3"
									},
									"scope": 877,
									"src": "2308:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2711:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2737:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2770:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:3"
									},
									"scope": 877,
									"src": "2689:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "203:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2673:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"305:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "305:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:4",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "416:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:4"
									},
									"scope": 903,
									"src": "377:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "539:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:4"
									},
									"scope": 903,
									"src": "498:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "673:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:4"
									},
									"scope": 903,
									"src": "630:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "277:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:558:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							925
						]
					},
					"id": 926,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 925,
							"linearizedBaseContracts": [
								925
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 925,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 925,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 926,
							"src": "624:235:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:759:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
					"exportedSymbols": {
						"Counters": [
							999
						]
					},
					"id": 1000,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 927,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Counters",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 928,
								"nodeType": "StructuredDocumentation",
								"src": "112:311:6",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 999,
							"linearizedBaseContracts": [
								999
							],
							"name": "Counters",
							"nameLocation": "432:8:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 931,
									"members": [
										{
											"constant": false,
											"id": 930,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "794:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 931,
											"src": "786:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 929,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "786:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "454:7:6",
									"nodeType": "StructDefinition",
									"scope": 999,
									"src": "447:374:6",
									"visibility": "public"
								},
								{
									"body": {
										"id": 942,
										"nodeType": "Block",
										"src": "901:38:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 939,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 934,
														"src": "918:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$931_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 940,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "926:6:6",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 930,
													"src": "918:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 938,
												"id": 941,
												"nodeType": "Return",
												"src": "911:21:6"
											}
										]
									},
									"id": 943,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "836:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "860:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "844:23:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$931_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 933,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 932,
														"name": "Counter",
														"nameLocations": [
															"844:7:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 931,
														"src": "844:7:6"
													},
													"referencedDeclaration": 931,
													"src": "844:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$931_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:25:6"
									},
									"returnParameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "892:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:9:6"
									},
									"scope": 999,
									"src": "827:112:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 956,
										"nodeType": "Block",
										"src": "998:70:6",
										"statements": [
											{
												"id": 955,
												"nodeType": "UncheckedBlock",
												"src": "1008:54:6",
												"statements": [
													{
														"expression": {
															"id": 953,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 949,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 946,
																	"src": "1032:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$931_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 951,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1040:6:6",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 930,
																"src": "1032:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 952,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1050:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1032:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 954,
														"nodeType": "ExpressionStatement",
														"src": "1032:19:6"
													}
												]
											}
										]
									},
									"id": 957,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "954:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "980:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "964:23:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$931_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 945,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 944,
														"name": "Counter",
														"nameLocations": [
															"964:7:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 931,
														"src": "964:7:6"
													},
													"referencedDeclaration": 931,
													"src": "964:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$931_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:25:6"
									},
									"returnParameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:0:6"
									},
									"scope": 999,
									"src": "945:123:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 984,
										"nodeType": "Block",
										"src": "1127:176:6",
										"statements": [
											{
												"assignments": [
													964
												],
												"declarations": [
													{
														"constant": false,
														"id": 964,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1145:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 984,
														"src": "1137:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 963,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1137:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 967,
												"initialValue": {
													"expression": {
														"id": 965,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "1153:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$931_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 966,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1161:6:6",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 930,
													"src": "1153:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1137:30:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 971,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 969,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 964,
																"src": "1185:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 970,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1193:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1185:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 972,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1196:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 968,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 974,
												"nodeType": "ExpressionStatement",
												"src": "1177:49:6"
											},
											{
												"id": 983,
												"nodeType": "UncheckedBlock",
												"src": "1236:61:6",
												"statements": [
													{
														"expression": {
															"id": 981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 975,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 960,
																	"src": "1260:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$931_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 977,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1268:6:6",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 930,
																"src": "1260:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 980,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 978,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 964,
																	"src": "1277:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 979,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1285:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1277:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1260:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 982,
														"nodeType": "ExpressionStatement",
														"src": "1260:26:6"
													}
												]
											}
										]
									},
									"id": 985,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1083:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1109:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "1093:23:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$931_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 959,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 958,
														"name": "Counter",
														"nameLocations": [
															"1093:7:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 931,
														"src": "1093:7:6"
													},
													"referencedDeclaration": 931,
													"src": "1093:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$931_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:25:6"
									},
									"returnParameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:0:6"
									},
									"scope": 999,
									"src": "1074:229:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 997,
										"nodeType": "Block",
										"src": "1358:35:6",
										"statements": [
											{
												"expression": {
													"id": 995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 991,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 988,
															"src": "1368:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$931_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 993,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1376:6:6",
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 930,
														"src": "1368:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 994,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1368:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 996,
												"nodeType": "ExpressionStatement",
												"src": "1368:18:6"
											}
										]
									},
									"id": 998,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1318:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1340:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "1324:23:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$931_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 987,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 986,
														"name": "Counter",
														"nameLocations": [
															"1324:7:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 931,
														"src": "1324:7:6"
													},
													"referencedDeclaration": 931,
													"src": "1324:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$931_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:25:6"
									},
									"returnParameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:6"
									},
									"scope": 999,
									"src": "1309:84:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1000,
							"src": "424:971:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "87:1309:6"
				},
				"id": 6
			},
			"MyToken.sol": {
				"ast": {
					"absolutePath": "MyToken.sol",
					"exportedSymbols": {
						"Context": [
							925
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"MyToken": [
							1030
						],
						"Ownable": [
							147
						]
					},
					"id": 1031,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1001,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1002,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1031,
							"sourceUnit": 800,
							"src": "59:55:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1003,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1031,
							"sourceUnit": 148,
							"src": "116:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1004,
										"name": "ERC20",
										"nameLocations": [
											"194:5:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "194:5:7"
									},
									"id": 1005,
									"nodeType": "InheritanceSpecifier",
									"src": "194:5:7"
								},
								{
									"baseName": {
										"id": 1006,
										"name": "Ownable",
										"nameLocations": [
											"201:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "201:7:7"
									},
									"id": 1007,
									"nodeType": "InheritanceSpecifier",
									"src": "201:7:7"
								}
							],
							"canonicalName": "MyToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1030,
							"linearizedBaseContracts": [
								1030,
								147,
								799,
								189,
								903,
								877,
								925
							],
							"name": "MyToken",
							"nameLocation": "183:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1028,
										"nodeType": "Block",
										"src": "270:112:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1019,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "287:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1020,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "291:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "287:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000"
															},
															"id": 1025,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31303030",
																"id": 1021,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "299:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"id": 1024,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1022,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "306:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3138",
																	"id": 1023,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "312:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_18_by_1",
																		"typeString": "int_const 18"
																	},
																	"value": "18"
																},
																"src": "306:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															},
															"src": "299:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_1000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000"
															}
														],
														"id": 1018,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "281:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "281:34:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1027,
												"nodeType": "ExpressionStatement",
												"src": "281:34:7"
											}
										]
									},
									"id": 1029,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "6e616d65",
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "235:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_2361458367e696363fbcc70777d07ebbd2394e89fd0adcaf147faccd1d294d60",
														"typeString": "literal_string \"name\""
													},
													"value": "name"
												},
												{
													"hexValue": "53594d",
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "243:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_4d3015a52e62e7dc6887dd6869969b57532cf58982b1264ed2b19809b668f8e5",
														"typeString": "literal_string \"SYM\""
													},
													"value": "SYM"
												}
											],
											"id": 1012,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1009,
												"name": "ERC20",
												"nameLocations": [
													"229:5:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "229:5:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "229:20:7"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1014,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "258:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "262:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "258:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1016,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1013,
												"name": "Ownable",
												"nameLocations": [
													"250:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "250:7:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "250:19:7"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "226:2:7"
									},
									"returnParameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "270:0:7"
									},
									"scope": 1030,
									"src": "215:167:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1031,
							"src": "174:211:7",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820
							]
						}
					],
					"src": "33:354:7"
				},
				"id": 7
			},
			"NewStakeing.sol": {
				"ast": {
					"absolutePath": "NewStakeing.sol",
					"exportedSymbols": {
						"Context": [
							925
						],
						"Counters": [
							999
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"MyStakingContract": [
							1467
						],
						"MyToken": [
							1030
						],
						"Ownable": [
							147
						]
					},
					"id": 1468,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1032,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:8"
						},
						{
							"absolutePath": "MyToken.sol",
							"file": "./MyToken.sol",
							"id": 1033,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1468,
							"sourceUnit": 1031,
							"src": "61:23:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
							"file": "@openzeppelin/contracts/utils/Counters.sol",
							"id": 1034,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1468,
							"sourceUnit": 1000,
							"src": "86:52:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MyStakingContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1035,
								"nodeType": "StructuredDocumentation",
								"src": "142:194:8",
								"text": "@title A title that should describe the contract/interface\n@author The name of the author\n@notice Explain to an end user what this does\n@dev Explain to a developer any extra details"
							},
							"fullyImplemented": true,
							"id": 1467,
							"linearizedBaseContracts": [
								1467
							],
							"name": "MyStakingContract",
							"nameLocation": "349:17:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1039,
									"libraryName": {
										"id": 1036,
										"name": "Counters",
										"nameLocations": [
											"380:8:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 999,
										"src": "380:8:8"
									},
									"nodeType": "UsingForDirective",
									"src": "374:36:8",
									"typeName": {
										"id": 1038,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1037,
											"name": "Counters.Counter",
											"nameLocations": [
												"393:8:8",
												"402:7:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 931,
											"src": "393:16:8"
										},
										"referencedDeclaration": 931,
										"src": "393:16:8",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$931_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"id": 1042,
									"mutability": "mutable",
									"name": "tokenIdCounter",
									"nameLocation": "443:14:8",
									"nodeType": "VariableDeclaration",
									"scope": 1467,
									"src": "418:39:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$931_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 1041,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1040,
											"name": "Counters.Counter",
											"nameLocations": [
												"418:8:8",
												"427:7:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 931,
											"src": "418:16:8"
										},
										"referencedDeclaration": 931,
										"src": "418:16:8",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$931_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 1045,
									"mutability": "immutable",
									"name": "token",
									"nameLocation": "489:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 1467,
									"src": "464:30:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_MyToken_$1030",
										"typeString": "contract MyToken"
									},
									"typeName": {
										"id": 1044,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1043,
											"name": "MyToken",
											"nameLocations": [
												"464:7:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1030,
											"src": "464:7:8"
										},
										"referencedDeclaration": 1030,
										"src": "464:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_MyToken_$1030",
											"typeString": "contract MyToken"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 1047,
									"mutability": "immutable",
									"name": "owner",
									"nameLocation": "526:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 1467,
									"src": "501:30:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1046,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "501:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1056,
									"mutability": "mutable",
									"name": "time",
									"nameLocation": "548:4:8",
									"nodeType": "VariableDeclaration",
									"scope": 1467,
									"src": "538:33:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 1048,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "538:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1049,
										"nodeType": "ArrayTypeName",
										"src": "538:9:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"value": {
										"components": [
											{
												"hexValue": "32",
												"id": 1050,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "556:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											{
												"hexValue": "34",
												"id": 1051,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "559:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_4_by_1",
													"typeString": "int_const 4"
												},
												"value": "4"
											},
											{
												"hexValue": "36",
												"id": 1052,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "562:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_6_by_1",
													"typeString": "int_const 6"
												},
												"value": "6"
											},
											{
												"hexValue": "38",
												"id": 1053,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "565:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_8_by_1",
													"typeString": "int_const 8"
												},
												"value": "8"
											},
											{
												"hexValue": "3130",
												"id": 1054,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "568:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											}
										],
										"id": 1055,
										"isConstant": false,
										"isInlineArray": true,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "555:16:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
											"typeString": "uint8[5] memory"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1073,
										"nodeType": "Block",
										"src": "608:72:8",
										"statements": [
											{
												"expression": {
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1062,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1045,
														"src": "619:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_MyToken_$1030",
															"typeString": "contract MyToken"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1064,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1059,
																"src": "635:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_MyToken_$1030",
																	"typeString": "contract MyToken"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_MyToken_$1030",
																	"typeString": "contract MyToken"
																}
															],
															"id": 1063,
															"name": "MyToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1030,
															"src": "627:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_MyToken_$1030_$",
																"typeString": "type(contract MyToken)"
															}
														},
														"id": 1065,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "627:15:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_MyToken_$1030",
															"typeString": "contract MyToken"
														}
													},
													"src": "619:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_MyToken_$1030",
														"typeString": "contract MyToken"
													}
												},
												"id": 1067,
												"nodeType": "ExpressionStatement",
												"src": "619:23:8"
											},
											{
												"expression": {
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1068,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1047,
														"src": "653:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1069,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "662:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1070,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "666:6:8",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "662:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "653:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1072,
												"nodeType": "ExpressionStatement",
												"src": "653:19:8"
											}
										]
									},
									"id": 1074,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "600:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "592:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_MyToken_$1030",
													"typeString": "contract MyToken"
												},
												"typeName": {
													"id": 1058,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1057,
														"name": "MyToken",
														"nameLocations": [
															"592:7:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1030,
														"src": "592:7:8"
													},
													"referencedDeclaration": 1030,
													"src": "592:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_MyToken_$1030",
														"typeString": "contract MyToken"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "591:16:8"
									},
									"returnParameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "608:0:8"
									},
									"scope": 1467,
									"src": "580:100:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"canonicalName": "MyStakingContract.Stake",
									"id": 1089,
									"members": [
										{
											"constant": false,
											"id": 1076,
											"mutability": "mutable",
											"name": "tokenIdc",
											"nameLocation": "721:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 1089,
											"src": "712:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1075,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "712:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1078,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "748:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 1089,
											"src": "740:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1077,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "740:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1080,
											"mutability": "mutable",
											"name": "duration",
											"nameLocation": "773:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 1089,
											"src": "765:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1079,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "765:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1082,
											"mutability": "mutable",
											"name": "startTime",
											"nameLocation": "800:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 1089,
											"src": "792:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1081,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "792:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1084,
											"mutability": "mutable",
											"name": "userads",
											"nameLocation": "828:7:8",
											"nodeType": "VariableDeclaration",
											"scope": 1089,
											"src": "820:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1083,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "820:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1086,
											"mutability": "mutable",
											"name": "isClaimed",
											"nameLocation": "852:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 1089,
											"src": "847:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1085,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "847:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1088,
											"mutability": "mutable",
											"name": "isAmountc",
											"nameLocation": "878:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 1089,
											"src": "873:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1087,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "873:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stake",
									"nameLocation": "695:5:8",
									"nodeType": "StructDefinition",
									"scope": 1467,
									"src": "688:207:8",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b5d5b5fa",
									"id": 1095,
									"mutability": "mutable",
									"name": "userStakes",
									"nameLocation": "940:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1467,
									"src": "905:45:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stake_$1089_storage_$dyn_storage_$",
										"typeString": "mapping(address => struct MyStakingContract.Stake[])"
									},
									"typeName": {
										"id": 1094,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1090,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "913:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "905:27:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stake_$1089_storage_$dyn_storage_$",
											"typeString": "mapping(address => struct MyStakingContract.Stake[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 1092,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1091,
													"name": "Stake",
													"nameLocations": [
														"924:5:8"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1089,
													"src": "924:5:8"
												},
												"referencedDeclaration": 1089,
												"src": "924:5:8",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stake_$1089_storage_ptr",
													"typeString": "struct MyStakingContract.Stake"
												}
											},
											"id": 1093,
											"nodeType": "ArrayTypeName",
											"src": "924:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Stake_$1089_storage_$dyn_storage_ptr",
												"typeString": "struct MyStakingContract.Stake[]"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b0c479a5",
									"id": 1100,
									"mutability": "mutable",
									"name": "cid",
									"nameLocation": "988:3:8",
									"nodeType": "VariableDeclaration",
									"scope": 1467,
									"src": "958:33:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$1089_storage_$",
										"typeString": "mapping(uint256 => struct MyStakingContract.Stake)"
									},
									"typeName": {
										"id": 1099,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1096,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "966:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "958:22:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$1089_storage_$",
											"typeString": "mapping(uint256 => struct MyStakingContract.Stake)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1098,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1097,
												"name": "Stake",
												"nameLocations": [
													"974:5:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1089,
												"src": "974:5:8"
											},
											"referencedDeclaration": 1089,
											"src": "974:5:8",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stake_$1089_storage_ptr",
												"typeString": "struct MyStakingContract.Stake"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1112,
										"nodeType": "Block",
										"src": "1067:47:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1109,
															"name": "adrs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1102,
															"src": "1101:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1107,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1045,
															"src": "1085:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_MyToken_$1030",
																"typeString": "contract MyToken"
															}
														},
														"id": 1108,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1091:9:8",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 385,
														"src": "1085:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1085:21:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1106,
												"id": 1111,
												"nodeType": "Return",
												"src": "1078:28:8"
											}
										]
									},
									"functionSelector": "2fa78085",
									"id": 1113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBal",
									"nameLocation": "1016:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "adrs",
												"nameLocation": "1031:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "1023:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1023:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1022:14:8"
									},
									"returnParameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "1058:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1058:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1057:9:8"
									},
									"scope": 1467,
									"src": "1007:107:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1210,
										"nodeType": "Block",
										"src": "1199:635:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1124,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1115,
																"src": "1228:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1125,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1237:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1228:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 1127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1240:34:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															},
															"value": "Amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															}
														],
														"id": 1123,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1220:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1220:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1129,
												"nodeType": "ExpressionStatement",
												"src": "1220:55:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1141,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1133,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1131,
																				"name": "duration",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1117,
																				"src": "1297:8:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1132,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1309:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "1297:13:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1136,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1134,
																				"name": "duration",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1117,
																				"src": "1314:8:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1135,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1326:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "1314:13:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1297:30:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1140,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1138,
																			"name": "duration",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1117,
																			"src": "1331:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "36",
																			"id": 1139,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1343:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_6_by_1",
																				"typeString": "int_const 6"
																			},
																			"value": "6"
																		},
																		"src": "1331:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "1297:47:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1144,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1142,
																		"name": "duration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1117,
																		"src": "1348:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "38",
																		"id": 1143,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1360:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		"value": "8"
																	},
																	"src": "1348:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "1297:64:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1148,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1146,
																	"name": "duration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1117,
																	"src": "1365:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "3130",
																	"id": 1147,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1377:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "1365:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1297:82:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "456e746572204475726174696f6e20696e20666f726d61746520636865636b206475726174696f6e",
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1394:42:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_358f595c43c5417f683a6d546f36187d1f93d884747b170b9ff8f7ae4de4b92e",
																"typeString": "literal_string \"Enter Duration in formate check duration\""
															},
															"value": "Enter Duration in formate check duration"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_358f595c43c5417f683a6d546f36187d1f93d884747b170b9ff8f7ae4de4b92e",
																"typeString": "literal_string \"Enter Duration in formate check duration\""
															}
														],
														"id": 1130,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1288:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1288:150:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1152,
												"nodeType": "ExpressionStatement",
												"src": "1288:150:8"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1153,
															"name": "tokenIdCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1042,
															"src": "1451:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$931_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 1155,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1466:7:8",
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 943,
														"src": "1451:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$931_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$931_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 1156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1451:24:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1157,
												"nodeType": "ExpressionStatement",
												"src": "1451:24:8"
											},
											{
												"assignments": [
													1160
												],
												"declarations": [
													{
														"constant": false,
														"id": 1160,
														"mutability": "mutable",
														"name": "newStake",
														"nameLocation": "1499:8:8",
														"nodeType": "VariableDeclaration",
														"scope": 1210,
														"src": "1486:21:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$1089_memory_ptr",
															"typeString": "struct MyStakingContract.Stake"
														},
														"typeName": {
															"id": 1159,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1158,
																"name": "Stake",
																"nameLocations": [
																	"1486:5:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1089,
																"src": "1486:5:8"
															},
															"referencedDeclaration": 1089,
															"src": "1486:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$1089_storage_ptr",
																"typeString": "struct MyStakingContract.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1174,
												"initialValue": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 1162,
																	"name": "tokenIdCounter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1042,
																	"src": "1516:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$931_storage",
																		"typeString": "struct Counters.Counter storage ref"
																	}
																},
																"id": 1163,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1531:7:8",
																"memberName": "current",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 943,
																"src": "1516:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$931_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$931_storage_ptr_$",
																	"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																}
															},
															"id": 1164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1516:24:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1165,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "1542:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1166,
															"name": "duration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1117,
															"src": "1550:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1167,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1560:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1566:9:8",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1560:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1169,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1577:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1581:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1577:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 1171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1588:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														},
														{
															"hexValue": "66616c7365",
															"id": 1172,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1594:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1161,
														"name": "Stake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1089,
														"src": "1510:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_Stake_$1089_storage_ptr_$",
															"typeString": "type(struct MyStakingContract.Stake storage pointer)"
														}
													},
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1510:90:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$1089_memory_ptr",
														"typeString": "struct MyStakingContract.Stake memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1486:114:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1180,
															"name": "newStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1160,
															"src": "1639:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$1089_memory_ptr",
																"typeString": "struct MyStakingContract.Stake memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Stake_$1089_memory_ptr",
																"typeString": "struct MyStakingContract.Stake memory"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 1175,
																"name": "userStakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1095,
																"src": "1611:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stake_$1089_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct MyStakingContract.Stake storage ref[] storage ref)"
																}
															},
															"id": 1178,
															"indexExpression": {
																"expression": {
																	"id": 1176,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1622:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1626:6:8",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1622:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1611:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stake_$1089_storage_$dyn_storage",
																"typeString": "struct MyStakingContract.Stake storage ref[] storage ref"
															}
														},
														"id": 1179,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1634:4:8",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "1611:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Stake_$1089_storage_$dyn_storage_ptr_$_t_struct$_Stake_$1089_storage_$returns$__$attached_to$_t_array$_t_struct$_Stake_$1089_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct MyStakingContract.Stake storage ref[] storage pointer,struct MyStakingContract.Stake storage ref)"
														}
													},
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1611:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1182,
												"nodeType": "ExpressionStatement",
												"src": "1611:37:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1186,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1678:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1682:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1678:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1190,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1698:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MyStakingContract_$1467",
																		"typeString": "contract MyStakingContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MyStakingContract_$1467",
																		"typeString": "contract MyStakingContract"
																	}
																],
																"id": 1189,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1690:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1188,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1690:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1690:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1192,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "1705:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1183,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1045,
															"src": "1659:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_MyToken_$1030",
																"typeString": "contract MyToken"
															}
														},
														"id": 1185,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1665:12:8",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 482,
														"src": "1659:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1659:53:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1194,
												"nodeType": "ExpressionStatement",
												"src": "1659:53:8"
											},
											{
												"expression": {
													"id": 1201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1195,
															"name": "cid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1100,
															"src": "1723:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$1089_storage_$",
																"typeString": "mapping(uint256 => struct MyStakingContract.Stake storage ref)"
															}
														},
														"id": 1199,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 1196,
																	"name": "tokenIdCounter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1042,
																	"src": "1727:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$931_storage",
																		"typeString": "struct Counters.Counter storage ref"
																	}
																},
																"id": 1197,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1742:7:8",
																"memberName": "current",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 943,
																"src": "1727:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$931_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$931_storage_ptr_$",
																	"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																}
															},
															"id": 1198,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1727:24:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1723:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$1089_storage",
															"typeString": "struct MyStakingContract.Stake storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1200,
														"name": "newStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1160,
														"src": "1753:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$1089_memory_ptr",
															"typeString": "struct MyStakingContract.Stake memory"
														}
													},
													"src": "1723:38:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$1089_storage",
														"typeString": "struct MyStakingContract.Stake storage ref"
													}
												},
												"id": 1202,
												"nodeType": "ExpressionStatement",
												"src": "1723:38:8"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1203,
															"name": "tokenIdCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1042,
															"src": "1772:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$931_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 1205,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1787:9:8",
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 957,
														"src": "1772:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$931_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$931_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 1206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1772:26:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1207,
												"nodeType": "ExpressionStatement",
												"src": "1772:26:8"
											},
											{
												"expression": {
													"id": 1208,
													"name": "newStake",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1160,
													"src": "1816:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$1089_memory_ptr",
														"typeString": "struct MyStakingContract.Stake memory"
													}
												},
												"functionReturnParameters": 1122,
												"id": 1209,
												"nodeType": "Return",
												"src": "1809:15:8"
											}
										]
									},
									"functionSelector": "47c4d742",
									"id": 1211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stakenow",
									"nameLocation": "1131:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1145:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "1140:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1114,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1140:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "duration",
												"nameLocation": "1158:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "1153:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1116,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1153:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1139:29:8"
									},
									"returnParameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "1185:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stake_$1089_memory_ptr",
													"typeString": "struct MyStakingContract.Stake"
												},
												"typeName": {
													"id": 1120,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1119,
														"name": "Stake",
														"nameLocations": [
															"1185:5:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1089,
														"src": "1185:5:8"
													},
													"referencedDeclaration": 1089,
													"src": "1185:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$1089_storage_ptr",
														"typeString": "struct MyStakingContract.Stake"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1184:15:8"
									},
									"scope": 1467,
									"src": "1122:712:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1219,
										"nodeType": "Block",
										"src": "1912:30:8",
										"statements": [
											{
												"expression": {
													"id": 1217,
													"name": "time",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1056,
													"src": "1930:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
														"typeString": "uint256[] storage ref"
													}
												},
												"functionReturnParameters": 1216,
												"id": 1218,
												"nodeType": "Return",
												"src": "1923:11:8"
											}
										]
									},
									"functionSelector": "0b46ba99",
									"id": 1220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "check_duration",
									"nameLocation": "1856:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1870:2:8"
									},
									"returnParameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "1894:16:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1213,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1894:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1214,
													"nodeType": "ArrayTypeName",
													"src": "1894:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1893:18:8"
									},
									"scope": 1467,
									"src": "1847:95:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1232,
										"nodeType": "Block",
										"src": "2007:43:8",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1228,
														"name": "cid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1100,
														"src": "2023:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$1089_storage_$",
															"typeString": "mapping(uint256 => struct MyStakingContract.Stake storage ref)"
														}
													},
													"id": 1230,
													"indexExpression": {
														"id": 1229,
														"name": "id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1222,
														"src": "2027:2:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2023:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$1089_storage",
														"typeString": "struct MyStakingContract.Stake storage ref"
													}
												},
												"functionReturnParameters": 1227,
												"id": 1231,
												"nodeType": "Return",
												"src": "2016:14:8"
											}
										]
									},
									"functionSelector": "c9757417",
									"id": 1233,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "chkid",
									"nameLocation": "1959:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1970:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "1965:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1221,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1965:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1964:9:8"
									},
									"returnParameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "1994:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stake_$1089_memory_ptr",
													"typeString": "struct MyStakingContract.Stake"
												},
												"typeName": {
													"id": 1225,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1224,
														"name": "Stake",
														"nameLocations": [
															"1994:5:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1089,
														"src": "1994:5:8"
													},
													"referencedDeclaration": 1089,
													"src": "1994:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$1089_storage_ptr",
														"typeString": "struct MyStakingContract.Stake"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1993:14:8"
									},
									"scope": 1467,
									"src": "1950:100:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1246,
										"nodeType": "Block",
										"src": "2126:37:8",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1242,
														"name": "userStakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1095,
														"src": "2140:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stake_$1089_storage_$dyn_storage_$",
															"typeString": "mapping(address => struct MyStakingContract.Stake storage ref[] storage ref)"
														}
													},
													"id": 1244,
													"indexExpression": {
														"id": 1243,
														"name": "ads",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1235,
														"src": "2151:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2140:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Stake_$1089_storage_$dyn_storage",
														"typeString": "struct MyStakingContract.Stake storage ref[] storage ref"
													}
												},
												"functionReturnParameters": 1241,
												"id": 1245,
												"nodeType": "Return",
												"src": "2133:22:8"
											}
										]
									},
									"functionSelector": "5ee0d9b4",
									"id": 1247,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ViewDetail",
									"nameLocation": "2065:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "ads",
												"nameLocation": "2084:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "2076:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2076:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2075:13:8"
									},
									"returnParameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "2110:14:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Stake_$1089_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct MyStakingContract.Stake[]"
												},
												"typeName": {
													"baseType": {
														"id": 1238,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1237,
															"name": "Stake",
															"nameLocations": [
																"2110:5:8"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1089,
															"src": "2110:5:8"
														},
														"referencedDeclaration": 1089,
														"src": "2110:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$1089_storage_ptr",
															"typeString": "struct MyStakingContract.Stake"
														}
													},
													"id": 1239,
													"nodeType": "ArrayTypeName",
													"src": "2110:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Stake_$1089_storage_$dyn_storage_ptr",
														"typeString": "struct MyStakingContract.Stake[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2109:16:8"
									},
									"scope": 1467,
									"src": "2056:107:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1317,
										"nodeType": "Block",
										"src": "2272:516:8",
										"statements": [
											{
												"assignments": [
													1261
												],
												"declarations": [
													{
														"constant": false,
														"id": 1261,
														"mutability": "mutable",
														"name": "endTime",
														"nameLocation": "2300:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1317,
														"src": "2292:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1260,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2292:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1264,
												"initialValue": {
													"expression": {
														"id": 1262,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "2310:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2316:9:8",
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "2310:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2292:33:8"
											},
											{
												"assignments": [
													1266
												],
												"declarations": [
													{
														"constant": false,
														"id": 1266,
														"mutability": "mutable",
														"name": "duration",
														"nameLocation": "2346:8:8",
														"nodeType": "VariableDeclaration",
														"scope": 1317,
														"src": "2338:16:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1265,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2338:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1273,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1267,
														"name": "endTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1261,
														"src": "2357:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 1268,
																"name": "cid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1100,
																"src": "2368:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$1089_storage_$",
																	"typeString": "mapping(uint256 => struct MyStakingContract.Stake storage ref)"
																}
															},
															"id": 1270,
															"indexExpression": {
																"id": 1269,
																"name": "userid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1249,
																"src": "2372:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2368:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$1089_storage",
																"typeString": "struct MyStakingContract.Stake storage ref"
															}
														},
														"id": 1271,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2380:9:8",
														"memberName": "startTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1082,
														"src": "2368:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2357:32:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2338:51:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1274,
														"name": "duration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1266,
														"src": "2404:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1280,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1275,
																	"name": "cid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1100,
																	"src": "2416:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$1089_storage_$",
																		"typeString": "mapping(uint256 => struct MyStakingContract.Stake storage ref)"
																	}
																},
																"id": 1277,
																"indexExpression": {
																	"id": 1276,
																	"name": "userid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1249,
																	"src": "2420:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2416:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$1089_storage",
																	"typeString": "struct MyStakingContract.Stake storage ref"
																}
															},
															"id": 1278,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2428:8:8",
															"memberName": "duration",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1080,
															"src": "2416:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "3630",
															"id": 1279,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2439:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_60_by_1",
																"typeString": "int_const 60"
															},
															"value": "60"
														},
														"src": "2416:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2404:37:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1292,
												"nodeType": "IfStatement",
												"src": "2400:106:8",
												"trueBody": {
													"id": 1291,
													"nodeType": "Block",
													"src": "2443:63:8",
													"statements": [
														{
															"expression": {
																"id": 1289,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1282,
																	"name": "duration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1266,
																	"src": "2458:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1288,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 1283,
																				"name": "cid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1100,
																				"src": "2469:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$1089_storage_$",
																					"typeString": "mapping(uint256 => struct MyStakingContract.Stake storage ref)"
																				}
																			},
																			"id": 1285,
																			"indexExpression": {
																				"id": 1284,
																				"name": "userid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1249,
																				"src": "2473:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2469:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$1089_storage",
																				"typeString": "struct MyStakingContract.Stake storage ref"
																			}
																		},
																		"id": 1286,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2481:8:8",
																		"memberName": "duration",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1080,
																		"src": "2469:20:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "3630",
																		"id": 1287,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2492:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_60_by_1",
																			"typeString": "int_const 60"
																		},
																		"value": "60"
																	},
																	"src": "2469:25:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2458:36:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1290,
															"nodeType": "ExpressionStatement",
															"src": "2458:36:8"
														}
													]
												}
											},
											{
												"assignments": [
													1294
												],
												"declarations": [
													{
														"constant": false,
														"id": 1294,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "2656:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1317,
														"src": "2648:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1293,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2648:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1298,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1295,
														"name": "duration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1266,
														"src": "2665:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "31",
														"id": 1296,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2676:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2665:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2648:29:8"
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1299,
																	"name": "cid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1100,
																	"src": "2698:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$1089_storage_$",
																		"typeString": "mapping(uint256 => struct MyStakingContract.Stake storage ref)"
																	}
																},
																"id": 1301,
																"indexExpression": {
																	"id": 1300,
																	"name": "userid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1249,
																	"src": "2702:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2698:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$1089_storage",
																	"typeString": "struct MyStakingContract.Stake storage ref"
																}
															},
															"id": 1302,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2710:7:8",
															"memberName": "userads",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1084,
															"src": "2698:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 1303,
																	"name": "cid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1100,
																	"src": "2719:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$1089_storage_$",
																		"typeString": "mapping(uint256 => struct MyStakingContract.Stake storage ref)"
																	}
																},
																"id": 1305,
																"indexExpression": {
																	"id": 1304,
																	"name": "userid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1249,
																	"src": "2723:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2719:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$1089_storage",
																	"typeString": "struct MyStakingContract.Stake storage ref"
																}
															},
															"id": 1306,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2731:8:8",
															"memberName": "tokenIdc",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1076,
															"src": "2719:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1307,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1294,
															"src": "2741:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1313,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1308,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1294,
																		"src": "2750:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 1309,
																				"name": "cid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1100,
																				"src": "2760:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$1089_storage_$",
																					"typeString": "mapping(uint256 => struct MyStakingContract.Stake storage ref)"
																				}
																			},
																			"id": 1311,
																			"indexExpression": {
																				"id": 1310,
																				"name": "userid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1249,
																				"src": "2764:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2760:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$1089_storage",
																				"typeString": "struct MyStakingContract.Stake storage ref"
																			}
																		},
																		"id": 1312,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2772:6:8",
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1078,
																		"src": "2760:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2750:28:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1314,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2749:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1315,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2697:83:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(address,uint256,uint256,uint256)"
													}
												},
												"functionReturnParameters": 1259,
												"id": 1316,
												"nodeType": "Return",
												"src": "2690:90:8"
											}
										]
									},
									"functionSelector": "d2d7231f",
									"id": 1318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateReward",
									"nameLocation": "2179:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "userid",
												"nameLocation": "2203:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "2195:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2195:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2194:16:8"
									},
									"returnParameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "2232:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2232:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "2240:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2240:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "2249:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2249:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "2258:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2258:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2231:35:8"
									},
									"scope": 1467,
									"src": "2170:618:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1375,
										"nodeType": "Block",
										"src": "2842:529:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1324,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2861:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1325,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2865:6:8",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2861:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1326,
																		"name": "cid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1100,
																		"src": "2875:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$1089_storage_$",
																			"typeString": "mapping(uint256 => struct MyStakingContract.Stake storage ref)"
																		}
																	},
																	"id": 1328,
																	"indexExpression": {
																		"id": 1327,
																		"name": "userid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1320,
																		"src": "2879:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2875:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$1089_storage",
																		"typeString": "struct MyStakingContract.Stake storage ref"
																	}
																},
																"id": 1329,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2887:7:8",
																"memberName": "userads",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1084,
																"src": "2875:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2861:33:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752063616e206f6e6c7920636c61696d20796f7572206f776e2072657761726473",
															"id": 1331,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2896:37:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_07c0ca133cb093f9404f4c4664ce8fdedbf5c43b51f59b0f309033c8869551f9",
																"typeString": "literal_string \"You can only claim your own rewards\""
															},
															"value": "You can only claim your own rewards"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_07c0ca133cb093f9404f4c4664ce8fdedbf5c43b51f59b0f309033c8869551f9",
																"typeString": "literal_string \"You can only claim your own rewards\""
															}
														],
														"id": 1323,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2853:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2853:81:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1333,
												"nodeType": "ExpressionStatement",
												"src": "2853:81:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2953:22:8",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1335,
																		"name": "cid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1100,
																		"src": "2954:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$1089_storage_$",
																			"typeString": "mapping(uint256 => struct MyStakingContract.Stake storage ref)"
																		}
																	},
																	"id": 1337,
																	"indexExpression": {
																		"id": 1336,
																		"name": "userid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1320,
																		"src": "2958:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2954:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$1089_storage",
																		"typeString": "struct MyStakingContract.Stake storage ref"
																	}
																},
																"id": 1338,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2966:9:8",
																"memberName": "isClaimed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1086,
																"src": "2954:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "52657761726420616c726561647920636c61696d6564",
															"id": 1340,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2977:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_59cbfee2a24523c1fd613f6298f3ecd1131edd49036e244040e570087e53f19c",
																"typeString": "literal_string \"Reward already claimed\""
															},
															"value": "Reward already claimed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_59cbfee2a24523c1fd613f6298f3ecd1131edd49036e244040e570087e53f19c",
																"typeString": "literal_string \"Reward already claimed\""
															}
														],
														"id": 1334,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2945:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2945:57:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1342,
												"nodeType": "ExpressionStatement",
												"src": "2945:57:8"
											},
											{
												"expression": {
													"id": 1348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1343,
																"name": "cid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1100,
																"src": "3053:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$1089_storage_$",
																	"typeString": "mapping(uint256 => struct MyStakingContract.Stake storage ref)"
																}
															},
															"id": 1345,
															"indexExpression": {
																"id": 1344,
																"name": "userid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1320,
																"src": "3057:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3053:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$1089_storage",
																"typeString": "struct MyStakingContract.Stake storage ref"
															}
														},
														"id": 1346,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3065:9:8",
														"memberName": "isClaimed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1086,
														"src": "3053:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1347,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3077:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3053:28:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1349,
												"nodeType": "ExpressionStatement",
												"src": "3053:28:8"
											},
											{
												"assignments": [
													1351,
													1353,
													1355,
													1357
												],
												"declarations": [
													{
														"constant": false,
														"id": 1351,
														"mutability": "mutable",
														"name": "userAddress",
														"nameLocation": "3103:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 1375,
														"src": "3095:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1350,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3095:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1353,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "3124:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1375,
														"src": "3116:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1352,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3116:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1355,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "3141:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1375,
														"src": "3133:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1354,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3133:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1357,
														"mutability": "mutable",
														"name": "totalAmount",
														"nameLocation": "3157:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 1375,
														"src": "3149:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1356,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3149:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1361,
												"initialValue": {
													"arguments": [
														{
															"id": 1359,
															"name": "userid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1320,
															"src": "3188:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1358,
														"name": "calculateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1318,
														"src": "3172:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256) view returns (address,uint256,uint256,uint256)"
														}
													},
													"id": 1360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3172:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(address,uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3094:101:8"
											},
											{
												"assignments": [
													1363
												],
												"declarations": [
													{
														"constant": false,
														"id": 1363,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3263:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1375,
														"src": "3258:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1362,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3258:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1369,
												"initialValue": {
													"arguments": [
														{
															"id": 1366,
															"name": "userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1351,
															"src": "3287:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1367,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1355,
															"src": "3300:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1364,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1045,
															"src": "3272:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_MyToken_$1030",
																"typeString": "contract MyToken"
															}
														},
														"id": 1365,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3278:8:8",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 409,
														"src": "3272:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3272:35:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3258:49:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1371,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1363,
															"src": "3326:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e207472616e73666572206661696c6564",
															"id": 1372,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3335:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															},
															"value": "Token transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															}
														],
														"id": 1370,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3318:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3318:41:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1374,
												"nodeType": "ExpressionStatement",
												"src": "3318:41:8"
											}
										]
									},
									"functionSelector": "92ceb12d",
									"id": 1376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ClaimReward",
									"nameLocation": "2807:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "userid",
												"nameLocation": "2827:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "2819:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2819:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2818:16:8"
									},
									"returnParameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2842:0:8"
									},
									"scope": 1467,
									"src": "2798:573:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1465,
										"nodeType": "Block",
										"src": "3429:889:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1382,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3448:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3452:6:8",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3448:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1384,
																		"name": "cid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1100,
																		"src": "3462:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$1089_storage_$",
																			"typeString": "mapping(uint256 => struct MyStakingContract.Stake storage ref)"
																		}
																	},
																	"id": 1386,
																	"indexExpression": {
																		"id": 1385,
																		"name": "userid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1378,
																		"src": "3466:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3462:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$1089_storage",
																		"typeString": "struct MyStakingContract.Stake storage ref"
																	}
																},
																"id": 1387,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3474:7:8",
																"memberName": "userads",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1084,
																"src": "3462:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3448:33:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752063616e206f6e6c7920636c61696d20796f7572206f776e207374616b656420616d6f756e74",
															"id": 1389,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3483:43:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_983c2ca2c32b759517ef5d3818bb7f52ae0e3ac0a8ab4d1f11cafb08aad10398",
																"typeString": "literal_string \"You can only claim your own staked amount\""
															},
															"value": "You can only claim your own staked amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_983c2ca2c32b759517ef5d3818bb7f52ae0e3ac0a8ab4d1f11cafb08aad10398",
																"typeString": "literal_string \"You can only claim your own staked amount\""
															}
														],
														"id": 1381,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3440:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3440:87:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1391,
												"nodeType": "ExpressionStatement",
												"src": "3440:87:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3546:22:8",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1393,
																		"name": "cid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1100,
																		"src": "3547:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$1089_storage_$",
																			"typeString": "mapping(uint256 => struct MyStakingContract.Stake storage ref)"
																		}
																	},
																	"id": 1395,
																	"indexExpression": {
																		"id": 1394,
																		"name": "userid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1378,
																		"src": "3551:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3547:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$1089_storage",
																		"typeString": "struct MyStakingContract.Stake storage ref"
																	}
																},
																"id": 1396,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3559:9:8",
																"memberName": "isAmountc",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1088,
																"src": "3547:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "52657761726420616c726561647920636c61696d656420796f757220616d6f756e74",
															"id": 1398,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3570:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c2aed4c0e3286d656612091f61a54c85a469157745fd2030e607e679330a422c",
																"typeString": "literal_string \"Reward already claimed your amount\""
															},
															"value": "Reward already claimed your amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c2aed4c0e3286d656612091f61a54c85a469157745fd2030e607e679330a422c",
																"typeString": "literal_string \"Reward already claimed your amount\""
															}
														],
														"id": 1392,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3538:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3538:69:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1400,
												"nodeType": "ExpressionStatement",
												"src": "3538:69:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1402,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "3626:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3632:9:8",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "3626:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1414,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 1404,
																			"name": "cid",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1100,
																			"src": "3645:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$1089_storage_$",
																				"typeString": "mapping(uint256 => struct MyStakingContract.Stake storage ref)"
																			}
																		},
																		"id": 1406,
																		"indexExpression": {
																			"id": 1405,
																			"name": "userid",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1378,
																			"src": "3649:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3645:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$1089_storage",
																			"typeString": "struct MyStakingContract.Stake storage ref"
																		}
																	},
																	"id": 1407,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3657:9:8",
																	"memberName": "startTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1082,
																	"src": "3645:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 1408,
																				"name": "cid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1100,
																				"src": "3669:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$1089_storage_$",
																					"typeString": "mapping(uint256 => struct MyStakingContract.Stake storage ref)"
																				}
																			},
																			"id": 1410,
																			"indexExpression": {
																				"id": 1409,
																				"name": "userid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1378,
																				"src": "3673:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3669:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$1089_storage",
																				"typeString": "struct MyStakingContract.Stake storage ref"
																			}
																		},
																		"id": 1411,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3681:8:8",
																		"memberName": "duration",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1080,
																		"src": "3669:20:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1412,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3692:9:8",
																		"subdenomination": "minutes",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_60_by_1",
																			"typeString": "int_const 60"
																		},
																		"value": "1"
																	},
																	"src": "3669:32:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3645:56:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3626:75:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752063616e206f6e6c7920636c61696d20616674657220746865207374616b696e67206475726174696f6e2068617320706173736564",
															"id": 1416,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3703:58:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_46b08f77c9f834b9f1b5b936b65297ec5c2879e36c6a697ee9bcda135220d353",
																"typeString": "literal_string \"You can only claim after the staking duration has passed\""
															},
															"value": "You can only claim after the staking duration has passed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_46b08f77c9f834b9f1b5b936b65297ec5c2879e36c6a697ee9bcda135220d353",
																"typeString": "literal_string \"You can only claim after the staking duration has passed\""
															}
														],
														"id": 1401,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3618:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3618:144:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1418,
												"nodeType": "ExpressionStatement",
												"src": "3618:144:8"
											},
											{
												"expression": {
													"id": 1424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1419,
																"name": "cid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1100,
																"src": "3813:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$1089_storage_$",
																	"typeString": "mapping(uint256 => struct MyStakingContract.Stake storage ref)"
																}
															},
															"id": 1421,
															"indexExpression": {
																"id": 1420,
																"name": "userid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1378,
																"src": "3817:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3813:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$1089_storage",
																"typeString": "struct MyStakingContract.Stake storage ref"
															}
														},
														"id": 1422,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3825:9:8",
														"memberName": "isAmountc",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1088,
														"src": "3813:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1423,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3837:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3813:28:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1425,
												"nodeType": "ExpressionStatement",
												"src": "3813:28:8"
											},
											{
												"assignments": [
													1427,
													1429,
													1431,
													1433
												],
												"declarations": [
													{
														"constant": false,
														"id": 1427,
														"mutability": "mutable",
														"name": "userAddress",
														"nameLocation": "3863:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 1465,
														"src": "3855:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1426,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3855:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1429,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "3884:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1465,
														"src": "3876:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1428,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3876:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1431,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "3901:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1465,
														"src": "3893:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1430,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3893:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1433,
														"mutability": "mutable",
														"name": "Amount",
														"nameLocation": "3917:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1465,
														"src": "3909:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1432,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3909:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1437,
												"initialValue": {
													"arguments": [
														{
															"id": 1435,
															"name": "userid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1378,
															"src": "3943:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1434,
														"name": "calculateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1318,
														"src": "3927:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256) view returns (address,uint256,uint256,uint256)"
														}
													},
													"id": 1436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3927:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(address,uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3854:96:8"
											},
											{
												"assignments": [
													1439
												],
												"declarations": [
													{
														"constant": false,
														"id": 1439,
														"mutability": "mutable",
														"name": "stakedAmount",
														"nameLocation": "3973:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 1465,
														"src": "3965:20:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1438,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3965:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1444,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 1440,
															"name": "cid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1100,
															"src": "3988:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$1089_storage_$",
																"typeString": "mapping(uint256 => struct MyStakingContract.Stake storage ref)"
															}
														},
														"id": 1442,
														"indexExpression": {
															"id": 1441,
															"name": "userid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1378,
															"src": "3992:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3988:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$1089_storage",
															"typeString": "struct MyStakingContract.Stake storage ref"
														}
													},
													"id": 1443,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4000:6:8",
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1078,
													"src": "3988:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3965:41:8"
											},
											{
												"expression": {
													"id": 1450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1445,
																"name": "cid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1100,
																"src": "4060:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$1089_storage_$",
																	"typeString": "mapping(uint256 => struct MyStakingContract.Stake storage ref)"
																}
															},
															"id": 1447,
															"indexExpression": {
																"id": 1446,
																"name": "userid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1378,
																"src": "4064:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4060:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$1089_storage",
																"typeString": "struct MyStakingContract.Stake storage ref"
															}
														},
														"id": 1448,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4072:6:8",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1078,
														"src": "4060:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1449,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4081:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4060:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1451,
												"nodeType": "ExpressionStatement",
												"src": "4060:22:8"
											},
											{
												"assignments": [
													1453
												],
												"declarations": [
													{
														"constant": false,
														"id": 1453,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4204:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1465,
														"src": "4199:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1452,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4199:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1459,
												"initialValue": {
													"arguments": [
														{
															"id": 1456,
															"name": "userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1427,
															"src": "4229:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1457,
															"name": "stakedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1439,
															"src": "4242:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1454,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1045,
															"src": "4214:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_MyToken_$1030",
																"typeString": "contract MyToken"
															}
														},
														"id": 1455,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4220:8:8",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 409,
														"src": "4214:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4214:41:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4199:56:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1461,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1453,
															"src": "4275:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e207472616e73666572206661696c6564",
															"id": 1462,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4284:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															},
															"value": "Token transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															}
														],
														"id": 1460,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4267:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4267:41:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1464,
												"nodeType": "ExpressionStatement",
												"src": "4267:41:8"
											}
										]
									},
									"functionSelector": "41324ec5",
									"id": 1466,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimStakedAmount",
									"nameLocation": "3388:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "userid",
												"nameLocation": "3414:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "3406:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3406:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3405:16:8"
									},
									"returnParameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3429:0:8"
									},
									"scope": 1467,
									"src": "3379:939:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1468,
							"src": "340:3985:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:4341:8"
				},
				"id": 8
			}
		}
	}
}