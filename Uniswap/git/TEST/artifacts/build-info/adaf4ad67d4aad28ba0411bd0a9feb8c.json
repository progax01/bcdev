{
	"id": "adaf4ad67d4aad28ba0411bd0a9feb8c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.21",
	"solcLongVersion": "0.8.21+commit.d9974bed",
	"input": {
		"language": "Solidity",
		"sources": {
			"TEST/swap.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity ^0.8.0;\r\npragma abicoder v2;\r\n\r\nimport '@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol';\r\nimport '@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol';\r\n\r\ncontract SwapExamples {\r\n   \r\n    ISwapRouter public immutable swapRouter;\r\n\r\n\r\n    address public constant DAI = 0x6B175474E89094C44Da98b954EedeAC495271d0F;\r\n    address public constant WETH9 = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\r\n    address public constant USDC = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48;\r\n\r\n    // For this example, we will set the pool fee to 0.3%.\r\n    uint24 public constant poolFee = 3000;\r\n\r\n    constructor(ISwapRouter _swapRouter) {\r\n        swapRouter = _swapRouter;\r\n    }\r\n\r\n    function swapExactInputSingle(uint256 amountIn) external returns (uint256 amountOut) {\r\n    \r\n        TransferHelper.safeTransferFrom(DAI, msg.sender, address(this), amountIn);\r\n\r\n        // Approve the router to spend DAI.\r\n        TransferHelper.safeApprove(DAI, address(swapRouter), amountIn);\r\n\r\n        ISwapRouter.ExactInputSingleParams memory params =\r\n            ISwapRouter.ExactInputSingleParams({\r\n                tokenIn: DAI,\r\n                tokenOut: WETH9,\r\n                fee: poolFee,\r\n                recipient: msg.sender,\r\n                deadline: block.timestamp,\r\n                amountIn: amountIn,\r\n                amountOutMinimum: 0,\r\n                sqrtPriceLimitX96: 0\r\n            });\r\n\r\n        // The call to `exactInputSingle` executes the swap.\r\n        amountOut = swapRouter.exactInputSingle(params);\r\n    }\r\n\r\n    function swapExactOutputSingle(uint256 amountOut, uint256 amountInMaximum) external returns (uint256 amountIn) {\r\n        // Transfer the specified amount of DAI to this contract.\r\n        TransferHelper.safeTransferFrom(DAI, msg.sender, address(this), amountInMaximum);\r\n\r\n        TransferHelper.safeApprove(DAI, address(swapRouter), amountInMaximum);\r\n\r\n        ISwapRouter.ExactOutputSingleParams memory params =\r\n            ISwapRouter.ExactOutputSingleParams({\r\n                tokenIn: DAI,\r\n                tokenOut: WETH9,\r\n                fee: poolFee,\r\n                recipient: msg.sender,\r\n                deadline: block.timestamp,\r\n                amountOut: amountOut,\r\n                amountInMaximum: amountInMaximum,\r\n                sqrtPriceLimitX96: 0\r\n            });\r\n\r\n        // Executes the swap returning the amountIn needed to spend to receive the desired amountOut.\r\n        amountIn = swapRouter.exactOutputSingle(params);\r\n\r\n        if (amountIn < amountInMaximum) {\r\n            TransferHelper.safeApprove(DAI, address(swapRouter), 0);\r\n            TransferHelper.safeTransfer(DAI, msg.sender, amountInMaximum - amountIn);\r\n        }\r\n    }\r\n}"
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\n\n/// @title Router token swapping functionality\n/// @notice Functions for swapping tokens via Uniswap V3\ninterface ISwapRouter is IUniswapV3SwapCallback {\n    struct ExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactInputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\n\n    struct ExactOutputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\n}\n"
			},
			"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.6.0;\n\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\n\nlibrary TransferHelper {\n    /// @notice Transfers tokens from the targeted address to the given destination\n    /// @notice Errors with 'STF' if transfer fails\n    /// @param token The contract address of the token to be transferred\n    /// @param from The originating address from which the tokens will be transferred\n    /// @param to The destination address of the transfer\n    /// @param value The amount to be transferred\n    function safeTransferFrom(\n        address token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) =\n            token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'STF');\n    }\n\n    /// @notice Transfers tokens from msg.sender to a recipient\n    /// @dev Errors with ST if transfer fails\n    /// @param token The contract address of the token which will be transferred\n    /// @param to The recipient of the transfer\n    /// @param value The value of the transfer\n    function safeTransfer(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'ST');\n    }\n\n    /// @notice Approves the stipulated contract to spend the given allowance in the given token\n    /// @dev Errors with 'SA' if transfer fails\n    /// @param token The contract address of the token to be approved\n    /// @param to The target of the approval\n    /// @param value The amount of the given token the target will be allowed to spend\n    function safeApprove(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA');\n    }\n\n    /// @notice Transfers ETH to the recipient address\n    /// @dev Fails with `STE`\n    /// @param to The destination of the transfer\n    /// @param value The value to be transferred\n    function safeTransferETH(address to, uint256 value) internal {\n        (bool success, ) = to.call{value: value}(new bytes(0));\n        require(success, 'STE');\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Callback for IUniswapV3PoolActions#swap\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\ninterface IUniswapV3SwapCallback {\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes calldata data\n    ) external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"IUniswapV3SwapCallback": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Callback for IUniswapV3PoolActions#swap",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":\"IUniswapV3SwapCallback\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Any contract that calls IUniswapV3PoolActions#swap must implement this interface",
						"version": 1
					}
				}
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"ISwapRouter": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Router token swapping functionality",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"exactInput((bytes,address,uint256,uint256,uint256))": "c04b8d59",
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "414bf389",
							"exactOutput((bytes,address,uint256,uint256,uint256))": "f28c0498",
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "db3e2198",
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Router token swapping functionality\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Functions for swapping tokens via Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":\"ISwapRouter\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another along the specified path"
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another token"
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)"
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another token"
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Functions for swapping tokens via Uniswap V3",
						"version": 1
					}
				}
			},
			"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
				"TransferHelper": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":129:2537  library TransferHelper {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":129:2537  library TransferHelper {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b34b1384136a77bfb7d700e3cd03dee97e7e1af27096ed5d04efa2ad6cad86c964736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b34b1384136a77bfb7d700e3cd03dee97e7e1af27096ed5d04efa2ad6cad86c964736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 0x4B SGT DUP5 SGT PUSH11 0x77BFB7D700E3CD03DEE97E PUSH31 0x1AF27096ED5D04EFA2AD6CAD86C964736F6C63430008150033000000000000 ",
							"sourceMap": "129:2408:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b34b1384136a77bfb7d700e3cd03dee97e7e1af27096ed5d04efa2ad6cad86c964736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 0x4B SGT DUP5 SGT PUSH11 0x77BFB7D700E3CD03DEE97E PUSH31 0x1AF27096ED5D04EFA2AD6CAD86C964736F6C63430008150033000000000000 ",
							"sourceMap": "129:2408:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"safeApprove(address,address,uint256)": "infinite",
								"safeTransfer(address,address,uint256)": "infinite",
								"safeTransferETH(address,uint256)": "infinite",
								"safeTransferFrom(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b34b1384136a77bfb7d700e3cd03dee97e7e1af27096ed5d04efa2ad6cad86c964736f6c63430008150033",
									".code": [
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
								"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
								"TEST/swap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"TEST/swap.sol": {
				"SwapExamples": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract ISwapRouter",
									"name": "_swapRouter",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "DAI",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "USDC",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WETH9",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolFee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"name": "swapExactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMaximum",
									"type": "uint256"
								}
							],
							"name": "swapExactOutputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "swapRouter",
							"outputs": [
								{
									"internalType": "contract ISwapRouter",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"TEST/swap.sol\":238:2790  contract SwapExamples {... */\n  mstore(0x40, 0xa0)\n    /* \"TEST/swap.sol\":670:750  constructor(ISwapRouter _swapRouter) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"TEST/swap.sol\":731:742  _swapRouter */\n  dup1\n    /* \"TEST/swap.sol\":718:742  swapRouter = _swapRouter */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"TEST/swap.sol\":670:750  constructor(ISwapRouter _swapRouter) {... */\n  pop\n    /* \"TEST/swap.sol\":238:2790  contract SwapExamples {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_21\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:683   */\ntag_12:\n    /* \"#utility.yul\":624:631   */\n  0x00\n    /* \"#utility.yul\":653:677   */\n  tag_23\n    /* \"#utility.yul\":671:676   */\n  dup3\n    /* \"#utility.yul\":653:677   */\n  tag_11\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":642:677   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:683   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":689:849   */\ntag_13:\n    /* \"#utility.yul\":781:824   */\n  tag_25\n    /* \"#utility.yul\":818:823   */\n  dup2\n    /* \"#utility.yul\":781:824   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":774:779   */\n  dup2\n    /* \"#utility.yul\":771:825   */\n  eq\n    /* \"#utility.yul\":761:843   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":839:840   */\n  0x00\n    /* \"#utility.yul\":836:837   */\n  dup1\n    /* \"#utility.yul\":829:841   */\n  revert\n    /* \"#utility.yul\":761:843   */\ntag_26:\n    /* \"#utility.yul\":689:849   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":855:1036   */\ntag_14:\n    /* \"#utility.yul\":931:936   */\n  0x00\n    /* \"#utility.yul\":962:968   */\n  dup2\n    /* \"#utility.yul\":956:969   */\n  mload\n    /* \"#utility.yul\":947:969   */\n  swap1\n  pop\n    /* \"#utility.yul\":978:1030   */\n  tag_28\n    /* \"#utility.yul\":1024:1029   */\n  dup2\n    /* \"#utility.yul\":978:1030   */\n  tag_13\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":855:1036   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1042:1431   */\ntag_3:\n    /* \"#utility.yul\":1131:1137   */\n  0x00\n    /* \"#utility.yul\":1180:1182   */\n  0x20\n    /* \"#utility.yul\":1168:1177   */\n  dup3\n    /* \"#utility.yul\":1159:1166   */\n  dup5\n    /* \"#utility.yul\":1155:1178   */\n  sub\n    /* \"#utility.yul\":1151:1183   */\n  slt\n    /* \"#utility.yul\":1148:1267   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1186:1265   */\n  tag_31\n  tag_8\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1148:1267   */\ntag_30:\n    /* \"#utility.yul\":1306:1307   */\n  0x00\n    /* \"#utility.yul\":1331:1414   */\n  tag_32\n    /* \"#utility.yul\":1406:1413   */\n  dup5\n    /* \"#utility.yul\":1397:1403   */\n  dup3\n    /* \"#utility.yul\":1386:1395   */\n  dup6\n    /* \"#utility.yul\":1382:1404   */\n  add\n    /* \"#utility.yul\":1331:1414   */\n  tag_14\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":1321:1414   */\n  swap2\n  pop\n    /* \"#utility.yul\":1277:1424   */\n  pop\n    /* \"#utility.yul\":1042:1431   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"TEST/swap.sol\":238:2790  contract SwapExamples {... */\ntag_6:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x5fe7a1a414abe991afbda9a853d967f992c558068728d0e3ee148ed2656bb10a\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"TEST/swap.sol\":238:2790  contract SwapExamples {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x89a30271\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x89a30271\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xc31c9c07\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xc4b69a18\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xe0bab4c4\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x089fe6aa\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x4aa4a4fc\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x73bd43ad\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"TEST/swap.sol\":624:661  uint24 public constant poolFee = 3000 */\n    tag_3:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TEST/swap.sol\":401:475  address public constant WETH9 = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 */\n    tag_4:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TEST/swap.sol\":758:1605  function swapExactInputSingle(uint256 amountIn) external returns (uint256 amountOut) {... */\n    tag_5:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TEST/swap.sol\":482:555  address public constant USDC = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48 */\n    tag_6:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TEST/swap.sol\":272:311  ISwapRouter public immutable swapRouter */\n    tag_7:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TEST/swap.sol\":1613:2787  function swapExactOutputSingle(uint256 amountOut, uint256 amountInMaximum) external returns (uint256 amountIn) {... */\n    tag_8:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TEST/swap.sol\":322:394  address public constant DAI = 0x6B175474E89094C44Da98b954EedeAC495271d0F */\n    tag_9:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TEST/swap.sol\":624:661  uint24 public constant poolFee = 3000 */\n    tag_12:\n        /* \"TEST/swap.sol\":657:661  3000 */\n      0x0bb8\n        /* \"TEST/swap.sol\":624:661  uint24 public constant poolFee = 3000 */\n      dup2\n      jump\t// out\n        /* \"TEST/swap.sol\":401:475  address public constant WETH9 = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 */\n    tag_16:\n        /* \"TEST/swap.sol\":433:475  0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 */\n      0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\n        /* \"TEST/swap.sol\":401:475  address public constant WETH9 = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 */\n      dup2\n      jump\t// out\n        /* \"TEST/swap.sol\":758:1605  function swapExactInputSingle(uint256 amountIn) external returns (uint256 amountOut) {... */\n    tag_22:\n        /* \"TEST/swap.sol\":824:841  uint256 amountOut */\n      0x00\n        /* \"TEST/swap.sol\":860:933  TransferHelper.safeTransferFrom(DAI, msg.sender, address(this), amountIn) */\n      tag_41\n        /* \"TEST/swap.sol\":352:394  0x6B175474E89094C44Da98b954EedeAC495271d0F */\n      0x6b175474e89094c44da98b954eedeac495271d0f\n        /* \"TEST/swap.sol\":897:907  msg.sender */\n      caller\n        /* \"TEST/swap.sol\":917:921  this */\n      address\n        /* \"TEST/swap.sol\":924:932  amountIn */\n      dup6\n        /* \"TEST/swap.sol\":860:891  TransferHelper.safeTransferFrom */\n      tag_42\n        /* \"TEST/swap.sol\":860:933  TransferHelper.safeTransferFrom(DAI, msg.sender, address(this), amountIn) */\n      jump\t// in\n    tag_41:\n        /* \"TEST/swap.sol\":991:1053  TransferHelper.safeApprove(DAI, address(swapRouter), amountIn) */\n      tag_43\n        /* \"TEST/swap.sol\":352:394  0x6B175474E89094C44Da98b954EedeAC495271d0F */\n      0x6b175474e89094c44da98b954eedeac495271d0f\n        /* \"TEST/swap.sol\":1031:1041  swapRouter */\n      immutable(\"0x5fe7a1a414abe991afbda9a853d967f992c558068728d0e3ee148ed2656bb10a\")\n        /* \"TEST/swap.sol\":1044:1052  amountIn */\n      dup5\n        /* \"TEST/swap.sol\":991:1017  TransferHelper.safeApprove */\n      tag_44\n        /* \"TEST/swap.sol\":991:1053  TransferHelper.safeApprove(DAI, address(swapRouter), amountIn) */\n      jump\t// in\n    tag_43:\n        /* \"TEST/swap.sol\":1066:1114  ISwapRouter.ExactInputSingleParams memory params */\n      0x00\n        /* \"TEST/swap.sol\":1130:1475  ISwapRouter.ExactInputSingleParams({... */\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      dup1\n        /* \"TEST/swap.sol\":352:394  0x6B175474E89094C44Da98b954EedeAC495271d0F */\n      0x6b175474e89094c44da98b954eedeac495271d0f\n        /* \"TEST/swap.sol\":1130:1475  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"TEST/swap.sol\":433:475  0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 */\n      0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\n        /* \"TEST/swap.sol\":1130:1475  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"TEST/swap.sol\":657:661  3000 */\n      0x0bb8\n        /* \"TEST/swap.sol\":1130:1475  ISwapRouter.ExactInputSingleParams({... */\n      0xffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"TEST/swap.sol\":1291:1301  msg.sender */\n      caller\n        /* \"TEST/swap.sol\":1130:1475  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"TEST/swap.sol\":1330:1345  block.timestamp */\n      timestamp\n        /* \"TEST/swap.sol\":1130:1475  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"TEST/swap.sol\":1374:1382  amountIn */\n      dup5\n        /* \"TEST/swap.sol\":1130:1475  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"TEST/swap.sol\":1419:1420  0 */\n      0x00\n        /* \"TEST/swap.sol\":1130:1475  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"TEST/swap.sol\":1458:1459  0 */\n      0x00\n        /* \"TEST/swap.sol\":1130:1475  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"TEST/swap.sol\":1066:1475  ISwapRouter.ExactInputSingleParams memory params =... */\n      swap1\n      pop\n        /* \"TEST/swap.sol\":1562:1572  swapRouter */\n      immutable(\"0x5fe7a1a414abe991afbda9a853d967f992c558068728d0e3ee148ed2656bb10a\")\n        /* \"TEST/swap.sol\":1562:1589  swapRouter.exactInputSingle */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x414bf389\n        /* \"TEST/swap.sol\":1590:1596  params */\n      dup3\n        /* \"TEST/swap.sol\":1562:1597  swapRouter.exactInputSingle(params) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_48\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_48:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n        /* \"TEST/swap.sol\":1550:1597  amountOut = swapRouter.exactInputSingle(params) */\n      swap2\n      pop\n        /* \"TEST/swap.sol\":843:1605  {... */\n      pop\n        /* \"TEST/swap.sol\":758:1605  function swapExactInputSingle(uint256 amountIn) external returns (uint256 amountOut) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"TEST/swap.sol\":482:555  address public constant USDC = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48 */\n    tag_26:\n        /* \"TEST/swap.sol\":513:555  0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48 */\n      0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\n        /* \"TEST/swap.sol\":482:555  address public constant USDC = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48 */\n      dup2\n      jump\t// out\n        /* \"TEST/swap.sol\":272:311  ISwapRouter public immutable swapRouter */\n    tag_29:\n      immutable(\"0x5fe7a1a414abe991afbda9a853d967f992c558068728d0e3ee148ed2656bb10a\")\n      dup2\n      jump\t// out\n        /* \"TEST/swap.sol\":1613:2787  function swapExactOutputSingle(uint256 amountOut, uint256 amountInMaximum) external returns (uint256 amountIn) {... */\n    tag_35:\n        /* \"TEST/swap.sol\":1706:1722  uint256 amountIn */\n      0x00\n        /* \"TEST/swap.sol\":1802:1882  TransferHelper.safeTransferFrom(DAI, msg.sender, address(this), amountInMaximum) */\n      tag_52\n        /* \"TEST/swap.sol\":352:394  0x6B175474E89094C44Da98b954EedeAC495271d0F */\n      0x6b175474e89094c44da98b954eedeac495271d0f\n        /* \"TEST/swap.sol\":1839:1849  msg.sender */\n      caller\n        /* \"TEST/swap.sol\":1859:1863  this */\n      address\n        /* \"TEST/swap.sol\":1866:1881  amountInMaximum */\n      dup6\n        /* \"TEST/swap.sol\":1802:1833  TransferHelper.safeTransferFrom */\n      tag_42\n        /* \"TEST/swap.sol\":1802:1882  TransferHelper.safeTransferFrom(DAI, msg.sender, address(this), amountInMaximum) */\n      jump\t// in\n    tag_52:\n        /* \"TEST/swap.sol\":1895:1964  TransferHelper.safeApprove(DAI, address(swapRouter), amountInMaximum) */\n      tag_53\n        /* \"TEST/swap.sol\":352:394  0x6B175474E89094C44Da98b954EedeAC495271d0F */\n      0x6b175474e89094c44da98b954eedeac495271d0f\n        /* \"TEST/swap.sol\":1935:1945  swapRouter */\n      immutable(\"0x5fe7a1a414abe991afbda9a853d967f992c558068728d0e3ee148ed2656bb10a\")\n        /* \"TEST/swap.sol\":1948:1963  amountInMaximum */\n      dup5\n        /* \"TEST/swap.sol\":1895:1921  TransferHelper.safeApprove */\n      tag_44\n        /* \"TEST/swap.sol\":1895:1964  TransferHelper.safeApprove(DAI, address(swapRouter), amountInMaximum) */\n      jump\t// in\n    tag_53:\n        /* \"TEST/swap.sol\":1977:2026  ISwapRouter.ExactOutputSingleParams memory params */\n      0x00\n        /* \"TEST/swap.sol\":2042:2403  ISwapRouter.ExactOutputSingleParams({... */\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      dup1\n        /* \"TEST/swap.sol\":352:394  0x6B175474E89094C44Da98b954EedeAC495271d0F */\n      0x6b175474e89094c44da98b954eedeac495271d0f\n        /* \"TEST/swap.sol\":2042:2403  ISwapRouter.ExactOutputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"TEST/swap.sol\":433:475  0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 */\n      0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\n        /* \"TEST/swap.sol\":2042:2403  ISwapRouter.ExactOutputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"TEST/swap.sol\":657:661  3000 */\n      0x0bb8\n        /* \"TEST/swap.sol\":2042:2403  ISwapRouter.ExactOutputSingleParams({... */\n      0xffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"TEST/swap.sol\":2204:2214  msg.sender */\n      caller\n        /* \"TEST/swap.sol\":2042:2403  ISwapRouter.ExactOutputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"TEST/swap.sol\":2243:2258  block.timestamp */\n      timestamp\n        /* \"TEST/swap.sol\":2042:2403  ISwapRouter.ExactOutputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"TEST/swap.sol\":2288:2297  amountOut */\n      dup6\n        /* \"TEST/swap.sol\":2042:2403  ISwapRouter.ExactOutputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"TEST/swap.sol\":2333:2348  amountInMaximum */\n      dup5\n        /* \"TEST/swap.sol\":2042:2403  ISwapRouter.ExactOutputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"TEST/swap.sol\":2386:2387  0 */\n      0x00\n        /* \"TEST/swap.sol\":2042:2403  ISwapRouter.ExactOutputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"TEST/swap.sol\":1977:2403  ISwapRouter.ExactOutputSingleParams memory params =... */\n      swap1\n      pop\n        /* \"TEST/swap.sol\":2530:2540  swapRouter */\n      immutable(\"0x5fe7a1a414abe991afbda9a853d967f992c558068728d0e3ee148ed2656bb10a\")\n        /* \"TEST/swap.sol\":2530:2558  swapRouter.exactOutputSingle */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdb3e2198\n        /* \"TEST/swap.sol\":2559:2565  params */\n      dup3\n        /* \"TEST/swap.sol\":2530:2566  swapRouter.exactOutputSingle(params) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_57\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_57:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_58:\n        /* \"TEST/swap.sol\":2519:2566  amountIn = swapRouter.exactOutputSingle(params) */\n      swap2\n      pop\n        /* \"TEST/swap.sol\":2594:2609  amountInMaximum */\n      dup3\n        /* \"TEST/swap.sol\":2583:2591  amountIn */\n      dup3\n        /* \"TEST/swap.sol\":2583:2609  amountIn < amountInMaximum */\n      lt\n        /* \"TEST/swap.sol\":2579:2780  if (amountIn < amountInMaximum) {... */\n      iszero\n      tag_59\n      jumpi\n        /* \"TEST/swap.sol\":2626:2681  TransferHelper.safeApprove(DAI, address(swapRouter), 0) */\n      tag_60\n        /* \"TEST/swap.sol\":352:394  0x6B175474E89094C44Da98b954EedeAC495271d0F */\n      0x6b175474e89094c44da98b954eedeac495271d0f\n        /* \"TEST/swap.sol\":2666:2676  swapRouter */\n      immutable(\"0x5fe7a1a414abe991afbda9a853d967f992c558068728d0e3ee148ed2656bb10a\")\n        /* \"TEST/swap.sol\":2679:2680  0 */\n      0x00\n        /* \"TEST/swap.sol\":2626:2652  TransferHelper.safeApprove */\n      tag_44\n        /* \"TEST/swap.sol\":2626:2681  TransferHelper.safeApprove(DAI, address(swapRouter), 0) */\n      jump\t// in\n    tag_60:\n        /* \"TEST/swap.sol\":2696:2768  TransferHelper.safeTransfer(DAI, msg.sender, amountInMaximum - amountIn) */\n      tag_61\n        /* \"TEST/swap.sol\":352:394  0x6B175474E89094C44Da98b954EedeAC495271d0F */\n      0x6b175474e89094c44da98b954eedeac495271d0f\n        /* \"TEST/swap.sol\":2729:2739  msg.sender */\n      caller\n        /* \"TEST/swap.sol\":2759:2767  amountIn */\n      dup5\n        /* \"TEST/swap.sol\":2741:2756  amountInMaximum */\n      dup7\n        /* \"TEST/swap.sol\":2741:2767  amountInMaximum - amountIn */\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"TEST/swap.sol\":2696:2723  TransferHelper.safeTransfer */\n      tag_64\n        /* \"TEST/swap.sol\":2696:2768  TransferHelper.safeTransfer(DAI, msg.sender, amountInMaximum - amountIn) */\n      jump\t// in\n    tag_61:\n        /* \"TEST/swap.sol\":2579:2780  if (amountIn < amountInMaximum) {... */\n    tag_59:\n        /* \"TEST/swap.sol\":1724:2787  {... */\n      pop\n        /* \"TEST/swap.sol\":1613:2787  function swapExactOutputSingle(uint256 amountOut, uint256 amountInMaximum) external returns (uint256 amountIn) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"TEST/swap.sol\":322:394  address public constant DAI = 0x6B175474E89094C44Da98b954EedeAC495271d0F */\n    tag_38:\n        /* \"TEST/swap.sol\":352:394  0x6B175474E89094C44Da98b954EedeAC495271d0F */\n      0x6b175474e89094c44da98b954eedeac495271d0f\n        /* \"TEST/swap.sol\":322:394  address public constant DAI = 0x6B175474E89094C44Da98b954EedeAC495271d0F */\n      dup2\n      jump\t// out\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":561:919  function safeTransferFrom(... */\n    tag_42:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":701:713  bool success */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":715:732  bytes memory data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":748:753  token */\n      dup6\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":748:758  token.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":782:810  IERC20.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":812:816  from */\n      dup7\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":818:820  to */\n      dup7\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":822:827  value */\n      dup7\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":759:828  abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_66\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":748:829  token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value)) */\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_72\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_71)\n    tag_72:\n      0x60\n      swap2\n      pop\n    tag_71:\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":700:829  (bool success, bytes memory data) =... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":847:854  success */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":847:904  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_73\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":874:875  0 */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:863  data */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:870  data.length */\n      mload\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:875  data.length == 0 */\n      eq\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:903  data.length == 0 || abi.decode(data, (bool)) */\n      dup1\n      tag_74\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":890:894  data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":879:903  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:903  data.length == 0 || abi.decode(data, (bool)) */\n    tag_74:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":847:904  success && (data.length == 0 || abi.decode(data, (bool))) */\n    tag_73:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":839:912  require(success && (data.length == 0 || abi.decode(data, (bool))), 'STF') */\n      tag_77\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_78\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_77:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":690:919  {... */\n      pop\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":561:919  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1873:2180  function safeApprove(... */\n    tag_44:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1986:1998  bool success */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2000:2017  bytes memory data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2021:2026  token */\n      dup5\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2021:2031  token.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2055:2078  IERC20.approve.selector */\n      shl(0xe0, 0x095ea7b3)\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2080:2082  to */\n      dup6\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2084:2089  value */\n      dup6\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2032:2090  abi.encodeWithSelector(IERC20.approve.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_81\n      swap3\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2021:2091  token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value)) */\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_83:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_86\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_85)\n    tag_86:\n      0x60\n      swap2\n      pop\n    tag_85:\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1985:2091  (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2109:2116  success */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2109:2166  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_87\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2136:2137  0 */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2125  data */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2132  data.length */\n      mload\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2137  data.length == 0 */\n      eq\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2165  data.length == 0 || abi.decode(data, (bool)) */\n      dup1\n      tag_88\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2152:2156  data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2141:2165  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_89:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2165  data.length == 0 || abi.decode(data, (bool)) */\n    tag_88:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2109:2166  success && (data.length == 0 || abi.decode(data, (bool))) */\n    tag_87:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2101:2173  require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA') */\n      tag_90\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_90:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1975:2180  {... */\n      pop\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1873:2180  function safeApprove(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1211:1520  function safeTransfer(... */\n    tag_64:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1325:1337  bool success */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1339:1356  bytes memory data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1360:1365  token */\n      dup5\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1360:1370  token.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1394:1418  IERC20.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1420:1422  to */\n      dup6\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1424:1429  value */\n      dup6\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1371:1430  abi.encodeWithSelector(IERC20.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_94\n      swap3\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1360:1431  token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value)) */\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_95:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_98\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_97)\n    tag_98:\n      0x60\n      swap2\n      pop\n    tag_97:\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1324:1431  (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1449:1456  success */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1449:1506  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_99\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1476:1477  0 */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1461:1465  data */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1461:1472  data.length */\n      mload\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1461:1477  data.length == 0 */\n      eq\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1461:1505  data.length == 0 || abi.decode(data, (bool)) */\n      dup1\n      tag_100\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1492:1496  data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1481:1505  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_101:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1461:1505  data.length == 0 || abi.decode(data, (bool)) */\n    tag_100:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1449:1506  success && (data.length == 0 || abi.decode(data, (bool))) */\n    tag_99:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1441:1513  require(success && (data.length == 0 || abi.decode(data, (bool))), 'ST') */\n      tag_102\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_103\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_102:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1314:1520  {... */\n      pop\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1211:1520  function safeTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:98   */\n    tag_105:\n        /* \"#utility.yul\":43:50   */\n      0x00\n        /* \"#utility.yul\":83:91   */\n      0xffffff\n        /* \"#utility.yul\":76:81   */\n      dup3\n        /* \"#utility.yul\":72:92   */\n      and\n        /* \"#utility.yul\":61:92   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:98   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":104:219   */\n    tag_106:\n        /* \"#utility.yul\":189:212   */\n      tag_147\n        /* \"#utility.yul\":206:211   */\n      dup2\n        /* \"#utility.yul\":189:212   */\n      tag_105\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":184:187   */\n      dup3\n        /* \"#utility.yul\":177:213   */\n      mstore\n        /* \"#utility.yul\":104:219   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":225:443   */\n    tag_14:\n        /* \"#utility.yul\":316:320   */\n      0x00\n        /* \"#utility.yul\":354:356   */\n      0x20\n        /* \"#utility.yul\":343:352   */\n      dup3\n        /* \"#utility.yul\":339:357   */\n      add\n        /* \"#utility.yul\":331:357   */\n      swap1\n      pop\n        /* \"#utility.yul\":367:436   */\n      tag_149\n        /* \"#utility.yul\":433:434   */\n      0x00\n        /* \"#utility.yul\":422:431   */\n      dup4\n        /* \"#utility.yul\":418:435   */\n      add\n        /* \"#utility.yul\":409:415   */\n      dup5\n        /* \"#utility.yul\":367:436   */\n      tag_106\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":225:443   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":449:575   */\n    tag_107:\n        /* \"#utility.yul\":486:493   */\n      0x00\n        /* \"#utility.yul\":526:568   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":519:524   */\n      dup3\n        /* \"#utility.yul\":515:569   */\n      and\n        /* \"#utility.yul\":504:569   */\n      swap1\n      pop\n        /* \"#utility.yul\":449:575   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":581:677   */\n    tag_108:\n        /* \"#utility.yul\":618:625   */\n      0x00\n        /* \"#utility.yul\":647:671   */\n      tag_152\n        /* \"#utility.yul\":665:670   */\n      dup3\n        /* \"#utility.yul\":647:671   */\n      tag_107\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":636:671   */\n      swap1\n      pop\n        /* \"#utility.yul\":581:677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":683:801   */\n    tag_109:\n        /* \"#utility.yul\":770:794   */\n      tag_154\n        /* \"#utility.yul\":788:793   */\n      dup2\n        /* \"#utility.yul\":770:794   */\n      tag_108\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":765:768   */\n      dup3\n        /* \"#utility.yul\":758:795   */\n      mstore\n        /* \"#utility.yul\":683:801   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":807:1029   */\n    tag_18:\n        /* \"#utility.yul\":900:904   */\n      0x00\n        /* \"#utility.yul\":938:940   */\n      0x20\n        /* \"#utility.yul\":927:936   */\n      dup3\n        /* \"#utility.yul\":923:941   */\n      add\n        /* \"#utility.yul\":915:941   */\n      swap1\n      pop\n        /* \"#utility.yul\":951:1022   */\n      tag_156\n        /* \"#utility.yul\":1019:1020   */\n      0x00\n        /* \"#utility.yul\":1008:1017   */\n      dup4\n        /* \"#utility.yul\":1004:1021   */\n      add\n        /* \"#utility.yul\":995:1001   */\n      dup5\n        /* \"#utility.yul\":951:1022   */\n      tag_109\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":807:1029   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1116:1233   */\n    tag_111:\n        /* \"#utility.yul\":1225:1226   */\n      0x00\n        /* \"#utility.yul\":1222:1223   */\n      dup1\n        /* \"#utility.yul\":1215:1227   */\n      revert\n        /* \"#utility.yul\":1362:1439   */\n    tag_113:\n        /* \"#utility.yul\":1399:1406   */\n      0x00\n        /* \"#utility.yul\":1428:1433   */\n      dup2\n        /* \"#utility.yul\":1417:1433   */\n      swap1\n      pop\n        /* \"#utility.yul\":1362:1439   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1445:1567   */\n    tag_114:\n        /* \"#utility.yul\":1518:1542   */\n      tag_162\n        /* \"#utility.yul\":1536:1541   */\n      dup2\n        /* \"#utility.yul\":1518:1542   */\n      tag_113\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":1511:1516   */\n      dup2\n        /* \"#utility.yul\":1508:1543   */\n      eq\n        /* \"#utility.yul\":1498:1561   */\n      tag_163\n      jumpi\n        /* \"#utility.yul\":1557:1558   */\n      0x00\n        /* \"#utility.yul\":1554:1555   */\n      dup1\n        /* \"#utility.yul\":1547:1559   */\n      revert\n        /* \"#utility.yul\":1498:1561   */\n    tag_163:\n        /* \"#utility.yul\":1445:1567   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1573:1712   */\n    tag_115:\n        /* \"#utility.yul\":1619:1624   */\n      0x00\n        /* \"#utility.yul\":1657:1663   */\n      dup2\n        /* \"#utility.yul\":1644:1664   */\n      calldataload\n        /* \"#utility.yul\":1635:1664   */\n      swap1\n      pop\n        /* \"#utility.yul\":1673:1706   */\n      tag_165\n        /* \"#utility.yul\":1700:1705   */\n      dup2\n        /* \"#utility.yul\":1673:1706   */\n      tag_114\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":1573:1712   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1718:2047   */\n    tag_21:\n        /* \"#utility.yul\":1777:1783   */\n      0x00\n        /* \"#utility.yul\":1826:1828   */\n      0x20\n        /* \"#utility.yul\":1814:1823   */\n      dup3\n        /* \"#utility.yul\":1805:1812   */\n      dup5\n        /* \"#utility.yul\":1801:1824   */\n      sub\n        /* \"#utility.yul\":1797:1829   */\n      slt\n        /* \"#utility.yul\":1794:1913   */\n      iszero\n      tag_167\n      jumpi\n        /* \"#utility.yul\":1832:1911   */\n      tag_168\n      tag_111\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":1794:1913   */\n    tag_167:\n        /* \"#utility.yul\":1952:1953   */\n      0x00\n        /* \"#utility.yul\":1977:2030   */\n      tag_169\n        /* \"#utility.yul\":2022:2029   */\n      dup5\n        /* \"#utility.yul\":2013:2019   */\n      dup3\n        /* \"#utility.yul\":2002:2011   */\n      dup6\n        /* \"#utility.yul\":1998:2020   */\n      add\n        /* \"#utility.yul\":1977:2030   */\n      tag_115\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":1967:2030   */\n      swap2\n      pop\n        /* \"#utility.yul\":1923:2040   */\n      pop\n        /* \"#utility.yul\":1718:2047   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2053:2171   */\n    tag_116:\n        /* \"#utility.yul\":2140:2164   */\n      tag_171\n        /* \"#utility.yul\":2158:2163   */\n      dup2\n        /* \"#utility.yul\":2140:2164   */\n      tag_113\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":2135:2138   */\n      dup3\n        /* \"#utility.yul\":2128:2165   */\n      mstore\n        /* \"#utility.yul\":2053:2171   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2177:2399   */\n    tag_24:\n        /* \"#utility.yul\":2270:2274   */\n      0x00\n        /* \"#utility.yul\":2308:2310   */\n      0x20\n        /* \"#utility.yul\":2297:2306   */\n      dup3\n        /* \"#utility.yul\":2293:2311   */\n      add\n        /* \"#utility.yul\":2285:2311   */\n      swap1\n      pop\n        /* \"#utility.yul\":2321:2392   */\n      tag_173\n        /* \"#utility.yul\":2389:2390   */\n      0x00\n        /* \"#utility.yul\":2378:2387   */\n      dup4\n        /* \"#utility.yul\":2374:2391   */\n      add\n        /* \"#utility.yul\":2365:2371   */\n      dup5\n        /* \"#utility.yul\":2321:2392   */\n      tag_116\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":2177:2399   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2405:2465   */\n    tag_117:\n        /* \"#utility.yul\":2433:2436   */\n      0x00\n        /* \"#utility.yul\":2454:2459   */\n      dup2\n        /* \"#utility.yul\":2447:2459   */\n      swap1\n      pop\n        /* \"#utility.yul\":2405:2465   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2471:2613   */\n    tag_118:\n        /* \"#utility.yul\":2521:2530   */\n      0x00\n        /* \"#utility.yul\":2554:2607   */\n      tag_176\n        /* \"#utility.yul\":2572:2606   */\n      tag_177\n        /* \"#utility.yul\":2581:2605   */\n      tag_178\n        /* \"#utility.yul\":2599:2604   */\n      dup5\n        /* \"#utility.yul\":2581:2605   */\n      tag_107\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":2572:2606   */\n      tag_117\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":2554:2607   */\n      tag_107\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":2541:2607   */\n      swap1\n      pop\n        /* \"#utility.yul\":2471:2613   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2619:2745   */\n    tag_119:\n        /* \"#utility.yul\":2669:2678   */\n      0x00\n        /* \"#utility.yul\":2702:2739   */\n      tag_180\n        /* \"#utility.yul\":2733:2738   */\n      dup3\n        /* \"#utility.yul\":2702:2739   */\n      tag_118\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":2689:2739   */\n      swap1\n      pop\n        /* \"#utility.yul\":2619:2745   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2751:2896   */\n    tag_120:\n        /* \"#utility.yul\":2820:2829   */\n      0x00\n        /* \"#utility.yul\":2853:2890   */\n      tag_182\n        /* \"#utility.yul\":2884:2889   */\n      dup3\n        /* \"#utility.yul\":2853:2890   */\n      tag_119\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":2840:2890   */\n      swap1\n      pop\n        /* \"#utility.yul\":2751:2896   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2902:3071   */\n    tag_121:\n        /* \"#utility.yul\":3008:3064   */\n      tag_184\n        /* \"#utility.yul\":3058:3063   */\n      dup2\n        /* \"#utility.yul\":3008:3064   */\n      tag_120\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":3003:3006   */\n      dup3\n        /* \"#utility.yul\":2996:3065   */\n      mstore\n        /* \"#utility.yul\":2902:3071   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3077:3337   */\n    tag_31:\n        /* \"#utility.yul\":3189:3193   */\n      0x00\n        /* \"#utility.yul\":3227:3229   */\n      0x20\n        /* \"#utility.yul\":3216:3225   */\n      dup3\n        /* \"#utility.yul\":3212:3230   */\n      add\n        /* \"#utility.yul\":3204:3230   */\n      swap1\n      pop\n        /* \"#utility.yul\":3240:3330   */\n      tag_186\n        /* \"#utility.yul\":3327:3328   */\n      0x00\n        /* \"#utility.yul\":3316:3325   */\n      dup4\n        /* \"#utility.yul\":3312:3329   */\n      add\n        /* \"#utility.yul\":3303:3309   */\n      dup5\n        /* \"#utility.yul\":3240:3330   */\n      tag_121\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":3077:3337   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3343:3817   */\n    tag_34:\n        /* \"#utility.yul\":3411:3417   */\n      0x00\n        /* \"#utility.yul\":3419:3425   */\n      dup1\n        /* \"#utility.yul\":3468:3470   */\n      0x40\n        /* \"#utility.yul\":3456:3465   */\n      dup4\n        /* \"#utility.yul\":3447:3454   */\n      dup6\n        /* \"#utility.yul\":3443:3466   */\n      sub\n        /* \"#utility.yul\":3439:3471   */\n      slt\n        /* \"#utility.yul\":3436:3555   */\n      iszero\n      tag_188\n      jumpi\n        /* \"#utility.yul\":3474:3553   */\n      tag_189\n      tag_111\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":3436:3555   */\n    tag_188:\n        /* \"#utility.yul\":3594:3595   */\n      0x00\n        /* \"#utility.yul\":3619:3672   */\n      tag_190\n        /* \"#utility.yul\":3664:3671   */\n      dup6\n        /* \"#utility.yul\":3655:3661   */\n      dup3\n        /* \"#utility.yul\":3644:3653   */\n      dup7\n        /* \"#utility.yul\":3640:3662   */\n      add\n        /* \"#utility.yul\":3619:3672   */\n      tag_115\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":3609:3672   */\n      swap3\n      pop\n        /* \"#utility.yul\":3565:3682   */\n      pop\n        /* \"#utility.yul\":3721:3723   */\n      0x20\n        /* \"#utility.yul\":3747:3800   */\n      tag_191\n        /* \"#utility.yul\":3792:3799   */\n      dup6\n        /* \"#utility.yul\":3783:3789   */\n      dup3\n        /* \"#utility.yul\":3772:3781   */\n      dup7\n        /* \"#utility.yul\":3768:3790   */\n      add\n        /* \"#utility.yul\":3747:3800   */\n      tag_115\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":3737:3800   */\n      swap2\n      pop\n        /* \"#utility.yul\":3692:3810   */\n      pop\n        /* \"#utility.yul\":3343:3817   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3823:3931   */\n    tag_122:\n        /* \"#utility.yul\":3900:3924   */\n      tag_193\n        /* \"#utility.yul\":3918:3923   */\n      dup2\n        /* \"#utility.yul\":3900:3924   */\n      tag_108\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":3895:3898   */\n      dup3\n        /* \"#utility.yul\":3888:3925   */\n      mstore\n        /* \"#utility.yul\":3823:3931   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3937:4042   */\n    tag_123:\n        /* \"#utility.yul\":4012:4035   */\n      tag_195\n        /* \"#utility.yul\":4029:4034   */\n      dup2\n        /* \"#utility.yul\":4012:4035   */\n      tag_105\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":4007:4010   */\n      dup3\n        /* \"#utility.yul\":4000:4036   */\n      mstore\n        /* \"#utility.yul\":3937:4042   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4048:4156   */\n    tag_124:\n        /* \"#utility.yul\":4125:4149   */\n      tag_197\n        /* \"#utility.yul\":4143:4148   */\n      dup2\n        /* \"#utility.yul\":4125:4149   */\n      tag_113\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":4120:4123   */\n      dup3\n        /* \"#utility.yul\":4113:4150   */\n      mstore\n        /* \"#utility.yul\":4048:4156   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4162:4270   */\n    tag_125:\n        /* \"#utility.yul\":4239:4263   */\n      tag_199\n        /* \"#utility.yul\":4257:4262   */\n      dup2\n        /* \"#utility.yul\":4239:4263   */\n      tag_107\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":4234:4237   */\n      dup3\n        /* \"#utility.yul\":4227:4264   */\n      mstore\n        /* \"#utility.yul\":4162:4270   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4370:5993   */\n    tag_126:\n        /* \"#utility.yul\":4545:4551   */\n      0x0100\n        /* \"#utility.yul\":4540:4543   */\n      dup3\n        /* \"#utility.yul\":4536:4552   */\n      add\n        /* \"#utility.yul\":4637:4641   */\n      0x00\n        /* \"#utility.yul\":4630:4635   */\n      dup3\n        /* \"#utility.yul\":4626:4642   */\n      add\n        /* \"#utility.yul\":4620:4643   */\n      mload\n        /* \"#utility.yul\":4656:4719   */\n      tag_201\n        /* \"#utility.yul\":4713:4717   */\n      0x00\n        /* \"#utility.yul\":4708:4711   */\n      dup6\n        /* \"#utility.yul\":4704:4718   */\n      add\n        /* \"#utility.yul\":4690:4702   */\n      dup3\n        /* \"#utility.yul\":4656:4719   */\n      tag_122\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":4562:4729   */\n      pop\n        /* \"#utility.yul\":4815:4819   */\n      0x20\n        /* \"#utility.yul\":4808:4813   */\n      dup3\n        /* \"#utility.yul\":4804:4820   */\n      add\n        /* \"#utility.yul\":4798:4821   */\n      mload\n        /* \"#utility.yul\":4834:4897   */\n      tag_202\n        /* \"#utility.yul\":4891:4895   */\n      0x20\n        /* \"#utility.yul\":4886:4889   */\n      dup6\n        /* \"#utility.yul\":4882:4896   */\n      add\n        /* \"#utility.yul\":4868:4880   */\n      dup3\n        /* \"#utility.yul\":4834:4897   */\n      tag_122\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":4739:4907   */\n      pop\n        /* \"#utility.yul\":4988:4992   */\n      0x40\n        /* \"#utility.yul\":4981:4986   */\n      dup3\n        /* \"#utility.yul\":4977:4993   */\n      add\n        /* \"#utility.yul\":4971:4994   */\n      mload\n        /* \"#utility.yul\":5007:5068   */\n      tag_203\n        /* \"#utility.yul\":5062:5066   */\n      0x40\n        /* \"#utility.yul\":5057:5060   */\n      dup6\n        /* \"#utility.yul\":5053:5067   */\n      add\n        /* \"#utility.yul\":5039:5051   */\n      dup3\n        /* \"#utility.yul\":5007:5068   */\n      tag_123\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":4917:5078   */\n      pop\n        /* \"#utility.yul\":5165:5169   */\n      0x60\n        /* \"#utility.yul\":5158:5163   */\n      dup3\n        /* \"#utility.yul\":5154:5170   */\n      add\n        /* \"#utility.yul\":5148:5171   */\n      mload\n        /* \"#utility.yul\":5184:5247   */\n      tag_204\n        /* \"#utility.yul\":5241:5245   */\n      0x60\n        /* \"#utility.yul\":5236:5239   */\n      dup6\n        /* \"#utility.yul\":5232:5246   */\n      add\n        /* \"#utility.yul\":5218:5230   */\n      dup3\n        /* \"#utility.yul\":5184:5247   */\n      tag_122\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":5088:5257   */\n      pop\n        /* \"#utility.yul\":5343:5347   */\n      0x80\n        /* \"#utility.yul\":5336:5341   */\n      dup3\n        /* \"#utility.yul\":5332:5348   */\n      add\n        /* \"#utility.yul\":5326:5349   */\n      mload\n        /* \"#utility.yul\":5362:5425   */\n      tag_205\n        /* \"#utility.yul\":5419:5423   */\n      0x80\n        /* \"#utility.yul\":5414:5417   */\n      dup6\n        /* \"#utility.yul\":5410:5424   */\n      add\n        /* \"#utility.yul\":5396:5408   */\n      dup3\n        /* \"#utility.yul\":5362:5425   */\n      tag_124\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":5267:5435   */\n      pop\n        /* \"#utility.yul\":5521:5525   */\n      0xa0\n        /* \"#utility.yul\":5514:5519   */\n      dup3\n        /* \"#utility.yul\":5510:5526   */\n      add\n        /* \"#utility.yul\":5504:5527   */\n      mload\n        /* \"#utility.yul\":5540:5603   */\n      tag_206\n        /* \"#utility.yul\":5597:5601   */\n      0xa0\n        /* \"#utility.yul\":5592:5595   */\n      dup6\n        /* \"#utility.yul\":5588:5602   */\n      add\n        /* \"#utility.yul\":5574:5586   */\n      dup3\n        /* \"#utility.yul\":5540:5603   */\n      tag_124\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":5445:5613   */\n      pop\n        /* \"#utility.yul\":5707:5711   */\n      0xc0\n        /* \"#utility.yul\":5700:5705   */\n      dup3\n        /* \"#utility.yul\":5696:5712   */\n      add\n        /* \"#utility.yul\":5690:5713   */\n      mload\n        /* \"#utility.yul\":5726:5789   */\n      tag_207\n        /* \"#utility.yul\":5783:5787   */\n      0xc0\n        /* \"#utility.yul\":5778:5781   */\n      dup6\n        /* \"#utility.yul\":5774:5788   */\n      add\n        /* \"#utility.yul\":5760:5772   */\n      dup3\n        /* \"#utility.yul\":5726:5789   */\n      tag_124\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":5623:5799   */\n      pop\n        /* \"#utility.yul\":5894:5898   */\n      0xe0\n        /* \"#utility.yul\":5887:5892   */\n      dup3\n        /* \"#utility.yul\":5883:5899   */\n      add\n        /* \"#utility.yul\":5877:5900   */\n      mload\n        /* \"#utility.yul\":5913:5976   */\n      tag_208\n        /* \"#utility.yul\":5970:5974   */\n      0xe0\n        /* \"#utility.yul\":5965:5968   */\n      dup6\n        /* \"#utility.yul\":5961:5975   */\n      add\n        /* \"#utility.yul\":5947:5959   */\n      dup3\n        /* \"#utility.yul\":5913:5976   */\n      tag_125\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":5809:5986   */\n      pop\n        /* \"#utility.yul\":4514:5993   */\n      pop\n        /* \"#utility.yul\":4370:5993   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5999:6378   */\n    tag_46:\n        /* \"#utility.yul\":6170:6174   */\n      0x00\n        /* \"#utility.yul\":6208:6211   */\n      0x0100\n        /* \"#utility.yul\":6197:6206   */\n      dup3\n        /* \"#utility.yul\":6193:6212   */\n      add\n        /* \"#utility.yul\":6185:6212   */\n      swap1\n      pop\n        /* \"#utility.yul\":6222:6371   */\n      tag_210\n        /* \"#utility.yul\":6368:6369   */\n      0x00\n        /* \"#utility.yul\":6357:6366   */\n      dup4\n        /* \"#utility.yul\":6353:6370   */\n      add\n        /* \"#utility.yul\":6344:6350   */\n      dup5\n        /* \"#utility.yul\":6222:6371   */\n      tag_126\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":5999:6378   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6384:6527   */\n    tag_127:\n        /* \"#utility.yul\":6441:6446   */\n      0x00\n        /* \"#utility.yul\":6472:6478   */\n      dup2\n        /* \"#utility.yul\":6466:6479   */\n      mload\n        /* \"#utility.yul\":6457:6479   */\n      swap1\n      pop\n        /* \"#utility.yul\":6488:6521   */\n      tag_212\n        /* \"#utility.yul\":6515:6520   */\n      dup2\n        /* \"#utility.yul\":6488:6521   */\n      tag_114\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":6384:6527   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6533:6884   */\n    tag_50:\n        /* \"#utility.yul\":6603:6609   */\n      0x00\n        /* \"#utility.yul\":6652:6654   */\n      0x20\n        /* \"#utility.yul\":6640:6649   */\n      dup3\n        /* \"#utility.yul\":6631:6638   */\n      dup5\n        /* \"#utility.yul\":6627:6650   */\n      sub\n        /* \"#utility.yul\":6623:6655   */\n      slt\n        /* \"#utility.yul\":6620:6739   */\n      iszero\n      tag_214\n      jumpi\n        /* \"#utility.yul\":6658:6737   */\n      tag_215\n      tag_111\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":6620:6739   */\n    tag_214:\n        /* \"#utility.yul\":6778:6779   */\n      0x00\n        /* \"#utility.yul\":6803:6867   */\n      tag_216\n        /* \"#utility.yul\":6859:6866   */\n      dup5\n        /* \"#utility.yul\":6850:6856   */\n      dup3\n        /* \"#utility.yul\":6839:6848   */\n      dup6\n        /* \"#utility.yul\":6835:6857   */\n      add\n        /* \"#utility.yul\":6803:6867   */\n      tag_127\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":6793:6867   */\n      swap2\n      pop\n        /* \"#utility.yul\":6749:6877   */\n      pop\n        /* \"#utility.yul\":6533:6884   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6986:8611   */\n    tag_128:\n        /* \"#utility.yul\":7163:7169   */\n      0x0100\n        /* \"#utility.yul\":7158:7161   */\n      dup3\n        /* \"#utility.yul\":7154:7170   */\n      add\n        /* \"#utility.yul\":7255:7259   */\n      0x00\n        /* \"#utility.yul\":7248:7253   */\n      dup3\n        /* \"#utility.yul\":7244:7260   */\n      add\n        /* \"#utility.yul\":7238:7261   */\n      mload\n        /* \"#utility.yul\":7274:7337   */\n      tag_218\n        /* \"#utility.yul\":7331:7335   */\n      0x00\n        /* \"#utility.yul\":7326:7329   */\n      dup6\n        /* \"#utility.yul\":7322:7336   */\n      add\n        /* \"#utility.yul\":7308:7320   */\n      dup3\n        /* \"#utility.yul\":7274:7337   */\n      tag_122\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":7180:7347   */\n      pop\n        /* \"#utility.yul\":7433:7437   */\n      0x20\n        /* \"#utility.yul\":7426:7431   */\n      dup3\n        /* \"#utility.yul\":7422:7438   */\n      add\n        /* \"#utility.yul\":7416:7439   */\n      mload\n        /* \"#utility.yul\":7452:7515   */\n      tag_219\n        /* \"#utility.yul\":7509:7513   */\n      0x20\n        /* \"#utility.yul\":7504:7507   */\n      dup6\n        /* \"#utility.yul\":7500:7514   */\n      add\n        /* \"#utility.yul\":7486:7498   */\n      dup3\n        /* \"#utility.yul\":7452:7515   */\n      tag_122\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":7357:7525   */\n      pop\n        /* \"#utility.yul\":7606:7610   */\n      0x40\n        /* \"#utility.yul\":7599:7604   */\n      dup3\n        /* \"#utility.yul\":7595:7611   */\n      add\n        /* \"#utility.yul\":7589:7612   */\n      mload\n        /* \"#utility.yul\":7625:7686   */\n      tag_220\n        /* \"#utility.yul\":7680:7684   */\n      0x40\n        /* \"#utility.yul\":7675:7678   */\n      dup6\n        /* \"#utility.yul\":7671:7685   */\n      add\n        /* \"#utility.yul\":7657:7669   */\n      dup3\n        /* \"#utility.yul\":7625:7686   */\n      tag_123\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":7535:7696   */\n      pop\n        /* \"#utility.yul\":7783:7787   */\n      0x60\n        /* \"#utility.yul\":7776:7781   */\n      dup3\n        /* \"#utility.yul\":7772:7788   */\n      add\n        /* \"#utility.yul\":7766:7789   */\n      mload\n        /* \"#utility.yul\":7802:7865   */\n      tag_221\n        /* \"#utility.yul\":7859:7863   */\n      0x60\n        /* \"#utility.yul\":7854:7857   */\n      dup6\n        /* \"#utility.yul\":7850:7864   */\n      add\n        /* \"#utility.yul\":7836:7848   */\n      dup3\n        /* \"#utility.yul\":7802:7865   */\n      tag_122\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":7706:7875   */\n      pop\n        /* \"#utility.yul\":7961:7965   */\n      0x80\n        /* \"#utility.yul\":7954:7959   */\n      dup3\n        /* \"#utility.yul\":7950:7966   */\n      add\n        /* \"#utility.yul\":7944:7967   */\n      mload\n        /* \"#utility.yul\":7980:8043   */\n      tag_222\n        /* \"#utility.yul\":8037:8041   */\n      0x80\n        /* \"#utility.yul\":8032:8035   */\n      dup6\n        /* \"#utility.yul\":8028:8042   */\n      add\n        /* \"#utility.yul\":8014:8026   */\n      dup3\n        /* \"#utility.yul\":7980:8043   */\n      tag_124\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":7885:8053   */\n      pop\n        /* \"#utility.yul\":8140:8144   */\n      0xa0\n        /* \"#utility.yul\":8133:8138   */\n      dup3\n        /* \"#utility.yul\":8129:8145   */\n      add\n        /* \"#utility.yul\":8123:8146   */\n      mload\n        /* \"#utility.yul\":8159:8222   */\n      tag_223\n        /* \"#utility.yul\":8216:8220   */\n      0xa0\n        /* \"#utility.yul\":8211:8214   */\n      dup6\n        /* \"#utility.yul\":8207:8221   */\n      add\n        /* \"#utility.yul\":8193:8205   */\n      dup3\n        /* \"#utility.yul\":8159:8222   */\n      tag_124\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":8063:8232   */\n      pop\n        /* \"#utility.yul\":8325:8329   */\n      0xc0\n        /* \"#utility.yul\":8318:8323   */\n      dup3\n        /* \"#utility.yul\":8314:8330   */\n      add\n        /* \"#utility.yul\":8308:8331   */\n      mload\n        /* \"#utility.yul\":8344:8407   */\n      tag_224\n        /* \"#utility.yul\":8401:8405   */\n      0xc0\n        /* \"#utility.yul\":8396:8399   */\n      dup6\n        /* \"#utility.yul\":8392:8406   */\n      add\n        /* \"#utility.yul\":8378:8390   */\n      dup3\n        /* \"#utility.yul\":8344:8407   */\n      tag_124\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":8242:8417   */\n      pop\n        /* \"#utility.yul\":8512:8516   */\n      0xe0\n        /* \"#utility.yul\":8505:8510   */\n      dup3\n        /* \"#utility.yul\":8501:8517   */\n      add\n        /* \"#utility.yul\":8495:8518   */\n      mload\n        /* \"#utility.yul\":8531:8594   */\n      tag_225\n        /* \"#utility.yul\":8588:8592   */\n      0xe0\n        /* \"#utility.yul\":8583:8586   */\n      dup6\n        /* \"#utility.yul\":8579:8593   */\n      add\n        /* \"#utility.yul\":8565:8577   */\n      dup3\n        /* \"#utility.yul\":8531:8594   */\n      tag_125\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":8427:8604   */\n      pop\n        /* \"#utility.yul\":7132:8611   */\n      pop\n        /* \"#utility.yul\":6986:8611   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8617:9000   */\n    tag_55:\n        /* \"#utility.yul\":8790:8794   */\n      0x00\n        /* \"#utility.yul\":8828:8831   */\n      0x0100\n        /* \"#utility.yul\":8817:8826   */\n      dup3\n        /* \"#utility.yul\":8813:8832   */\n      add\n        /* \"#utility.yul\":8805:8832   */\n      swap1\n      pop\n        /* \"#utility.yul\":8842:8993   */\n      tag_227\n        /* \"#utility.yul\":8990:8991   */\n      0x00\n        /* \"#utility.yul\":8979:8988   */\n      dup4\n        /* \"#utility.yul\":8975:8992   */\n      add\n        /* \"#utility.yul\":8966:8972   */\n      dup5\n        /* \"#utility.yul\":8842:8993   */\n      tag_128\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":8617:9000   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9006:9186   */\n    tag_129:\n        /* \"#utility.yul\":9054:9131   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9051:9052   */\n      0x00\n        /* \"#utility.yul\":9044:9132   */\n      mstore\n        /* \"#utility.yul\":9151:9155   */\n      0x11\n        /* \"#utility.yul\":9148:9149   */\n      0x04\n        /* \"#utility.yul\":9141:9156   */\n      mstore\n        /* \"#utility.yul\":9175:9179   */\n      0x24\n        /* \"#utility.yul\":9172:9173   */\n      0x00\n        /* \"#utility.yul\":9165:9180   */\n      revert\n        /* \"#utility.yul\":9192:9386   */\n    tag_63:\n        /* \"#utility.yul\":9232:9236   */\n      0x00\n        /* \"#utility.yul\":9252:9272   */\n      tag_230\n        /* \"#utility.yul\":9270:9271   */\n      dup3\n        /* \"#utility.yul\":9252:9272   */\n      tag_113\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":9247:9272   */\n      swap2\n      pop\n        /* \"#utility.yul\":9286:9306   */\n      tag_231\n        /* \"#utility.yul\":9304:9305   */\n      dup4\n        /* \"#utility.yul\":9286:9306   */\n      tag_113\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":9281:9306   */\n      swap3\n      pop\n        /* \"#utility.yul\":9330:9331   */\n      dup3\n        /* \"#utility.yul\":9327:9328   */\n      dup3\n        /* \"#utility.yul\":9323:9332   */\n      sub\n        /* \"#utility.yul\":9315:9332   */\n      swap1\n      pop\n        /* \"#utility.yul\":9354:9355   */\n      dup2\n        /* \"#utility.yul\":9348:9352   */\n      dup2\n        /* \"#utility.yul\":9345:9356   */\n      gt\n        /* \"#utility.yul\":9342:9379   */\n      iszero\n      tag_232\n      jumpi\n        /* \"#utility.yul\":9359:9377   */\n      tag_233\n      tag_129\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":9342:9379   */\n    tag_232:\n        /* \"#utility.yul\":9192:9386   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9392:9834   */\n    tag_67:\n        /* \"#utility.yul\":9541:9545   */\n      0x00\n        /* \"#utility.yul\":9579:9581   */\n      0x60\n        /* \"#utility.yul\":9568:9577   */\n      dup3\n        /* \"#utility.yul\":9564:9582   */\n      add\n        /* \"#utility.yul\":9556:9582   */\n      swap1\n      pop\n        /* \"#utility.yul\":9592:9663   */\n      tag_235\n        /* \"#utility.yul\":9660:9661   */\n      0x00\n        /* \"#utility.yul\":9649:9658   */\n      dup4\n        /* \"#utility.yul\":9645:9662   */\n      add\n        /* \"#utility.yul\":9636:9642   */\n      dup7\n        /* \"#utility.yul\":9592:9663   */\n      tag_109\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":9673:9745   */\n      tag_236\n        /* \"#utility.yul\":9741:9743   */\n      0x20\n        /* \"#utility.yul\":9730:9739   */\n      dup4\n        /* \"#utility.yul\":9726:9744   */\n      add\n        /* \"#utility.yul\":9717:9723   */\n      dup6\n        /* \"#utility.yul\":9673:9745   */\n      tag_109\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":9755:9827   */\n      tag_237\n        /* \"#utility.yul\":9823:9825   */\n      0x40\n        /* \"#utility.yul\":9812:9821   */\n      dup4\n        /* \"#utility.yul\":9808:9826   */\n      add\n        /* \"#utility.yul\":9799:9805   */\n      dup5\n        /* \"#utility.yul\":9755:9827   */\n      tag_116\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":9392:9834   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9840:9938   */\n    tag_130:\n        /* \"#utility.yul\":9891:9897   */\n      0x00\n        /* \"#utility.yul\":9925:9930   */\n      dup2\n        /* \"#utility.yul\":9919:9931   */\n      mload\n        /* \"#utility.yul\":9909:9931   */\n      swap1\n      pop\n        /* \"#utility.yul\":9840:9938   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9944:10091   */\n    tag_131:\n        /* \"#utility.yul\":10045:10056   */\n      0x00\n        /* \"#utility.yul\":10082:10085   */\n      dup2\n        /* \"#utility.yul\":10067:10085   */\n      swap1\n      pop\n        /* \"#utility.yul\":9944:10091   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10097:10343   */\n    tag_132:\n        /* \"#utility.yul\":10178:10179   */\n      0x00\n        /* \"#utility.yul\":10188:10301   */\n    tag_241:\n        /* \"#utility.yul\":10202:10208   */\n      dup4\n        /* \"#utility.yul\":10199:10200   */\n      dup2\n        /* \"#utility.yul\":10196:10209   */\n      lt\n        /* \"#utility.yul\":10188:10301   */\n      iszero\n      tag_243\n      jumpi\n        /* \"#utility.yul\":10287:10288   */\n      dup1\n        /* \"#utility.yul\":10282:10285   */\n      dup3\n        /* \"#utility.yul\":10278:10289   */\n      add\n        /* \"#utility.yul\":10272:10290   */\n      mload\n        /* \"#utility.yul\":10268:10269   */\n      dup2\n        /* \"#utility.yul\":10263:10266   */\n      dup5\n        /* \"#utility.yul\":10259:10270   */\n      add\n        /* \"#utility.yul\":10252:10291   */\n      mstore\n        /* \"#utility.yul\":10224:10226   */\n      0x20\n        /* \"#utility.yul\":10221:10222   */\n      dup2\n        /* \"#utility.yul\":10217:10227   */\n      add\n        /* \"#utility.yul\":10212:10227   */\n      swap1\n      pop\n        /* \"#utility.yul\":10188:10301   */\n      jump(tag_241)\n    tag_243:\n        /* \"#utility.yul\":10335:10336   */\n      0x00\n        /* \"#utility.yul\":10326:10332   */\n      dup5\n        /* \"#utility.yul\":10321:10324   */\n      dup5\n        /* \"#utility.yul\":10317:10333   */\n      add\n        /* \"#utility.yul\":10310:10337   */\n      mstore\n        /* \"#utility.yul\":10159:10343   */\n      pop\n        /* \"#utility.yul\":10097:10343   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10349:10735   */\n    tag_133:\n        /* \"#utility.yul\":10453:10456   */\n      0x00\n        /* \"#utility.yul\":10481:10519   */\n      tag_245\n        /* \"#utility.yul\":10513:10518   */\n      dup3\n        /* \"#utility.yul\":10481:10519   */\n      tag_130\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":10535:10623   */\n      tag_246\n        /* \"#utility.yul\":10616:10622   */\n      dup2\n        /* \"#utility.yul\":10611:10614   */\n      dup6\n        /* \"#utility.yul\":10535:10623   */\n      tag_131\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":10528:10623   */\n      swap4\n      pop\n        /* \"#utility.yul\":10632:10697   */\n      tag_247\n        /* \"#utility.yul\":10690:10696   */\n      dup2\n        /* \"#utility.yul\":10685:10688   */\n      dup6\n        /* \"#utility.yul\":10678:10682   */\n      0x20\n        /* \"#utility.yul\":10671:10676   */\n      dup7\n        /* \"#utility.yul\":10667:10683   */\n      add\n        /* \"#utility.yul\":10632:10697   */\n      tag_132\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":10722:10728   */\n      dup1\n        /* \"#utility.yul\":10717:10720   */\n      dup5\n        /* \"#utility.yul\":10713:10729   */\n      add\n        /* \"#utility.yul\":10706:10729   */\n      swap2\n      pop\n        /* \"#utility.yul\":10457:10735   */\n      pop\n        /* \"#utility.yul\":10349:10735   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10741:11012   */\n    tag_69:\n        /* \"#utility.yul\":10871:10874   */\n      0x00\n        /* \"#utility.yul\":10893:10986   */\n      tag_249\n        /* \"#utility.yul\":10982:10985   */\n      dup3\n        /* \"#utility.yul\":10973:10979   */\n      dup5\n        /* \"#utility.yul\":10893:10986   */\n      tag_133\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":10886:10986   */\n      swap2\n      pop\n        /* \"#utility.yul\":11003:11006   */\n      dup2\n        /* \"#utility.yul\":10996:11006   */\n      swap1\n      pop\n        /* \"#utility.yul\":10741:11012   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11018:11108   */\n    tag_134:\n        /* \"#utility.yul\":11052:11059   */\n      0x00\n        /* \"#utility.yul\":11095:11100   */\n      dup2\n        /* \"#utility.yul\":11088:11101   */\n      iszero\n        /* \"#utility.yul\":11081:11102   */\n      iszero\n        /* \"#utility.yul\":11070:11102   */\n      swap1\n      pop\n        /* \"#utility.yul\":11018:11108   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11114:11230   */\n    tag_135:\n        /* \"#utility.yul\":11184:11205   */\n      tag_252\n        /* \"#utility.yul\":11199:11204   */\n      dup2\n        /* \"#utility.yul\":11184:11205   */\n      tag_134\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":11177:11182   */\n      dup2\n        /* \"#utility.yul\":11174:11206   */\n      eq\n        /* \"#utility.yul\":11164:11224   */\n      tag_253\n      jumpi\n        /* \"#utility.yul\":11220:11221   */\n      0x00\n        /* \"#utility.yul\":11217:11218   */\n      dup1\n        /* \"#utility.yul\":11210:11222   */\n      revert\n        /* \"#utility.yul\":11164:11224   */\n    tag_253:\n        /* \"#utility.yul\":11114:11230   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11236:11373   */\n    tag_136:\n        /* \"#utility.yul\":11290:11295   */\n      0x00\n        /* \"#utility.yul\":11321:11327   */\n      dup2\n        /* \"#utility.yul\":11315:11328   */\n      mload\n        /* \"#utility.yul\":11306:11328   */\n      swap1\n      pop\n        /* \"#utility.yul\":11337:11367   */\n      tag_255\n        /* \"#utility.yul\":11361:11366   */\n      dup2\n        /* \"#utility.yul\":11337:11367   */\n      tag_135\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":11236:11373   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11379:11724   */\n    tag_76:\n        /* \"#utility.yul\":11446:11452   */\n      0x00\n        /* \"#utility.yul\":11495:11497   */\n      0x20\n        /* \"#utility.yul\":11483:11492   */\n      dup3\n        /* \"#utility.yul\":11474:11481   */\n      dup5\n        /* \"#utility.yul\":11470:11493   */\n      sub\n        /* \"#utility.yul\":11466:11498   */\n      slt\n        /* \"#utility.yul\":11463:11582   */\n      iszero\n      tag_257\n      jumpi\n        /* \"#utility.yul\":11501:11580   */\n      tag_258\n      tag_111\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":11463:11582   */\n    tag_257:\n        /* \"#utility.yul\":11621:11622   */\n      0x00\n        /* \"#utility.yul\":11646:11707   */\n      tag_259\n        /* \"#utility.yul\":11699:11706   */\n      dup5\n        /* \"#utility.yul\":11690:11696   */\n      dup3\n        /* \"#utility.yul\":11679:11688   */\n      dup6\n        /* \"#utility.yul\":11675:11697   */\n      add\n        /* \"#utility.yul\":11646:11707   */\n      tag_136\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":11636:11707   */\n      swap2\n      pop\n        /* \"#utility.yul\":11592:11717   */\n      pop\n        /* \"#utility.yul\":11379:11724   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11730:11899   */\n    tag_137:\n        /* \"#utility.yul\":11814:11825   */\n      0x00\n        /* \"#utility.yul\":11848:11854   */\n      dup3\n        /* \"#utility.yul\":11843:11846   */\n      dup3\n        /* \"#utility.yul\":11836:11855   */\n      mstore\n        /* \"#utility.yul\":11888:11892   */\n      0x20\n        /* \"#utility.yul\":11883:11886   */\n      dup3\n        /* \"#utility.yul\":11879:11893   */\n      add\n        /* \"#utility.yul\":11864:11893   */\n      swap1\n      pop\n        /* \"#utility.yul\":11730:11899   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11905:12058   */\n    tag_138:\n        /* \"#utility.yul\":12045:12050   */\n      0x5354460000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12041:12042   */\n      0x00\n        /* \"#utility.yul\":12033:12039   */\n      dup3\n        /* \"#utility.yul\":12029:12043   */\n      add\n        /* \"#utility.yul\":12022:12051   */\n      mstore\n        /* \"#utility.yul\":11905:12058   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12064:12429   */\n    tag_139:\n        /* \"#utility.yul\":12206:12209   */\n      0x00\n        /* \"#utility.yul\":12227:12293   */\n      tag_263\n        /* \"#utility.yul\":12291:12292   */\n      0x03\n        /* \"#utility.yul\":12286:12289   */\n      dup4\n        /* \"#utility.yul\":12227:12293   */\n      tag_137\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":12220:12293   */\n      swap2\n      pop\n        /* \"#utility.yul\":12302:12395   */\n      tag_264\n        /* \"#utility.yul\":12391:12394   */\n      dup3\n        /* \"#utility.yul\":12302:12395   */\n      tag_138\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":12420:12422   */\n      0x20\n        /* \"#utility.yul\":12415:12418   */\n      dup3\n        /* \"#utility.yul\":12411:12423   */\n      add\n        /* \"#utility.yul\":12404:12423   */\n      swap1\n      pop\n        /* \"#utility.yul\":12064:12429   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12435:12854   */\n    tag_79:\n        /* \"#utility.yul\":12601:12605   */\n      0x00\n        /* \"#utility.yul\":12639:12641   */\n      0x20\n        /* \"#utility.yul\":12628:12637   */\n      dup3\n        /* \"#utility.yul\":12624:12642   */\n      add\n        /* \"#utility.yul\":12616:12642   */\n      swap1\n      pop\n        /* \"#utility.yul\":12688:12697   */\n      dup2\n        /* \"#utility.yul\":12682:12686   */\n      dup2\n        /* \"#utility.yul\":12678:12698   */\n      sub\n        /* \"#utility.yul\":12674:12675   */\n      0x00\n        /* \"#utility.yul\":12663:12672   */\n      dup4\n        /* \"#utility.yul\":12659:12676   */\n      add\n        /* \"#utility.yul\":12652:12699   */\n      mstore\n        /* \"#utility.yul\":12716:12847   */\n      tag_266\n        /* \"#utility.yul\":12842:12846   */\n      dup2\n        /* \"#utility.yul\":12716:12847   */\n      tag_139\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":12708:12847   */\n      swap1\n      pop\n        /* \"#utility.yul\":12435:12854   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12860:13192   */\n    tag_82:\n        /* \"#utility.yul\":12981:12985   */\n      0x00\n        /* \"#utility.yul\":13019:13021   */\n      0x40\n        /* \"#utility.yul\":13008:13017   */\n      dup3\n        /* \"#utility.yul\":13004:13022   */\n      add\n        /* \"#utility.yul\":12996:13022   */\n      swap1\n      pop\n        /* \"#utility.yul\":13032:13103   */\n      tag_268\n        /* \"#utility.yul\":13100:13101   */\n      0x00\n        /* \"#utility.yul\":13089:13098   */\n      dup4\n        /* \"#utility.yul\":13085:13102   */\n      add\n        /* \"#utility.yul\":13076:13082   */\n      dup6\n        /* \"#utility.yul\":13032:13103   */\n      tag_109\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":13113:13185   */\n      tag_269\n        /* \"#utility.yul\":13181:13183   */\n      0x20\n        /* \"#utility.yul\":13170:13179   */\n      dup4\n        /* \"#utility.yul\":13166:13184   */\n      add\n        /* \"#utility.yul\":13157:13163   */\n      dup5\n        /* \"#utility.yul\":13113:13185   */\n      tag_116\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":12860:13192   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13198:13350   */\n    tag_140:\n        /* \"#utility.yul\":13338:13342   */\n      0x5341000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13334:13335   */\n      0x00\n        /* \"#utility.yul\":13326:13332   */\n      dup3\n        /* \"#utility.yul\":13322:13336   */\n      add\n        /* \"#utility.yul\":13315:13343   */\n      mstore\n        /* \"#utility.yul\":13198:13350   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13356:13721   */\n    tag_141:\n        /* \"#utility.yul\":13498:13501   */\n      0x00\n        /* \"#utility.yul\":13519:13585   */\n      tag_272\n        /* \"#utility.yul\":13583:13584   */\n      0x02\n        /* \"#utility.yul\":13578:13581   */\n      dup4\n        /* \"#utility.yul\":13519:13585   */\n      tag_137\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":13512:13585   */\n      swap2\n      pop\n        /* \"#utility.yul\":13594:13687   */\n      tag_273\n        /* \"#utility.yul\":13683:13686   */\n      dup3\n        /* \"#utility.yul\":13594:13687   */\n      tag_140\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":13712:13714   */\n      0x20\n        /* \"#utility.yul\":13707:13710   */\n      dup3\n        /* \"#utility.yul\":13703:13715   */\n      add\n        /* \"#utility.yul\":13696:13715   */\n      swap1\n      pop\n        /* \"#utility.yul\":13356:13721   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13727:14146   */\n    tag_92:\n        /* \"#utility.yul\":13893:13897   */\n      0x00\n        /* \"#utility.yul\":13931:13933   */\n      0x20\n        /* \"#utility.yul\":13920:13929   */\n      dup3\n        /* \"#utility.yul\":13916:13934   */\n      add\n        /* \"#utility.yul\":13908:13934   */\n      swap1\n      pop\n        /* \"#utility.yul\":13980:13989   */\n      dup2\n        /* \"#utility.yul\":13974:13978   */\n      dup2\n        /* \"#utility.yul\":13970:13990   */\n      sub\n        /* \"#utility.yul\":13966:13967   */\n      0x00\n        /* \"#utility.yul\":13955:13964   */\n      dup4\n        /* \"#utility.yul\":13951:13968   */\n      add\n        /* \"#utility.yul\":13944:13991   */\n      mstore\n        /* \"#utility.yul\":14008:14139   */\n      tag_275\n        /* \"#utility.yul\":14134:14138   */\n      dup2\n        /* \"#utility.yul\":14008:14139   */\n      tag_141\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":14000:14139   */\n      swap1\n      pop\n        /* \"#utility.yul\":13727:14146   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14152:14304   */\n    tag_142:\n        /* \"#utility.yul\":14292:14296   */\n      0x5354000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14288:14289   */\n      0x00\n        /* \"#utility.yul\":14280:14286   */\n      dup3\n        /* \"#utility.yul\":14276:14290   */\n      add\n        /* \"#utility.yul\":14269:14297   */\n      mstore\n        /* \"#utility.yul\":14152:14304   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14310:14675   */\n    tag_143:\n        /* \"#utility.yul\":14452:14455   */\n      0x00\n        /* \"#utility.yul\":14473:14539   */\n      tag_278\n        /* \"#utility.yul\":14537:14538   */\n      0x02\n        /* \"#utility.yul\":14532:14535   */\n      dup4\n        /* \"#utility.yul\":14473:14539   */\n      tag_137\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":14466:14539   */\n      swap2\n      pop\n        /* \"#utility.yul\":14548:14641   */\n      tag_279\n        /* \"#utility.yul\":14637:14640   */\n      dup3\n        /* \"#utility.yul\":14548:14641   */\n      tag_142\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":14666:14668   */\n      0x20\n        /* \"#utility.yul\":14661:14664   */\n      dup3\n        /* \"#utility.yul\":14657:14669   */\n      add\n        /* \"#utility.yul\":14650:14669   */\n      swap1\n      pop\n        /* \"#utility.yul\":14310:14675   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14681:15100   */\n    tag_104:\n        /* \"#utility.yul\":14847:14851   */\n      0x00\n        /* \"#utility.yul\":14885:14887   */\n      0x20\n        /* \"#utility.yul\":14874:14883   */\n      dup3\n        /* \"#utility.yul\":14870:14888   */\n      add\n        /* \"#utility.yul\":14862:14888   */\n      swap1\n      pop\n        /* \"#utility.yul\":14934:14943   */\n      dup2\n        /* \"#utility.yul\":14928:14932   */\n      dup2\n        /* \"#utility.yul\":14924:14944   */\n      sub\n        /* \"#utility.yul\":14920:14921   */\n      0x00\n        /* \"#utility.yul\":14909:14918   */\n      dup4\n        /* \"#utility.yul\":14905:14922   */\n      add\n        /* \"#utility.yul\":14898:14945   */\n      mstore\n        /* \"#utility.yul\":14962:15093   */\n      tag_281\n        /* \"#utility.yul\":15088:15092   */\n      dup2\n        /* \"#utility.yul\":14962:15093   */\n      tag_143\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":14954:15093   */\n      swap1\n      pop\n        /* \"#utility.yul\":14681:15100   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205fca4cf6e42693565f167d14df5fde72c0477ef4e97de8d1db0251bff7dbfa8d64736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_393": {
									"entryPoint": null,
									"id": 393,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_ISwapRouter_$191_fromMemory": {
									"entryPoint": 211,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_ISwapRouter_$191_fromMemory": {
									"entryPoint": 233,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 148,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_ISwapRouter_$191": {
									"entryPoint": 167,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 117,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 113,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_ISwapRouter_$191": {
									"entryPoint": 186,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1434:5",
										"nodeType": "YulBlock",
										"src": "0:1434:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:5",
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nativeSrc": "57:19:5",
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:5",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nativeSrc": "67:9:5",
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:5",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nativeSrc": "177:28:5",
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:5",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:5",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nativeSrc": "187:12:5",
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nativeSrc": "187:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nativeSrc": "300:28:5",
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:5",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:5",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nativeSrc": "310:12:5",
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nativeSrc": "310:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nativeSrc": "379:81:5",
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nativeSrc": "389:65:5",
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:5",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nativeSrc": "400:54:5",
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:5",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:5",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nativeSrc": "511:51:5",
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nativeSrc": "521:35:5",
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nativeSrc": "532:24:5",
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:5",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:5",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nativeSrc": "632:51:5",
													"nodeType": "YulBlock",
													"src": "632:51:5",
													"statements": [
														{
															"nativeSrc": "642:35:5",
															"nodeType": "YulAssignment",
															"src": "642:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "671:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "671:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "653:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "653:17:5"
																},
																"nativeSrc": "653:24:5",
																"nodeType": "YulFunctionCall",
																"src": "653:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "642:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "642:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_ISwapRouter_$191",
												"nativeSrc": "568:115:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "614:5:5",
														"nodeType": "YulTypedName",
														"src": "614:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "624:7:5",
														"nodeType": "YulTypedName",
														"src": "624:7:5",
														"type": ""
													}
												],
												"src": "568:115:5"
											},
											{
												"body": {
													"nativeSrc": "751:98:5",
													"nodeType": "YulBlock",
													"src": "751:98:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "827:16:5",
																"nodeType": "YulBlock",
																"src": "827:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "836:1:5",
																					"nodeType": "YulLiteral",
																					"src": "836:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "839:1:5",
																					"nodeType": "YulLiteral",
																					"src": "839:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "829:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "829:6:5"
																			},
																			"nativeSrc": "829:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "829:12:5"
																		},
																		"nativeSrc": "829:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "829:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "774:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "774:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "818:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "818:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_ISwapRouter_$191",
																					"nativeSrc": "781:36:5",
																					"nodeType": "YulIdentifier",
																					"src": "781:36:5"
																				},
																				"nativeSrc": "781:43:5",
																				"nodeType": "YulFunctionCall",
																				"src": "781:43:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "771:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "771:2:5"
																		},
																		"nativeSrc": "771:54:5",
																		"nodeType": "YulFunctionCall",
																		"src": "771:54:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "764:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "764:6:5"
																},
																"nativeSrc": "764:62:5",
																"nodeType": "YulFunctionCall",
																"src": "764:62:5"
															},
															"nativeSrc": "761:82:5",
															"nodeType": "YulIf",
															"src": "761:82:5"
														}
													]
												},
												"name": "validator_revert_t_contract$_ISwapRouter_$191",
												"nativeSrc": "689:160:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "744:5:5",
														"nodeType": "YulTypedName",
														"src": "744:5:5",
														"type": ""
													}
												],
												"src": "689:160:5"
											},
											{
												"body": {
													"nativeSrc": "937:99:5",
													"nodeType": "YulBlock",
													"src": "937:99:5",
													"statements": [
														{
															"nativeSrc": "947:22:5",
															"nodeType": "YulAssignment",
															"src": "947:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "962:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "962:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "956:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "956:5:5"
																},
																"nativeSrc": "956:13:5",
																"nodeType": "YulFunctionCall",
																"src": "956:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "947:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "947:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1024:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1024:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_ISwapRouter_$191",
																	"nativeSrc": "978:45:5",
																	"nodeType": "YulIdentifier",
																	"src": "978:45:5"
																},
																"nativeSrc": "978:52:5",
																"nodeType": "YulFunctionCall",
																"src": "978:52:5"
															},
															"nativeSrc": "978:52:5",
															"nodeType": "YulExpressionStatement",
															"src": "978:52:5"
														}
													]
												},
												"name": "abi_decode_t_contract$_ISwapRouter_$191_fromMemory",
												"nativeSrc": "855:181:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "915:6:5",
														"nodeType": "YulTypedName",
														"src": "915:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "923:3:5",
														"nodeType": "YulTypedName",
														"src": "923:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "931:5:5",
														"nodeType": "YulTypedName",
														"src": "931:5:5",
														"type": ""
													}
												],
												"src": "855:181:5"
											},
											{
												"body": {
													"nativeSrc": "1138:293:5",
													"nodeType": "YulBlock",
													"src": "1138:293:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1184:83:5",
																"nodeType": "YulBlock",
																"src": "1184:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1186:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "1186:77:5"
																			},
																			"nativeSrc": "1186:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1186:79:5"
																		},
																		"nativeSrc": "1186:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1186:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1159:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1159:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1168:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1168:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1155:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1155:3:5"
																		},
																		"nativeSrc": "1155:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1155:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1180:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1180:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1151:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1151:3:5"
																},
																"nativeSrc": "1151:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1151:32:5"
															},
															"nativeSrc": "1148:119:5",
															"nodeType": "YulIf",
															"src": "1148:119:5"
														},
														{
															"nativeSrc": "1277:147:5",
															"nodeType": "YulBlock",
															"src": "1277:147:5",
															"statements": [
																{
																	"nativeSrc": "1292:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1292:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1306:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1306:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1296:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1296:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1321:93:5",
																	"nodeType": "YulAssignment",
																	"src": "1321:93:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1386:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1386:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1397:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1397:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1382:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1382:3:5"
																				},
																				"nativeSrc": "1382:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1382:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1406:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1406:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_ISwapRouter_$191_fromMemory",
																			"nativeSrc": "1331:50:5",
																			"nodeType": "YulIdentifier",
																			"src": "1331:50:5"
																		},
																		"nativeSrc": "1331:83:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1331:83:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1321:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1321:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_ISwapRouter_$191_fromMemory",
												"nativeSrc": "1042:389:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1108:9:5",
														"nodeType": "YulTypedName",
														"src": "1108:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1119:7:5",
														"nodeType": "YulTypedName",
														"src": "1119:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1131:6:5",
														"nodeType": "YulTypedName",
														"src": "1131:6:5",
														"type": ""
													}
												],
												"src": "1042:389:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_ISwapRouter_$191(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_ISwapRouter_$191(value) {\n        if iszero(eq(value, cleanup_t_contract$_ISwapRouter_$191(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_ISwapRouter_$191_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_ISwapRouter_$191(value)\n    }\n\n    function abi_decode_tuple_t_contract$_ISwapRouter_$191_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ISwapRouter_$191_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801562000010575f80fd5b50604051620011fe380380620011fe8339818101604052810190620000369190620000e9565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505062000119565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620000a08262000075565b9050919050565b5f620000b38262000094565b9050919050565b620000c581620000a7565b8114620000d0575f80fd5b50565b5f81519050620000e381620000ba565b92915050565b5f6020828403121562000101576200010062000071565b5b5f6200011084828501620000d3565b91505092915050565b6080516110a9620001555f395f81816101ce015281816102b901528181610372015281816103cf015281816104ba015261057501526110a95ff3fe608060405234801561000f575f80fd5b506004361061007b575f3560e01c806389a302711161005957806389a30271146100eb578063c31c9c0714610109578063c4b69a1814610127578063e0bab4c4146101575761007b565b8063089fe6aa1461007f5780634aa4a4fc1461009d57806373bd43ad146100bb575b5f80fd5b610087610175565b60405161009491906109f1565b60405180910390f35b6100a561017b565b6040516100b29190610a49565b60405180910390f35b6100d560048036038101906100d09190610a99565b610193565b6040516100e29190610ad3565b60405180910390f35b6100f3610358565b6040516101009190610a49565b60405180910390f35b610111610370565b60405161011e9190610b47565b60405180910390f35b610141600480360381019061013c9190610b60565b610394565b60405161014e9190610ad3565b60405180910390f35b61015f6105cc565b60405161016c9190610a49565b60405180910390f35b610bb881565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b5f6101b4736b175474e89094c44da98b954eedeac495271d0f3330856105e4565b6101f3736b175474e89094c44da98b954eedeac495271d0f7f000000000000000000000000000000000000000000000000000000000000000084610736565b5f604051806101000160405280736b175474e89094c44da98b954eedeac495271d0f73ffffffffffffffffffffffffffffffffffffffff16815260200173c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020014281526020018481526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663414bf389826040518263ffffffff1660e01b81526004016103109190610c7a565b6020604051808303815f875af115801561032c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103509190610ca8565b915050919050565b73a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4881565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f6103b5736b175474e89094c44da98b954eedeac495271d0f3330856105e4565b6103f4736b175474e89094c44da98b954eedeac495271d0f7f000000000000000000000000000000000000000000000000000000000000000084610736565b5f604051806101000160405280736b175474e89094c44da98b954eedeac495271d0f73ffffffffffffffffffffffffffffffffffffffff16815260200173c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020014281526020018581526020018481526020015f73ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663db3e2198826040518263ffffffff1660e01b81526004016105119190610d73565b6020604051808303815f875af115801561052d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105519190610ca8565b9150828210156105c55761059a736b175474e89094c44da98b954eedeac495271d0f7f00000000000000000000000000000000000000000000000000000000000000005f610736565b6105c4736b175474e89094c44da98b954eedeac495271d0f3384866105bf9190610dba565b610885565b5b5092915050565b736b175474e89094c44da98b954eedeac495271d0f81565b5f808573ffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b86868660405160240161061a93929190610ded565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516106849190610e8e565b5f604051808303815f865af19150503d805f81146106bd576040519150601f19603f3d011682016040523d82523d5f602084013e6106c2565b606091505b50915091508180156106ef57505f815114806106ee5750808060200190518101906106ed9190610ed9565b5b5b61072e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072590610f5e565b60405180910390fd5b505050505050565b5f808473ffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b858560405160240161076a929190610f7c565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516107d49190610e8e565b5f604051808303815f865af19150503d805f811461080d576040519150601f19603f3d011682016040523d82523d5f602084013e610812565b606091505b509150915081801561083f57505f8151148061083e57508080602001905181019061083d9190610ed9565b5b5b61087e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087590610fed565b60405180910390fd5b5050505050565b5f808473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b85856040516024016108b9929190610f7c565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516109239190610e8e565b5f604051808303815f865af19150503d805f811461095c576040519150601f19603f3d011682016040523d82523d5f602084013e610961565b606091505b509150915081801561098e57505f8151148061098d57508080602001905181019061098c9190610ed9565b5b5b6109cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c490611055565b60405180910390fd5b5050505050565b5f62ffffff82169050919050565b6109eb816109d4565b82525050565b5f602082019050610a045f8301846109e2565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610a3382610a0a565b9050919050565b610a4381610a29565b82525050565b5f602082019050610a5c5f830184610a3a565b92915050565b5f80fd5b5f819050919050565b610a7881610a66565b8114610a82575f80fd5b50565b5f81359050610a9381610a6f565b92915050565b5f60208284031215610aae57610aad610a62565b5b5f610abb84828501610a85565b91505092915050565b610acd81610a66565b82525050565b5f602082019050610ae65f830184610ac4565b92915050565b5f819050919050565b5f610b0f610b0a610b0584610a0a565b610aec565b610a0a565b9050919050565b5f610b2082610af5565b9050919050565b5f610b3182610b16565b9050919050565b610b4181610b27565b82525050565b5f602082019050610b5a5f830184610b38565b92915050565b5f8060408385031215610b7657610b75610a62565b5b5f610b8385828601610a85565b9250506020610b9485828601610a85565b9150509250929050565b610ba781610a29565b82525050565b610bb6816109d4565b82525050565b610bc581610a66565b82525050565b610bd481610a0a565b82525050565b61010082015f820151610bef5f850182610b9e565b506020820151610c026020850182610b9e565b506040820151610c156040850182610bad565b506060820151610c286060850182610b9e565b506080820151610c3b6080850182610bbc565b5060a0820151610c4e60a0850182610bbc565b5060c0820151610c6160c0850182610bbc565b5060e0820151610c7460e0850182610bcb565b50505050565b5f61010082019050610c8e5f830184610bda565b92915050565b5f81519050610ca281610a6f565b92915050565b5f60208284031215610cbd57610cbc610a62565b5b5f610cca84828501610c94565b91505092915050565b61010082015f820151610ce85f850182610b9e565b506020820151610cfb6020850182610b9e565b506040820151610d0e6040850182610bad565b506060820151610d216060850182610b9e565b506080820151610d346080850182610bbc565b5060a0820151610d4760a0850182610bbc565b5060c0820151610d5a60c0850182610bbc565b5060e0820151610d6d60e0850182610bcb565b50505050565b5f61010082019050610d875f830184610cd3565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610dc482610a66565b9150610dcf83610a66565b9250828203905081811115610de757610de6610d8d565b5b92915050565b5f606082019050610e005f830186610a3a565b610e0d6020830185610a3a565b610e1a6040830184610ac4565b949350505050565b5f81519050919050565b5f81905092915050565b5f5b83811015610e53578082015181840152602081019050610e38565b5f8484015250505050565b5f610e6882610e22565b610e728185610e2c565b9350610e82818560208601610e36565b80840191505092915050565b5f610e998284610e5e565b915081905092915050565b5f8115159050919050565b610eb881610ea4565b8114610ec2575f80fd5b50565b5f81519050610ed381610eaf565b92915050565b5f60208284031215610eee57610eed610a62565b5b5f610efb84828501610ec5565b91505092915050565b5f82825260208201905092915050565b7f53544600000000000000000000000000000000000000000000000000000000005f82015250565b5f610f48600383610f04565b9150610f5382610f14565b602082019050919050565b5f6020820190508181035f830152610f7581610f3c565b9050919050565b5f604082019050610f8f5f830185610a3a565b610f9c6020830184610ac4565b9392505050565b7f53410000000000000000000000000000000000000000000000000000000000005f82015250565b5f610fd7600283610f04565b9150610fe282610fa3565b602082019050919050565b5f6020820190508181035f83015261100481610fcb565b9050919050565b7f53540000000000000000000000000000000000000000000000000000000000005f82015250565b5f61103f600283610f04565b915061104a8261100b565b602082019050919050565b5f6020820190508181035f83015261106c81611033565b905091905056fea26469706673582212205fca4cf6e42693565f167d14df5fde72c0477ef4e97de8d1db0251bff7dbfa8d64736f6c63430008150033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x11FE CODESIZE SUB DUP1 PUSH3 0x11FE DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0xE9 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP PUSH3 0x119 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xA0 DUP3 PUSH3 0x75 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xB3 DUP3 PUSH3 0x94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xC5 DUP2 PUSH3 0xA7 JUMP JUMPDEST DUP2 EQ PUSH3 0xD0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0xE3 DUP2 PUSH3 0xBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x101 JUMPI PUSH3 0x100 PUSH3 0x71 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x110 DUP5 DUP3 DUP6 ADD PUSH3 0xD3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x10A9 PUSH3 0x155 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x1CE ADD MSTORE DUP2 DUP2 PUSH2 0x2B9 ADD MSTORE DUP2 DUP2 PUSH2 0x372 ADD MSTORE DUP2 DUP2 PUSH2 0x3CF ADD MSTORE DUP2 DUP2 PUSH2 0x4BA ADD MSTORE PUSH2 0x575 ADD MSTORE PUSH2 0x10A9 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x89A30271 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x89A30271 EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0xC4B69A18 EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0xE0BAB4C4 EQ PUSH2 0x157 JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x89FE6AA EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0x4AA4A4FC EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0x73BD43AD EQ PUSH2 0xBB JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x87 PUSH2 0x175 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x9F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA5 PUSH2 0x17B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB2 SWAP2 SWAP1 PUSH2 0xA49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD0 SWAP2 SWAP1 PUSH2 0xA99 JUMP JUMPDEST PUSH2 0x193 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE2 SWAP2 SWAP1 PUSH2 0xAD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF3 PUSH2 0x358 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x100 SWAP2 SWAP1 PUSH2 0xA49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x111 PUSH2 0x370 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0xB47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x141 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13C SWAP2 SWAP1 PUSH2 0xB60 JUMP JUMPDEST PUSH2 0x394 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E SWAP2 SWAP1 PUSH2 0xAD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15F PUSH2 0x5CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0xA49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBB8 DUP2 JUMP JUMPDEST PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x1B4 PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F CALLER ADDRESS DUP6 PUSH2 0x5E4 JUMP JUMPDEST PUSH2 0x1F3 PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F PUSH32 0x0 DUP5 PUSH2 0x736 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBB8 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x414BF389 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x310 SWAP2 SWAP1 PUSH2 0xC7A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x32C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x350 SWAP2 SWAP1 PUSH2 0xCA8 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH20 0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x3B5 PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F CALLER ADDRESS DUP6 PUSH2 0x5E4 JUMP JUMPDEST PUSH2 0x3F4 PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F PUSH32 0x0 DUP5 PUSH2 0x736 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBB8 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDB3E2198 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x511 SWAP2 SWAP1 PUSH2 0xD73 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x52D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x551 SWAP2 SWAP1 PUSH2 0xCA8 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 LT ISZERO PUSH2 0x5C5 JUMPI PUSH2 0x59A PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F PUSH32 0x0 PUSH0 PUSH2 0x736 JUMP JUMPDEST PUSH2 0x5C4 PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F CALLER DUP5 DUP7 PUSH2 0x5BF SWAP2 SWAP1 PUSH2 0xDBA JUMP JUMPDEST PUSH2 0x885 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F DUP2 JUMP JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x61A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x684 SWAP2 SWAP1 PUSH2 0xE8E JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x6BD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x6C2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x6EF JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x6EE JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x6ED SWAP2 SWAP1 PUSH2 0xED9 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x72E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x725 SWAP1 PUSH2 0xF5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x76A SWAP3 SWAP2 SWAP1 PUSH2 0xF7C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x7D4 SWAP2 SWAP1 PUSH2 0xE8E JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x80D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x812 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x83F JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x83E JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x83D SWAP2 SWAP1 PUSH2 0xED9 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x87E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x875 SWAP1 PUSH2 0xFED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x8B9 SWAP3 SWAP2 SWAP1 PUSH2 0xF7C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x923 SWAP2 SWAP1 PUSH2 0xE8E JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x95C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x961 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x98E JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x98D JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x98C SWAP2 SWAP1 PUSH2 0xED9 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x9CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C4 SWAP1 PUSH2 0x1055 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9EB DUP2 PUSH2 0x9D4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA04 PUSH0 DUP4 ADD DUP5 PUSH2 0x9E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA33 DUP3 PUSH2 0xA0A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA43 DUP2 PUSH2 0xA29 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA5C PUSH0 DUP4 ADD DUP5 PUSH2 0xA3A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA78 DUP2 PUSH2 0xA66 JUMP JUMPDEST DUP2 EQ PUSH2 0xA82 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA93 DUP2 PUSH2 0xA6F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAAE JUMPI PUSH2 0xAAD PUSH2 0xA62 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xABB DUP5 DUP3 DUP6 ADD PUSH2 0xA85 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xACD DUP2 PUSH2 0xA66 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAE6 PUSH0 DUP4 ADD DUP5 PUSH2 0xAC4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB0F PUSH2 0xB0A PUSH2 0xB05 DUP5 PUSH2 0xA0A JUMP JUMPDEST PUSH2 0xAEC JUMP JUMPDEST PUSH2 0xA0A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB20 DUP3 PUSH2 0xAF5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB31 DUP3 PUSH2 0xB16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB41 DUP2 PUSH2 0xB27 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB5A PUSH0 DUP4 ADD DUP5 PUSH2 0xB38 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB76 JUMPI PUSH2 0xB75 PUSH2 0xA62 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB83 DUP6 DUP3 DUP7 ADD PUSH2 0xA85 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB94 DUP6 DUP3 DUP7 ADD PUSH2 0xA85 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA7 DUP2 PUSH2 0xA29 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xBB6 DUP2 PUSH2 0x9D4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xBC5 DUP2 PUSH2 0xA66 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xBD4 DUP2 PUSH2 0xA0A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0xBEF PUSH0 DUP6 ADD DUP3 PUSH2 0xB9E JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xC02 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xB9E JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0xC15 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0xBAD JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0xC28 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0xB9E JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0xC3B PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0xBBC JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0xC4E PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0xBBC JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0xC61 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0xBBC JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0xC74 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0xBCB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0xC8E PUSH0 DUP4 ADD DUP5 PUSH2 0xBDA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xCA2 DUP2 PUSH2 0xA6F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCBD JUMPI PUSH2 0xCBC PUSH2 0xA62 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCCA DUP5 DUP3 DUP6 ADD PUSH2 0xC94 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0xCE8 PUSH0 DUP6 ADD DUP3 PUSH2 0xB9E JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xCFB PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xB9E JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0xD0E PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0xBAD JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0xD21 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0xB9E JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0xD34 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0xBBC JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0xD47 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0xBBC JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0xD5A PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0xBBC JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0xD6D PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0xBCB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0xD87 PUSH0 DUP4 ADD DUP5 PUSH2 0xCD3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xDC4 DUP3 PUSH2 0xA66 JUMP JUMPDEST SWAP2 POP PUSH2 0xDCF DUP4 PUSH2 0xA66 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xDE7 JUMPI PUSH2 0xDE6 PUSH2 0xD8D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xE00 PUSH0 DUP4 ADD DUP7 PUSH2 0xA3A JUMP JUMPDEST PUSH2 0xE0D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xA3A JUMP JUMPDEST PUSH2 0xE1A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xAC4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE53 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xE38 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE68 DUP3 PUSH2 0xE22 JUMP JUMPDEST PUSH2 0xE72 DUP2 DUP6 PUSH2 0xE2C JUMP JUMPDEST SWAP4 POP PUSH2 0xE82 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xE36 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE99 DUP3 DUP5 PUSH2 0xE5E JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEB8 DUP2 PUSH2 0xEA4 JUMP JUMPDEST DUP2 EQ PUSH2 0xEC2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xED3 DUP2 PUSH2 0xEAF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEEE JUMPI PUSH2 0xEED PUSH2 0xA62 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xEFB DUP5 DUP3 DUP6 ADD PUSH2 0xEC5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5354460000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF48 PUSH1 0x3 DUP4 PUSH2 0xF04 JUMP JUMPDEST SWAP2 POP PUSH2 0xF53 DUP3 PUSH2 0xF14 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF75 DUP2 PUSH2 0xF3C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF8F PUSH0 DUP4 ADD DUP6 PUSH2 0xA3A JUMP JUMPDEST PUSH2 0xF9C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xAC4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5341000000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xFD7 PUSH1 0x2 DUP4 PUSH2 0xF04 JUMP JUMPDEST SWAP2 POP PUSH2 0xFE2 DUP3 PUSH2 0xFA3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1004 DUP2 PUSH2 0xFCB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5354000000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x103F PUSH1 0x2 DUP4 PUSH2 0xF04 JUMP JUMPDEST SWAP2 POP PUSH2 0x104A DUP3 PUSH2 0x100B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x106C DUP2 PUSH2 0x1033 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH0 0xCA 0x4C 0xF6 0xE4 0x26 SWAP4 JUMP PUSH0 AND PUSH30 0x14DF5FDE72C0477EF4E97DE8D1DB0251BFF7DBFA8D64736F6C6343000815 STOP CALLER ",
							"sourceMap": "238:2552:4:-:0;;;670:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;731:11;718:24;;;;;;;;;;670:80;238:2552;;88:117:5;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:115::-;624:7;653:24;671:5;653:24;:::i;:::-;642:35;;568:115;;;:::o;689:160::-;781:43;818:5;781:43;:::i;:::-;774:5;771:54;761:82;;839:1;836;829:12;761:82;689:160;:::o;855:181::-;931:5;962:6;956:13;947:22;;978:52;1024:5;978:52;:::i;:::-;855:181;;;;:::o;1042:389::-;1131:6;1180:2;1168:9;1159:7;1155:23;1151:32;1148:119;;;1186:79;;:::i;:::-;1148:119;1306:1;1331:83;1406:7;1397:6;1386:9;1382:22;1331:83;:::i;:::-;1321:93;;1277:147;1042:389;;;;:::o;238:2552:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DAI_373": {
									"entryPoint": 1484,
									"id": 373,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@USDC_379": {
									"entryPoint": 856,
									"id": 379,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@WETH9_376": {
									"entryPoint": 379,
									"id": 376,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@poolFee_382": {
									"entryPoint": 373,
									"id": 382,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeApprove_335": {
									"entryPoint": 1846,
									"id": 335,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_243": {
									"entryPoint": 1508,
									"id": 243,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_289": {
									"entryPoint": 2181,
									"id": 289,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@swapExactInputSingle_451": {
									"entryPoint": 403,
									"id": 451,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@swapExactOutputSingle_538": {
									"entryPoint": 916,
									"id": 538,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@swapRouter_370": {
									"entryPoint": 880,
									"id": 370,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 3781,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2693,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 3220,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3801,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2713,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 3240,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 2912,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 2974,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2618,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 3678,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_ISwapRouter_$191_to_t_address_fromStack": {
									"entryPoint": 2872,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4043,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4147,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3900,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack": {
									"entryPoint": 3034,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_struct$_ExactOutputSingleParams_$161_memory_ptr_to_t_struct$_ExactOutputSingleParams_$161_memory_ptr_fromStack": {
									"entryPoint": 3283,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint160_to_t_uint160": {
									"entryPoint": 3019,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint24_to_t_uint24": {
									"entryPoint": 2989,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint24_to_t_uint24_fromStack": {
									"entryPoint": 2530,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 3004,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2756,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3726,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2633,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3565,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3964,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ISwapRouter_$191__to_t_address__fromStack_reversed": {
									"entryPoint": 2887,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4077,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4181,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3934,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_ExactInputSingleParams_$115_memory_ptr__to_t_struct$_ExactInputSingleParams_$115_memory_ptr__fromStack_reversed": {
									"entryPoint": 3194,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_ExactOutputSingleParams_$161_memory_ptr__to_t_struct$_ExactOutputSingleParams_$161_memory_ptr__fromStack_reversed": {
									"entryPoint": 3443,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed": {
									"entryPoint": 2545,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2771,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 3618,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 3628,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3844,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3514,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2601,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3748,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2570,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint24": {
									"entryPoint": 2516,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2662,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_ISwapRouter_$191_to_t_address": {
									"entryPoint": 2855,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 2838,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 2805,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3638,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 2796,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3469,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2658,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa": {
									"entryPoint": 4003,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca": {
									"entryPoint": 4107,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86": {
									"entryPoint": 3860,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3759,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2671,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:15103:5",
										"nodeType": "YulBlock",
										"src": "0:15103:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "51:47:5",
													"nodeType": "YulBlock",
													"src": "51:47:5",
													"statements": [
														{
															"nativeSrc": "61:31:5",
															"nodeType": "YulAssignment",
															"src": "61:31:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "76:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "76:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "83:8:5",
																		"nodeType": "YulLiteral",
																		"src": "83:8:5",
																		"type": "",
																		"value": "0xffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "72:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "72:3:5"
																},
																"nativeSrc": "72:20:5",
																"nodeType": "YulFunctionCall",
																"src": "72:20:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "61:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "61:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint24",
												"nativeSrc": "7:91:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "33:5:5",
														"nodeType": "YulTypedName",
														"src": "33:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "43:7:5",
														"nodeType": "YulTypedName",
														"src": "43:7:5",
														"type": ""
													}
												],
												"src": "7:91:5"
											},
											{
												"body": {
													"nativeSrc": "167:52:5",
													"nodeType": "YulBlock",
													"src": "167:52:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "184:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "184:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "206:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "206:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint24",
																			"nativeSrc": "189:16:5",
																			"nodeType": "YulIdentifier",
																			"src": "189:16:5"
																		},
																		"nativeSrc": "189:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "189:23:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "177:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "177:6:5"
																},
																"nativeSrc": "177:36:5",
																"nodeType": "YulFunctionCall",
																"src": "177:36:5"
															},
															"nativeSrc": "177:36:5",
															"nodeType": "YulExpressionStatement",
															"src": "177:36:5"
														}
													]
												},
												"name": "abi_encode_t_uint24_to_t_uint24_fromStack",
												"nativeSrc": "104:115:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "155:5:5",
														"nodeType": "YulTypedName",
														"src": "155:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "162:3:5",
														"nodeType": "YulTypedName",
														"src": "162:3:5",
														"type": ""
													}
												],
												"src": "104:115:5"
											},
											{
												"body": {
													"nativeSrc": "321:122:5",
													"nodeType": "YulBlock",
													"src": "321:122:5",
													"statements": [
														{
															"nativeSrc": "331:26:5",
															"nodeType": "YulAssignment",
															"src": "331:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "343:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "343:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "354:2:5",
																		"nodeType": "YulLiteral",
																		"src": "354:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "339:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "339:3:5"
																},
																"nativeSrc": "339:18:5",
																"nodeType": "YulFunctionCall",
																"src": "339:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "331:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "331:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "409:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "409:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "422:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "422:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "433:1:5",
																				"nodeType": "YulLiteral",
																				"src": "433:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "418:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "418:3:5"
																		},
																		"nativeSrc": "418:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "418:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint24_to_t_uint24_fromStack",
																	"nativeSrc": "367:41:5",
																	"nodeType": "YulIdentifier",
																	"src": "367:41:5"
																},
																"nativeSrc": "367:69:5",
																"nodeType": "YulFunctionCall",
																"src": "367:69:5"
															},
															"nativeSrc": "367:69:5",
															"nodeType": "YulExpressionStatement",
															"src": "367:69:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed",
												"nativeSrc": "225:218:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "293:9:5",
														"nodeType": "YulTypedName",
														"src": "293:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "305:6:5",
														"nodeType": "YulTypedName",
														"src": "305:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "316:4:5",
														"nodeType": "YulTypedName",
														"src": "316:4:5",
														"type": ""
													}
												],
												"src": "225:218:5"
											},
											{
												"body": {
													"nativeSrc": "494:81:5",
													"nodeType": "YulBlock",
													"src": "494:81:5",
													"statements": [
														{
															"nativeSrc": "504:65:5",
															"nodeType": "YulAssignment",
															"src": "504:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "519:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "519:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "526:42:5",
																		"nodeType": "YulLiteral",
																		"src": "526:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "515:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "515:3:5"
																},
																"nativeSrc": "515:54:5",
																"nodeType": "YulFunctionCall",
																"src": "515:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "504:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "504:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "449:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "476:5:5",
														"nodeType": "YulTypedName",
														"src": "476:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "486:7:5",
														"nodeType": "YulTypedName",
														"src": "486:7:5",
														"type": ""
													}
												],
												"src": "449:126:5"
											},
											{
												"body": {
													"nativeSrc": "626:51:5",
													"nodeType": "YulBlock",
													"src": "626:51:5",
													"statements": [
														{
															"nativeSrc": "636:35:5",
															"nodeType": "YulAssignment",
															"src": "636:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "665:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "665:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "647:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "647:17:5"
																},
																"nativeSrc": "647:24:5",
																"nodeType": "YulFunctionCall",
																"src": "647:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "636:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "636:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "581:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "608:5:5",
														"nodeType": "YulTypedName",
														"src": "608:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "618:7:5",
														"nodeType": "YulTypedName",
														"src": "618:7:5",
														"type": ""
													}
												],
												"src": "581:96:5"
											},
											{
												"body": {
													"nativeSrc": "748:53:5",
													"nodeType": "YulBlock",
													"src": "748:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "765:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "765:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "788:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "788:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "770:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "770:17:5"
																		},
																		"nativeSrc": "770:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "770:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "758:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "758:6:5"
																},
																"nativeSrc": "758:37:5",
																"nodeType": "YulFunctionCall",
																"src": "758:37:5"
															},
															"nativeSrc": "758:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "758:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "683:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "736:5:5",
														"nodeType": "YulTypedName",
														"src": "736:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "743:3:5",
														"nodeType": "YulTypedName",
														"src": "743:3:5",
														"type": ""
													}
												],
												"src": "683:118:5"
											},
											{
												"body": {
													"nativeSrc": "905:124:5",
													"nodeType": "YulBlock",
													"src": "905:124:5",
													"statements": [
														{
															"nativeSrc": "915:26:5",
															"nodeType": "YulAssignment",
															"src": "915:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "927:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "927:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "938:2:5",
																		"nodeType": "YulLiteral",
																		"src": "938:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "923:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "923:3:5"
																},
																"nativeSrc": "923:18:5",
																"nodeType": "YulFunctionCall",
																"src": "923:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "915:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "915:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "995:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "995:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1008:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1008:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1019:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1019:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1004:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1004:3:5"
																		},
																		"nativeSrc": "1004:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1004:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "951:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "951:43:5"
																},
																"nativeSrc": "951:71:5",
																"nodeType": "YulFunctionCall",
																"src": "951:71:5"
															},
															"nativeSrc": "951:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "951:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "807:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:5",
														"nodeType": "YulTypedName",
														"src": "877:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "889:6:5",
														"nodeType": "YulTypedName",
														"src": "889:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "900:4:5",
														"nodeType": "YulTypedName",
														"src": "900:4:5",
														"type": ""
													}
												],
												"src": "807:222:5"
											},
											{
												"body": {
													"nativeSrc": "1075:35:5",
													"nodeType": "YulBlock",
													"src": "1075:35:5",
													"statements": [
														{
															"nativeSrc": "1085:19:5",
															"nodeType": "YulAssignment",
															"src": "1085:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1101:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1101:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1095:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1095:5:5"
																},
																"nativeSrc": "1095:9:5",
																"nodeType": "YulFunctionCall",
																"src": "1095:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1085:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1085:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1035:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1068:6:5",
														"nodeType": "YulTypedName",
														"src": "1068:6:5",
														"type": ""
													}
												],
												"src": "1035:75:5"
											},
											{
												"body": {
													"nativeSrc": "1205:28:5",
													"nodeType": "YulBlock",
													"src": "1205:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1222:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1222:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1225:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1225:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1215:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1215:6:5"
																},
																"nativeSrc": "1215:12:5",
																"nodeType": "YulFunctionCall",
																"src": "1215:12:5"
															},
															"nativeSrc": "1215:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "1215:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1116:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "1116:117:5"
											},
											{
												"body": {
													"nativeSrc": "1328:28:5",
													"nodeType": "YulBlock",
													"src": "1328:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1345:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1345:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1348:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1348:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1338:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1338:6:5"
																},
																"nativeSrc": "1338:12:5",
																"nodeType": "YulFunctionCall",
																"src": "1338:12:5"
															},
															"nativeSrc": "1338:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "1338:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1239:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "1239:117:5"
											},
											{
												"body": {
													"nativeSrc": "1407:32:5",
													"nodeType": "YulBlock",
													"src": "1407:32:5",
													"statements": [
														{
															"nativeSrc": "1417:16:5",
															"nodeType": "YulAssignment",
															"src": "1417:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "1428:5:5",
																"nodeType": "YulIdentifier",
																"src": "1428:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1417:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "1417:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1362:77:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1389:5:5",
														"nodeType": "YulTypedName",
														"src": "1389:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1399:7:5",
														"nodeType": "YulTypedName",
														"src": "1399:7:5",
														"type": ""
													}
												],
												"src": "1362:77:5"
											},
											{
												"body": {
													"nativeSrc": "1488:79:5",
													"nodeType": "YulBlock",
													"src": "1488:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1545:16:5",
																"nodeType": "YulBlock",
																"src": "1545:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1554:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1554:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1557:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1557:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1547:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1547:6:5"
																			},
																			"nativeSrc": "1547:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1547:12:5"
																		},
																		"nativeSrc": "1547:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1547:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1511:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1511:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1536:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "1536:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1518:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "1518:17:5"
																				},
																				"nativeSrc": "1518:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1518:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1508:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "1508:2:5"
																		},
																		"nativeSrc": "1508:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1508:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1501:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1501:6:5"
																},
																"nativeSrc": "1501:43:5",
																"nodeType": "YulFunctionCall",
																"src": "1501:43:5"
															},
															"nativeSrc": "1498:63:5",
															"nodeType": "YulIf",
															"src": "1498:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1445:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1481:5:5",
														"nodeType": "YulTypedName",
														"src": "1481:5:5",
														"type": ""
													}
												],
												"src": "1445:122:5"
											},
											{
												"body": {
													"nativeSrc": "1625:87:5",
													"nodeType": "YulBlock",
													"src": "1625:87:5",
													"statements": [
														{
															"nativeSrc": "1635:29:5",
															"nodeType": "YulAssignment",
															"src": "1635:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1657:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1657:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1644:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1644:12:5"
																},
																"nativeSrc": "1644:20:5",
																"nodeType": "YulFunctionCall",
																"src": "1644:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1635:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1635:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1700:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1700:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1673:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "1673:26:5"
																},
																"nativeSrc": "1673:33:5",
																"nodeType": "YulFunctionCall",
																"src": "1673:33:5"
															},
															"nativeSrc": "1673:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "1673:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1573:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1603:6:5",
														"nodeType": "YulTypedName",
														"src": "1603:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1611:3:5",
														"nodeType": "YulTypedName",
														"src": "1611:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1619:5:5",
														"nodeType": "YulTypedName",
														"src": "1619:5:5",
														"type": ""
													}
												],
												"src": "1573:139:5"
											},
											{
												"body": {
													"nativeSrc": "1784:263:5",
													"nodeType": "YulBlock",
													"src": "1784:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1830:83:5",
																"nodeType": "YulBlock",
																"src": "1830:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1832:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "1832:77:5"
																			},
																			"nativeSrc": "1832:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1832:79:5"
																		},
																		"nativeSrc": "1832:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1832:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1805:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1805:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1814:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1814:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1801:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1801:3:5"
																		},
																		"nativeSrc": "1801:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1801:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1826:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1826:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1797:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1797:3:5"
																},
																"nativeSrc": "1797:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1797:32:5"
															},
															"nativeSrc": "1794:119:5",
															"nodeType": "YulIf",
															"src": "1794:119:5"
														},
														{
															"nativeSrc": "1923:117:5",
															"nodeType": "YulBlock",
															"src": "1923:117:5",
															"statements": [
																{
																	"nativeSrc": "1938:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1938:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1952:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1952:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1942:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1942:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1967:63:5",
																	"nodeType": "YulAssignment",
																	"src": "1967:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2002:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2002:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2013:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2013:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1998:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1998:3:5"
																				},
																				"nativeSrc": "1998:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1998:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2022:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2022:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1977:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "1977:20:5"
																		},
																		"nativeSrc": "1977:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1977:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1967:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1967:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1718:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1754:9:5",
														"nodeType": "YulTypedName",
														"src": "1754:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1765:7:5",
														"nodeType": "YulTypedName",
														"src": "1765:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1777:6:5",
														"nodeType": "YulTypedName",
														"src": "1777:6:5",
														"type": ""
													}
												],
												"src": "1718:329:5"
											},
											{
												"body": {
													"nativeSrc": "2118:53:5",
													"nodeType": "YulBlock",
													"src": "2118:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2135:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2135:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2158:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2158:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2140:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "2140:17:5"
																		},
																		"nativeSrc": "2140:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2140:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2128:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2128:6:5"
																},
																"nativeSrc": "2128:37:5",
																"nodeType": "YulFunctionCall",
																"src": "2128:37:5"
															},
															"nativeSrc": "2128:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "2128:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2053:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2106:5:5",
														"nodeType": "YulTypedName",
														"src": "2106:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2113:3:5",
														"nodeType": "YulTypedName",
														"src": "2113:3:5",
														"type": ""
													}
												],
												"src": "2053:118:5"
											},
											{
												"body": {
													"nativeSrc": "2275:124:5",
													"nodeType": "YulBlock",
													"src": "2275:124:5",
													"statements": [
														{
															"nativeSrc": "2285:26:5",
															"nodeType": "YulAssignment",
															"src": "2285:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2297:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2297:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2308:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2308:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2293:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2293:3:5"
																},
																"nativeSrc": "2293:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2293:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2285:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2285:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2365:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2365:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2378:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2378:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2389:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2389:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2374:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2374:3:5"
																		},
																		"nativeSrc": "2374:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2374:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2321:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "2321:43:5"
																},
																"nativeSrc": "2321:71:5",
																"nodeType": "YulFunctionCall",
																"src": "2321:71:5"
															},
															"nativeSrc": "2321:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "2321:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2177:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2247:9:5",
														"nodeType": "YulTypedName",
														"src": "2247:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2259:6:5",
														"nodeType": "YulTypedName",
														"src": "2259:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2270:4:5",
														"nodeType": "YulTypedName",
														"src": "2270:4:5",
														"type": ""
													}
												],
												"src": "2177:222:5"
											},
											{
												"body": {
													"nativeSrc": "2437:28:5",
													"nodeType": "YulBlock",
													"src": "2437:28:5",
													"statements": [
														{
															"nativeSrc": "2447:12:5",
															"nodeType": "YulAssignment",
															"src": "2447:12:5",
															"value": {
																"name": "value",
																"nativeSrc": "2454:5:5",
																"nodeType": "YulIdentifier",
																"src": "2454:5:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2447:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2447:3:5"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2405:60:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2423:5:5",
														"nodeType": "YulTypedName",
														"src": "2423:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2433:3:5",
														"nodeType": "YulTypedName",
														"src": "2433:3:5",
														"type": ""
													}
												],
												"src": "2405:60:5"
											},
											{
												"body": {
													"nativeSrc": "2531:82:5",
													"nodeType": "YulBlock",
													"src": "2531:82:5",
													"statements": [
														{
															"nativeSrc": "2541:66:5",
															"nodeType": "YulAssignment",
															"src": "2541:66:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2599:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "2599:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "2581:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "2581:17:5"
																				},
																				"nativeSrc": "2581:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2581:24:5"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2572:8:5",
																			"nodeType": "YulIdentifier",
																			"src": "2572:8:5"
																		},
																		"nativeSrc": "2572:34:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2572:34:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2554:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "2554:17:5"
																},
																"nativeSrc": "2554:53:5",
																"nodeType": "YulFunctionCall",
																"src": "2554:53:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2541:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "2541:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "2471:142:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2511:5:5",
														"nodeType": "YulTypedName",
														"src": "2511:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2521:9:5",
														"nodeType": "YulTypedName",
														"src": "2521:9:5",
														"type": ""
													}
												],
												"src": "2471:142:5"
											},
											{
												"body": {
													"nativeSrc": "2679:66:5",
													"nodeType": "YulBlock",
													"src": "2679:66:5",
													"statements": [
														{
															"nativeSrc": "2689:50:5",
															"nodeType": "YulAssignment",
															"src": "2689:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2733:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2733:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "2702:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "2702:30:5"
																},
																"nativeSrc": "2702:37:5",
																"nodeType": "YulFunctionCall",
																"src": "2702:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2689:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "2689:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "2619:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2659:5:5",
														"nodeType": "YulTypedName",
														"src": "2659:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2669:9:5",
														"nodeType": "YulTypedName",
														"src": "2669:9:5",
														"type": ""
													}
												],
												"src": "2619:126:5"
											},
											{
												"body": {
													"nativeSrc": "2830:66:5",
													"nodeType": "YulBlock",
													"src": "2830:66:5",
													"statements": [
														{
															"nativeSrc": "2840:50:5",
															"nodeType": "YulAssignment",
															"src": "2840:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2884:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2884:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "2853:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "2853:30:5"
																},
																"nativeSrc": "2853:37:5",
																"nodeType": "YulFunctionCall",
																"src": "2853:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2840:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "2840:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ISwapRouter_$191_to_t_address",
												"nativeSrc": "2751:145:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2810:5:5",
														"nodeType": "YulTypedName",
														"src": "2810:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2820:9:5",
														"nodeType": "YulTypedName",
														"src": "2820:9:5",
														"type": ""
													}
												],
												"src": "2751:145:5"
											},
											{
												"body": {
													"nativeSrc": "2986:85:5",
													"nodeType": "YulBlock",
													"src": "2986:85:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3003:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3003:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3058:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3058:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ISwapRouter_$191_to_t_address",
																			"nativeSrc": "3008:49:5",
																			"nodeType": "YulIdentifier",
																			"src": "3008:49:5"
																		},
																		"nativeSrc": "3008:56:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3008:56:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2996:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2996:6:5"
																},
																"nativeSrc": "2996:69:5",
																"nodeType": "YulFunctionCall",
																"src": "2996:69:5"
															},
															"nativeSrc": "2996:69:5",
															"nodeType": "YulExpressionStatement",
															"src": "2996:69:5"
														}
													]
												},
												"name": "abi_encode_t_contract$_ISwapRouter_$191_to_t_address_fromStack",
												"nativeSrc": "2902:169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2974:5:5",
														"nodeType": "YulTypedName",
														"src": "2974:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2981:3:5",
														"nodeType": "YulTypedName",
														"src": "2981:3:5",
														"type": ""
													}
												],
												"src": "2902:169:5"
											},
											{
												"body": {
													"nativeSrc": "3194:143:5",
													"nodeType": "YulBlock",
													"src": "3194:143:5",
													"statements": [
														{
															"nativeSrc": "3204:26:5",
															"nodeType": "YulAssignment",
															"src": "3204:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3216:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3216:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3227:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3227:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3212:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3212:3:5"
																},
																"nativeSrc": "3212:18:5",
																"nodeType": "YulFunctionCall",
																"src": "3212:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3204:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3204:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3303:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3303:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3316:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3316:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3327:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3327:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3312:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3312:3:5"
																		},
																		"nativeSrc": "3312:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3312:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ISwapRouter_$191_to_t_address_fromStack",
																	"nativeSrc": "3240:62:5",
																	"nodeType": "YulIdentifier",
																	"src": "3240:62:5"
																},
																"nativeSrc": "3240:90:5",
																"nodeType": "YulFunctionCall",
																"src": "3240:90:5"
															},
															"nativeSrc": "3240:90:5",
															"nodeType": "YulExpressionStatement",
															"src": "3240:90:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ISwapRouter_$191__to_t_address__fromStack_reversed",
												"nativeSrc": "3077:260:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3166:9:5",
														"nodeType": "YulTypedName",
														"src": "3166:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3178:6:5",
														"nodeType": "YulTypedName",
														"src": "3178:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3189:4:5",
														"nodeType": "YulTypedName",
														"src": "3189:4:5",
														"type": ""
													}
												],
												"src": "3077:260:5"
											},
											{
												"body": {
													"nativeSrc": "3426:391:5",
													"nodeType": "YulBlock",
													"src": "3426:391:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "3472:83:5",
																"nodeType": "YulBlock",
																"src": "3472:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3474:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "3474:77:5"
																			},
																			"nativeSrc": "3474:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3474:79:5"
																		},
																		"nativeSrc": "3474:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3474:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3447:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3447:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3456:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3456:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3443:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3443:3:5"
																		},
																		"nativeSrc": "3443:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3443:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3468:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3468:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3439:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3439:3:5"
																},
																"nativeSrc": "3439:32:5",
																"nodeType": "YulFunctionCall",
																"src": "3439:32:5"
															},
															"nativeSrc": "3436:119:5",
															"nodeType": "YulIf",
															"src": "3436:119:5"
														},
														{
															"nativeSrc": "3565:117:5",
															"nodeType": "YulBlock",
															"src": "3565:117:5",
															"statements": [
																{
																	"nativeSrc": "3580:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3580:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3594:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3594:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3584:6:5",
																			"nodeType": "YulTypedName",
																			"src": "3584:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3609:63:5",
																	"nodeType": "YulAssignment",
																	"src": "3609:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3644:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "3644:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3655:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3655:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3640:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3640:3:5"
																				},
																				"nativeSrc": "3640:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3640:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3664:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3664:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3619:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "3619:20:5"
																		},
																		"nativeSrc": "3619:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3619:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3609:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "3609:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3692:118:5",
															"nodeType": "YulBlock",
															"src": "3692:118:5",
															"statements": [
																{
																	"nativeSrc": "3707:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3707:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3721:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3721:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3711:6:5",
																			"nodeType": "YulTypedName",
																			"src": "3711:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3737:63:5",
																	"nodeType": "YulAssignment",
																	"src": "3737:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3772:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "3772:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3783:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3783:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3768:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3768:3:5"
																				},
																				"nativeSrc": "3768:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3768:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3792:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3792:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3747:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "3747:20:5"
																		},
																		"nativeSrc": "3747:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3747:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3737:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "3737:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "3343:474:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3388:9:5",
														"nodeType": "YulTypedName",
														"src": "3388:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3399:7:5",
														"nodeType": "YulTypedName",
														"src": "3399:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3411:6:5",
														"nodeType": "YulTypedName",
														"src": "3411:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3419:6:5",
														"nodeType": "YulTypedName",
														"src": "3419:6:5",
														"type": ""
													}
												],
												"src": "3343:474:5"
											},
											{
												"body": {
													"nativeSrc": "3878:53:5",
													"nodeType": "YulBlock",
													"src": "3878:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3895:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3895:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3918:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3918:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3900:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "3900:17:5"
																		},
																		"nativeSrc": "3900:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3900:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3888:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3888:6:5"
																},
																"nativeSrc": "3888:37:5",
																"nodeType": "YulFunctionCall",
																"src": "3888:37:5"
															},
															"nativeSrc": "3888:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "3888:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "3823:108:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3866:5:5",
														"nodeType": "YulTypedName",
														"src": "3866:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3873:3:5",
														"nodeType": "YulTypedName",
														"src": "3873:3:5",
														"type": ""
													}
												],
												"src": "3823:108:5"
											},
											{
												"body": {
													"nativeSrc": "3990:52:5",
													"nodeType": "YulBlock",
													"src": "3990:52:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4007:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4007:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4029:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "4029:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint24",
																			"nativeSrc": "4012:16:5",
																			"nodeType": "YulIdentifier",
																			"src": "4012:16:5"
																		},
																		"nativeSrc": "4012:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4012:23:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4000:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4000:6:5"
																},
																"nativeSrc": "4000:36:5",
																"nodeType": "YulFunctionCall",
																"src": "4000:36:5"
															},
															"nativeSrc": "4000:36:5",
															"nodeType": "YulExpressionStatement",
															"src": "4000:36:5"
														}
													]
												},
												"name": "abi_encode_t_uint24_to_t_uint24",
												"nativeSrc": "3937:105:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3978:5:5",
														"nodeType": "YulTypedName",
														"src": "3978:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3985:3:5",
														"nodeType": "YulTypedName",
														"src": "3985:3:5",
														"type": ""
													}
												],
												"src": "3937:105:5"
											},
											{
												"body": {
													"nativeSrc": "4103:53:5",
													"nodeType": "YulBlock",
													"src": "4103:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4120:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4120:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4143:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "4143:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4125:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "4125:17:5"
																		},
																		"nativeSrc": "4125:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4125:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4113:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4113:6:5"
																},
																"nativeSrc": "4113:37:5",
																"nodeType": "YulFunctionCall",
																"src": "4113:37:5"
															},
															"nativeSrc": "4113:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "4113:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "4048:108:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4091:5:5",
														"nodeType": "YulTypedName",
														"src": "4091:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4098:3:5",
														"nodeType": "YulTypedName",
														"src": "4098:3:5",
														"type": ""
													}
												],
												"src": "4048:108:5"
											},
											{
												"body": {
													"nativeSrc": "4217:53:5",
													"nodeType": "YulBlock",
													"src": "4217:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4234:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4234:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4257:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "4257:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint160",
																			"nativeSrc": "4239:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "4239:17:5"
																		},
																		"nativeSrc": "4239:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4239:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4227:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4227:6:5"
																},
																"nativeSrc": "4227:37:5",
																"nodeType": "YulFunctionCall",
																"src": "4227:37:5"
															},
															"nativeSrc": "4227:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "4227:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint160_to_t_uint160",
												"nativeSrc": "4162:108:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4205:5:5",
														"nodeType": "YulTypedName",
														"src": "4205:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4212:3:5",
														"nodeType": "YulTypedName",
														"src": "4212:3:5",
														"type": ""
													}
												],
												"src": "4162:108:5"
											},
											{
												"body": {
													"nativeSrc": "4514:1479:5",
													"nodeType": "YulBlock",
													"src": "4514:1479:5",
													"statements": [
														{
															"nativeSrc": "4524:28:5",
															"nodeType": "YulVariableDeclaration",
															"src": "4524:28:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4540:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4540:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4545:6:5",
																		"nodeType": "YulLiteral",
																		"src": "4545:6:5",
																		"type": "",
																		"value": "0x0100"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4536:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4536:3:5"
																},
																"nativeSrc": "4536:16:5",
																"nodeType": "YulFunctionCall",
																"src": "4536:16:5"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "4528:4:5",
																	"nodeType": "YulTypedName",
																	"src": "4528:4:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4562:167:5",
															"nodeType": "YulBlock",
															"src": "4562:167:5",
															"statements": [
																{
																	"nativeSrc": "4600:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4600:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4630:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "4630:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4637:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4637:4:5",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4626:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4626:3:5"
																				},
																				"nativeSrc": "4626:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4626:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4620:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "4620:5:5"
																		},
																		"nativeSrc": "4620:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4620:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "4604:12:5",
																			"nodeType": "YulTypedName",
																			"src": "4604:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4690:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "4690:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4708:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4708:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4713:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4713:4:5",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4704:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4704:3:5"
																				},
																				"nativeSrc": "4704:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4704:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "4656:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "4656:33:5"
																		},
																		"nativeSrc": "4656:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4656:63:5"
																	},
																	"nativeSrc": "4656:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "4656:63:5"
																}
															]
														},
														{
															"nativeSrc": "4739:168:5",
															"nodeType": "YulBlock",
															"src": "4739:168:5",
															"statements": [
																{
																	"nativeSrc": "4778:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4778:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4808:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "4808:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4815:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4815:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4804:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4804:3:5"
																				},
																				"nativeSrc": "4804:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4804:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4798:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "4798:5:5"
																		},
																		"nativeSrc": "4798:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4798:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "4782:12:5",
																			"nodeType": "YulTypedName",
																			"src": "4782:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4868:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "4868:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4886:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4886:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4891:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4891:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4882:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4882:3:5"
																				},
																				"nativeSrc": "4882:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4882:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "4834:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "4834:33:5"
																		},
																		"nativeSrc": "4834:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4834:63:5"
																	},
																	"nativeSrc": "4834:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "4834:63:5"
																}
															]
														},
														{
															"nativeSrc": "4917:161:5",
															"nodeType": "YulBlock",
															"src": "4917:161:5",
															"statements": [
																{
																	"nativeSrc": "4951:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4951:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4981:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "4981:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4988:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4988:4:5",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4977:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4977:3:5"
																				},
																				"nativeSrc": "4977:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4977:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4971:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "4971:5:5"
																		},
																		"nativeSrc": "4971:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4971:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "4955:12:5",
																			"nodeType": "YulTypedName",
																			"src": "4955:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "5039:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "5039:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "5057:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "5057:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5062:4:5",
																						"nodeType": "YulLiteral",
																						"src": "5062:4:5",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5053:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5053:3:5"
																				},
																				"nativeSrc": "5053:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5053:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint24_to_t_uint24",
																			"nativeSrc": "5007:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "5007:31:5"
																		},
																		"nativeSrc": "5007:61:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5007:61:5"
																	},
																	"nativeSrc": "5007:61:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "5007:61:5"
																}
															]
														},
														{
															"nativeSrc": "5088:169:5",
															"nodeType": "YulBlock",
															"src": "5088:169:5",
															"statements": [
																{
																	"nativeSrc": "5128:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5128:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5158:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "5158:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5165:4:5",
																						"nodeType": "YulLiteral",
																						"src": "5165:4:5",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5154:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5154:3:5"
																				},
																				"nativeSrc": "5154:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5154:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "5148:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "5148:5:5"
																		},
																		"nativeSrc": "5148:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5148:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "5132:12:5",
																			"nodeType": "YulTypedName",
																			"src": "5132:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "5218:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "5218:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "5236:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "5236:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5241:4:5",
																						"nodeType": "YulLiteral",
																						"src": "5241:4:5",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5232:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5232:3:5"
																				},
																				"nativeSrc": "5232:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5232:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "5184:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "5184:33:5"
																		},
																		"nativeSrc": "5184:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5184:63:5"
																	},
																	"nativeSrc": "5184:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "5184:63:5"
																}
															]
														},
														{
															"nativeSrc": "5267:168:5",
															"nodeType": "YulBlock",
															"src": "5267:168:5",
															"statements": [
																{
																	"nativeSrc": "5306:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5306:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5336:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "5336:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5343:4:5",
																						"nodeType": "YulLiteral",
																						"src": "5343:4:5",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5332:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5332:3:5"
																				},
																				"nativeSrc": "5332:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5332:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "5326:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "5326:5:5"
																		},
																		"nativeSrc": "5326:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5326:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "5310:12:5",
																			"nodeType": "YulTypedName",
																			"src": "5310:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "5396:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "5396:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "5414:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "5414:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5419:4:5",
																						"nodeType": "YulLiteral",
																						"src": "5419:4:5",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5410:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5410:3:5"
																				},
																				"nativeSrc": "5410:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5410:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "5362:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "5362:33:5"
																		},
																		"nativeSrc": "5362:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5362:63:5"
																	},
																	"nativeSrc": "5362:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "5362:63:5"
																}
															]
														},
														{
															"nativeSrc": "5445:168:5",
															"nodeType": "YulBlock",
															"src": "5445:168:5",
															"statements": [
																{
																	"nativeSrc": "5484:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5484:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5514:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "5514:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5521:4:5",
																						"nodeType": "YulLiteral",
																						"src": "5521:4:5",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5510:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5510:3:5"
																				},
																				"nativeSrc": "5510:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5510:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "5504:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "5504:5:5"
																		},
																		"nativeSrc": "5504:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5504:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "5488:12:5",
																			"nodeType": "YulTypedName",
																			"src": "5488:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "5574:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "5574:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "5592:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "5592:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5597:4:5",
																						"nodeType": "YulLiteral",
																						"src": "5597:4:5",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5588:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5588:3:5"
																				},
																				"nativeSrc": "5588:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5588:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "5540:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "5540:33:5"
																		},
																		"nativeSrc": "5540:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5540:63:5"
																	},
																	"nativeSrc": "5540:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "5540:63:5"
																}
															]
														},
														{
															"nativeSrc": "5623:176:5",
															"nodeType": "YulBlock",
															"src": "5623:176:5",
															"statements": [
																{
																	"nativeSrc": "5670:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5670:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5700:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "5700:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5707:4:5",
																						"nodeType": "YulLiteral",
																						"src": "5707:4:5",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5696:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5696:3:5"
																				},
																				"nativeSrc": "5696:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5696:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "5690:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "5690:5:5"
																		},
																		"nativeSrc": "5690:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5690:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "5674:12:5",
																			"nodeType": "YulTypedName",
																			"src": "5674:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "5760:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "5760:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "5778:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "5778:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5783:4:5",
																						"nodeType": "YulLiteral",
																						"src": "5783:4:5",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5774:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5774:3:5"
																				},
																				"nativeSrc": "5774:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5774:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "5726:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "5726:33:5"
																		},
																		"nativeSrc": "5726:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5726:63:5"
																	},
																	"nativeSrc": "5726:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "5726:63:5"
																}
															]
														},
														{
															"nativeSrc": "5809:177:5",
															"nodeType": "YulBlock",
															"src": "5809:177:5",
															"statements": [
																{
																	"nativeSrc": "5857:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5857:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5887:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "5887:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5894:4:5",
																						"nodeType": "YulLiteral",
																						"src": "5894:4:5",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5883:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5883:3:5"
																				},
																				"nativeSrc": "5883:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5883:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "5877:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "5877:5:5"
																		},
																		"nativeSrc": "5877:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5877:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "5861:12:5",
																			"nodeType": "YulTypedName",
																			"src": "5861:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "5947:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "5947:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "5965:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "5965:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5970:4:5",
																						"nodeType": "YulLiteral",
																						"src": "5970:4:5",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5961:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5961:3:5"
																				},
																				"nativeSrc": "5961:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5961:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint160_to_t_uint160",
																			"nativeSrc": "5913:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "5913:33:5"
																		},
																		"nativeSrc": "5913:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5913:63:5"
																	},
																	"nativeSrc": "5913:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "5913:63:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack",
												"nativeSrc": "4370:1623:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4501:5:5",
														"nodeType": "YulTypedName",
														"src": "4501:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4508:3:5",
														"nodeType": "YulTypedName",
														"src": "4508:3:5",
														"type": ""
													}
												],
												"src": "4370:1623:5"
											},
											{
												"body": {
													"nativeSrc": "6175:203:5",
													"nodeType": "YulBlock",
													"src": "6175:203:5",
													"statements": [
														{
															"nativeSrc": "6185:27:5",
															"nodeType": "YulAssignment",
															"src": "6185:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6197:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "6197:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6208:3:5",
																		"nodeType": "YulLiteral",
																		"src": "6208:3:5",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6193:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6193:3:5"
																},
																"nativeSrc": "6193:19:5",
																"nodeType": "YulFunctionCall",
																"src": "6193:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6185:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6185:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6344:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6344:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6357:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6357:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6368:1:5",
																				"nodeType": "YulLiteral",
																				"src": "6368:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6353:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6353:3:5"
																		},
																		"nativeSrc": "6353:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6353:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack",
																	"nativeSrc": "6222:121:5",
																	"nodeType": "YulIdentifier",
																	"src": "6222:121:5"
																},
																"nativeSrc": "6222:149:5",
																"nodeType": "YulFunctionCall",
																"src": "6222:149:5"
															},
															"nativeSrc": "6222:149:5",
															"nodeType": "YulExpressionStatement",
															"src": "6222:149:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_ExactInputSingleParams_$115_memory_ptr__to_t_struct$_ExactInputSingleParams_$115_memory_ptr__fromStack_reversed",
												"nativeSrc": "5999:379:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6147:9:5",
														"nodeType": "YulTypedName",
														"src": "6147:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6159:6:5",
														"nodeType": "YulTypedName",
														"src": "6159:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6170:4:5",
														"nodeType": "YulTypedName",
														"src": "6170:4:5",
														"type": ""
													}
												],
												"src": "5999:379:5"
											},
											{
												"body": {
													"nativeSrc": "6447:80:5",
													"nodeType": "YulBlock",
													"src": "6447:80:5",
													"statements": [
														{
															"nativeSrc": "6457:22:5",
															"nodeType": "YulAssignment",
															"src": "6457:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6472:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6472:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6466:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "6466:5:5"
																},
																"nativeSrc": "6466:13:5",
																"nodeType": "YulFunctionCall",
																"src": "6466:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6457:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "6457:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6515:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "6515:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "6488:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "6488:26:5"
																},
																"nativeSrc": "6488:33:5",
																"nodeType": "YulFunctionCall",
																"src": "6488:33:5"
															},
															"nativeSrc": "6488:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "6488:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "6384:143:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6425:6:5",
														"nodeType": "YulTypedName",
														"src": "6425:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6433:3:5",
														"nodeType": "YulTypedName",
														"src": "6433:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6441:5:5",
														"nodeType": "YulTypedName",
														"src": "6441:5:5",
														"type": ""
													}
												],
												"src": "6384:143:5"
											},
											{
												"body": {
													"nativeSrc": "6610:274:5",
													"nodeType": "YulBlock",
													"src": "6610:274:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "6656:83:5",
																"nodeType": "YulBlock",
																"src": "6656:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6658:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "6658:77:5"
																			},
																			"nativeSrc": "6658:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6658:79:5"
																		},
																		"nativeSrc": "6658:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6658:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6631:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "6631:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6640:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6640:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6627:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6627:3:5"
																		},
																		"nativeSrc": "6627:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6627:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6652:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6652:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6623:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6623:3:5"
																},
																"nativeSrc": "6623:32:5",
																"nodeType": "YulFunctionCall",
																"src": "6623:32:5"
															},
															"nativeSrc": "6620:119:5",
															"nodeType": "YulIf",
															"src": "6620:119:5"
														},
														{
															"nativeSrc": "6749:128:5",
															"nodeType": "YulBlock",
															"src": "6749:128:5",
															"statements": [
																{
																	"nativeSrc": "6764:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6764:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6778:1:5",
																		"nodeType": "YulLiteral",
																		"src": "6778:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6768:6:5",
																			"nodeType": "YulTypedName",
																			"src": "6768:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6793:74:5",
																	"nodeType": "YulAssignment",
																	"src": "6793:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6839:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "6839:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6850:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "6850:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6835:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "6835:3:5"
																				},
																				"nativeSrc": "6835:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "6835:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6859:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "6859:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "6803:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "6803:31:5"
																		},
																		"nativeSrc": "6803:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6803:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6793:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "6793:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "6533:351:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6580:9:5",
														"nodeType": "YulTypedName",
														"src": "6580:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6591:7:5",
														"nodeType": "YulTypedName",
														"src": "6591:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6603:6:5",
														"nodeType": "YulTypedName",
														"src": "6603:6:5",
														"type": ""
													}
												],
												"src": "6533:351:5"
											},
											{
												"body": {
													"nativeSrc": "7132:1479:5",
													"nodeType": "YulBlock",
													"src": "7132:1479:5",
													"statements": [
														{
															"nativeSrc": "7142:28:5",
															"nodeType": "YulVariableDeclaration",
															"src": "7142:28:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7158:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7158:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7163:6:5",
																		"nodeType": "YulLiteral",
																		"src": "7163:6:5",
																		"type": "",
																		"value": "0x0100"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7154:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7154:3:5"
																},
																"nativeSrc": "7154:16:5",
																"nodeType": "YulFunctionCall",
																"src": "7154:16:5"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "7146:4:5",
																	"nodeType": "YulTypedName",
																	"src": "7146:4:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7180:167:5",
															"nodeType": "YulBlock",
															"src": "7180:167:5",
															"statements": [
																{
																	"nativeSrc": "7218:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7218:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7248:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "7248:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7255:4:5",
																						"nodeType": "YulLiteral",
																						"src": "7255:4:5",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7244:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "7244:3:5"
																				},
																				"nativeSrc": "7244:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7244:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7238:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "7238:5:5"
																		},
																		"nativeSrc": "7238:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7238:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "7222:12:5",
																			"nodeType": "YulTypedName",
																			"src": "7222:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "7308:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "7308:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "7326:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "7326:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7331:4:5",
																						"nodeType": "YulLiteral",
																						"src": "7331:4:5",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7322:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "7322:3:5"
																				},
																				"nativeSrc": "7322:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7322:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "7274:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "7274:33:5"
																		},
																		"nativeSrc": "7274:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7274:63:5"
																	},
																	"nativeSrc": "7274:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "7274:63:5"
																}
															]
														},
														{
															"nativeSrc": "7357:168:5",
															"nodeType": "YulBlock",
															"src": "7357:168:5",
															"statements": [
																{
																	"nativeSrc": "7396:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7396:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7426:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "7426:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7433:4:5",
																						"nodeType": "YulLiteral",
																						"src": "7433:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7422:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "7422:3:5"
																				},
																				"nativeSrc": "7422:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7422:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7416:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "7416:5:5"
																		},
																		"nativeSrc": "7416:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7416:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "7400:12:5",
																			"nodeType": "YulTypedName",
																			"src": "7400:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "7486:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "7486:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "7504:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "7504:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7509:4:5",
																						"nodeType": "YulLiteral",
																						"src": "7509:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7500:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "7500:3:5"
																				},
																				"nativeSrc": "7500:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7500:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "7452:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "7452:33:5"
																		},
																		"nativeSrc": "7452:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7452:63:5"
																	},
																	"nativeSrc": "7452:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "7452:63:5"
																}
															]
														},
														{
															"nativeSrc": "7535:161:5",
															"nodeType": "YulBlock",
															"src": "7535:161:5",
															"statements": [
																{
																	"nativeSrc": "7569:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7569:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7599:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "7599:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7606:4:5",
																						"nodeType": "YulLiteral",
																						"src": "7606:4:5",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7595:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "7595:3:5"
																				},
																				"nativeSrc": "7595:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7595:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7589:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "7589:5:5"
																		},
																		"nativeSrc": "7589:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7589:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "7573:12:5",
																			"nodeType": "YulTypedName",
																			"src": "7573:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "7657:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "7657:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "7675:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "7675:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7680:4:5",
																						"nodeType": "YulLiteral",
																						"src": "7680:4:5",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7671:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "7671:3:5"
																				},
																				"nativeSrc": "7671:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7671:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint24_to_t_uint24",
																			"nativeSrc": "7625:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "7625:31:5"
																		},
																		"nativeSrc": "7625:61:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7625:61:5"
																	},
																	"nativeSrc": "7625:61:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "7625:61:5"
																}
															]
														},
														{
															"nativeSrc": "7706:169:5",
															"nodeType": "YulBlock",
															"src": "7706:169:5",
															"statements": [
																{
																	"nativeSrc": "7746:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7746:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7776:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "7776:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7783:4:5",
																						"nodeType": "YulLiteral",
																						"src": "7783:4:5",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7772:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "7772:3:5"
																				},
																				"nativeSrc": "7772:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7772:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7766:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "7766:5:5"
																		},
																		"nativeSrc": "7766:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7766:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "7750:12:5",
																			"nodeType": "YulTypedName",
																			"src": "7750:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "7836:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "7836:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "7854:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "7854:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7859:4:5",
																						"nodeType": "YulLiteral",
																						"src": "7859:4:5",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7850:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "7850:3:5"
																				},
																				"nativeSrc": "7850:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7850:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "7802:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "7802:33:5"
																		},
																		"nativeSrc": "7802:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7802:63:5"
																	},
																	"nativeSrc": "7802:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "7802:63:5"
																}
															]
														},
														{
															"nativeSrc": "7885:168:5",
															"nodeType": "YulBlock",
															"src": "7885:168:5",
															"statements": [
																{
																	"nativeSrc": "7924:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7924:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7954:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "7954:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7961:4:5",
																						"nodeType": "YulLiteral",
																						"src": "7961:4:5",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7950:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "7950:3:5"
																				},
																				"nativeSrc": "7950:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7950:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7944:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "7944:5:5"
																		},
																		"nativeSrc": "7944:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7944:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "7928:12:5",
																			"nodeType": "YulTypedName",
																			"src": "7928:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "8014:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "8014:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "8032:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "8032:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8037:4:5",
																						"nodeType": "YulLiteral",
																						"src": "8037:4:5",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8028:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8028:3:5"
																				},
																				"nativeSrc": "8028:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "8028:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "7980:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "7980:33:5"
																		},
																		"nativeSrc": "7980:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7980:63:5"
																	},
																	"nativeSrc": "7980:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "7980:63:5"
																}
															]
														},
														{
															"nativeSrc": "8063:169:5",
															"nodeType": "YulBlock",
															"src": "8063:169:5",
															"statements": [
																{
																	"nativeSrc": "8103:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8103:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8133:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "8133:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8140:4:5",
																						"nodeType": "YulLiteral",
																						"src": "8140:4:5",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8129:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8129:3:5"
																				},
																				"nativeSrc": "8129:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "8129:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8123:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "8123:5:5"
																		},
																		"nativeSrc": "8123:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8123:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "8107:12:5",
																			"nodeType": "YulTypedName",
																			"src": "8107:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "8193:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "8193:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "8211:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "8211:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8216:4:5",
																						"nodeType": "YulLiteral",
																						"src": "8216:4:5",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8207:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8207:3:5"
																				},
																				"nativeSrc": "8207:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "8207:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "8159:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "8159:33:5"
																		},
																		"nativeSrc": "8159:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8159:63:5"
																	},
																	"nativeSrc": "8159:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "8159:63:5"
																}
															]
														},
														{
															"nativeSrc": "8242:175:5",
															"nodeType": "YulBlock",
															"src": "8242:175:5",
															"statements": [
																{
																	"nativeSrc": "8288:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8288:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8318:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "8318:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8325:4:5",
																						"nodeType": "YulLiteral",
																						"src": "8325:4:5",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8314:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8314:3:5"
																				},
																				"nativeSrc": "8314:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "8314:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8308:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "8308:5:5"
																		},
																		"nativeSrc": "8308:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8308:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "8292:12:5",
																			"nodeType": "YulTypedName",
																			"src": "8292:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "8378:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "8378:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "8396:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "8396:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8401:4:5",
																						"nodeType": "YulLiteral",
																						"src": "8401:4:5",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8392:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8392:3:5"
																				},
																				"nativeSrc": "8392:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "8392:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "8344:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "8344:33:5"
																		},
																		"nativeSrc": "8344:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8344:63:5"
																	},
																	"nativeSrc": "8344:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "8344:63:5"
																}
															]
														},
														{
															"nativeSrc": "8427:177:5",
															"nodeType": "YulBlock",
															"src": "8427:177:5",
															"statements": [
																{
																	"nativeSrc": "8475:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8475:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8505:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "8505:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8512:4:5",
																						"nodeType": "YulLiteral",
																						"src": "8512:4:5",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8501:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8501:3:5"
																				},
																				"nativeSrc": "8501:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "8501:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8495:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "8495:5:5"
																		},
																		"nativeSrc": "8495:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8495:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "8479:12:5",
																			"nodeType": "YulTypedName",
																			"src": "8479:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "8565:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "8565:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "8583:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "8583:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8588:4:5",
																						"nodeType": "YulLiteral",
																						"src": "8588:4:5",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8579:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8579:3:5"
																				},
																				"nativeSrc": "8579:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "8579:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint160_to_t_uint160",
																			"nativeSrc": "8531:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "8531:33:5"
																		},
																		"nativeSrc": "8531:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8531:63:5"
																	},
																	"nativeSrc": "8531:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "8531:63:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_ExactOutputSingleParams_$161_memory_ptr_to_t_struct$_ExactOutputSingleParams_$161_memory_ptr_fromStack",
												"nativeSrc": "6986:1625:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7119:5:5",
														"nodeType": "YulTypedName",
														"src": "7119:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7126:3:5",
														"nodeType": "YulTypedName",
														"src": "7126:3:5",
														"type": ""
													}
												],
												"src": "6986:1625:5"
											},
											{
												"body": {
													"nativeSrc": "8795:205:5",
													"nodeType": "YulBlock",
													"src": "8795:205:5",
													"statements": [
														{
															"nativeSrc": "8805:27:5",
															"nodeType": "YulAssignment",
															"src": "8805:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8817:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "8817:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8828:3:5",
																		"nodeType": "YulLiteral",
																		"src": "8828:3:5",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8813:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8813:3:5"
																},
																"nativeSrc": "8813:19:5",
																"nodeType": "YulFunctionCall",
																"src": "8813:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8805:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8805:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8966:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "8966:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8979:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8979:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8990:1:5",
																				"nodeType": "YulLiteral",
																				"src": "8990:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8975:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8975:3:5"
																		},
																		"nativeSrc": "8975:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8975:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_ExactOutputSingleParams_$161_memory_ptr_to_t_struct$_ExactOutputSingleParams_$161_memory_ptr_fromStack",
																	"nativeSrc": "8842:123:5",
																	"nodeType": "YulIdentifier",
																	"src": "8842:123:5"
																},
																"nativeSrc": "8842:151:5",
																"nodeType": "YulFunctionCall",
																"src": "8842:151:5"
															},
															"nativeSrc": "8842:151:5",
															"nodeType": "YulExpressionStatement",
															"src": "8842:151:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_ExactOutputSingleParams_$161_memory_ptr__to_t_struct$_ExactOutputSingleParams_$161_memory_ptr__fromStack_reversed",
												"nativeSrc": "8617:383:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8767:9:5",
														"nodeType": "YulTypedName",
														"src": "8767:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8779:6:5",
														"nodeType": "YulTypedName",
														"src": "8779:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8790:4:5",
														"nodeType": "YulTypedName",
														"src": "8790:4:5",
														"type": ""
													}
												],
												"src": "8617:383:5"
											},
											{
												"body": {
													"nativeSrc": "9034:152:5",
													"nodeType": "YulBlock",
													"src": "9034:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9051:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9051:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9054:77:5",
																		"nodeType": "YulLiteral",
																		"src": "9054:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9044:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9044:6:5"
																},
																"nativeSrc": "9044:88:5",
																"nodeType": "YulFunctionCall",
																"src": "9044:88:5"
															},
															"nativeSrc": "9044:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "9044:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9148:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9148:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9151:4:5",
																		"nodeType": "YulLiteral",
																		"src": "9151:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9141:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9141:6:5"
																},
																"nativeSrc": "9141:15:5",
																"nodeType": "YulFunctionCall",
																"src": "9141:15:5"
															},
															"nativeSrc": "9141:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "9141:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9172:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9172:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9175:4:5",
																		"nodeType": "YulLiteral",
																		"src": "9175:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9165:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9165:6:5"
																},
																"nativeSrc": "9165:15:5",
																"nodeType": "YulFunctionCall",
																"src": "9165:15:5"
															},
															"nativeSrc": "9165:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "9165:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9006:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "9006:180:5"
											},
											{
												"body": {
													"nativeSrc": "9237:149:5",
													"nodeType": "YulBlock",
													"src": "9237:149:5",
													"statements": [
														{
															"nativeSrc": "9247:25:5",
															"nodeType": "YulAssignment",
															"src": "9247:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9270:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "9270:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9252:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "9252:17:5"
																},
																"nativeSrc": "9252:20:5",
																"nodeType": "YulFunctionCall",
																"src": "9252:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9247:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "9247:1:5"
																}
															]
														},
														{
															"nativeSrc": "9281:25:5",
															"nodeType": "YulAssignment",
															"src": "9281:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9304:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "9304:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9286:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "9286:17:5"
																},
																"nativeSrc": "9286:20:5",
																"nodeType": "YulFunctionCall",
																"src": "9286:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9281:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "9281:1:5"
																}
															]
														},
														{
															"nativeSrc": "9315:17:5",
															"nodeType": "YulAssignment",
															"src": "9315:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9327:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "9327:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9330:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "9330:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "9323:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9323:3:5"
																},
																"nativeSrc": "9323:9:5",
																"nodeType": "YulFunctionCall",
																"src": "9323:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "9315:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9315:4:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9357:22:5",
																"nodeType": "YulBlock",
																"src": "9357:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9359:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "9359:16:5"
																			},
																			"nativeSrc": "9359:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "9359:18:5"
																		},
																		"nativeSrc": "9359:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "9359:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "9348:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "9348:4:5"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "9354:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "9354:1:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9345:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "9345:2:5"
																},
																"nativeSrc": "9345:11:5",
																"nodeType": "YulFunctionCall",
																"src": "9345:11:5"
															},
															"nativeSrc": "9342:37:5",
															"nodeType": "YulIf",
															"src": "9342:37:5"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "9192:194:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9223:1:5",
														"nodeType": "YulTypedName",
														"src": "9223:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9226:1:5",
														"nodeType": "YulTypedName",
														"src": "9226:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "9232:4:5",
														"nodeType": "YulTypedName",
														"src": "9232:4:5",
														"type": ""
													}
												],
												"src": "9192:194:5"
											},
											{
												"body": {
													"nativeSrc": "9546:288:5",
													"nodeType": "YulBlock",
													"src": "9546:288:5",
													"statements": [
														{
															"nativeSrc": "9556:26:5",
															"nodeType": "YulAssignment",
															"src": "9556:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9568:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "9568:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9579:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9579:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9564:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9564:3:5"
																},
																"nativeSrc": "9564:18:5",
																"nodeType": "YulFunctionCall",
																"src": "9564:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9556:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9556:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9636:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "9636:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9649:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9649:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9660:1:5",
																				"nodeType": "YulLiteral",
																				"src": "9660:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9645:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9645:3:5"
																		},
																		"nativeSrc": "9645:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9645:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9592:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "9592:43:5"
																},
																"nativeSrc": "9592:71:5",
																"nodeType": "YulFunctionCall",
																"src": "9592:71:5"
															},
															"nativeSrc": "9592:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "9592:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9717:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "9717:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9730:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9730:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9741:2:5",
																				"nodeType": "YulLiteral",
																				"src": "9741:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9726:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9726:3:5"
																		},
																		"nativeSrc": "9726:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9726:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9673:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "9673:43:5"
																},
																"nativeSrc": "9673:72:5",
																"nodeType": "YulFunctionCall",
																"src": "9673:72:5"
															},
															"nativeSrc": "9673:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "9673:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9799:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "9799:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9812:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9812:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9823:2:5",
																				"nodeType": "YulLiteral",
																				"src": "9823:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9808:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9808:3:5"
																		},
																		"nativeSrc": "9808:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9808:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9755:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "9755:43:5"
																},
																"nativeSrc": "9755:72:5",
																"nodeType": "YulFunctionCall",
																"src": "9755:72:5"
															},
															"nativeSrc": "9755:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "9755:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "9392:442:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9502:9:5",
														"nodeType": "YulTypedName",
														"src": "9502:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9514:6:5",
														"nodeType": "YulTypedName",
														"src": "9514:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9522:6:5",
														"nodeType": "YulTypedName",
														"src": "9522:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9530:6:5",
														"nodeType": "YulTypedName",
														"src": "9530:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9541:4:5",
														"nodeType": "YulTypedName",
														"src": "9541:4:5",
														"type": ""
													}
												],
												"src": "9392:442:5"
											},
											{
												"body": {
													"nativeSrc": "9898:40:5",
													"nodeType": "YulBlock",
													"src": "9898:40:5",
													"statements": [
														{
															"nativeSrc": "9909:22:5",
															"nodeType": "YulAssignment",
															"src": "9909:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9925:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "9925:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9919:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "9919:5:5"
																},
																"nativeSrc": "9919:12:5",
																"nodeType": "YulFunctionCall",
																"src": "9919:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "9909:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9909:6:5"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "9840:98:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9881:5:5",
														"nodeType": "YulTypedName",
														"src": "9881:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "9891:6:5",
														"nodeType": "YulTypedName",
														"src": "9891:6:5",
														"type": ""
													}
												],
												"src": "9840:98:5"
											},
											{
												"body": {
													"nativeSrc": "10057:34:5",
													"nodeType": "YulBlock",
													"src": "10057:34:5",
													"statements": [
														{
															"nativeSrc": "10067:18:5",
															"nodeType": "YulAssignment",
															"src": "10067:18:5",
															"value": {
																"name": "pos",
																"nativeSrc": "10082:3:5",
																"nodeType": "YulIdentifier",
																"src": "10082:3:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "10067:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "10067:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "9944:147:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10029:3:5",
														"nodeType": "YulTypedName",
														"src": "10029:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10034:6:5",
														"nodeType": "YulTypedName",
														"src": "10034:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "10045:11:5",
														"nodeType": "YulTypedName",
														"src": "10045:11:5",
														"type": ""
													}
												],
												"src": "9944:147:5"
											},
											{
												"body": {
													"nativeSrc": "10159:184:5",
													"nodeType": "YulBlock",
													"src": "10159:184:5",
													"statements": [
														{
															"nativeSrc": "10169:10:5",
															"nodeType": "YulVariableDeclaration",
															"src": "10169:10:5",
															"value": {
																"kind": "number",
																"nativeSrc": "10178:1:5",
																"nodeType": "YulLiteral",
																"src": "10178:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "10173:1:5",
																	"nodeType": "YulTypedName",
																	"src": "10173:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10238:63:5",
																"nodeType": "YulBlock",
																"src": "10238:63:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "10263:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "10263:3:5"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "10268:1:5",
																							"nodeType": "YulIdentifier",
																							"src": "10268:1:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "10259:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "10259:3:5"
																					},
																					"nativeSrc": "10259:11:5",
																					"nodeType": "YulFunctionCall",
																					"src": "10259:11:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "10282:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "10282:3:5"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "10287:1:5",
																									"nodeType": "YulIdentifier",
																									"src": "10287:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "10278:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "10278:3:5"
																							},
																							"nativeSrc": "10278:11:5",
																							"nodeType": "YulFunctionCall",
																							"src": "10278:11:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "10272:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "10272:5:5"
																					},
																					"nativeSrc": "10272:18:5",
																					"nodeType": "YulFunctionCall",
																					"src": "10272:18:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "10252:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "10252:6:5"
																			},
																			"nativeSrc": "10252:39:5",
																			"nodeType": "YulFunctionCall",
																			"src": "10252:39:5"
																		},
																		"nativeSrc": "10252:39:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "10252:39:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "10199:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "10199:1:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10202:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "10202:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "10196:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "10196:2:5"
																},
																"nativeSrc": "10196:13:5",
																"nodeType": "YulFunctionCall",
																"src": "10196:13:5"
															},
															"nativeSrc": "10188:113:5",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "10210:19:5",
																"nodeType": "YulBlock",
																"src": "10210:19:5",
																"statements": [
																	{
																		"nativeSrc": "10212:15:5",
																		"nodeType": "YulAssignment",
																		"src": "10212:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "10221:1:5",
																					"nodeType": "YulIdentifier",
																					"src": "10221:1:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10224:2:5",
																					"nodeType": "YulLiteral",
																					"src": "10224:2:5",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "10217:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "10217:3:5"
																			},
																			"nativeSrc": "10217:10:5",
																			"nodeType": "YulFunctionCall",
																			"src": "10217:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "10212:1:5",
																				"nodeType": "YulIdentifier",
																				"src": "10212:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "10192:3:5",
																"nodeType": "YulBlock",
																"src": "10192:3:5",
																"statements": []
															},
															"src": "10188:113:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "10321:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "10321:3:5"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "10326:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "10326:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10317:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10317:3:5"
																		},
																		"nativeSrc": "10317:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10317:16:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10335:1:5",
																		"nodeType": "YulLiteral",
																		"src": "10335:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10310:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10310:6:5"
																},
																"nativeSrc": "10310:27:5",
																"nodeType": "YulFunctionCall",
																"src": "10310:27:5"
															},
															"nativeSrc": "10310:27:5",
															"nodeType": "YulExpressionStatement",
															"src": "10310:27:5"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "10097:246:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "10141:3:5",
														"nodeType": "YulTypedName",
														"src": "10141:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "10146:3:5",
														"nodeType": "YulTypedName",
														"src": "10146:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10151:6:5",
														"nodeType": "YulTypedName",
														"src": "10151:6:5",
														"type": ""
													}
												],
												"src": "10097:246:5"
											},
											{
												"body": {
													"nativeSrc": "10457:278:5",
													"nodeType": "YulBlock",
													"src": "10457:278:5",
													"statements": [
														{
															"nativeSrc": "10467:52:5",
															"nodeType": "YulVariableDeclaration",
															"src": "10467:52:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10513:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "10513:5:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "10481:31:5",
																	"nodeType": "YulIdentifier",
																	"src": "10481:31:5"
																},
																"nativeSrc": "10481:38:5",
																"nodeType": "YulFunctionCall",
																"src": "10481:38:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "10471:6:5",
																	"nodeType": "YulTypedName",
																	"src": "10471:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10528:95:5",
															"nodeType": "YulAssignment",
															"src": "10528:95:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10611:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10611:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10616:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "10616:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "10535:75:5",
																	"nodeType": "YulIdentifier",
																	"src": "10535:75:5"
																},
																"nativeSrc": "10535:88:5",
																"nodeType": "YulFunctionCall",
																"src": "10535:88:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10528:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10528:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10671:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "10671:5:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10678:4:5",
																				"nodeType": "YulLiteral",
																				"src": "10678:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10667:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10667:3:5"
																		},
																		"nativeSrc": "10667:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10667:16:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "10685:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10685:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10690:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "10690:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "10632:34:5",
																	"nodeType": "YulIdentifier",
																	"src": "10632:34:5"
																},
																"nativeSrc": "10632:65:5",
																"nodeType": "YulFunctionCall",
																"src": "10632:65:5"
															},
															"nativeSrc": "10632:65:5",
															"nodeType": "YulExpressionStatement",
															"src": "10632:65:5"
														},
														{
															"nativeSrc": "10706:23:5",
															"nodeType": "YulAssignment",
															"src": "10706:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10717:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10717:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10722:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "10722:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10713:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10713:3:5"
																},
																"nativeSrc": "10713:16:5",
																"nodeType": "YulFunctionCall",
																"src": "10713:16:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10706:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10706:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "10349:386:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10438:5:5",
														"nodeType": "YulTypedName",
														"src": "10438:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10445:3:5",
														"nodeType": "YulTypedName",
														"src": "10445:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10453:3:5",
														"nodeType": "YulTypedName",
														"src": "10453:3:5",
														"type": ""
													}
												],
												"src": "10349:386:5"
											},
											{
												"body": {
													"nativeSrc": "10875:137:5",
													"nodeType": "YulBlock",
													"src": "10875:137:5",
													"statements": [
														{
															"nativeSrc": "10886:100:5",
															"nodeType": "YulAssignment",
															"src": "10886:100:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10973:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "10973:6:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "10982:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10982:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "10893:79:5",
																	"nodeType": "YulIdentifier",
																	"src": "10893:79:5"
																},
																"nativeSrc": "10893:93:5",
																"nodeType": "YulFunctionCall",
																"src": "10893:93:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10886:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10886:3:5"
																}
															]
														},
														{
															"nativeSrc": "10996:10:5",
															"nodeType": "YulAssignment",
															"src": "10996:10:5",
															"value": {
																"name": "pos",
																"nativeSrc": "11003:3:5",
																"nodeType": "YulIdentifier",
																"src": "11003:3:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10996:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10996:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "10741:271:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10854:3:5",
														"nodeType": "YulTypedName",
														"src": "10854:3:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10860:6:5",
														"nodeType": "YulTypedName",
														"src": "10860:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10871:3:5",
														"nodeType": "YulTypedName",
														"src": "10871:3:5",
														"type": ""
													}
												],
												"src": "10741:271:5"
											},
											{
												"body": {
													"nativeSrc": "11060:48:5",
													"nodeType": "YulBlock",
													"src": "11060:48:5",
													"statements": [
														{
															"nativeSrc": "11070:32:5",
															"nodeType": "YulAssignment",
															"src": "11070:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11095:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "11095:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "11088:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "11088:6:5"
																		},
																		"nativeSrc": "11088:13:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11088:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11081:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "11081:6:5"
																},
																"nativeSrc": "11081:21:5",
																"nodeType": "YulFunctionCall",
																"src": "11081:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "11070:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "11070:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "11018:90:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11042:5:5",
														"nodeType": "YulTypedName",
														"src": "11042:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "11052:7:5",
														"nodeType": "YulTypedName",
														"src": "11052:7:5",
														"type": ""
													}
												],
												"src": "11018:90:5"
											},
											{
												"body": {
													"nativeSrc": "11154:76:5",
													"nodeType": "YulBlock",
													"src": "11154:76:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "11208:16:5",
																"nodeType": "YulBlock",
																"src": "11208:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11217:1:5",
																					"nodeType": "YulLiteral",
																					"src": "11217:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11220:1:5",
																					"nodeType": "YulLiteral",
																					"src": "11220:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "11210:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "11210:6:5"
																			},
																			"nativeSrc": "11210:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "11210:12:5"
																		},
																		"nativeSrc": "11210:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "11210:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11177:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "11177:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11199:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "11199:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "11184:14:5",
																					"nodeType": "YulIdentifier",
																					"src": "11184:14:5"
																				},
																				"nativeSrc": "11184:21:5",
																				"nodeType": "YulFunctionCall",
																				"src": "11184:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "11174:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "11174:2:5"
																		},
																		"nativeSrc": "11174:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11174:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11167:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "11167:6:5"
																},
																"nativeSrc": "11167:40:5",
																"nodeType": "YulFunctionCall",
																"src": "11167:40:5"
															},
															"nativeSrc": "11164:60:5",
															"nodeType": "YulIf",
															"src": "11164:60:5"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "11114:116:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11147:5:5",
														"nodeType": "YulTypedName",
														"src": "11147:5:5",
														"type": ""
													}
												],
												"src": "11114:116:5"
											},
											{
												"body": {
													"nativeSrc": "11296:77:5",
													"nodeType": "YulBlock",
													"src": "11296:77:5",
													"statements": [
														{
															"nativeSrc": "11306:22:5",
															"nodeType": "YulAssignment",
															"src": "11306:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11321:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "11321:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11315:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "11315:5:5"
																},
																"nativeSrc": "11315:13:5",
																"nodeType": "YulFunctionCall",
																"src": "11315:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11306:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "11306:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11361:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "11361:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "11337:23:5",
																	"nodeType": "YulIdentifier",
																	"src": "11337:23:5"
																},
																"nativeSrc": "11337:30:5",
																"nodeType": "YulFunctionCall",
																"src": "11337:30:5"
															},
															"nativeSrc": "11337:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "11337:30:5"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "11236:137:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11274:6:5",
														"nodeType": "YulTypedName",
														"src": "11274:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11282:3:5",
														"nodeType": "YulTypedName",
														"src": "11282:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "11290:5:5",
														"nodeType": "YulTypedName",
														"src": "11290:5:5",
														"type": ""
													}
												],
												"src": "11236:137:5"
											},
											{
												"body": {
													"nativeSrc": "11453:271:5",
													"nodeType": "YulBlock",
													"src": "11453:271:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "11499:83:5",
																"nodeType": "YulBlock",
																"src": "11499:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11501:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "11501:77:5"
																			},
																			"nativeSrc": "11501:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "11501:79:5"
																		},
																		"nativeSrc": "11501:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "11501:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11474:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "11474:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11483:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "11483:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11470:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "11470:3:5"
																		},
																		"nativeSrc": "11470:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11470:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11495:2:5",
																		"nodeType": "YulLiteral",
																		"src": "11495:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11466:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11466:3:5"
																},
																"nativeSrc": "11466:32:5",
																"nodeType": "YulFunctionCall",
																"src": "11466:32:5"
															},
															"nativeSrc": "11463:119:5",
															"nodeType": "YulIf",
															"src": "11463:119:5"
														},
														{
															"nativeSrc": "11592:125:5",
															"nodeType": "YulBlock",
															"src": "11592:125:5",
															"statements": [
																{
																	"nativeSrc": "11607:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11607:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11621:1:5",
																		"nodeType": "YulLiteral",
																		"src": "11621:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11611:6:5",
																			"nodeType": "YulTypedName",
																			"src": "11611:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11636:71:5",
																	"nodeType": "YulAssignment",
																	"src": "11636:71:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11679:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "11679:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11690:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "11690:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11675:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "11675:3:5"
																				},
																				"nativeSrc": "11675:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "11675:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11699:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "11699:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "11646:28:5",
																			"nodeType": "YulIdentifier",
																			"src": "11646:28:5"
																		},
																		"nativeSrc": "11646:61:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11646:61:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11636:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "11636:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "11379:345:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11423:9:5",
														"nodeType": "YulTypedName",
														"src": "11423:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11434:7:5",
														"nodeType": "YulTypedName",
														"src": "11434:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11446:6:5",
														"nodeType": "YulTypedName",
														"src": "11446:6:5",
														"type": ""
													}
												],
												"src": "11379:345:5"
											},
											{
												"body": {
													"nativeSrc": "11826:73:5",
													"nodeType": "YulBlock",
													"src": "11826:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11843:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11843:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11848:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "11848:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11836:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "11836:6:5"
																},
																"nativeSrc": "11836:19:5",
																"nodeType": "YulFunctionCall",
																"src": "11836:19:5"
															},
															"nativeSrc": "11836:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "11836:19:5"
														},
														{
															"nativeSrc": "11864:29:5",
															"nodeType": "YulAssignment",
															"src": "11864:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11883:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11883:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11888:4:5",
																		"nodeType": "YulLiteral",
																		"src": "11888:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11879:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11879:3:5"
																},
																"nativeSrc": "11879:14:5",
																"nodeType": "YulFunctionCall",
																"src": "11879:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "11864:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "11864:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "11730:169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11798:3:5",
														"nodeType": "YulTypedName",
														"src": "11798:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "11803:6:5",
														"nodeType": "YulTypedName",
														"src": "11803:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "11814:11:5",
														"nodeType": "YulTypedName",
														"src": "11814:11:5",
														"type": ""
													}
												],
												"src": "11730:169:5"
											},
											{
												"body": {
													"nativeSrc": "12011:47:5",
													"nodeType": "YulBlock",
													"src": "12011:47:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12033:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "12033:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12041:1:5",
																				"nodeType": "YulLiteral",
																				"src": "12041:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12029:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "12029:3:5"
																		},
																		"nativeSrc": "12029:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12029:14:5"
																	},
																	{
																		"hexValue": "535446",
																		"kind": "string",
																		"nativeSrc": "12045:5:5",
																		"nodeType": "YulLiteral",
																		"src": "12045:5:5",
																		"type": "",
																		"value": "STF"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12022:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "12022:6:5"
																},
																"nativeSrc": "12022:29:5",
																"nodeType": "YulFunctionCall",
																"src": "12022:29:5"
															},
															"nativeSrc": "12022:29:5",
															"nodeType": "YulExpressionStatement",
															"src": "12022:29:5"
														}
													]
												},
												"name": "store_literal_in_memory_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
												"nativeSrc": "11905:153:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12003:6:5",
														"nodeType": "YulTypedName",
														"src": "12003:6:5",
														"type": ""
													}
												],
												"src": "11905:153:5"
											},
											{
												"body": {
													"nativeSrc": "12210:219:5",
													"nodeType": "YulBlock",
													"src": "12210:219:5",
													"statements": [
														{
															"nativeSrc": "12220:73:5",
															"nodeType": "YulAssignment",
															"src": "12220:73:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12286:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "12286:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12291:1:5",
																		"nodeType": "YulLiteral",
																		"src": "12291:1:5",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12227:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "12227:58:5"
																},
																"nativeSrc": "12227:66:5",
																"nodeType": "YulFunctionCall",
																"src": "12227:66:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12220:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "12220:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12391:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "12391:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
																	"nativeSrc": "12302:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "12302:88:5"
																},
																"nativeSrc": "12302:93:5",
																"nodeType": "YulFunctionCall",
																"src": "12302:93:5"
															},
															"nativeSrc": "12302:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "12302:93:5"
														},
														{
															"nativeSrc": "12404:19:5",
															"nodeType": "YulAssignment",
															"src": "12404:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12415:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "12415:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12420:2:5",
																		"nodeType": "YulLiteral",
																		"src": "12420:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12411:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "12411:3:5"
																},
																"nativeSrc": "12411:12:5",
																"nodeType": "YulFunctionCall",
																"src": "12411:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12404:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "12404:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12064:365:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12198:3:5",
														"nodeType": "YulTypedName",
														"src": "12198:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12206:3:5",
														"nodeType": "YulTypedName",
														"src": "12206:3:5",
														"type": ""
													}
												],
												"src": "12064:365:5"
											},
											{
												"body": {
													"nativeSrc": "12606:248:5",
													"nodeType": "YulBlock",
													"src": "12606:248:5",
													"statements": [
														{
															"nativeSrc": "12616:26:5",
															"nodeType": "YulAssignment",
															"src": "12616:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12628:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "12628:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12639:2:5",
																		"nodeType": "YulLiteral",
																		"src": "12639:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12624:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "12624:3:5"
																},
																"nativeSrc": "12624:18:5",
																"nodeType": "YulFunctionCall",
																"src": "12624:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12616:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "12616:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12663:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "12663:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12674:1:5",
																				"nodeType": "YulLiteral",
																				"src": "12674:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12659:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "12659:3:5"
																		},
																		"nativeSrc": "12659:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12659:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12682:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "12682:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12688:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "12688:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12678:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "12678:3:5"
																		},
																		"nativeSrc": "12678:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12678:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12652:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "12652:6:5"
																},
																"nativeSrc": "12652:47:5",
																"nodeType": "YulFunctionCall",
																"src": "12652:47:5"
															},
															"nativeSrc": "12652:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "12652:47:5"
														},
														{
															"nativeSrc": "12708:139:5",
															"nodeType": "YulAssignment",
															"src": "12708:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12842:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "12842:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12716:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "12716:124:5"
																},
																"nativeSrc": "12716:131:5",
																"nodeType": "YulFunctionCall",
																"src": "12716:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12708:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "12708:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12435:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12586:9:5",
														"nodeType": "YulTypedName",
														"src": "12586:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12601:4:5",
														"nodeType": "YulTypedName",
														"src": "12601:4:5",
														"type": ""
													}
												],
												"src": "12435:419:5"
											},
											{
												"body": {
													"nativeSrc": "12986:206:5",
													"nodeType": "YulBlock",
													"src": "12986:206:5",
													"statements": [
														{
															"nativeSrc": "12996:26:5",
															"nodeType": "YulAssignment",
															"src": "12996:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13008:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "13008:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13019:2:5",
																		"nodeType": "YulLiteral",
																		"src": "13019:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13004:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "13004:3:5"
																},
																"nativeSrc": "13004:18:5",
																"nodeType": "YulFunctionCall",
																"src": "13004:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12996:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "12996:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13076:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "13076:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13089:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "13089:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13100:1:5",
																				"nodeType": "YulLiteral",
																				"src": "13100:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13085:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "13085:3:5"
																		},
																		"nativeSrc": "13085:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "13085:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13032:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "13032:43:5"
																},
																"nativeSrc": "13032:71:5",
																"nodeType": "YulFunctionCall",
																"src": "13032:71:5"
															},
															"nativeSrc": "13032:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "13032:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13157:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "13157:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13170:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "13170:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13181:2:5",
																				"nodeType": "YulLiteral",
																				"src": "13181:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13166:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "13166:3:5"
																		},
																		"nativeSrc": "13166:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "13166:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13113:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "13113:43:5"
																},
																"nativeSrc": "13113:72:5",
																"nodeType": "YulFunctionCall",
																"src": "13113:72:5"
															},
															"nativeSrc": "13113:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "13113:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "12860:332:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12950:9:5",
														"nodeType": "YulTypedName",
														"src": "12950:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12962:6:5",
														"nodeType": "YulTypedName",
														"src": "12962:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12970:6:5",
														"nodeType": "YulTypedName",
														"src": "12970:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12981:4:5",
														"nodeType": "YulTypedName",
														"src": "12981:4:5",
														"type": ""
													}
												],
												"src": "12860:332:5"
											},
											{
												"body": {
													"nativeSrc": "13304:46:5",
													"nodeType": "YulBlock",
													"src": "13304:46:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13326:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "13326:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13334:1:5",
																				"nodeType": "YulLiteral",
																				"src": "13334:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13322:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "13322:3:5"
																		},
																		"nativeSrc": "13322:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "13322:14:5"
																	},
																	{
																		"hexValue": "5341",
																		"kind": "string",
																		"nativeSrc": "13338:4:5",
																		"nodeType": "YulLiteral",
																		"src": "13338:4:5",
																		"type": "",
																		"value": "SA"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13315:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "13315:6:5"
																},
																"nativeSrc": "13315:28:5",
																"nodeType": "YulFunctionCall",
																"src": "13315:28:5"
															},
															"nativeSrc": "13315:28:5",
															"nodeType": "YulExpressionStatement",
															"src": "13315:28:5"
														}
													]
												},
												"name": "store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
												"nativeSrc": "13198:152:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13296:6:5",
														"nodeType": "YulTypedName",
														"src": "13296:6:5",
														"type": ""
													}
												],
												"src": "13198:152:5"
											},
											{
												"body": {
													"nativeSrc": "13502:219:5",
													"nodeType": "YulBlock",
													"src": "13502:219:5",
													"statements": [
														{
															"nativeSrc": "13512:73:5",
															"nodeType": "YulAssignment",
															"src": "13512:73:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13578:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "13578:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13583:1:5",
																		"nodeType": "YulLiteral",
																		"src": "13583:1:5",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13519:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "13519:58:5"
																},
																"nativeSrc": "13519:66:5",
																"nodeType": "YulFunctionCall",
																"src": "13519:66:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13512:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "13512:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13683:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "13683:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
																	"nativeSrc": "13594:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "13594:88:5"
																},
																"nativeSrc": "13594:93:5",
																"nodeType": "YulFunctionCall",
																"src": "13594:93:5"
															},
															"nativeSrc": "13594:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "13594:93:5"
														},
														{
															"nativeSrc": "13696:19:5",
															"nodeType": "YulAssignment",
															"src": "13696:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13707:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "13707:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13712:2:5",
																		"nodeType": "YulLiteral",
																		"src": "13712:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13703:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "13703:3:5"
																},
																"nativeSrc": "13703:12:5",
																"nodeType": "YulFunctionCall",
																"src": "13703:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13696:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "13696:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13356:365:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13490:3:5",
														"nodeType": "YulTypedName",
														"src": "13490:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13498:3:5",
														"nodeType": "YulTypedName",
														"src": "13498:3:5",
														"type": ""
													}
												],
												"src": "13356:365:5"
											},
											{
												"body": {
													"nativeSrc": "13898:248:5",
													"nodeType": "YulBlock",
													"src": "13898:248:5",
													"statements": [
														{
															"nativeSrc": "13908:26:5",
															"nodeType": "YulAssignment",
															"src": "13908:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13920:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "13920:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13931:2:5",
																		"nodeType": "YulLiteral",
																		"src": "13931:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13916:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "13916:3:5"
																},
																"nativeSrc": "13916:18:5",
																"nodeType": "YulFunctionCall",
																"src": "13916:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13908:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "13908:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13955:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "13955:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13966:1:5",
																				"nodeType": "YulLiteral",
																				"src": "13966:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13951:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "13951:3:5"
																		},
																		"nativeSrc": "13951:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "13951:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13974:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "13974:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13980:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "13980:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13970:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "13970:3:5"
																		},
																		"nativeSrc": "13970:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "13970:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13944:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "13944:6:5"
																},
																"nativeSrc": "13944:47:5",
																"nodeType": "YulFunctionCall",
																"src": "13944:47:5"
															},
															"nativeSrc": "13944:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "13944:47:5"
														},
														{
															"nativeSrc": "14000:139:5",
															"nodeType": "YulAssignment",
															"src": "14000:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14134:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "14134:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14008:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "14008:124:5"
																},
																"nativeSrc": "14008:131:5",
																"nodeType": "YulFunctionCall",
																"src": "14008:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14000:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "14000:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13727:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13878:9:5",
														"nodeType": "YulTypedName",
														"src": "13878:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13893:4:5",
														"nodeType": "YulTypedName",
														"src": "13893:4:5",
														"type": ""
													}
												],
												"src": "13727:419:5"
											},
											{
												"body": {
													"nativeSrc": "14258:46:5",
													"nodeType": "YulBlock",
													"src": "14258:46:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14280:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "14280:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14288:1:5",
																				"nodeType": "YulLiteral",
																				"src": "14288:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14276:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "14276:3:5"
																		},
																		"nativeSrc": "14276:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "14276:14:5"
																	},
																	{
																		"hexValue": "5354",
																		"kind": "string",
																		"nativeSrc": "14292:4:5",
																		"nodeType": "YulLiteral",
																		"src": "14292:4:5",
																		"type": "",
																		"value": "ST"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14269:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "14269:6:5"
																},
																"nativeSrc": "14269:28:5",
																"nodeType": "YulFunctionCall",
																"src": "14269:28:5"
															},
															"nativeSrc": "14269:28:5",
															"nodeType": "YulExpressionStatement",
															"src": "14269:28:5"
														}
													]
												},
												"name": "store_literal_in_memory_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
												"nativeSrc": "14152:152:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14250:6:5",
														"nodeType": "YulTypedName",
														"src": "14250:6:5",
														"type": ""
													}
												],
												"src": "14152:152:5"
											},
											{
												"body": {
													"nativeSrc": "14456:219:5",
													"nodeType": "YulBlock",
													"src": "14456:219:5",
													"statements": [
														{
															"nativeSrc": "14466:73:5",
															"nodeType": "YulAssignment",
															"src": "14466:73:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14532:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "14532:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14537:1:5",
																		"nodeType": "YulLiteral",
																		"src": "14537:1:5",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14473:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "14473:58:5"
																},
																"nativeSrc": "14473:66:5",
																"nodeType": "YulFunctionCall",
																"src": "14473:66:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14466:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "14466:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14637:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "14637:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
																	"nativeSrc": "14548:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "14548:88:5"
																},
																"nativeSrc": "14548:93:5",
																"nodeType": "YulFunctionCall",
																"src": "14548:93:5"
															},
															"nativeSrc": "14548:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "14548:93:5"
														},
														{
															"nativeSrc": "14650:19:5",
															"nodeType": "YulAssignment",
															"src": "14650:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14661:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "14661:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14666:2:5",
																		"nodeType": "YulLiteral",
																		"src": "14666:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14657:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "14657:3:5"
																},
																"nativeSrc": "14657:12:5",
																"nodeType": "YulFunctionCall",
																"src": "14657:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14650:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "14650:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14310:365:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14444:3:5",
														"nodeType": "YulTypedName",
														"src": "14444:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14452:3:5",
														"nodeType": "YulTypedName",
														"src": "14452:3:5",
														"type": ""
													}
												],
												"src": "14310:365:5"
											},
											{
												"body": {
													"nativeSrc": "14852:248:5",
													"nodeType": "YulBlock",
													"src": "14852:248:5",
													"statements": [
														{
															"nativeSrc": "14862:26:5",
															"nodeType": "YulAssignment",
															"src": "14862:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14874:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "14874:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14885:2:5",
																		"nodeType": "YulLiteral",
																		"src": "14885:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14870:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "14870:3:5"
																},
																"nativeSrc": "14870:18:5",
																"nodeType": "YulFunctionCall",
																"src": "14870:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14862:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "14862:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14909:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "14909:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14920:1:5",
																				"nodeType": "YulLiteral",
																				"src": "14920:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14905:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "14905:3:5"
																		},
																		"nativeSrc": "14905:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "14905:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14928:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "14928:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14934:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "14934:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14924:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "14924:3:5"
																		},
																		"nativeSrc": "14924:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "14924:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14898:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "14898:6:5"
																},
																"nativeSrc": "14898:47:5",
																"nodeType": "YulFunctionCall",
																"src": "14898:47:5"
															},
															"nativeSrc": "14898:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "14898:47:5"
														},
														{
															"nativeSrc": "14954:139:5",
															"nodeType": "YulAssignment",
															"src": "14954:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15088:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "15088:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14962:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "14962:124:5"
																},
																"nativeSrc": "14962:131:5",
																"nodeType": "YulFunctionCall",
																"src": "14962:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14954:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "14954:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14681:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14832:9:5",
														"nodeType": "YulTypedName",
														"src": "14832:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14847:4:5",
														"nodeType": "YulTypedName",
														"src": "14847:4:5",
														"type": ""
													}
												],
												"src": "14681:419:5"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint24(value) -> cleaned {\n        cleaned := and(value, 0xffffff)\n    }\n\n    function abi_encode_t_uint24_to_t_uint24_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint24_to_t_uint24_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ISwapRouter_$191_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ISwapRouter_$191_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ISwapRouter_$191_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ISwapRouter_$191__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ISwapRouter_$191_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint24_to_t_uint24(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint160_to_t_uint160(value, pos) {\n        mstore(pos, cleanup_t_uint160(value))\n    }\n\n    // struct ISwapRouter.ExactInputSingleParams -> struct ISwapRouter.ExactInputSingleParams\n    function abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0100)\n\n        {\n            // tokenIn\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // tokenOut\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // fee\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint24_to_t_uint24(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // recipient\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // deadline\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // amountIn\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // amountOutMinimum\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // sqrtPriceLimitX96\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_uint160_to_t_uint160(memberValue0, add(pos, 0xe0))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_ExactInputSingleParams_$115_memory_ptr__to_t_struct$_ExactInputSingleParams_$115_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    // struct ISwapRouter.ExactOutputSingleParams -> struct ISwapRouter.ExactOutputSingleParams\n    function abi_encode_t_struct$_ExactOutputSingleParams_$161_memory_ptr_to_t_struct$_ExactOutputSingleParams_$161_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0100)\n\n        {\n            // tokenIn\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // tokenOut\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // fee\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint24_to_t_uint24(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // recipient\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // deadline\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // amountOut\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // amountInMaximum\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // sqrtPriceLimitX96\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_uint160_to_t_uint160(memberValue0, add(pos, 0xe0))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_ExactOutputSingleParams_$161_memory_ptr__to_t_struct$_ExactOutputSingleParams_$161_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_struct$_ExactOutputSingleParams_$161_memory_ptr_to_t_struct$_ExactOutputSingleParams_$161_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86(memPtr) {\n\n        mstore(add(memPtr, 0), \"STF\")\n\n    }\n\n    function abi_encode_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 3)\n        store_literal_in_memory_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa(memPtr) {\n\n        mstore(add(memPtr, 0), \"SA\")\n\n    }\n\n    function abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 2)\n        store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca(memPtr) {\n\n        mstore(add(memPtr, 0), \"ST\")\n\n    }\n\n    function abi_encode_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 2)\n        store_literal_in_memory_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"370": [
									{
										"length": 32,
										"start": 462
									},
									{
										"length": 32,
										"start": 697
									},
									{
										"length": 32,
										"start": 882
									},
									{
										"length": 32,
										"start": 975
									},
									{
										"length": 32,
										"start": 1210
									},
									{
										"length": 32,
										"start": 1397
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061007b575f3560e01c806389a302711161005957806389a30271146100eb578063c31c9c0714610109578063c4b69a1814610127578063e0bab4c4146101575761007b565b8063089fe6aa1461007f5780634aa4a4fc1461009d57806373bd43ad146100bb575b5f80fd5b610087610175565b60405161009491906109f1565b60405180910390f35b6100a561017b565b6040516100b29190610a49565b60405180910390f35b6100d560048036038101906100d09190610a99565b610193565b6040516100e29190610ad3565b60405180910390f35b6100f3610358565b6040516101009190610a49565b60405180910390f35b610111610370565b60405161011e9190610b47565b60405180910390f35b610141600480360381019061013c9190610b60565b610394565b60405161014e9190610ad3565b60405180910390f35b61015f6105cc565b60405161016c9190610a49565b60405180910390f35b610bb881565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b5f6101b4736b175474e89094c44da98b954eedeac495271d0f3330856105e4565b6101f3736b175474e89094c44da98b954eedeac495271d0f7f000000000000000000000000000000000000000000000000000000000000000084610736565b5f604051806101000160405280736b175474e89094c44da98b954eedeac495271d0f73ffffffffffffffffffffffffffffffffffffffff16815260200173c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020014281526020018481526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663414bf389826040518263ffffffff1660e01b81526004016103109190610c7a565b6020604051808303815f875af115801561032c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103509190610ca8565b915050919050565b73a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4881565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f6103b5736b175474e89094c44da98b954eedeac495271d0f3330856105e4565b6103f4736b175474e89094c44da98b954eedeac495271d0f7f000000000000000000000000000000000000000000000000000000000000000084610736565b5f604051806101000160405280736b175474e89094c44da98b954eedeac495271d0f73ffffffffffffffffffffffffffffffffffffffff16815260200173c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020014281526020018581526020018481526020015f73ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663db3e2198826040518263ffffffff1660e01b81526004016105119190610d73565b6020604051808303815f875af115801561052d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105519190610ca8565b9150828210156105c55761059a736b175474e89094c44da98b954eedeac495271d0f7f00000000000000000000000000000000000000000000000000000000000000005f610736565b6105c4736b175474e89094c44da98b954eedeac495271d0f3384866105bf9190610dba565b610885565b5b5092915050565b736b175474e89094c44da98b954eedeac495271d0f81565b5f808573ffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b86868660405160240161061a93929190610ded565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516106849190610e8e565b5f604051808303815f865af19150503d805f81146106bd576040519150601f19603f3d011682016040523d82523d5f602084013e6106c2565b606091505b50915091508180156106ef57505f815114806106ee5750808060200190518101906106ed9190610ed9565b5b5b61072e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072590610f5e565b60405180910390fd5b505050505050565b5f808473ffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b858560405160240161076a929190610f7c565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516107d49190610e8e565b5f604051808303815f865af19150503d805f811461080d576040519150601f19603f3d011682016040523d82523d5f602084013e610812565b606091505b509150915081801561083f57505f8151148061083e57508080602001905181019061083d9190610ed9565b5b5b61087e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087590610fed565b60405180910390fd5b5050505050565b5f808473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b85856040516024016108b9929190610f7c565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516109239190610e8e565b5f604051808303815f865af19150503d805f811461095c576040519150601f19603f3d011682016040523d82523d5f602084013e610961565b606091505b509150915081801561098e57505f8151148061098d57508080602001905181019061098c9190610ed9565b5b5b6109cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c490611055565b60405180910390fd5b5050505050565b5f62ffffff82169050919050565b6109eb816109d4565b82525050565b5f602082019050610a045f8301846109e2565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610a3382610a0a565b9050919050565b610a4381610a29565b82525050565b5f602082019050610a5c5f830184610a3a565b92915050565b5f80fd5b5f819050919050565b610a7881610a66565b8114610a82575f80fd5b50565b5f81359050610a9381610a6f565b92915050565b5f60208284031215610aae57610aad610a62565b5b5f610abb84828501610a85565b91505092915050565b610acd81610a66565b82525050565b5f602082019050610ae65f830184610ac4565b92915050565b5f819050919050565b5f610b0f610b0a610b0584610a0a565b610aec565b610a0a565b9050919050565b5f610b2082610af5565b9050919050565b5f610b3182610b16565b9050919050565b610b4181610b27565b82525050565b5f602082019050610b5a5f830184610b38565b92915050565b5f8060408385031215610b7657610b75610a62565b5b5f610b8385828601610a85565b9250506020610b9485828601610a85565b9150509250929050565b610ba781610a29565b82525050565b610bb6816109d4565b82525050565b610bc581610a66565b82525050565b610bd481610a0a565b82525050565b61010082015f820151610bef5f850182610b9e565b506020820151610c026020850182610b9e565b506040820151610c156040850182610bad565b506060820151610c286060850182610b9e565b506080820151610c3b6080850182610bbc565b5060a0820151610c4e60a0850182610bbc565b5060c0820151610c6160c0850182610bbc565b5060e0820151610c7460e0850182610bcb565b50505050565b5f61010082019050610c8e5f830184610bda565b92915050565b5f81519050610ca281610a6f565b92915050565b5f60208284031215610cbd57610cbc610a62565b5b5f610cca84828501610c94565b91505092915050565b61010082015f820151610ce85f850182610b9e565b506020820151610cfb6020850182610b9e565b506040820151610d0e6040850182610bad565b506060820151610d216060850182610b9e565b506080820151610d346080850182610bbc565b5060a0820151610d4760a0850182610bbc565b5060c0820151610d5a60c0850182610bbc565b5060e0820151610d6d60e0850182610bcb565b50505050565b5f61010082019050610d875f830184610cd3565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610dc482610a66565b9150610dcf83610a66565b9250828203905081811115610de757610de6610d8d565b5b92915050565b5f606082019050610e005f830186610a3a565b610e0d6020830185610a3a565b610e1a6040830184610ac4565b949350505050565b5f81519050919050565b5f81905092915050565b5f5b83811015610e53578082015181840152602081019050610e38565b5f8484015250505050565b5f610e6882610e22565b610e728185610e2c565b9350610e82818560208601610e36565b80840191505092915050565b5f610e998284610e5e565b915081905092915050565b5f8115159050919050565b610eb881610ea4565b8114610ec2575f80fd5b50565b5f81519050610ed381610eaf565b92915050565b5f60208284031215610eee57610eed610a62565b5b5f610efb84828501610ec5565b91505092915050565b5f82825260208201905092915050565b7f53544600000000000000000000000000000000000000000000000000000000005f82015250565b5f610f48600383610f04565b9150610f5382610f14565b602082019050919050565b5f6020820190508181035f830152610f7581610f3c565b9050919050565b5f604082019050610f8f5f830185610a3a565b610f9c6020830184610ac4565b9392505050565b7f53410000000000000000000000000000000000000000000000000000000000005f82015250565b5f610fd7600283610f04565b9150610fe282610fa3565b602082019050919050565b5f6020820190508181035f83015261100481610fcb565b9050919050565b7f53540000000000000000000000000000000000000000000000000000000000005f82015250565b5f61103f600283610f04565b915061104a8261100b565b602082019050919050565b5f6020820190508181035f83015261106c81611033565b905091905056fea26469706673582212205fca4cf6e42693565f167d14df5fde72c0477ef4e97de8d1db0251bff7dbfa8d64736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x89A30271 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x89A30271 EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0xC4B69A18 EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0xE0BAB4C4 EQ PUSH2 0x157 JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x89FE6AA EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0x4AA4A4FC EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0x73BD43AD EQ PUSH2 0xBB JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x87 PUSH2 0x175 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x9F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA5 PUSH2 0x17B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB2 SWAP2 SWAP1 PUSH2 0xA49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD0 SWAP2 SWAP1 PUSH2 0xA99 JUMP JUMPDEST PUSH2 0x193 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE2 SWAP2 SWAP1 PUSH2 0xAD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF3 PUSH2 0x358 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x100 SWAP2 SWAP1 PUSH2 0xA49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x111 PUSH2 0x370 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0xB47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x141 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13C SWAP2 SWAP1 PUSH2 0xB60 JUMP JUMPDEST PUSH2 0x394 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E SWAP2 SWAP1 PUSH2 0xAD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15F PUSH2 0x5CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0xA49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBB8 DUP2 JUMP JUMPDEST PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x1B4 PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F CALLER ADDRESS DUP6 PUSH2 0x5E4 JUMP JUMPDEST PUSH2 0x1F3 PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F PUSH32 0x0 DUP5 PUSH2 0x736 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBB8 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x414BF389 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x310 SWAP2 SWAP1 PUSH2 0xC7A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x32C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x350 SWAP2 SWAP1 PUSH2 0xCA8 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH20 0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x3B5 PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F CALLER ADDRESS DUP6 PUSH2 0x5E4 JUMP JUMPDEST PUSH2 0x3F4 PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F PUSH32 0x0 DUP5 PUSH2 0x736 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBB8 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDB3E2198 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x511 SWAP2 SWAP1 PUSH2 0xD73 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x52D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x551 SWAP2 SWAP1 PUSH2 0xCA8 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 LT ISZERO PUSH2 0x5C5 JUMPI PUSH2 0x59A PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F PUSH32 0x0 PUSH0 PUSH2 0x736 JUMP JUMPDEST PUSH2 0x5C4 PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F CALLER DUP5 DUP7 PUSH2 0x5BF SWAP2 SWAP1 PUSH2 0xDBA JUMP JUMPDEST PUSH2 0x885 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F DUP2 JUMP JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x61A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x684 SWAP2 SWAP1 PUSH2 0xE8E JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x6BD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x6C2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x6EF JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x6EE JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x6ED SWAP2 SWAP1 PUSH2 0xED9 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x72E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x725 SWAP1 PUSH2 0xF5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x76A SWAP3 SWAP2 SWAP1 PUSH2 0xF7C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x7D4 SWAP2 SWAP1 PUSH2 0xE8E JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x80D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x812 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x83F JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x83E JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x83D SWAP2 SWAP1 PUSH2 0xED9 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x87E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x875 SWAP1 PUSH2 0xFED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x8B9 SWAP3 SWAP2 SWAP1 PUSH2 0xF7C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x923 SWAP2 SWAP1 PUSH2 0xE8E JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x95C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x961 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x98E JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x98D JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x98C SWAP2 SWAP1 PUSH2 0xED9 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x9CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C4 SWAP1 PUSH2 0x1055 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9EB DUP2 PUSH2 0x9D4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA04 PUSH0 DUP4 ADD DUP5 PUSH2 0x9E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA33 DUP3 PUSH2 0xA0A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA43 DUP2 PUSH2 0xA29 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA5C PUSH0 DUP4 ADD DUP5 PUSH2 0xA3A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA78 DUP2 PUSH2 0xA66 JUMP JUMPDEST DUP2 EQ PUSH2 0xA82 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA93 DUP2 PUSH2 0xA6F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAAE JUMPI PUSH2 0xAAD PUSH2 0xA62 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xABB DUP5 DUP3 DUP6 ADD PUSH2 0xA85 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xACD DUP2 PUSH2 0xA66 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAE6 PUSH0 DUP4 ADD DUP5 PUSH2 0xAC4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB0F PUSH2 0xB0A PUSH2 0xB05 DUP5 PUSH2 0xA0A JUMP JUMPDEST PUSH2 0xAEC JUMP JUMPDEST PUSH2 0xA0A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB20 DUP3 PUSH2 0xAF5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB31 DUP3 PUSH2 0xB16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB41 DUP2 PUSH2 0xB27 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB5A PUSH0 DUP4 ADD DUP5 PUSH2 0xB38 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB76 JUMPI PUSH2 0xB75 PUSH2 0xA62 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB83 DUP6 DUP3 DUP7 ADD PUSH2 0xA85 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB94 DUP6 DUP3 DUP7 ADD PUSH2 0xA85 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA7 DUP2 PUSH2 0xA29 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xBB6 DUP2 PUSH2 0x9D4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xBC5 DUP2 PUSH2 0xA66 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xBD4 DUP2 PUSH2 0xA0A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0xBEF PUSH0 DUP6 ADD DUP3 PUSH2 0xB9E JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xC02 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xB9E JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0xC15 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0xBAD JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0xC28 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0xB9E JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0xC3B PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0xBBC JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0xC4E PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0xBBC JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0xC61 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0xBBC JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0xC74 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0xBCB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0xC8E PUSH0 DUP4 ADD DUP5 PUSH2 0xBDA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xCA2 DUP2 PUSH2 0xA6F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCBD JUMPI PUSH2 0xCBC PUSH2 0xA62 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCCA DUP5 DUP3 DUP6 ADD PUSH2 0xC94 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0xCE8 PUSH0 DUP6 ADD DUP3 PUSH2 0xB9E JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xCFB PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xB9E JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0xD0E PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0xBAD JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0xD21 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0xB9E JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0xD34 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0xBBC JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0xD47 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0xBBC JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0xD5A PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0xBBC JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0xD6D PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0xBCB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0xD87 PUSH0 DUP4 ADD DUP5 PUSH2 0xCD3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xDC4 DUP3 PUSH2 0xA66 JUMP JUMPDEST SWAP2 POP PUSH2 0xDCF DUP4 PUSH2 0xA66 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xDE7 JUMPI PUSH2 0xDE6 PUSH2 0xD8D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xE00 PUSH0 DUP4 ADD DUP7 PUSH2 0xA3A JUMP JUMPDEST PUSH2 0xE0D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xA3A JUMP JUMPDEST PUSH2 0xE1A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xAC4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE53 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xE38 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE68 DUP3 PUSH2 0xE22 JUMP JUMPDEST PUSH2 0xE72 DUP2 DUP6 PUSH2 0xE2C JUMP JUMPDEST SWAP4 POP PUSH2 0xE82 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xE36 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE99 DUP3 DUP5 PUSH2 0xE5E JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEB8 DUP2 PUSH2 0xEA4 JUMP JUMPDEST DUP2 EQ PUSH2 0xEC2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xED3 DUP2 PUSH2 0xEAF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEEE JUMPI PUSH2 0xEED PUSH2 0xA62 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xEFB DUP5 DUP3 DUP6 ADD PUSH2 0xEC5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5354460000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF48 PUSH1 0x3 DUP4 PUSH2 0xF04 JUMP JUMPDEST SWAP2 POP PUSH2 0xF53 DUP3 PUSH2 0xF14 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF75 DUP2 PUSH2 0xF3C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF8F PUSH0 DUP4 ADD DUP6 PUSH2 0xA3A JUMP JUMPDEST PUSH2 0xF9C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xAC4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5341000000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xFD7 PUSH1 0x2 DUP4 PUSH2 0xF04 JUMP JUMPDEST SWAP2 POP PUSH2 0xFE2 DUP3 PUSH2 0xFA3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1004 DUP2 PUSH2 0xFCB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5354000000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x103F PUSH1 0x2 DUP4 PUSH2 0xF04 JUMP JUMPDEST SWAP2 POP PUSH2 0x104A DUP3 PUSH2 0x100B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x106C DUP2 PUSH2 0x1033 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH0 0xCA 0x4C 0xF6 0xE4 0x26 SWAP4 JUMP PUSH0 AND PUSH30 0x14DF5FDE72C0477EF4E97DE8D1DB0251BFF7DBFA8D64736F6C6343000815 STOP CALLER ",
							"sourceMap": "238:2552:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;624:37;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;401:74;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;758:847;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;482:73;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;272:39;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1613:1174;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;322:72;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;624:37;657:4;624:37;:::o;401:74::-;433:42;401:74;:::o;758:847::-;824:17;860:73;352:42;897:10;917:4;924:8;860:31;:73::i;:::-;991:62;352:42;1031:10;1044:8;991:26;:62::i;:::-;1066:48;1130:345;;;;;;;;352:42;1130:345;;;;;;433:42;1130:345;;;;;;657:4;1130:345;;;;;;1291:10;1130:345;;;;;;1330:15;1130:345;;;;1374:8;1130:345;;;;1419:1;1130:345;;;;1458:1;1130:345;;;;;1066:409;;1562:10;:27;;;1590:6;1562:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1550:47;;843:762;758:847;;;:::o;482:73::-;513:42;482:73;:::o;272:39::-;;;:::o;1613:1174::-;1706:16;1802:80;352:42;1839:10;1859:4;1866:15;1802:31;:80::i;:::-;1895:69;352:42;1935:10;1948:15;1895:26;:69::i;:::-;1977:49;2042:361;;;;;;;;352:42;2042:361;;;;;;433:42;2042:361;;;;;;657:4;2042:361;;;;;;2204:10;2042:361;;;;;;2243:15;2042:361;;;;2288:9;2042:361;;;;2333:15;2042:361;;;;2386:1;2042:361;;;;;1977:426;;2530:10;:28;;;2559:6;2530:36;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2519:47;;2594:15;2583:8;:26;2579:201;;;2626:55;352:42;2666:10;2679:1;2626:26;:55::i;:::-;2696:72;352:42;2729:10;2759:8;2741:15;:26;;;;:::i;:::-;2696:27;:72::i;:::-;2579:201;1724:1063;1613:1174;;;;:::o;322:72::-;352:42;322:72;:::o;561:358:3:-;701:12;715:17;748:5;:10;;782:28;;;812:4;818:2;822:5;759:69;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;748:81;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;700:129;;;;847:7;:57;;;;;874:1;859:4;:11;:16;:44;;;;890:4;879:24;;;;;;;;;;;;:::i;:::-;859:44;847:57;839:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;690:229;;561:358;;;;:::o;1873:307::-;1986:12;2000:17;2021:5;:10;;2055:23;;;2080:2;2084:5;2032:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2021:70;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1985:106;;;;2109:7;:57;;;;;2136:1;2121:4;:11;:16;:44;;;;2152:4;2141:24;;;;;;;;;;;;:::i;:::-;2121:44;2109:57;2101:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;1975:205;;1873:307;;;:::o;1211:309::-;1325:12;1339:17;1360:5;:10;;1394:24;;;1420:2;1424:5;1371:59;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1360:71;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1324:107;;;;1449:7;:57;;;;;1476:1;1461:4;:11;:16;:44;;;;1492:4;1481:24;;;;;;;;;;;;:::i;:::-;1461:44;1449:57;1441:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;1314:206;;1211:309;;;:::o;7:91:5:-;43:7;83:8;76:5;72:20;61:31;;7:91;;;:::o;104:115::-;189:23;206:5;189:23;:::i;:::-;184:3;177:36;104:115;;:::o;225:218::-;316:4;354:2;343:9;339:18;331:26;;367:69;433:1;422:9;418:17;409:6;367:69;:::i;:::-;225:218;;;;:::o;449:126::-;486:7;526:42;519:5;515:54;504:65;;449:126;;;:::o;581:96::-;618:7;647:24;665:5;647:24;:::i;:::-;636:35;;581:96;;;:::o;683:118::-;770:24;788:5;770:24;:::i;:::-;765:3;758:37;683:118;;:::o;807:222::-;900:4;938:2;927:9;923:18;915:26;;951:71;1019:1;1008:9;1004:17;995:6;951:71;:::i;:::-;807:222;;;;:::o;1116:117::-;1225:1;1222;1215:12;1362:77;1399:7;1428:5;1417:16;;1362:77;;;:::o;1445:122::-;1518:24;1536:5;1518:24;:::i;:::-;1511:5;1508:35;1498:63;;1557:1;1554;1547:12;1498:63;1445:122;:::o;1573:139::-;1619:5;1657:6;1644:20;1635:29;;1673:33;1700:5;1673:33;:::i;:::-;1573:139;;;;:::o;1718:329::-;1777:6;1826:2;1814:9;1805:7;1801:23;1797:32;1794:119;;;1832:79;;:::i;:::-;1794:119;1952:1;1977:53;2022:7;2013:6;2002:9;1998:22;1977:53;:::i;:::-;1967:63;;1923:117;1718:329;;;;:::o;2053:118::-;2140:24;2158:5;2140:24;:::i;:::-;2135:3;2128:37;2053:118;;:::o;2177:222::-;2270:4;2308:2;2297:9;2293:18;2285:26;;2321:71;2389:1;2378:9;2374:17;2365:6;2321:71;:::i;:::-;2177:222;;;;:::o;2405:60::-;2433:3;2454:5;2447:12;;2405:60;;;:::o;2471:142::-;2521:9;2554:53;2572:34;2581:24;2599:5;2581:24;:::i;:::-;2572:34;:::i;:::-;2554:53;:::i;:::-;2541:66;;2471:142;;;:::o;2619:126::-;2669:9;2702:37;2733:5;2702:37;:::i;:::-;2689:50;;2619:126;;;:::o;2751:145::-;2820:9;2853:37;2884:5;2853:37;:::i;:::-;2840:50;;2751:145;;;:::o;2902:169::-;3008:56;3058:5;3008:56;:::i;:::-;3003:3;2996:69;2902:169;;:::o;3077:260::-;3189:4;3227:2;3216:9;3212:18;3204:26;;3240:90;3327:1;3316:9;3312:17;3303:6;3240:90;:::i;:::-;3077:260;;;;:::o;3343:474::-;3411:6;3419;3468:2;3456:9;3447:7;3443:23;3439:32;3436:119;;;3474:79;;:::i;:::-;3436:119;3594:1;3619:53;3664:7;3655:6;3644:9;3640:22;3619:53;:::i;:::-;3609:63;;3565:117;3721:2;3747:53;3792:7;3783:6;3772:9;3768:22;3747:53;:::i;:::-;3737:63;;3692:118;3343:474;;;;;:::o;3823:108::-;3900:24;3918:5;3900:24;:::i;:::-;3895:3;3888:37;3823:108;;:::o;3937:105::-;4012:23;4029:5;4012:23;:::i;:::-;4007:3;4000:36;3937:105;;:::o;4048:108::-;4125:24;4143:5;4125:24;:::i;:::-;4120:3;4113:37;4048:108;;:::o;4162:::-;4239:24;4257:5;4239:24;:::i;:::-;4234:3;4227:37;4162:108;;:::o;4370:1623::-;4545:6;4540:3;4536:16;4637:4;4630:5;4626:16;4620:23;4656:63;4713:4;4708:3;4704:14;4690:12;4656:63;:::i;:::-;4562:167;4815:4;4808:5;4804:16;4798:23;4834:63;4891:4;4886:3;4882:14;4868:12;4834:63;:::i;:::-;4739:168;4988:4;4981:5;4977:16;4971:23;5007:61;5062:4;5057:3;5053:14;5039:12;5007:61;:::i;:::-;4917:161;5165:4;5158:5;5154:16;5148:23;5184:63;5241:4;5236:3;5232:14;5218:12;5184:63;:::i;:::-;5088:169;5343:4;5336:5;5332:16;5326:23;5362:63;5419:4;5414:3;5410:14;5396:12;5362:63;:::i;:::-;5267:168;5521:4;5514:5;5510:16;5504:23;5540:63;5597:4;5592:3;5588:14;5574:12;5540:63;:::i;:::-;5445:168;5707:4;5700:5;5696:16;5690:23;5726:63;5783:4;5778:3;5774:14;5760:12;5726:63;:::i;:::-;5623:176;5894:4;5887:5;5883:16;5877:23;5913:63;5970:4;5965:3;5961:14;5947:12;5913:63;:::i;:::-;5809:177;4514:1479;4370:1623;;:::o;5999:379::-;6170:4;6208:3;6197:9;6193:19;6185:27;;6222:149;6368:1;6357:9;6353:17;6344:6;6222:149;:::i;:::-;5999:379;;;;:::o;6384:143::-;6441:5;6472:6;6466:13;6457:22;;6488:33;6515:5;6488:33;:::i;:::-;6384:143;;;;:::o;6533:351::-;6603:6;6652:2;6640:9;6631:7;6627:23;6623:32;6620:119;;;6658:79;;:::i;:::-;6620:119;6778:1;6803:64;6859:7;6850:6;6839:9;6835:22;6803:64;:::i;:::-;6793:74;;6749:128;6533:351;;;;:::o;6986:1625::-;7163:6;7158:3;7154:16;7255:4;7248:5;7244:16;7238:23;7274:63;7331:4;7326:3;7322:14;7308:12;7274:63;:::i;:::-;7180:167;7433:4;7426:5;7422:16;7416:23;7452:63;7509:4;7504:3;7500:14;7486:12;7452:63;:::i;:::-;7357:168;7606:4;7599:5;7595:16;7589:23;7625:61;7680:4;7675:3;7671:14;7657:12;7625:61;:::i;:::-;7535:161;7783:4;7776:5;7772:16;7766:23;7802:63;7859:4;7854:3;7850:14;7836:12;7802:63;:::i;:::-;7706:169;7961:4;7954:5;7950:16;7944:23;7980:63;8037:4;8032:3;8028:14;8014:12;7980:63;:::i;:::-;7885:168;8140:4;8133:5;8129:16;8123:23;8159:63;8216:4;8211:3;8207:14;8193:12;8159:63;:::i;:::-;8063:169;8325:4;8318:5;8314:16;8308:23;8344:63;8401:4;8396:3;8392:14;8378:12;8344:63;:::i;:::-;8242:175;8512:4;8505:5;8501:16;8495:23;8531:63;8588:4;8583:3;8579:14;8565:12;8531:63;:::i;:::-;8427:177;7132:1479;6986:1625;;:::o;8617:383::-;8790:4;8828:3;8817:9;8813:19;8805:27;;8842:151;8990:1;8979:9;8975:17;8966:6;8842:151;:::i;:::-;8617:383;;;;:::o;9006:180::-;9054:77;9051:1;9044:88;9151:4;9148:1;9141:15;9175:4;9172:1;9165:15;9192:194;9232:4;9252:20;9270:1;9252:20;:::i;:::-;9247:25;;9286:20;9304:1;9286:20;:::i;:::-;9281:25;;9330:1;9327;9323:9;9315:17;;9354:1;9348:4;9345:11;9342:37;;;9359:18;;:::i;:::-;9342:37;9192:194;;;;:::o;9392:442::-;9541:4;9579:2;9568:9;9564:18;9556:26;;9592:71;9660:1;9649:9;9645:17;9636:6;9592:71;:::i;:::-;9673:72;9741:2;9730:9;9726:18;9717:6;9673:72;:::i;:::-;9755;9823:2;9812:9;9808:18;9799:6;9755:72;:::i;:::-;9392:442;;;;;;:::o;9840:98::-;9891:6;9925:5;9919:12;9909:22;;9840:98;;;:::o;9944:147::-;10045:11;10082:3;10067:18;;9944:147;;;;:::o;10097:246::-;10178:1;10188:113;10202:6;10199:1;10196:13;10188:113;;;10287:1;10282:3;10278:11;10272:18;10268:1;10263:3;10259:11;10252:39;10224:2;10221:1;10217:10;10212:15;;10188:113;;;10335:1;10326:6;10321:3;10317:16;10310:27;10159:184;10097:246;;;:::o;10349:386::-;10453:3;10481:38;10513:5;10481:38;:::i;:::-;10535:88;10616:6;10611:3;10535:88;:::i;:::-;10528:95;;10632:65;10690:6;10685:3;10678:4;10671:5;10667:16;10632:65;:::i;:::-;10722:6;10717:3;10713:16;10706:23;;10457:278;10349:386;;;;:::o;10741:271::-;10871:3;10893:93;10982:3;10973:6;10893:93;:::i;:::-;10886:100;;11003:3;10996:10;;10741:271;;;;:::o;11018:90::-;11052:7;11095:5;11088:13;11081:21;11070:32;;11018:90;;;:::o;11114:116::-;11184:21;11199:5;11184:21;:::i;:::-;11177:5;11174:32;11164:60;;11220:1;11217;11210:12;11164:60;11114:116;:::o;11236:137::-;11290:5;11321:6;11315:13;11306:22;;11337:30;11361:5;11337:30;:::i;:::-;11236:137;;;;:::o;11379:345::-;11446:6;11495:2;11483:9;11474:7;11470:23;11466:32;11463:119;;;11501:79;;:::i;:::-;11463:119;11621:1;11646:61;11699:7;11690:6;11679:9;11675:22;11646:61;:::i;:::-;11636:71;;11592:125;11379:345;;;;:::o;11730:169::-;11814:11;11848:6;11843:3;11836:19;11888:4;11883:3;11879:14;11864:29;;11730:169;;;;:::o;11905:153::-;12045:5;12041:1;12033:6;12029:14;12022:29;11905:153;:::o;12064:365::-;12206:3;12227:66;12291:1;12286:3;12227:66;:::i;:::-;12220:73;;12302:93;12391:3;12302:93;:::i;:::-;12420:2;12415:3;12411:12;12404:19;;12064:365;;;:::o;12435:419::-;12601:4;12639:2;12628:9;12624:18;12616:26;;12688:9;12682:4;12678:20;12674:1;12663:9;12659:17;12652:47;12716:131;12842:4;12716:131;:::i;:::-;12708:139;;12435:419;;;:::o;12860:332::-;12981:4;13019:2;13008:9;13004:18;12996:26;;13032:71;13100:1;13089:9;13085:17;13076:6;13032:71;:::i;:::-;13113:72;13181:2;13170:9;13166:18;13157:6;13113:72;:::i;:::-;12860:332;;;;;:::o;13198:152::-;13338:4;13334:1;13326:6;13322:14;13315:28;13198:152;:::o;13356:365::-;13498:3;13519:66;13583:1;13578:3;13519:66;:::i;:::-;13512:73;;13594:93;13683:3;13594:93;:::i;:::-;13712:2;13707:3;13703:12;13696:19;;13356:365;;;:::o;13727:419::-;13893:4;13931:2;13920:9;13916:18;13908:26;;13980:9;13974:4;13970:20;13966:1;13955:9;13951:17;13944:47;14008:131;14134:4;14008:131;:::i;:::-;14000:139;;13727:419;;;:::o;14152:152::-;14292:4;14288:1;14280:6;14276:14;14269:28;14152:152;:::o;14310:365::-;14452:3;14473:66;14537:1;14532:3;14473:66;:::i;:::-;14466:73;;14548:93;14637:3;14548:93;:::i;:::-;14666:2;14661:3;14657:12;14650:19;;14310:365;;;:::o;14681:419::-;14847:4;14885:2;14874:9;14870:18;14862:26;;14934:9;14928:4;14924:20;14920:1;14909:9;14905:17;14898:47;14962:131;15088:4;14962:131;:::i;:::-;14954:139;;14681:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "853000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DAI()": "439",
								"USDC()": "373",
								"WETH9()": "396",
								"poolFee()": "332",
								"swapExactInputSingle(uint256)": "infinite",
								"swapExactOutputSingle(uint256,uint256)": "infinite",
								"swapRouter()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 238,
									"end": 2790,
									"name": "PUSH",
									"source": 4,
									"value": "A0"
								},
								{
									"begin": 238,
									"end": 2790,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 238,
									"end": 2790,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 670,
									"end": 750,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 670,
									"end": 750,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 670,
									"end": 750,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 670,
									"end": 750,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 670,
									"end": 750,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 670,
									"end": 750,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 750,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 670,
									"end": 750,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 670,
									"end": 750,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 670,
									"end": 750,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 670,
									"end": 750,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 670,
									"end": 750,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 670,
									"end": 750,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 670,
									"end": 750,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 670,
									"end": 750,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 670,
									"end": 750,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 670,
									"end": 750,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 670,
									"end": 750,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 670,
									"end": 750,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 670,
									"end": 750,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 670,
									"end": 750,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 670,
									"end": 750,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 670,
									"end": 750,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 670,
									"end": 750,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 670,
									"end": 750,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 670,
									"end": 750,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 670,
									"end": 750,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 670,
									"end": 750,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 670,
									"end": 750,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 670,
									"end": 750,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 670,
									"end": 750,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 670,
									"end": 750,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 670,
									"end": 750,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 670,
									"end": 750,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 670,
									"end": 750,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 731,
									"end": 742,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 718,
									"end": 742,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 718,
									"end": 742,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 718,
									"end": 742,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 718,
									"end": 742,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 718,
									"end": 742,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 718,
									"end": 742,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 718,
									"end": 742,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 718,
									"end": 742,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 718,
									"end": 742,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 718,
									"end": 742,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 670,
									"end": 750,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 238,
									"end": 2790,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 238,
									"end": 2790,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 683,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 683,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 624,
									"end": 631,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 653,
									"end": 677,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 671,
									"end": 676,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 653,
									"end": 677,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 653,
									"end": 677,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 653,
									"end": 677,
									"name": "tag",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 653,
									"end": 677,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 642,
									"end": 677,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 642,
									"end": 677,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 683,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 568,
									"end": 683,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 568,
									"end": 683,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 683,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 689,
									"end": 849,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 689,
									"end": 849,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 781,
									"end": 824,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 818,
									"end": 823,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 781,
									"end": 824,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 781,
									"end": 824,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 781,
									"end": 824,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 781,
									"end": 824,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 774,
									"end": 779,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 771,
									"end": 825,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 761,
									"end": 843,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 761,
									"end": 843,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 839,
									"end": 840,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 836,
									"end": 837,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 829,
									"end": 841,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 761,
									"end": 843,
									"name": "tag",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 761,
									"end": 843,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 689,
									"end": 849,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 689,
									"end": 849,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 931,
									"end": 936,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 962,
									"end": 968,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 956,
									"end": 969,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 947,
									"end": 969,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 947,
									"end": 969,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 978,
									"end": 1030,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 1024,
									"end": 1029,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 978,
									"end": 1030,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 978,
									"end": 1030,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 978,
									"end": 1030,
									"name": "tag",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 978,
									"end": 1030,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 855,
									"end": 1036,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1431,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1042,
									"end": 1431,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1131,
									"end": 1137,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1180,
									"end": 1182,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1159,
									"end": 1166,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1155,
									"end": 1178,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1151,
									"end": 1183,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 1148,
									"end": 1267,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1148,
									"end": 1267,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 1148,
									"end": 1267,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1186,
									"end": 1265,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 1186,
									"end": 1265,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1186,
									"end": 1265,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1186,
									"end": 1265,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 1186,
									"end": 1265,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1148,
									"end": 1267,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 1148,
									"end": 1267,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1306,
									"end": 1307,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1331,
									"end": 1414,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1406,
									"end": 1413,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1397,
									"end": 1403,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1386,
									"end": 1395,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1382,
									"end": 1404,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1331,
									"end": 1414,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 1331,
									"end": 1414,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1331,
									"end": 1414,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1331,
									"end": 1414,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1321,
									"end": 1414,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1321,
									"end": 1414,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1277,
									"end": 1424,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1431,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1431,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1431,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1431,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1431,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 238,
									"end": 2790,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 238,
									"end": 2790,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 238,
									"end": 2790,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 238,
									"end": 2790,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 238,
									"end": 2790,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 238,
									"end": 2790,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 238,
									"end": 2790,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 238,
									"end": 2790,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 238,
									"end": 2790,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 238,
									"end": 2790,
									"name": "ASSIGNIMMUTABLE",
									"source": 4,
									"value": "370"
								},
								{
									"begin": 238,
									"end": 2790,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 238,
									"end": 2790,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 238,
									"end": 2790,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205fca4cf6e42693565f167d14df5fde72c0477ef4e97de8d1db0251bff7dbfa8d64736f6c63430008150033",
									".code": [
										{
											"begin": 238,
											"end": 2790,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "PUSH",
											"source": 4,
											"value": "89A30271"
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "PUSH",
											"source": 4,
											"value": "89A30271"
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "PUSH",
											"source": 4,
											"value": "C31C9C07"
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "PUSH",
											"source": 4,
											"value": "C4B69A18"
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "PUSH",
											"source": 4,
											"value": "E0BAB4C4"
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "PUSH",
											"source": 4,
											"value": "89FE6AA"
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "PUSH",
											"source": 4,
											"value": "4AA4A4FC"
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "PUSH",
											"source": 4,
											"value": "73BD43AD"
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2790,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 624,
											"end": 661,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 624,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 624,
											"end": 661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 624,
											"end": 661,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 624,
											"end": 661,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 624,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 624,
											"end": 661,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 624,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 624,
											"end": 661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 624,
											"end": 661,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 624,
											"end": 661,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 624,
											"end": 661,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 624,
											"end": 661,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 624,
											"end": 661,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 624,
											"end": 661,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 624,
											"end": 661,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 401,
											"end": 475,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 401,
											"end": 475,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 401,
											"end": 475,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 401,
											"end": 475,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 401,
											"end": 475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 401,
											"end": 475,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 401,
											"end": 475,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 401,
											"end": 475,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 401,
											"end": 475,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 401,
											"end": 475,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 401,
											"end": 475,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 401,
											"end": 475,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 401,
											"end": 475,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 401,
											"end": 475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 401,
											"end": 475,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 401,
											"end": 475,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 401,
											"end": 475,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 401,
											"end": 475,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 401,
											"end": 475,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 401,
											"end": 475,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 401,
											"end": 475,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 401,
											"end": 475,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 401,
											"end": 475,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 758,
											"end": 1605,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 758,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 758,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 758,
											"end": 1605,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 758,
											"end": 1605,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 758,
											"end": 1605,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 758,
											"end": 1605,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 758,
											"end": 1605,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 758,
											"end": 1605,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 758,
											"end": 1605,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 758,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 758,
											"end": 1605,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 758,
											"end": 1605,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 758,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 758,
											"end": 1605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 758,
											"end": 1605,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 758,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 758,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 758,
											"end": 1605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 758,
											"end": 1605,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 758,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 758,
											"end": 1605,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 758,
											"end": 1605,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 758,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 758,
											"end": 1605,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 758,
											"end": 1605,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 758,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 758,
											"end": 1605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 758,
											"end": 1605,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 758,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 758,
											"end": 1605,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 758,
											"end": 1605,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 758,
											"end": 1605,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 758,
											"end": 1605,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 758,
											"end": 1605,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 758,
											"end": 1605,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 758,
											"end": 1605,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 482,
											"end": 555,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 482,
											"end": 555,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 482,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 482,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 482,
											"end": 555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 482,
											"end": 555,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 482,
											"end": 555,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 482,
											"end": 555,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 555,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 482,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 482,
											"end": 555,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 482,
											"end": 555,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 482,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 482,
											"end": 555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 482,
											"end": 555,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 482,
											"end": 555,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 482,
											"end": 555,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 555,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 482,
											"end": 555,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 482,
											"end": 555,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 482,
											"end": 555,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 482,
											"end": 555,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 482,
											"end": 555,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 272,
											"end": 311,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 272,
											"end": 311,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 272,
											"end": 311,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 272,
											"end": 311,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 272,
											"end": 311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 272,
											"end": 311,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 272,
											"end": 311,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 272,
											"end": 311,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 272,
											"end": 311,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 272,
											"end": 311,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 272,
											"end": 311,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 272,
											"end": 311,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 272,
											"end": 311,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 272,
											"end": 311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 272,
											"end": 311,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 272,
											"end": 311,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 272,
											"end": 311,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 272,
											"end": 311,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 272,
											"end": 311,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 272,
											"end": 311,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 272,
											"end": 311,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 272,
											"end": 311,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 272,
											"end": 311,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1613,
											"end": 2787,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 1613,
											"end": 2787,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1613,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1613,
											"end": 2787,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1613,
											"end": 2787,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1613,
											"end": 2787,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1613,
											"end": 2787,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1613,
											"end": 2787,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1613,
											"end": 2787,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1613,
											"end": 2787,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1613,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1613,
											"end": 2787,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1613,
											"end": 2787,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1613,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1613,
											"end": 2787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1613,
											"end": 2787,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1613,
											"end": 2787,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1613,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 1613,
											"end": 2787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1613,
											"end": 2787,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1613,
											"end": 2787,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1613,
											"end": 2787,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1613,
											"end": 2787,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1613,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 1613,
											"end": 2787,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1613,
											"end": 2787,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1613,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1613,
											"end": 2787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1613,
											"end": 2787,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 1613,
											"end": 2787,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1613,
											"end": 2787,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1613,
											"end": 2787,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1613,
											"end": 2787,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1613,
											"end": 2787,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1613,
											"end": 2787,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1613,
											"end": 2787,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1613,
											"end": 2787,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 322,
											"end": 394,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 322,
											"end": 394,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 322,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 322,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 322,
											"end": 394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 322,
											"end": 394,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 322,
											"end": 394,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 322,
											"end": 394,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 322,
											"end": 394,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 322,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 322,
											"end": 394,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 322,
											"end": 394,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 322,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 322,
											"end": 394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 322,
											"end": 394,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 322,
											"end": 394,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 322,
											"end": 394,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 322,
											"end": 394,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 322,
											"end": 394,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 322,
											"end": 394,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 322,
											"end": 394,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 322,
											"end": 394,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 322,
											"end": 394,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 624,
											"end": 661,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 657,
											"end": 661,
											"name": "PUSH",
											"source": 4,
											"value": "BB8"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 624,
											"end": 661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 401,
											"end": 475,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 401,
											"end": 475,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 433,
											"end": 475,
											"name": "PUSH",
											"source": 4,
											"value": "C02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2"
										},
										{
											"begin": 401,
											"end": 475,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 401,
											"end": 475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 758,
											"end": 1605,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 758,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 824,
											"end": 841,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 860,
											"end": 933,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 352,
											"end": 394,
											"name": "PUSH",
											"source": 4,
											"value": "6B175474E89094C44DA98B954EEDEAC495271D0F"
										},
										{
											"begin": 897,
											"end": 907,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 917,
											"end": 921,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 924,
											"end": 932,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 860,
											"end": 891,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 860,
											"end": 933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 860,
											"end": 933,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 860,
											"end": 933,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 352,
											"end": 394,
											"name": "PUSH",
											"source": 4,
											"value": "6B175474E89094C44DA98B954EEDEAC495271D0F"
										},
										{
											"begin": 1031,
											"end": 1041,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "370"
										},
										{
											"begin": 1044,
											"end": 1052,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 991,
											"end": 1053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1053,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 991,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1114,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1130,
											"end": 1475,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1130,
											"end": 1475,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1475,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1475,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1130,
											"end": 1475,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1475,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1130,
											"end": 1475,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1475,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 352,
											"end": 394,
											"name": "PUSH",
											"source": 4,
											"value": "6B175474E89094C44DA98B954EEDEAC495271D0F"
										},
										{
											"begin": 1130,
											"end": 1475,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1130,
											"end": 1475,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1475,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1475,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1475,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1130,
											"end": 1475,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 433,
											"end": 475,
											"name": "PUSH",
											"source": 4,
											"value": "C02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2"
										},
										{
											"begin": 1130,
											"end": 1475,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1130,
											"end": 1475,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1475,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1475,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1475,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1130,
											"end": 1475,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 657,
											"end": 661,
											"name": "PUSH",
											"source": 4,
											"value": "BB8"
										},
										{
											"begin": 1130,
											"end": 1475,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFF"
										},
										{
											"begin": 1130,
											"end": 1475,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1475,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1475,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1475,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1130,
											"end": 1475,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1291,
											"end": 1301,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1475,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1130,
											"end": 1475,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1475,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1475,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1475,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1130,
											"end": 1475,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1330,
											"end": 1345,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1475,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1475,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1475,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1130,
											"end": 1475,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1374,
											"end": 1382,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1475,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1475,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1475,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1130,
											"end": 1475,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1419,
											"end": 1420,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1130,
											"end": 1475,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1475,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1475,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1130,
											"end": 1475,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1458,
											"end": 1459,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1130,
											"end": 1475,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1130,
											"end": 1475,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1475,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1475,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1475,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1475,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1475,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1572,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "370"
										},
										{
											"begin": 1562,
											"end": 1589,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1562,
											"end": 1589,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1589,
											"name": "PUSH",
											"source": 4,
											"value": "414BF389"
										},
										{
											"begin": 1590,
											"end": 1596,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1562,
											"end": 1597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1562,
											"end": 1597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1562,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1550,
											"end": 1597,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1550,
											"end": 1597,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 843,
											"end": 1605,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 758,
											"end": 1605,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 758,
											"end": 1605,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 758,
											"end": 1605,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 758,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 482,
											"end": 555,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 482,
											"end": 555,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 513,
											"end": 555,
											"name": "PUSH",
											"source": 4,
											"value": "A0B86991C6218B36C1D19D4A2E9EB0CE3606EB48"
										},
										{
											"begin": 482,
											"end": 555,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 482,
											"end": 555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 272,
											"end": 311,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 272,
											"end": 311,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 272,
											"end": 311,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "370"
										},
										{
											"begin": 272,
											"end": 311,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 272,
											"end": 311,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1613,
											"end": 2787,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 1613,
											"end": 2787,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1706,
											"end": 1722,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1802,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 352,
											"end": 394,
											"name": "PUSH",
											"source": 4,
											"value": "6B175474E89094C44DA98B954EEDEAC495271D0F"
										},
										{
											"begin": 1839,
											"end": 1849,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1859,
											"end": 1863,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1866,
											"end": 1881,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1802,
											"end": 1833,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 1802,
											"end": 1882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1802,
											"end": 1882,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1802,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1895,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 352,
											"end": 394,
											"name": "PUSH",
											"source": 4,
											"value": "6B175474E89094C44DA98B954EEDEAC495271D0F"
										},
										{
											"begin": 1935,
											"end": 1945,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "370"
										},
										{
											"begin": 1948,
											"end": 1963,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1895,
											"end": 1921,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1895,
											"end": 1964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1895,
											"end": 1964,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1895,
											"end": 1964,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1977,
											"end": 2026,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2042,
											"end": 2403,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2042,
											"end": 2403,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2403,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2403,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2042,
											"end": 2403,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2403,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2042,
											"end": 2403,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2403,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 352,
											"end": 394,
											"name": "PUSH",
											"source": 4,
											"value": "6B175474E89094C44DA98B954EEDEAC495271D0F"
										},
										{
											"begin": 2042,
											"end": 2403,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2042,
											"end": 2403,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2403,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2403,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2403,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2042,
											"end": 2403,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 433,
											"end": 475,
											"name": "PUSH",
											"source": 4,
											"value": "C02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2"
										},
										{
											"begin": 2042,
											"end": 2403,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2042,
											"end": 2403,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2403,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2403,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2403,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2042,
											"end": 2403,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 657,
											"end": 661,
											"name": "PUSH",
											"source": 4,
											"value": "BB8"
										},
										{
											"begin": 2042,
											"end": 2403,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFF"
										},
										{
											"begin": 2042,
											"end": 2403,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2403,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2403,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2403,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2042,
											"end": 2403,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2204,
											"end": 2214,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2403,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2042,
											"end": 2403,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2403,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2403,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2403,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2042,
											"end": 2403,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2243,
											"end": 2258,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2403,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2403,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2403,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2042,
											"end": 2403,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2288,
											"end": 2297,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2403,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2403,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2403,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2042,
											"end": 2403,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2348,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2403,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2403,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2403,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2042,
											"end": 2403,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2386,
											"end": 2387,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2042,
											"end": 2403,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2042,
											"end": 2403,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2403,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2403,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2403,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1977,
											"end": 2403,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1977,
											"end": 2403,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2540,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "370"
										},
										{
											"begin": 2530,
											"end": 2558,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2530,
											"end": 2558,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2558,
											"name": "PUSH",
											"source": 4,
											"value": "DB3E2198"
										},
										{
											"begin": 2559,
											"end": 2565,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 2530,
											"end": 2566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 2530,
											"end": 2566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2519,
											"end": 2566,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2519,
											"end": 2566,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2594,
											"end": 2609,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2583,
											"end": 2591,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2583,
											"end": 2609,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2579,
											"end": 2780,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2579,
											"end": 2780,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2579,
											"end": 2780,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2626,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 352,
											"end": 394,
											"name": "PUSH",
											"source": 4,
											"value": "6B175474E89094C44DA98B954EEDEAC495271D0F"
										},
										{
											"begin": 2666,
											"end": 2676,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "370"
										},
										{
											"begin": 2679,
											"end": 2680,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2626,
											"end": 2652,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2626,
											"end": 2681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2626,
											"end": 2681,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2626,
											"end": 2681,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2696,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 352,
											"end": 394,
											"name": "PUSH",
											"source": 4,
											"value": "6B175474E89094C44DA98B954EEDEAC495271D0F"
										},
										{
											"begin": 2729,
											"end": 2739,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2759,
											"end": 2767,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2756,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 2741,
											"end": 2767,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2767,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 2741,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2767,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 2741,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2696,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2696,
											"end": 2768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2696,
											"end": 2768,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2696,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2579,
											"end": 2780,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2579,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1724,
											"end": 2787,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1613,
											"end": 2787,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1613,
											"end": 2787,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1613,
											"end": 2787,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1613,
											"end": 2787,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1613,
											"end": 2787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 322,
											"end": 394,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 322,
											"end": 394,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 352,
											"end": 394,
											"name": "PUSH",
											"source": 4,
											"value": "6B175474E89094C44DA98B954EEDEAC495271D0F"
										},
										{
											"begin": 322,
											"end": 394,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 322,
											"end": 394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 561,
											"end": 919,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 561,
											"end": 919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 701,
											"end": 713,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 715,
											"end": 732,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 748,
											"end": 753,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 748,
											"end": 758,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 748,
											"end": 758,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 782,
											"end": 810,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 782,
											"end": 810,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 782,
											"end": 810,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 812,
											"end": 816,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 818,
											"end": 820,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 822,
											"end": 827,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 759,
											"end": 828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 748,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 700,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 700,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 700,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 700,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 847,
											"end": 854,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 847,
											"end": 904,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 847,
											"end": 904,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 847,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 847,
											"end": 904,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 847,
											"end": 904,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 874,
											"end": 875,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 859,
											"end": 863,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 859,
											"end": 870,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 859,
											"end": 875,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 859,
											"end": 903,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 859,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 859,
											"end": 903,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 859,
											"end": 903,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 890,
											"end": 894,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 879,
											"end": 903,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 879,
											"end": 903,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 879,
											"end": 903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 879,
											"end": 903,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 859,
											"end": 903,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 859,
											"end": 903,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 847,
											"end": 904,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 847,
											"end": 904,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 839,
											"end": 912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 690,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 561,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 561,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 561,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 561,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 561,
											"end": 919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1986,
											"end": 1998,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2000,
											"end": 2017,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2031,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2021,
											"end": 2031,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2055,
											"end": 2078,
											"name": "PUSH",
											"source": 3,
											"value": "95EA7B3"
										},
										{
											"begin": 2055,
											"end": 2078,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2055,
											"end": 2078,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2080,
											"end": 2082,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 2032,
											"end": 2090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2021,
											"end": 2091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1985,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1985,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1985,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1985,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2116,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2136,
											"end": 2137,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2121,
											"end": 2125,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2132,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2137,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2152,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 2141,
											"end": 2165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 2101,
											"end": 2173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1975,
											"end": 2180,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1975,
											"end": 2180,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1873,
											"end": 2180,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1211,
											"end": 1520,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1211,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1337,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1339,
											"end": 1356,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1365,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1370,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1360,
											"end": 1370,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1394,
											"end": 1418,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 1394,
											"end": 1418,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1394,
											"end": 1418,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1420,
											"end": 1422,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1424,
											"end": 1429,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 1371,
											"end": 1430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 1360,
											"end": 1431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1324,
											"end": 1431,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1324,
											"end": 1431,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1324,
											"end": 1431,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1324,
											"end": 1431,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1449,
											"end": 1456,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1449,
											"end": 1506,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1449,
											"end": 1506,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1449,
											"end": 1506,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 1449,
											"end": 1506,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1449,
											"end": 1506,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1476,
											"end": 1477,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1461,
											"end": 1465,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1461,
											"end": 1472,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1461,
											"end": 1477,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1461,
											"end": 1505,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1461,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1461,
											"end": 1505,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1461,
											"end": 1505,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1492,
											"end": 1496,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 1481,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1461,
											"end": 1505,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1461,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1449,
											"end": 1506,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 1449,
											"end": 1506,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 1441,
											"end": 1513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1520,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1520,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1211,
											"end": 1520,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1211,
											"end": 1520,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1211,
											"end": 1520,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1211,
											"end": 1520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 98,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 7,
											"end": 98,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 43,
											"end": 50,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 83,
											"end": 91,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFF"
										},
										{
											"begin": 76,
											"end": 81,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 72,
											"end": 92,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 61,
											"end": 92,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 61,
											"end": 92,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 98,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7,
											"end": 98,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7,
											"end": 98,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 98,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 104,
											"end": 219,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 104,
											"end": 219,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 189,
											"end": 212,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 206,
											"end": 211,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 189,
											"end": 212,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 189,
											"end": 212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 189,
											"end": 212,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 189,
											"end": 212,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 184,
											"end": 187,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 177,
											"end": 213,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 104,
											"end": 219,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 104,
											"end": 219,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 104,
											"end": 219,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 225,
											"end": 443,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 225,
											"end": 443,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 316,
											"end": 320,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 354,
											"end": 356,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 343,
											"end": 352,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 339,
											"end": 357,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 331,
											"end": 357,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 331,
											"end": 357,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 367,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 433,
											"end": 434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 422,
											"end": 431,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 418,
											"end": 435,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 409,
											"end": 415,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 367,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 367,
											"end": 436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 367,
											"end": 436,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 367,
											"end": 436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 225,
											"end": 443,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 225,
											"end": 443,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 225,
											"end": 443,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 225,
											"end": 443,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 225,
											"end": 443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 449,
											"end": 575,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 449,
											"end": 575,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 486,
											"end": 493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 568,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 519,
											"end": 524,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 515,
											"end": 569,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 504,
											"end": 569,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 504,
											"end": 569,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 449,
											"end": 575,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 449,
											"end": 575,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 449,
											"end": 575,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 449,
											"end": 575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 581,
											"end": 677,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 581,
											"end": 677,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 618,
											"end": 625,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 647,
											"end": 671,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 665,
											"end": 670,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 647,
											"end": 671,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 647,
											"end": 671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 647,
											"end": 671,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 647,
											"end": 671,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 636,
											"end": 671,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 636,
											"end": 671,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 581,
											"end": 677,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 581,
											"end": 677,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 581,
											"end": 677,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 581,
											"end": 677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 683,
											"end": 801,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 683,
											"end": 801,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 770,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 788,
											"end": 793,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 770,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 770,
											"end": 794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 770,
											"end": 794,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 770,
											"end": 794,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 765,
											"end": 768,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 758,
											"end": 795,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 683,
											"end": 801,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 683,
											"end": 801,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 683,
											"end": 801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 807,
											"end": 1029,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 807,
											"end": 1029,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 900,
											"end": 904,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 938,
											"end": 940,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 927,
											"end": 936,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 923,
											"end": 941,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 915,
											"end": 941,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 915,
											"end": 941,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 951,
											"end": 1022,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 1019,
											"end": 1020,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1008,
											"end": 1017,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 1021,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 995,
											"end": 1001,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 951,
											"end": 1022,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 951,
											"end": 1022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 951,
											"end": 1022,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 951,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 807,
											"end": 1029,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 807,
											"end": 1029,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 807,
											"end": 1029,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 807,
											"end": 1029,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 807,
											"end": 1029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1116,
											"end": 1233,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 1116,
											"end": 1233,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1225,
											"end": 1226,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1222,
											"end": 1223,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1362,
											"end": 1439,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 1362,
											"end": 1439,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1399,
											"end": 1406,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1428,
											"end": 1433,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1417,
											"end": 1433,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1417,
											"end": 1433,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1362,
											"end": 1439,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1362,
											"end": 1439,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1362,
											"end": 1439,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1362,
											"end": 1439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1445,
											"end": 1567,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 1445,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1518,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 1536,
											"end": 1541,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1518,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 1518,
											"end": 1542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1518,
											"end": 1542,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 1518,
											"end": 1542,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1511,
											"end": 1516,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1508,
											"end": 1543,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1498,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 1498,
											"end": 1561,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1557,
											"end": 1558,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1554,
											"end": 1555,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1547,
											"end": 1559,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1498,
											"end": 1561,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 1498,
											"end": 1561,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1445,
											"end": 1567,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1445,
											"end": 1567,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1573,
											"end": 1712,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 1573,
											"end": 1712,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1624,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1657,
											"end": 1663,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1644,
											"end": 1664,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1664,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1664,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1673,
											"end": 1706,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 1700,
											"end": 1705,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1673,
											"end": 1706,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 1673,
											"end": 1706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1673,
											"end": 1706,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 1673,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1573,
											"end": 1712,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1573,
											"end": 1712,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1573,
											"end": 1712,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1573,
											"end": 1712,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1573,
											"end": 1712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1718,
											"end": 2047,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1718,
											"end": 2047,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1777,
											"end": 1783,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1826,
											"end": 1828,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1814,
											"end": 1823,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1805,
											"end": 1812,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1801,
											"end": 1824,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1829,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1794,
											"end": 1913,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1794,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 1794,
											"end": 1913,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 1832,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 1832,
											"end": 1911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1911,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 1832,
											"end": 1911,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1794,
											"end": 1913,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 1794,
											"end": 1913,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1952,
											"end": 1953,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 2022,
											"end": 2029,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2013,
											"end": 2019,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2002,
											"end": 2011,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1998,
											"end": 2020,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 1977,
											"end": 2030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1967,
											"end": 2030,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1967,
											"end": 2030,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 2040,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1718,
											"end": 2047,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1718,
											"end": 2047,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1718,
											"end": 2047,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1718,
											"end": 2047,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1718,
											"end": 2047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2171,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 2053,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2140,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 2158,
											"end": 2163,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2140,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 2140,
											"end": 2164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2140,
											"end": 2164,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 2140,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2135,
											"end": 2138,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2128,
											"end": 2165,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2171,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2171,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2177,
											"end": 2399,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2177,
											"end": 2399,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2270,
											"end": 2274,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2308,
											"end": 2310,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2297,
											"end": 2306,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2311,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2285,
											"end": 2311,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2285,
											"end": 2311,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2321,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 2389,
											"end": 2390,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2378,
											"end": 2387,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2374,
											"end": 2391,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2371,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2321,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 2321,
											"end": 2392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2321,
											"end": 2392,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 2321,
											"end": 2392,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2177,
											"end": 2399,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2177,
											"end": 2399,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2177,
											"end": 2399,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2177,
											"end": 2399,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2177,
											"end": 2399,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2405,
											"end": 2465,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 2405,
											"end": 2465,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2433,
											"end": 2436,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2454,
											"end": 2459,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2405,
											"end": 2465,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2405,
											"end": 2465,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2405,
											"end": 2465,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2405,
											"end": 2465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2471,
											"end": 2613,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 2471,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2530,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2554,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 2572,
											"end": 2606,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 2581,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 2599,
											"end": 2604,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2581,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 2581,
											"end": 2605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2581,
											"end": 2605,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 2581,
											"end": 2605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2572,
											"end": 2606,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 2572,
											"end": 2606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2572,
											"end": 2606,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 2572,
											"end": 2606,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2554,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 2554,
											"end": 2607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2554,
											"end": 2607,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 2554,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2607,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2607,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2471,
											"end": 2613,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2471,
											"end": 2613,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2471,
											"end": 2613,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2471,
											"end": 2613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2619,
											"end": 2745,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2619,
											"end": 2745,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2669,
											"end": 2678,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2702,
											"end": 2739,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 2733,
											"end": 2738,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2702,
											"end": 2739,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 2702,
											"end": 2739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2702,
											"end": 2739,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 2702,
											"end": 2739,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2689,
											"end": 2739,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2689,
											"end": 2739,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2619,
											"end": 2745,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2619,
											"end": 2745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2619,
											"end": 2745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2619,
											"end": 2745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2751,
											"end": 2896,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 2751,
											"end": 2896,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2820,
											"end": 2829,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2853,
											"end": 2890,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 2884,
											"end": 2889,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2853,
											"end": 2890,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2853,
											"end": 2890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2853,
											"end": 2890,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 2853,
											"end": 2890,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2840,
											"end": 2890,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2840,
											"end": 2890,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2751,
											"end": 2896,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2751,
											"end": 2896,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2751,
											"end": 2896,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2751,
											"end": 2896,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2902,
											"end": 3071,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 2902,
											"end": 3071,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3008,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 3058,
											"end": 3063,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3008,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 3008,
											"end": 3064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3008,
											"end": 3064,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 3008,
											"end": 3064,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3003,
											"end": 3006,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2996,
											"end": 3065,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2902,
											"end": 3071,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2902,
											"end": 3071,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2902,
											"end": 3071,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3077,
											"end": 3337,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 3077,
											"end": 3337,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3189,
											"end": 3193,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3227,
											"end": 3229,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3216,
											"end": 3225,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3212,
											"end": 3230,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3204,
											"end": 3230,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3204,
											"end": 3230,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3240,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 3327,
											"end": 3328,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3316,
											"end": 3325,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3312,
											"end": 3329,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3303,
											"end": 3309,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3240,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 3240,
											"end": 3330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3240,
											"end": 3330,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 3240,
											"end": 3330,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3077,
											"end": 3337,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3077,
											"end": 3337,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3077,
											"end": 3337,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3077,
											"end": 3337,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3077,
											"end": 3337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3343,
											"end": 3817,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 3343,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3417,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3425,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3468,
											"end": 3470,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3456,
											"end": 3465,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3447,
											"end": 3454,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3443,
											"end": 3466,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3439,
											"end": 3471,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3436,
											"end": 3555,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3436,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 3436,
											"end": 3555,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3474,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 3474,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 3474,
											"end": 3553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3474,
											"end": 3553,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 3474,
											"end": 3553,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3436,
											"end": 3555,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 3436,
											"end": 3555,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3594,
											"end": 3595,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3619,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 3664,
											"end": 3671,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3655,
											"end": 3661,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3644,
											"end": 3653,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3640,
											"end": 3662,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3619,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 3619,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3619,
											"end": 3672,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 3619,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3609,
											"end": 3672,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3609,
											"end": 3672,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3565,
											"end": 3682,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3721,
											"end": 3723,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3747,
											"end": 3800,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 3792,
											"end": 3799,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3783,
											"end": 3789,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3772,
											"end": 3781,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3768,
											"end": 3790,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3747,
											"end": 3800,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 3747,
											"end": 3800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3747,
											"end": 3800,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 3747,
											"end": 3800,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3737,
											"end": 3800,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3737,
											"end": 3800,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3692,
											"end": 3810,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3343,
											"end": 3817,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3343,
											"end": 3817,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3343,
											"end": 3817,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3343,
											"end": 3817,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3343,
											"end": 3817,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3343,
											"end": 3817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3823,
											"end": 3931,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 3823,
											"end": 3931,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3900,
											"end": 3924,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 3918,
											"end": 3923,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3900,
											"end": 3924,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 3900,
											"end": 3924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3900,
											"end": 3924,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 3900,
											"end": 3924,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3895,
											"end": 3898,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3823,
											"end": 3931,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3823,
											"end": 3931,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3823,
											"end": 3931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3937,
											"end": 4042,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 3937,
											"end": 4042,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4012,
											"end": 4035,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 4029,
											"end": 4034,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4012,
											"end": 4035,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 4012,
											"end": 4035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4012,
											"end": 4035,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 4012,
											"end": 4035,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4007,
											"end": 4010,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4000,
											"end": 4036,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3937,
											"end": 4042,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3937,
											"end": 4042,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3937,
											"end": 4042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4048,
											"end": 4156,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 4048,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4125,
											"end": 4149,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 4143,
											"end": 4148,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4125,
											"end": 4149,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 4125,
											"end": 4149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4125,
											"end": 4149,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 4125,
											"end": 4149,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4120,
											"end": 4123,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4113,
											"end": 4150,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4048,
											"end": 4156,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4048,
											"end": 4156,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4048,
											"end": 4156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4162,
											"end": 4270,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 4162,
											"end": 4270,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4239,
											"end": 4263,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 4257,
											"end": 4262,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4239,
											"end": 4263,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 4239,
											"end": 4263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4239,
											"end": 4263,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 4239,
											"end": 4263,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4234,
											"end": 4237,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4227,
											"end": 4264,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4162,
											"end": 4270,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4162,
											"end": 4270,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4162,
											"end": 4270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4370,
											"end": 5993,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 4370,
											"end": 5993,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4545,
											"end": 4551,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4540,
											"end": 4543,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4536,
											"end": 4552,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4637,
											"end": 4641,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4630,
											"end": 4635,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4626,
											"end": 4642,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4620,
											"end": 4643,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4656,
											"end": 4719,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 4713,
											"end": 4717,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4708,
											"end": 4711,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4704,
											"end": 4718,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4690,
											"end": 4702,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4656,
											"end": 4719,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 4656,
											"end": 4719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4656,
											"end": 4719,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 4656,
											"end": 4719,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4562,
											"end": 4729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4815,
											"end": 4819,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4808,
											"end": 4813,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4804,
											"end": 4820,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4798,
											"end": 4821,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4834,
											"end": 4897,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 4891,
											"end": 4895,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4886,
											"end": 4889,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4882,
											"end": 4896,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4868,
											"end": 4880,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4834,
											"end": 4897,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 4834,
											"end": 4897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4834,
											"end": 4897,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 4834,
											"end": 4897,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4739,
											"end": 4907,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4988,
											"end": 4992,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4981,
											"end": 4986,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4977,
											"end": 4993,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4971,
											"end": 4994,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5007,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 5062,
											"end": 5066,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5057,
											"end": 5060,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5053,
											"end": 5067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5039,
											"end": 5051,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5007,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 5007,
											"end": 5068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5007,
											"end": 5068,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 5007,
											"end": 5068,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4917,
											"end": 5078,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5169,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5158,
											"end": 5163,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5154,
											"end": 5170,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5148,
											"end": 5171,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5184,
											"end": 5247,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 5241,
											"end": 5245,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5236,
											"end": 5239,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5232,
											"end": 5246,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5218,
											"end": 5230,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5184,
											"end": 5247,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 5184,
											"end": 5247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5184,
											"end": 5247,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 5184,
											"end": 5247,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5088,
											"end": 5257,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5343,
											"end": 5347,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 5336,
											"end": 5341,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5332,
											"end": 5348,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5326,
											"end": 5349,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5362,
											"end": 5425,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 5419,
											"end": 5423,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 5414,
											"end": 5417,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5410,
											"end": 5424,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5396,
											"end": 5408,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5362,
											"end": 5425,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 5362,
											"end": 5425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5362,
											"end": 5425,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 5362,
											"end": 5425,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5267,
											"end": 5435,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5521,
											"end": 5525,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 5514,
											"end": 5519,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5510,
											"end": 5526,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5504,
											"end": 5527,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5540,
											"end": 5603,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 5597,
											"end": 5601,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 5592,
											"end": 5595,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5588,
											"end": 5602,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5574,
											"end": 5586,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5540,
											"end": 5603,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 5540,
											"end": 5603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5540,
											"end": 5603,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 5540,
											"end": 5603,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5445,
											"end": 5613,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5707,
											"end": 5711,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 5700,
											"end": 5705,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5696,
											"end": 5712,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5690,
											"end": 5713,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5726,
											"end": 5789,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 5783,
											"end": 5787,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 5778,
											"end": 5781,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5774,
											"end": 5788,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5760,
											"end": 5772,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5726,
											"end": 5789,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 5726,
											"end": 5789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5726,
											"end": 5789,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 5726,
											"end": 5789,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5623,
											"end": 5799,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5894,
											"end": 5898,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 5887,
											"end": 5892,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5883,
											"end": 5899,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5877,
											"end": 5900,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5913,
											"end": 5976,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 5970,
											"end": 5974,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 5965,
											"end": 5968,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5961,
											"end": 5975,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5947,
											"end": 5959,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5913,
											"end": 5976,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 5913,
											"end": 5976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5913,
											"end": 5976,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 5913,
											"end": 5976,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5809,
											"end": 5986,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4514,
											"end": 5993,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4370,
											"end": 5993,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4370,
											"end": 5993,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4370,
											"end": 5993,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5999,
											"end": 6378,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 5999,
											"end": 6378,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6170,
											"end": 6174,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6208,
											"end": 6211,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 6197,
											"end": 6206,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6193,
											"end": 6212,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6185,
											"end": 6212,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6185,
											"end": 6212,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6222,
											"end": 6371,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 6368,
											"end": 6369,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6357,
											"end": 6366,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6353,
											"end": 6370,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6344,
											"end": 6350,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6222,
											"end": 6371,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 6222,
											"end": 6371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6222,
											"end": 6371,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 6222,
											"end": 6371,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5999,
											"end": 6378,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5999,
											"end": 6378,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5999,
											"end": 6378,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5999,
											"end": 6378,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5999,
											"end": 6378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6384,
											"end": 6527,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 6384,
											"end": 6527,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6441,
											"end": 6446,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6472,
											"end": 6478,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6466,
											"end": 6479,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6457,
											"end": 6479,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6457,
											"end": 6479,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6488,
											"end": 6521,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 6515,
											"end": 6520,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6488,
											"end": 6521,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 6488,
											"end": 6521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6488,
											"end": 6521,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 6488,
											"end": 6521,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6384,
											"end": 6527,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6384,
											"end": 6527,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6384,
											"end": 6527,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6384,
											"end": 6527,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6384,
											"end": 6527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6533,
											"end": 6884,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 6533,
											"end": 6884,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6603,
											"end": 6609,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6652,
											"end": 6654,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6640,
											"end": 6649,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6631,
											"end": 6638,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6627,
											"end": 6650,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6623,
											"end": 6655,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 6620,
											"end": 6739,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6620,
											"end": 6739,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 6620,
											"end": 6739,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6658,
											"end": 6737,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 6658,
											"end": 6737,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 6658,
											"end": 6737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6658,
											"end": 6737,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 6658,
											"end": 6737,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6620,
											"end": 6739,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 6620,
											"end": 6739,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6778,
											"end": 6779,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6803,
											"end": 6867,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 6859,
											"end": 6866,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6850,
											"end": 6856,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6839,
											"end": 6848,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6835,
											"end": 6857,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6803,
											"end": 6867,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 6803,
											"end": 6867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6803,
											"end": 6867,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 6803,
											"end": 6867,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6793,
											"end": 6867,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6793,
											"end": 6867,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6749,
											"end": 6877,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6533,
											"end": 6884,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6533,
											"end": 6884,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6533,
											"end": 6884,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6533,
											"end": 6884,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6533,
											"end": 6884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6986,
											"end": 8611,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 6986,
											"end": 8611,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7163,
											"end": 7169,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 7158,
											"end": 7161,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7154,
											"end": 7170,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7255,
											"end": 7259,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7248,
											"end": 7253,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7244,
											"end": 7260,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7238,
											"end": 7261,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7274,
											"end": 7337,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 7331,
											"end": 7335,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7326,
											"end": 7329,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7322,
											"end": 7336,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7308,
											"end": 7320,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7274,
											"end": 7337,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 7274,
											"end": 7337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7274,
											"end": 7337,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 7274,
											"end": 7337,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7180,
											"end": 7347,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7433,
											"end": 7437,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7426,
											"end": 7431,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7422,
											"end": 7438,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7416,
											"end": 7439,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7452,
											"end": 7515,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 7509,
											"end": 7513,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7504,
											"end": 7507,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7500,
											"end": 7514,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7486,
											"end": 7498,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7452,
											"end": 7515,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 7452,
											"end": 7515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7452,
											"end": 7515,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 7452,
											"end": 7515,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7357,
											"end": 7525,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7606,
											"end": 7610,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7599,
											"end": 7604,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7595,
											"end": 7611,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7589,
											"end": 7612,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7625,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 7680,
											"end": 7684,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7675,
											"end": 7678,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7671,
											"end": 7685,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7657,
											"end": 7669,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7625,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 7625,
											"end": 7686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7625,
											"end": 7686,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 7625,
											"end": 7686,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7535,
											"end": 7696,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7783,
											"end": 7787,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 7776,
											"end": 7781,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7772,
											"end": 7788,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7766,
											"end": 7789,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7802,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 7859,
											"end": 7863,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 7854,
											"end": 7857,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7850,
											"end": 7864,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7836,
											"end": 7848,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7802,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 7802,
											"end": 7865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7802,
											"end": 7865,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 7802,
											"end": 7865,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7706,
											"end": 7875,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7961,
											"end": 7965,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 7954,
											"end": 7959,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7950,
											"end": 7966,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7944,
											"end": 7967,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7980,
											"end": 8043,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 8037,
											"end": 8041,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 8032,
											"end": 8035,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8028,
											"end": 8042,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8014,
											"end": 8026,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7980,
											"end": 8043,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 7980,
											"end": 8043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7980,
											"end": 8043,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 7980,
											"end": 8043,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7885,
											"end": 8053,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8140,
											"end": 8144,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 8133,
											"end": 8138,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8129,
											"end": 8145,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8123,
											"end": 8146,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8159,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 8216,
											"end": 8220,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 8211,
											"end": 8214,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8207,
											"end": 8221,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8193,
											"end": 8205,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8159,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 8159,
											"end": 8222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8159,
											"end": 8222,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 8159,
											"end": 8222,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8063,
											"end": 8232,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8325,
											"end": 8329,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 8318,
											"end": 8323,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8314,
											"end": 8330,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8308,
											"end": 8331,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8344,
											"end": 8407,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 8401,
											"end": 8405,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 8396,
											"end": 8399,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8392,
											"end": 8406,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8378,
											"end": 8390,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8344,
											"end": 8407,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 8344,
											"end": 8407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8344,
											"end": 8407,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 8344,
											"end": 8407,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8242,
											"end": 8417,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8512,
											"end": 8516,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 8505,
											"end": 8510,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8501,
											"end": 8517,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8495,
											"end": 8518,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8531,
											"end": 8594,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 8588,
											"end": 8592,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 8583,
											"end": 8586,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8579,
											"end": 8593,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8565,
											"end": 8577,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8531,
											"end": 8594,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 8531,
											"end": 8594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8531,
											"end": 8594,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 8531,
											"end": 8594,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8427,
											"end": 8604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7132,
											"end": 8611,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6986,
											"end": 8611,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6986,
											"end": 8611,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6986,
											"end": 8611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8617,
											"end": 9000,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 8617,
											"end": 9000,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8790,
											"end": 8794,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8828,
											"end": 8831,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 8817,
											"end": 8826,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8813,
											"end": 8832,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8805,
											"end": 8832,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8805,
											"end": 8832,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8842,
											"end": 8993,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 8990,
											"end": 8991,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8979,
											"end": 8988,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8975,
											"end": 8992,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8966,
											"end": 8972,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8842,
											"end": 8993,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 8842,
											"end": 8993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8842,
											"end": 8993,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 8842,
											"end": 8993,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8617,
											"end": 9000,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8617,
											"end": 9000,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8617,
											"end": 9000,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8617,
											"end": 9000,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8617,
											"end": 9000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9006,
											"end": 9186,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 9006,
											"end": 9186,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9054,
											"end": 9131,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9051,
											"end": 9052,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9044,
											"end": 9132,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9151,
											"end": 9155,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 9148,
											"end": 9149,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9141,
											"end": 9156,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9175,
											"end": 9179,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 9172,
											"end": 9173,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9165,
											"end": 9180,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9192,
											"end": 9386,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 9192,
											"end": 9386,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9232,
											"end": 9236,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9252,
											"end": 9272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 9270,
											"end": 9271,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9252,
											"end": 9272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 9252,
											"end": 9272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9252,
											"end": 9272,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 9252,
											"end": 9272,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9247,
											"end": 9272,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9247,
											"end": 9272,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9286,
											"end": 9306,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 9304,
											"end": 9305,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9286,
											"end": 9306,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 9286,
											"end": 9306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9286,
											"end": 9306,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 9286,
											"end": 9306,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9281,
											"end": 9306,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9281,
											"end": 9306,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9330,
											"end": 9331,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9327,
											"end": 9328,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9323,
											"end": 9332,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9315,
											"end": 9332,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9315,
											"end": 9332,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9354,
											"end": 9355,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9348,
											"end": 9352,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9345,
											"end": 9356,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 9342,
											"end": 9379,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9342,
											"end": 9379,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 9342,
											"end": 9379,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9359,
											"end": 9377,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 9359,
											"end": 9377,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 9359,
											"end": 9377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9359,
											"end": 9377,
											"name": "tag",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 9359,
											"end": 9377,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9342,
											"end": 9379,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 9342,
											"end": 9379,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9192,
											"end": 9386,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9192,
											"end": 9386,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9192,
											"end": 9386,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9192,
											"end": 9386,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9192,
											"end": 9386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9392,
											"end": 9834,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 9392,
											"end": 9834,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9541,
											"end": 9545,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9579,
											"end": 9581,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 9568,
											"end": 9577,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9564,
											"end": 9582,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9556,
											"end": 9582,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9556,
											"end": 9582,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9592,
											"end": 9663,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 9660,
											"end": 9661,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9649,
											"end": 9658,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9645,
											"end": 9662,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9636,
											"end": 9642,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 9592,
											"end": 9663,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 9592,
											"end": 9663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9592,
											"end": 9663,
											"name": "tag",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 9592,
											"end": 9663,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9673,
											"end": 9745,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 9741,
											"end": 9743,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9730,
											"end": 9739,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9717,
											"end": 9723,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9673,
											"end": 9745,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 9673,
											"end": 9745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9673,
											"end": 9745,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 9673,
											"end": 9745,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9755,
											"end": 9827,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 9823,
											"end": 9825,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9812,
											"end": 9821,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9808,
											"end": 9826,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9799,
											"end": 9805,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9755,
											"end": 9827,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 9755,
											"end": 9827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9755,
											"end": 9827,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 9755,
											"end": 9827,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9392,
											"end": 9834,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 9392,
											"end": 9834,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 9392,
											"end": 9834,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9392,
											"end": 9834,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9392,
											"end": 9834,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9392,
											"end": 9834,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9392,
											"end": 9834,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9840,
											"end": 9938,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 9840,
											"end": 9938,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9891,
											"end": 9897,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9925,
											"end": 9930,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9919,
											"end": 9931,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9909,
											"end": 9931,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9909,
											"end": 9931,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9840,
											"end": 9938,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9840,
											"end": 9938,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9840,
											"end": 9938,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9840,
											"end": 9938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9944,
											"end": 10091,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 9944,
											"end": 10091,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10045,
											"end": 10056,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10082,
											"end": 10085,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10067,
											"end": 10085,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10067,
											"end": 10085,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9944,
											"end": 10091,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9944,
											"end": 10091,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9944,
											"end": 10091,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9944,
											"end": 10091,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9944,
											"end": 10091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10097,
											"end": 10343,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 10097,
											"end": 10343,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10188,
											"end": 10301,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 10188,
											"end": 10301,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10202,
											"end": 10208,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10199,
											"end": 10200,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10196,
											"end": 10209,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 10188,
											"end": 10301,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10188,
											"end": 10301,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 10188,
											"end": 10301,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10287,
											"end": 10288,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10282,
											"end": 10285,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10278,
											"end": 10289,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10272,
											"end": 10290,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10268,
											"end": 10269,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10263,
											"end": 10266,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10259,
											"end": 10270,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10252,
											"end": 10291,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10224,
											"end": 10226,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10221,
											"end": 10222,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10217,
											"end": 10227,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10212,
											"end": 10227,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10212,
											"end": 10227,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10188,
											"end": 10301,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 10188,
											"end": 10301,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10188,
											"end": 10301,
											"name": "tag",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 10188,
											"end": 10301,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10335,
											"end": 10336,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10326,
											"end": 10332,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10321,
											"end": 10324,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10317,
											"end": 10333,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10310,
											"end": 10337,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10159,
											"end": 10343,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10097,
											"end": 10343,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10097,
											"end": 10343,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10097,
											"end": 10343,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10097,
											"end": 10343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10349,
											"end": 10735,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 10349,
											"end": 10735,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10453,
											"end": 10456,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10481,
											"end": 10519,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 10513,
											"end": 10518,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10481,
											"end": 10519,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 10481,
											"end": 10519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10481,
											"end": 10519,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 10481,
											"end": 10519,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10535,
											"end": 10623,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 10616,
											"end": 10622,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10611,
											"end": 10614,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10535,
											"end": 10623,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 10535,
											"end": 10623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10535,
											"end": 10623,
											"name": "tag",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 10535,
											"end": 10623,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10528,
											"end": 10623,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 10528,
											"end": 10623,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10632,
											"end": 10697,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 10690,
											"end": 10696,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10685,
											"end": 10688,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10678,
											"end": 10682,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10671,
											"end": 10676,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 10667,
											"end": 10683,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10632,
											"end": 10697,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 10632,
											"end": 10697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10632,
											"end": 10697,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 10632,
											"end": 10697,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10722,
											"end": 10728,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10717,
											"end": 10720,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10713,
											"end": 10729,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10706,
											"end": 10729,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10706,
											"end": 10729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10457,
											"end": 10735,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10349,
											"end": 10735,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10349,
											"end": 10735,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10349,
											"end": 10735,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10349,
											"end": 10735,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10349,
											"end": 10735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10741,
											"end": 11012,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 10741,
											"end": 11012,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10871,
											"end": 10874,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10893,
											"end": 10986,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 10982,
											"end": 10985,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10973,
											"end": 10979,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10893,
											"end": 10986,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 10893,
											"end": 10986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10893,
											"end": 10986,
											"name": "tag",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 10893,
											"end": 10986,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10886,
											"end": 10986,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10886,
											"end": 10986,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11003,
											"end": 11006,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10996,
											"end": 11006,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10996,
											"end": 11006,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10741,
											"end": 11012,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10741,
											"end": 11012,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10741,
											"end": 11012,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10741,
											"end": 11012,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10741,
											"end": 11012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11018,
											"end": 11108,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 11018,
											"end": 11108,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11052,
											"end": 11059,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11095,
											"end": 11100,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11088,
											"end": 11101,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 11081,
											"end": 11102,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 11070,
											"end": 11102,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11070,
											"end": 11102,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11018,
											"end": 11108,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11018,
											"end": 11108,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11018,
											"end": 11108,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11018,
											"end": 11108,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11114,
											"end": 11230,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 11114,
											"end": 11230,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11184,
											"end": 11205,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 11199,
											"end": 11204,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11184,
											"end": 11205,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 11184,
											"end": 11205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11184,
											"end": 11205,
											"name": "tag",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 11184,
											"end": 11205,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11177,
											"end": 11182,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11174,
											"end": 11206,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 11164,
											"end": 11224,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 11164,
											"end": 11224,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 11220,
											"end": 11221,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11217,
											"end": 11218,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 11210,
											"end": 11222,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 11164,
											"end": 11224,
											"name": "tag",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 11164,
											"end": 11224,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11114,
											"end": 11230,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11114,
											"end": 11230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11236,
											"end": 11373,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 11236,
											"end": 11373,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11290,
											"end": 11295,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11321,
											"end": 11327,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11315,
											"end": 11328,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 11306,
											"end": 11328,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11306,
											"end": 11328,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11337,
											"end": 11367,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 11361,
											"end": 11366,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11337,
											"end": 11367,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 11337,
											"end": 11367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11337,
											"end": 11367,
											"name": "tag",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 11337,
											"end": 11367,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11236,
											"end": 11373,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 11236,
											"end": 11373,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11236,
											"end": 11373,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11236,
											"end": 11373,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11236,
											"end": 11373,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11379,
											"end": 11724,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 11379,
											"end": 11724,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11446,
											"end": 11452,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11495,
											"end": 11497,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11483,
											"end": 11492,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11474,
											"end": 11481,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11470,
											"end": 11493,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 11466,
											"end": 11498,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 11463,
											"end": 11582,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 11463,
											"end": 11582,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 11463,
											"end": 11582,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 11501,
											"end": 11580,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 11501,
											"end": 11580,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 11501,
											"end": 11580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11501,
											"end": 11580,
											"name": "tag",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 11501,
											"end": 11580,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11463,
											"end": 11582,
											"name": "tag",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 11463,
											"end": 11582,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11621,
											"end": 11622,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11646,
											"end": 11707,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 11699,
											"end": 11706,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11690,
											"end": 11696,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11679,
											"end": 11688,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 11675,
											"end": 11697,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11646,
											"end": 11707,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 11646,
											"end": 11707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11646,
											"end": 11707,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 11646,
											"end": 11707,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11636,
											"end": 11707,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11636,
											"end": 11707,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11592,
											"end": 11717,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11379,
											"end": 11724,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 11379,
											"end": 11724,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11379,
											"end": 11724,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11379,
											"end": 11724,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11379,
											"end": 11724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11730,
											"end": 11899,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 11730,
											"end": 11899,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11814,
											"end": 11825,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11848,
											"end": 11854,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11843,
											"end": 11846,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11836,
											"end": 11855,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11888,
											"end": 11892,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11883,
											"end": 11886,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11879,
											"end": 11893,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11864,
											"end": 11893,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11864,
											"end": 11893,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11730,
											"end": 11899,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 11730,
											"end": 11899,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11730,
											"end": 11899,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11730,
											"end": 11899,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11730,
											"end": 11899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11905,
											"end": 12058,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 11905,
											"end": 12058,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12045,
											"end": 12050,
											"name": "PUSH",
											"source": 5,
											"value": "5354460000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12041,
											"end": 12042,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12033,
											"end": 12039,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12029,
											"end": 12043,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12022,
											"end": 12051,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11905,
											"end": 12058,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11905,
											"end": 12058,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12064,
											"end": 12429,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 12064,
											"end": 12429,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12206,
											"end": 12209,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12227,
											"end": 12293,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 12291,
											"end": 12292,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 12286,
											"end": 12289,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12227,
											"end": 12293,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 12227,
											"end": 12293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12227,
											"end": 12293,
											"name": "tag",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 12227,
											"end": 12293,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12220,
											"end": 12293,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12220,
											"end": 12293,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12302,
											"end": 12395,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 12391,
											"end": 12394,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12302,
											"end": 12395,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 12302,
											"end": 12395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12302,
											"end": 12395,
											"name": "tag",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 12302,
											"end": 12395,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12420,
											"end": 12422,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12415,
											"end": 12418,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12411,
											"end": 12423,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12404,
											"end": 12423,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12404,
											"end": 12423,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12064,
											"end": 12429,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12064,
											"end": 12429,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12064,
											"end": 12429,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12064,
											"end": 12429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12435,
											"end": 12854,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 12435,
											"end": 12854,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12601,
											"end": 12605,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12639,
											"end": 12641,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12628,
											"end": 12637,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12624,
											"end": 12642,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12616,
											"end": 12642,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12616,
											"end": 12642,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12688,
											"end": 12697,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12682,
											"end": 12686,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12678,
											"end": 12698,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 12674,
											"end": 12675,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12663,
											"end": 12672,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12659,
											"end": 12676,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12652,
											"end": 12699,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12716,
											"end": 12847,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 12842,
											"end": 12846,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12716,
											"end": 12847,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 12716,
											"end": 12847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12716,
											"end": 12847,
											"name": "tag",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 12716,
											"end": 12847,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12708,
											"end": 12847,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12708,
											"end": 12847,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12435,
											"end": 12854,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12435,
											"end": 12854,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12435,
											"end": 12854,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12435,
											"end": 12854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12860,
											"end": 13192,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 12860,
											"end": 13192,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12981,
											"end": 12985,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13019,
											"end": 13021,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 13008,
											"end": 13017,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13004,
											"end": 13022,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12996,
											"end": 13022,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12996,
											"end": 13022,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13032,
											"end": 13103,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 13100,
											"end": 13101,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13089,
											"end": 13098,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13085,
											"end": 13102,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13076,
											"end": 13082,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 13032,
											"end": 13103,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 13032,
											"end": 13103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13032,
											"end": 13103,
											"name": "tag",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 13032,
											"end": 13103,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13113,
											"end": 13185,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 13181,
											"end": 13183,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13170,
											"end": 13179,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13166,
											"end": 13184,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13157,
											"end": 13163,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 13113,
											"end": 13185,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 13113,
											"end": 13185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13113,
											"end": 13185,
											"name": "tag",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 13113,
											"end": 13185,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12860,
											"end": 13192,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 12860,
											"end": 13192,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 12860,
											"end": 13192,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12860,
											"end": 13192,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12860,
											"end": 13192,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12860,
											"end": 13192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13198,
											"end": 13350,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 13198,
											"end": 13350,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13338,
											"end": 13342,
											"name": "PUSH",
											"source": 5,
											"value": "5341000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13334,
											"end": 13335,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13326,
											"end": 13332,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13315,
											"end": 13343,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13198,
											"end": 13350,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13198,
											"end": 13350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13356,
											"end": 13721,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 13356,
											"end": 13721,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13498,
											"end": 13501,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13519,
											"end": 13585,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 13583,
											"end": 13584,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 13578,
											"end": 13581,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13519,
											"end": 13585,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 13519,
											"end": 13585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13519,
											"end": 13585,
											"name": "tag",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 13519,
											"end": 13585,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13512,
											"end": 13585,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13512,
											"end": 13585,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13594,
											"end": 13687,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 13683,
											"end": 13686,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13594,
											"end": 13687,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 13594,
											"end": 13687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13594,
											"end": 13687,
											"name": "tag",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 13594,
											"end": 13687,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13712,
											"end": 13714,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13707,
											"end": 13710,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13703,
											"end": 13715,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13696,
											"end": 13715,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13696,
											"end": 13715,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13356,
											"end": 13721,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13356,
											"end": 13721,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13356,
											"end": 13721,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13356,
											"end": 13721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13727,
											"end": 14146,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 13727,
											"end": 14146,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13893,
											"end": 13897,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13931,
											"end": 13933,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13920,
											"end": 13929,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13916,
											"end": 13934,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13908,
											"end": 13934,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13908,
											"end": 13934,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13980,
											"end": 13989,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13974,
											"end": 13978,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13970,
											"end": 13990,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 13966,
											"end": 13967,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13955,
											"end": 13964,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13951,
											"end": 13968,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13944,
											"end": 13991,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14008,
											"end": 14139,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 14134,
											"end": 14138,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14008,
											"end": 14139,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 14008,
											"end": 14139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14008,
											"end": 14139,
											"name": "tag",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 14008,
											"end": 14139,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14000,
											"end": 14139,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14000,
											"end": 14139,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13727,
											"end": 14146,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13727,
											"end": 14146,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13727,
											"end": 14146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13727,
											"end": 14146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14152,
											"end": 14304,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 14152,
											"end": 14304,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14292,
											"end": 14296,
											"name": "PUSH",
											"source": 5,
											"value": "5354000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14288,
											"end": 14289,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14280,
											"end": 14286,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14276,
											"end": 14290,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14269,
											"end": 14297,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14152,
											"end": 14304,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14152,
											"end": 14304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14310,
											"end": 14675,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 14310,
											"end": 14675,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14452,
											"end": 14455,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14473,
											"end": 14539,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 14537,
											"end": 14538,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 14532,
											"end": 14535,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14473,
											"end": 14539,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 14473,
											"end": 14539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14473,
											"end": 14539,
											"name": "tag",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 14473,
											"end": 14539,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14466,
											"end": 14539,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14466,
											"end": 14539,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14548,
											"end": 14641,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 14637,
											"end": 14640,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14548,
											"end": 14641,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 14548,
											"end": 14641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14548,
											"end": 14641,
											"name": "tag",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 14548,
											"end": 14641,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14666,
											"end": 14668,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 14661,
											"end": 14664,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14657,
											"end": 14669,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14650,
											"end": 14669,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14650,
											"end": 14669,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14310,
											"end": 14675,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14310,
											"end": 14675,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14310,
											"end": 14675,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14310,
											"end": 14675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14681,
											"end": 15100,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 14681,
											"end": 15100,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14847,
											"end": 14851,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14885,
											"end": 14887,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 14874,
											"end": 14883,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14870,
											"end": 14888,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14862,
											"end": 14888,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14862,
											"end": 14888,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14934,
											"end": 14943,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14928,
											"end": 14932,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14924,
											"end": 14944,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 14920,
											"end": 14921,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14909,
											"end": 14918,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14905,
											"end": 14922,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14898,
											"end": 14945,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14962,
											"end": 15093,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 15088,
											"end": 15092,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14962,
											"end": 15093,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 14962,
											"end": 15093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14962,
											"end": 15093,
											"name": "tag",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 14962,
											"end": 15093,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14954,
											"end": 15093,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14954,
											"end": 15093,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14681,
											"end": 15100,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14681,
											"end": 15100,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14681,
											"end": 15100,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14681,
											"end": 15100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
								"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
								"TEST/swap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DAI()": "e0bab4c4",
							"USDC()": "89a30271",
							"WETH9()": "4aa4a4fc",
							"poolFee()": "089fe6aa",
							"swapExactInputSingle(uint256)": "73bd43ad",
							"swapExactOutputSingle(uint256,uint256)": "c4b69a18",
							"swapRouter()": "c31c9c07"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"_swapRouter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"DAI\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolFee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"swapExactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"name\":\"swapExactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TEST/swap.sol\":\"SwapExamples\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]},\"TEST/swap.sol\":{\"keccak256\":\"0x757453f6f615f3ce1c4251366c15efff8df1cd36c92b18430d0d016227a1527f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e152f13d1944b9e2e62ba47991ceea7f806f0536cf3ddf31f287ccb84c45f585\",\"dweb:/ipfs/QmXkTkKd6A8rw2uXNuyufYLXwddLwdwBbamitAJC25V9eC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "213:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "395:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "404:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "426:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "446:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:0"
									},
									"src": "389:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "626:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "635:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "658:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "683:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:0"
									},
									"src": "620:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "930:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "970:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:0"
									},
									"scope": 77,
									"src": "911:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1221:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1233:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1266:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:0"
									},
									"scope": 77,
									"src": "1203:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1566:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1581:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1621:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:0"
									},
									"scope": 77,
									"src": "1547:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2325:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2375:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:0"
									},
									"scope": 77,
									"src": "2308:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2711:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2725:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2737:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2770:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:0"
									},
									"scope": 77,
									"src": "2689:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "203:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:2673:0"
				},
				"id": 0
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
					"exportedSymbols": {
						"IUniswapV3SwapCallback": [
							91
						]
					},
					"id": 92,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3SwapCallback",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "71:144:1",
								"text": "@title Callback for IUniswapV3PoolActions#swap\n @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface"
							},
							"fullyImplemented": false,
							"id": 91,
							"linearizedBaseContracts": [
								91
							],
							"name": "IUniswapV3SwapCallback",
							"nameLocation": "225:22:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "254:898:1",
										"text": "@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
									},
									"functionSelector": "fa461e33",
									"id": 90,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV3SwapCallback",
									"nameLocation": "1166:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "amount0Delta",
												"nameLocation": "1204:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1197:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 82,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1197:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "amount1Delta",
												"nameLocation": "1233:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1226:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 84,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1226:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1270:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1255:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 86,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1255:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1187:93:1"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1289:0:1"
									},
									"scope": 91,
									"src": "1157:133:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 92,
							"src": "215:1077:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1248:1"
				},
				"id": 1
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
					"exportedSymbols": {
						"ISwapRouter": [
							191
						],
						"IUniswapV3SwapCallback": [
							91
						]
					},
					"id": 192,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 93,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:2"
						},
						{
							"id": 94,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "70:19:2"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"id": 95,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 192,
							"sourceUnit": 92,
							"src": "91:83:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 97,
										"name": "IUniswapV3SwapCallback",
										"nameLocations": [
											"305:22:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 91,
										"src": "305:22:2"
									},
									"id": 98,
									"nodeType": "InheritanceSpecifier",
									"src": "305:22:2"
								}
							],
							"canonicalName": "ISwapRouter",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 96,
								"nodeType": "StructuredDocumentation",
								"src": "176:104:2",
								"text": "@title Router token swapping functionality\n @notice Functions for swapping tokens via Uniswap V3"
							},
							"fullyImplemented": false,
							"id": 191,
							"linearizedBaseContracts": [
								191,
								91
							],
							"name": "ISwapRouter",
							"nameLocation": "290:11:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ISwapRouter.ExactInputSingleParams",
									"id": 115,
									"members": [
										{
											"constant": false,
											"id": 100,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "382:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "374:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 99,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "374:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 102,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "407:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "399:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 101,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "399:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 104,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "432:3:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "425:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 103,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "425:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 106,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "453:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "445:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 105,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "445:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 108,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "480:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "472:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 107,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "472:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 110,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "506:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "498:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 109,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "498:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 112,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "532:16:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "524:24:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 111,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "524:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 114,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "566:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "558:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 113,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "558:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputSingleParams",
									"nameLocation": "341:22:2",
									"nodeType": "StructDefinition",
									"scope": 191,
									"src": "334:256:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "596:250:2",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another token\n @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "414bf389",
									"id": 124,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInputSingle",
									"nameLocation": "860:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "909:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "877:38:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputSingleParams"
												},
												"typeName": {
													"id": 118,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 117,
														"name": "ExactInputSingleParams",
														"nameLocations": [
															"877:22:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 115,
														"src": "877:22:2"
													},
													"referencedDeclaration": 115,
													"src": "877:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:40:2"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "951:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "943:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "943:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "942:19:2"
									},
									"scope": 191,
									"src": "851:111:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactInputParams",
									"id": 135,
									"members": [
										{
											"constant": false,
											"id": 126,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "1008:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "1002:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 125,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1002:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 128,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1030:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "1022:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 127,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1022:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 130,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1057:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "1049:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 129,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1049:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 132,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "1083:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "1075:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 131,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1075:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 134,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "1109:16:2",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "1101:24:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 133,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1101:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputParams",
									"nameLocation": "975:16:2",
									"nodeType": "StructDefinition",
									"scope": 191,
									"src": "968:164:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "1138:273:2",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "c04b8d59",
									"id": 144,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInput",
									"nameLocation": "1425:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "1462:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1436:32:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputParams_$135_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputParams"
												},
												"typeName": {
													"id": 138,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 137,
														"name": "ExactInputParams",
														"nameLocations": [
															"1436:16:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 135,
														"src": "1436:16:2"
													},
													"referencedDeclaration": 135,
													"src": "1436:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputParams_$135_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1435:34:2"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1504:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1496:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1496:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:19:2"
									},
									"scope": 191,
									"src": "1416:99:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputSingleParams",
									"id": 161,
									"members": [
										{
											"constant": false,
											"id": 146,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "1570:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1562:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 145,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1562:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 148,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "1595:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1587:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 147,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1587:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 150,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "1620:3:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1613:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 149,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "1613:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 152,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1641:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1633:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 151,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1633:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 154,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1668:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1660:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 153,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1660:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 156,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "1694:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1686:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 155,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1686:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 158,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "1721:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1713:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 157,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1713:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 160,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "1754:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1746:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 159,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "1746:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputSingleParams",
									"nameLocation": "1528:23:2",
									"nodeType": "StructDefinition",
									"scope": 191,
									"src": "1521:257:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "1784:250:2",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another token\n @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "db3e2198",
									"id": 170,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutputSingle",
									"nameLocation": "2048:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2099:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "2066:39:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputSingleParams_$161_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputSingleParams"
												},
												"typeName": {
													"id": 164,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 163,
														"name": "ExactOutputSingleParams",
														"nameLocations": [
															"2066:23:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 161,
														"src": "2066:23:2"
													},
													"referencedDeclaration": 161,
													"src": "2066:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputSingleParams_$161_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2065:41:2"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2141:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "2133:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2133:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2132:18:2"
									},
									"scope": 191,
									"src": "2039:112:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputParams",
									"id": 181,
									"members": [
										{
											"constant": false,
											"id": 172,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "2198:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "2192:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 171,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "2192:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 174,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "2220:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "2212:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 173,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2212:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 176,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "2247:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "2239:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 175,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2239:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 178,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "2273:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "2265:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 177,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2265:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 180,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "2300:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "2292:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 179,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2292:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputParams",
									"nameLocation": "2164:17:2",
									"nodeType": "StructDefinition",
									"scope": 191,
									"src": "2157:165:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "2328:284:2",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "f28c0498",
									"id": 190,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutput",
									"nameLocation": "2626:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2665:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "2638:33:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputParams_$181_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputParams"
												},
												"typeName": {
													"id": 184,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 183,
														"name": "ExactOutputParams",
														"nameLocations": [
															"2638:17:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 181,
														"src": "2638:17:2"
													},
													"referencedDeclaration": 181,
													"src": "2638:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputParams_$181_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2637:35:2"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2707:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "2699:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2698:18:2"
									},
									"scope": 191,
									"src": "2617:100:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 192,
							"src": "280:2439:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:2675:2"
				},
				"id": 2
			},
			"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"TransferHelper": [
							362
						]
					},
					"id": 363,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 193,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 194,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 363,
							"sourceUnit": 78,
							"src": "71:56:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TransferHelper",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 362,
							"linearizedBaseContracts": [
								362
							],
							"name": "TransferHelper",
							"nameLocation": "137:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 242,
										"nodeType": "Block",
										"src": "690:229:3",
										"statements": [
											{
												"assignments": [
													207,
													209
												],
												"declarations": [
													{
														"constant": false,
														"id": 207,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "706:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 242,
														"src": "701:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 206,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "701:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 209,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "728:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 242,
														"src": "715:17:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 208,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "715:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 222,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 214,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "782:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "789:12:3",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 76,
																		"src": "782:19:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.transferFrom(address,address,uint256) returns (bool)"
																		}
																	},
																	"id": 216,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "802:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "782:28:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 217,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 199,
																	"src": "812:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 218,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "818:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 219,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 203,
																	"src": "822:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 212,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "759:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 213,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "763:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "759:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "759:69:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 210,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "748:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 211,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "754:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "748:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "748:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "700:129:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 224,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 207,
																"src": "847:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 228,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 225,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 209,
																					"src": "859:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 226,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "864:6:3",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "859:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 227,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "874:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "859:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 231,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 209,
																					"src": "890:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 233,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "897:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 232,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "897:4:3",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 234,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "896:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 229,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "879:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 230,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "883:6:3",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "879:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 235,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "879:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "859:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 237,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "858:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "847:57:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "535446",
															"id": 239,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "906:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
																"typeString": "literal_string \"STF\""
															},
															"value": "STF"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
																"typeString": "literal_string \"STF\""
															}
														],
														"id": 223,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "839:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "839:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 241,
												"nodeType": "ExpressionStatement",
												"src": "839:73:3"
											}
										]
									},
									"documentation": {
										"id": 195,
										"nodeType": "StructuredDocumentation",
										"src": "158:398:3",
										"text": "@notice Transfers tokens from the targeted address to the given destination\n @notice Errors with 'STF' if transfer fails\n @param token The contract address of the token to be transferred\n @param from The originating address from which the tokens will be transferred\n @param to The destination address of the transfer\n @param value The amount to be transferred"
									},
									"id": 243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "570:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "604:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "596:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "627:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "619:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "649:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "641:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "641:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "669:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "661:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "661:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "586:94:3"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "690:0:3"
									},
									"scope": 362,
									"src": "561:358:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 288,
										"nodeType": "Block",
										"src": "1314:206:3",
										"statements": [
											{
												"assignments": [
													254,
													256
												],
												"declarations": [
													{
														"constant": false,
														"id": 254,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1330:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 288,
														"src": "1325:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 253,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1325:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 256,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "1352:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 288,
														"src": "1339:17:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 255,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1339:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 268,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 261,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "1394:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "1401:8:3",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 44,
																		"src": "1394:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.transfer(address,uint256) returns (bool)"
																		}
																	},
																	"id": 263,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "1410:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1394:24:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 264,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 248,
																	"src": "1420:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 265,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 250,
																	"src": "1424:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 259,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1371:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 260,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1375:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1371:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1371:59:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 257,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "1360:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 258,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1366:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "1360:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1360:71:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1324:107:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 270,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 254,
																"src": "1449:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 271,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 256,
																					"src": "1461:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 272,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1466:6:3",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "1461:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 273,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1476:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1461:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 277,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 256,
																					"src": "1492:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 279,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1499:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 278,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "1499:4:3",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 280,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1498:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 275,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "1481:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 276,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "1485:6:3",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "1481:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 281,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1481:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1461:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 283,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1460:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1449:57:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5354",
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1508:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
																"typeString": "literal_string \"ST\""
															},
															"value": "ST"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
																"typeString": "literal_string \"ST\""
															}
														],
														"id": 269,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1441:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1441:72:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 287,
												"nodeType": "ExpressionStatement",
												"src": "1441:72:3"
											}
										]
									},
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "925:281:3",
										"text": "@notice Transfers tokens from msg.sender to a recipient\n @dev Errors with ST if transfer fails\n @param token The contract address of the token which will be transferred\n @param to The recipient of the transfer\n @param value The value of the transfer"
									},
									"id": 289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1220:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1250:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "1242:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1242:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1273:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "1265:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1265:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1293:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "1285:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1232:72:3"
									},
									"returnParameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1314:0:3"
									},
									"scope": 362,
									"src": "1211:309:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "1975:205:3",
										"statements": [
											{
												"assignments": [
													300,
													302
												],
												"declarations": [
													{
														"constant": false,
														"id": 300,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1991:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 334,
														"src": "1986:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 299,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1986:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 302,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "2013:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 334,
														"src": "2000:17:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 301,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2000:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 314,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 307,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "2055:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2062:7:3",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 64,
																		"src": "2055:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.approve(address,uint256) returns (bool)"
																		}
																	},
																	"id": 309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2070:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2055:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 310,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 294,
																	"src": "2080:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 311,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 296,
																	"src": "2084:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 305,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2032:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2036:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2032:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2032:58:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 303,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "2021:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 304,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2027:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "2021:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2021:70:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1985:106:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 316,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 300,
																"src": "2109:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 328,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 320,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 317,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 302,
																					"src": "2121:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 318,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2126:6:3",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "2121:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 319,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2136:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2121:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 323,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 302,
																					"src": "2152:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 325,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "2159:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 324,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "2159:4:3",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 326,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "2158:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 321,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "2141:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 322,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "2145:6:3",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "2141:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 327,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2141:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2121:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 329,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2120:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2109:57:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5341",
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2168:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
																"typeString": "literal_string \"SA\""
															},
															"value": "SA"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
																"typeString": "literal_string \"SA\""
															}
														],
														"id": 315,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2101:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2101:72:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 333,
												"nodeType": "ExpressionStatement",
												"src": "2101:72:3"
											}
										]
									},
									"documentation": {
										"id": 290,
										"nodeType": "StructuredDocumentation",
										"src": "1526:342:3",
										"text": "@notice Approves the stipulated contract to spend the given allowance in the given token\n @dev Errors with 'SA' if transfer fails\n @param token The contract address of the token to be approved\n @param to The target of the approval\n @param value The amount of the given token the target will be allowed to spend"
									},
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1882:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1911:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1903:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1903:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1934:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1926:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1926:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1954:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1946:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1946:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1893:72:3"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1975:0:3"
									},
									"scope": 362,
									"src": "1873:307:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "2431:104:3",
										"statements": [
											{
												"assignments": [
													344,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 344,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2447:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 360,
														"src": "2442:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 343,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2442:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 354,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 351,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2492:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "2482:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 349,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "2486:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2482:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 345,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 338,
																"src": "2460:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2463:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2460:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 347,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 340,
																"src": "2475:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2460:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2441:54:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 356,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "2513:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "535445",
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2522:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4",
																"typeString": "literal_string \"STE\""
															},
															"value": "STE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4",
																"typeString": "literal_string \"STE\""
															}
														],
														"id": 355,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2505:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2505:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 359,
												"nodeType": "ExpressionStatement",
												"src": "2505:23:3"
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "2186:179:3",
										"text": "@notice Transfers ETH to the recipient address\n @dev Fails with `STE`\n @param to The destination of the transfer\n @param value The value to be transferred"
									},
									"id": 361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferETH",
									"nameLocation": "2379:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2403:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2395:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2415:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2407:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2407:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:27:3"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2431:0:3"
									},
									"scope": 362,
									"src": "2370:165:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 363,
							"src": "129:2408:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:2493:3"
				},
				"id": 3
			},
			"TEST/swap.sol": {
				"ast": {
					"absolutePath": "TEST/swap.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"ISwapRouter": [
							191
						],
						"IUniswapV3SwapCallback": [
							91
						],
						"SwapExamples": [
							539
						],
						"TransferHelper": [
							362
						]
					},
					"id": 540,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 364,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:23:4"
						},
						{
							"id": 365,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "71:19:4"
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
							"file": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
							"id": 366,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 540,
							"sourceUnit": 363,
							"src": "94:70:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
							"file": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
							"id": 367,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 540,
							"sourceUnit": 192,
							"src": "166:68:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SwapExamples",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 539,
							"linearizedBaseContracts": [
								539
							],
							"name": "SwapExamples",
							"nameLocation": "247:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "c31c9c07",
									"id": 370,
									"mutability": "immutable",
									"name": "swapRouter",
									"nameLocation": "301:10:4",
									"nodeType": "VariableDeclaration",
									"scope": 539,
									"src": "272:39:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ISwapRouter_$191",
										"typeString": "contract ISwapRouter"
									},
									"typeName": {
										"id": 369,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 368,
											"name": "ISwapRouter",
											"nameLocations": [
												"272:11:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 191,
											"src": "272:11:4"
										},
										"referencedDeclaration": 191,
										"src": "272:11:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ISwapRouter_$191",
											"typeString": "contract ISwapRouter"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e0bab4c4",
									"id": 373,
									"mutability": "constant",
									"name": "DAI",
									"nameLocation": "346:3:4",
									"nodeType": "VariableDeclaration",
									"scope": 539,
									"src": "322:72:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 371,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "322:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307836423137353437344538393039344334344461393862393534456564654143343935323731643046",
										"id": 372,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "352:42:4",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x6B175474E89094C44Da98b954EedeAC495271d0F"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "4aa4a4fc",
									"id": 376,
									"mutability": "constant",
									"name": "WETH9",
									"nameLocation": "425:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 539,
									"src": "401:74:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 374,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "401:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307843303261614133396232323346453844304130653543344632376541443930383343373536436332",
										"id": 375,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "433:42:4",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "89a30271",
									"id": 379,
									"mutability": "constant",
									"name": "USDC",
									"nameLocation": "506:4:4",
									"nodeType": "VariableDeclaration",
									"scope": 539,
									"src": "482:73:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 377,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "482:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307841306238363939316336323138623336633164313944346132653945623063453336303665423438",
										"id": 378,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "513:42:4",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "089fe6aa",
									"id": 382,
									"mutability": "constant",
									"name": "poolFee",
									"nameLocation": "647:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 539,
									"src": "624:37:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint24",
										"typeString": "uint24"
									},
									"typeName": {
										"id": 380,
										"name": "uint24",
										"nodeType": "ElementaryTypeName",
										"src": "624:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint24",
											"typeString": "uint24"
										}
									},
									"value": {
										"hexValue": "33303030",
										"id": 381,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "657:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3000_by_1",
											"typeString": "int_const 3000"
										},
										"value": "3000"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 392,
										"nodeType": "Block",
										"src": "707:43:4",
										"statements": [
											{
												"expression": {
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 388,
														"name": "swapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "718:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISwapRouter_$191",
															"typeString": "contract ISwapRouter"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 389,
														"name": "_swapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "731:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISwapRouter_$191",
															"typeString": "contract ISwapRouter"
														}
													},
													"src": "718:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISwapRouter_$191",
														"typeString": "contract ISwapRouter"
													}
												},
												"id": 391,
												"nodeType": "ExpressionStatement",
												"src": "718:24:4"
											}
										]
									},
									"id": 393,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "_swapRouter",
												"nameLocation": "694:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "682:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISwapRouter_$191",
													"typeString": "contract ISwapRouter"
												},
												"typeName": {
													"id": 384,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 383,
														"name": "ISwapRouter",
														"nameLocations": [
															"682:11:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 191,
														"src": "682:11:4"
													},
													"referencedDeclaration": 191,
													"src": "682:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISwapRouter_$191",
														"typeString": "contract ISwapRouter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "681:25:4"
									},
									"returnParameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "707:0:4"
									},
									"scope": 539,
									"src": "670:80:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 450,
										"nodeType": "Block",
										"src": "843:762:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 403,
															"name": "DAI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "892:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 404,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "897:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "901:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "897:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 408,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "917:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SwapExamples_$539",
																		"typeString": "contract SwapExamples"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SwapExamples_$539",
																		"typeString": "contract SwapExamples"
																	}
																],
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "909:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 406,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "909:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "909:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 410,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "924:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 400,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "860:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$362_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 402,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "875:16:4",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 243,
														"src": "860:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "860:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 412,
												"nodeType": "ExpressionStatement",
												"src": "860:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 416,
															"name": "DAI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "1018:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 419,
																	"name": "swapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 370,
																	"src": "1031:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ISwapRouter_$191",
																		"typeString": "contract ISwapRouter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ISwapRouter_$191",
																		"typeString": "contract ISwapRouter"
																	}
																],
																"id": 418,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1023:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 417,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1023:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1023:19:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 421,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "1044:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 413,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "991:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$362_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 415,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1006:11:4",
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 335,
														"src": "991:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "991:62:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 423,
												"nodeType": "ExpressionStatement",
												"src": "991:62:4"
											},
											{
												"assignments": [
													428
												],
												"declarations": [
													{
														"constant": false,
														"id": 428,
														"mutability": "mutable",
														"name": "params",
														"nameLocation": "1108:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 450,
														"src": "1066:48:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_memory_ptr",
															"typeString": "struct ISwapRouter.ExactInputSingleParams"
														},
														"typeName": {
															"id": 427,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 426,
																"name": "ISwapRouter.ExactInputSingleParams",
																"nameLocations": [
																	"1066:11:4",
																	"1078:22:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 115,
																"src": "1066:34:4"
															},
															"referencedDeclaration": 115,
															"src": "1066:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_storage_ptr",
																"typeString": "struct ISwapRouter.ExactInputSingleParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 442,
												"initialValue": {
													"arguments": [
														{
															"id": 431,
															"name": "DAI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "1193:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 432,
															"name": "WETH9",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "1225:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 433,
															"name": "poolFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 382,
															"src": "1254:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														{
															"expression": {
																"id": 434,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1291:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1295:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1291:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 436,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1330:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1336:9:4",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1330:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 438,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "1374:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1419:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1458:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"id": 429,
															"name": "ISwapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "1130:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ISwapRouter_$191_$",
																"typeString": "type(contract ISwapRouter)"
															}
														},
														"id": 430,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1142:22:4",
														"memberName": "ExactInputSingleParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 115,
														"src": "1130:34:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$115_storage_ptr_$",
															"typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"1184:7:4",
														"1215:8:4",
														"1249:3:4",
														"1280:9:4",
														"1320:8:4",
														"1364:8:4",
														"1401:16:4",
														"1439:17:4"
													],
													"names": [
														"tokenIn",
														"tokenOut",
														"fee",
														"recipient",
														"deadline",
														"amountIn",
														"amountOutMinimum",
														"sqrtPriceLimitX96"
													],
													"nodeType": "FunctionCall",
													"src": "1130:345:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_memory_ptr",
														"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1066:409:4"
											},
											{
												"expression": {
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 443,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "1550:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 446,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 428,
																"src": "1590:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
																}
															],
															"expression": {
																"id": 444,
																"name": "swapRouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 370,
																"src": "1562:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ISwapRouter_$191",
																	"typeString": "contract ISwapRouter"
																}
															},
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1573:16:4",
															"memberName": "exactInputSingle",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 124,
															"src": "1562:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$115_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
															}
														},
														"id": 447,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1562:35:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1550:47:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 449,
												"nodeType": "ExpressionStatement",
												"src": "1550:47:4"
											}
										]
									},
									"functionSelector": "73bd43ad",
									"id": 451,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactInputSingle",
									"nameLocation": "767:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "796:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "788:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "788:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:18:4"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "832:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "824:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "824:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "823:19:4"
									},
									"scope": 539,
									"src": "758:847:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "1724:1063:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 463,
															"name": "DAI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "1834:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 464,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1839:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1843:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1839:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 468,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1859:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SwapExamples_$539",
																		"typeString": "contract SwapExamples"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SwapExamples_$539",
																		"typeString": "contract SwapExamples"
																	}
																],
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1851:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 466,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1851:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1851:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "amountInMaximum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "1866:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 460,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "1802:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$362_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 462,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1817:16:4",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 243,
														"src": "1802:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1802:80:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "1802:80:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 476,
															"name": "DAI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "1922:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 479,
																	"name": "swapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 370,
																	"src": "1935:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ISwapRouter_$191",
																		"typeString": "contract ISwapRouter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ISwapRouter_$191",
																		"typeString": "contract ISwapRouter"
																	}
																],
																"id": 478,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1927:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 477,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1927:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1927:19:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 481,
															"name": "amountInMaximum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "1948:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 473,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "1895:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$362_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 475,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1910:11:4",
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 335,
														"src": "1895:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 483,
												"nodeType": "ExpressionStatement",
												"src": "1895:69:4"
											},
											{
												"assignments": [
													488
												],
												"declarations": [
													{
														"constant": false,
														"id": 488,
														"mutability": "mutable",
														"name": "params",
														"nameLocation": "2020:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 537,
														"src": "1977:49:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ExactOutputSingleParams_$161_memory_ptr",
															"typeString": "struct ISwapRouter.ExactOutputSingleParams"
														},
														"typeName": {
															"id": 487,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 486,
																"name": "ISwapRouter.ExactOutputSingleParams",
																"nameLocations": [
																	"1977:11:4",
																	"1989:23:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 161,
																"src": "1977:35:4"
															},
															"referencedDeclaration": 161,
															"src": "1977:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactOutputSingleParams_$161_storage_ptr",
																"typeString": "struct ISwapRouter.ExactOutputSingleParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 502,
												"initialValue": {
													"arguments": [
														{
															"id": 491,
															"name": "DAI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "2106:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 492,
															"name": "WETH9",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "2138:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 493,
															"name": "poolFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 382,
															"src": "2167:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														{
															"expression": {
																"id": 494,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2204:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2208:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2204:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 496,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2243:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2249:9:4",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2243:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 498,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "2288:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 499,
															"name": "amountInMaximum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "2333:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2386:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"id": 489,
															"name": "ISwapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "2042:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ISwapRouter_$191_$",
																"typeString": "type(contract ISwapRouter)"
															}
														},
														"id": 490,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2054:23:4",
														"memberName": "ExactOutputSingleParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 161,
														"src": "2042:35:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_ExactOutputSingleParams_$161_storage_ptr_$",
															"typeString": "type(struct ISwapRouter.ExactOutputSingleParams storage pointer)"
														}
													},
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"2097:7:4",
														"2128:8:4",
														"2162:3:4",
														"2193:9:4",
														"2233:8:4",
														"2277:9:4",
														"2316:15:4",
														"2367:17:4"
													],
													"names": [
														"tokenIn",
														"tokenOut",
														"fee",
														"recipient",
														"deadline",
														"amountOut",
														"amountInMaximum",
														"sqrtPriceLimitX96"
													],
													"nodeType": "FunctionCall",
													"src": "2042:361:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputSingleParams_$161_memory_ptr",
														"typeString": "struct ISwapRouter.ExactOutputSingleParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1977:426:4"
											},
											{
												"expression": {
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 503,
														"name": "amountIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "2519:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 506,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 488,
																"src": "2559:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ExactOutputSingleParams_$161_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactOutputSingleParams memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_ExactOutputSingleParams_$161_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactOutputSingleParams memory"
																}
															],
															"expression": {
																"id": 504,
																"name": "swapRouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 370,
																"src": "2530:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ISwapRouter_$191",
																	"typeString": "contract ISwapRouter"
																}
															},
															"id": 505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2541:17:4",
															"memberName": "exactOutputSingle",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 170,
															"src": "2530:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_struct$_ExactOutputSingleParams_$161_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (struct ISwapRouter.ExactOutputSingleParams memory) payable external returns (uint256)"
															}
														},
														"id": 507,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2530:36:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2519:47:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 509,
												"nodeType": "ExpressionStatement",
												"src": "2519:47:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 510,
														"name": "amountIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "2583:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 511,
														"name": "amountInMaximum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 455,
														"src": "2594:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2583:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 536,
												"nodeType": "IfStatement",
												"src": "2579:201:4",
												"trueBody": {
													"id": 535,
													"nodeType": "Block",
													"src": "2611:169:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 516,
																		"name": "DAI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 373,
																		"src": "2653:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 519,
																				"name": "swapRouter",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 370,
																				"src": "2666:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ISwapRouter_$191",
																					"typeString": "contract ISwapRouter"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_ISwapRouter_$191",
																					"typeString": "contract ISwapRouter"
																				}
																			],
																			"id": 518,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2658:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 517,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2658:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 520,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2658:19:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 521,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2679:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 513,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 362,
																		"src": "2626:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$362_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2641:11:4",
																	"memberName": "safeApprove",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 335,
																	"src": "2626:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 522,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2626:55:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 523,
															"nodeType": "ExpressionStatement",
															"src": "2626:55:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 527,
																		"name": "DAI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 373,
																		"src": "2724:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 528,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2729:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 529,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2733:6:4",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2729:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 530,
																			"name": "amountInMaximum",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 455,
																			"src": "2741:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 531,
																			"name": "amountIn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 458,
																			"src": "2759:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2741:26:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 524,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 362,
																		"src": "2696:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$362_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2711:12:4",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 289,
																	"src": "2696:27:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2696:72:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 534,
															"nodeType": "ExpressionStatement",
															"src": "2696:72:4"
														}
													]
												}
											}
										]
									},
									"functionSelector": "c4b69a18",
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactOutputSingle",
									"nameLocation": "1622:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1652:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "1644:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1644:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "amountInMaximum",
												"nameLocation": "1671:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "1663:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1663:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:44:4"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1714:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "1706:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1706:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1705:18:4"
									},
									"scope": 539,
									"src": "1613:1174:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 540,
							"src": "238:2552:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "46:2744:4"
				},
				"id": 4
			}
		}
	}
}