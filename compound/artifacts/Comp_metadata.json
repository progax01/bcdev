{
	"compiler": {
		"version": "0.8.21+commit.d9974bed"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Approval",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "delegator",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "fromDelegate",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "toDelegate",
						"type": "address"
					}
				],
				"name": "DelegateChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "delegate",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "previousBalance",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newBalance",
						"type": "uint256"
					}
				],
				"name": "DelegateVotesChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Transfer",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "DELEGATION_TYPEHASH",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "DOMAIN_TYPEHASH",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					}
				],
				"name": "allowance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "rawAmount",
						"type": "uint256"
					}
				],
				"name": "approve",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint32",
						"name": "",
						"type": "uint32"
					}
				],
				"name": "checkpoints",
				"outputs": [
					{
						"internalType": "uint32",
						"name": "fromBlock",
						"type": "uint32"
					},
					{
						"internalType": "uint96",
						"name": "votes",
						"type": "uint96"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "decimals",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "delegatee",
						"type": "address"
					}
				],
				"name": "delegate",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "delegatee",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "nonce",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "expiry",
						"type": "uint256"
					},
					{
						"internalType": "uint8",
						"name": "v",
						"type": "uint8"
					},
					{
						"internalType": "bytes32",
						"name": "r",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "s",
						"type": "bytes32"
					}
				],
				"name": "delegateBySig",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "delegates",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "getCurrentVotes",
				"outputs": [
					{
						"internalType": "uint96",
						"name": "",
						"type": "uint96"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "blockNumber",
						"type": "uint256"
					}
				],
				"name": "getPriorVotes",
				"outputs": [
					{
						"internalType": "uint96",
						"name": "",
						"type": "uint96"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "nonces",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "numCheckpoints",
				"outputs": [
					{
						"internalType": "uint32",
						"name": "",
						"type": "uint32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "symbol",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "dst",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "rawAmount",
						"type": "uint256"
					}
				],
				"name": "transfer",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "src",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "dst",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "rawAmount",
						"type": "uint256"
					}
				],
				"name": "transferFrom",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"allowance(address,address)": {
					"params": {
						"account": "The address of the account holding the funds",
						"spender": "The address of the account spending the funds"
					},
					"returns": {
						"_0": "The number of tokens approved"
					}
				},
				"approve(address,uint256)": {
					"details": "This will overwrite the approval amount for `spender`  and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)",
					"params": {
						"rawAmount": "The number of tokens that are approved (2^256-1 means infinite)",
						"spender": "The address of the account which may transfer tokens"
					},
					"returns": {
						"_0": "Whether or not the approval succeeded"
					}
				},
				"balanceOf(address)": {
					"params": {
						"account": "The address of the account to get the balance of"
					},
					"returns": {
						"_0": "The number of tokens held"
					}
				},
				"constructor": {
					"params": {
						"account": "The initial account to grant all the tokens"
					}
				},
				"delegate(address)": {
					"params": {
						"delegatee": "The address to delegate votes to"
					}
				},
				"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
					"params": {
						"delegatee": "The address to delegate votes to",
						"expiry": "The time at which to expire the signature",
						"nonce": "The contract state required to match the signature",
						"r": "Half of the ECDSA signature pair",
						"s": "Half of the ECDSA signature pair",
						"v": "The recovery byte of the signature"
					}
				},
				"getCurrentVotes(address)": {
					"params": {
						"account": "The address to get votes balance"
					},
					"returns": {
						"_0": "The number of current votes for `account`"
					}
				},
				"getPriorVotes(address,uint256)": {
					"details": "Block number must be a finalized block or else this function will revert to prevent misinformation.",
					"params": {
						"account": "The address of the account to check",
						"blockNumber": "The block number to get the vote balance at"
					},
					"returns": {
						"_0": "The number of votes the account had as of the given block"
					}
				},
				"transfer(address,uint256)": {
					"params": {
						"dst": "The address of the destination account",
						"rawAmount": "The number of tokens to transfer"
					},
					"returns": {
						"_0": "Whether or not the transfer succeeded"
					}
				},
				"transferFrom(address,address,uint256)": {
					"params": {
						"dst": "The address of the destination account",
						"rawAmount": "The number of tokens to transfer",
						"src": "The address of the source account"
					},
					"returns": {
						"_0": "Whether or not the transfer succeeded"
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"events": {
				"Approval(address,address,uint256)": {
					"notice": "The standard EIP-20 approval event"
				},
				"DelegateChanged(address,address,address)": {
					"notice": "An event thats emitted when an account changes its delegate"
				},
				"DelegateVotesChanged(address,uint256,uint256)": {
					"notice": "An event thats emitted when a delegate account's vote balance changes"
				},
				"Transfer(address,address,uint256)": {
					"notice": "The standard EIP-20 transfer event"
				}
			},
			"kind": "user",
			"methods": {
				"DELEGATION_TYPEHASH()": {
					"notice": "The EIP-712 typehash for the delegation struct used by the contract"
				},
				"DOMAIN_TYPEHASH()": {
					"notice": "The EIP-712 typehash for the contract's domain"
				},
				"allowance(address,address)": {
					"notice": "Get the number of tokens `spender` is approved to spend on behalf of `account`"
				},
				"approve(address,uint256)": {
					"notice": "Approve `spender` to transfer up to `amount` from `src`"
				},
				"balanceOf(address)": {
					"notice": "Get the number of tokens held by the `account`"
				},
				"checkpoints(address,uint32)": {
					"notice": "A record of votes checkpoints for each account, by index"
				},
				"constructor": {
					"notice": "Construct a new Comp token"
				},
				"decimals()": {
					"notice": "EIP-20 token decimals for this token"
				},
				"delegate(address)": {
					"notice": "Delegate votes from `msg.sender` to `delegatee`"
				},
				"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
					"notice": "Delegates votes from signatory to `delegatee`"
				},
				"delegates(address)": {
					"notice": "A record of each accounts delegate"
				},
				"getCurrentVotes(address)": {
					"notice": "Gets the current votes balance for `account`"
				},
				"getPriorVotes(address,uint256)": {
					"notice": "Determine the prior number of votes for an account as of a block number"
				},
				"name()": {
					"notice": "EIP-20 token name for this token"
				},
				"nonces(address)": {
					"notice": "A record of states for signing / validating signatures"
				},
				"numCheckpoints(address)": {
					"notice": "The number of checkpoints for each account"
				},
				"symbol()": {
					"notice": "EIP-20 token symbol for this token"
				},
				"totalSupply()": {
					"notice": "Total number of tokens in circulation"
				},
				"transfer(address,uint256)": {
					"notice": "Transfer `amount` tokens from `msg.sender` to `dst`"
				},
				"transferFrom(address,address,uint256)": {
					"notice": "Transfer `amount` tokens from `src` to `dst`"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"Ctoken.sol": "Comp"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"Ctoken.sol": {
			"keccak256": "0x80d02aa1b40a8f327129fbc4ff246e5127b84d20e7fe415f4265c9e728a6f0a7",
			"license": "BSD-3-Clause",
			"urls": [
				"bzz-raw://17f35442ae68c47ba22ae736b9aa27e761aa72f6c5af952d0a9de72105ee4531",
				"dweb:/ipfs/QmcFUci2fqjsmRujNyxcAqatgXRrT9z7KfyRNPMq3MDazy"
			]
		}
	},
	"version": 1
}