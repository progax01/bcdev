{
	"id": "921f26d21d4172db4aca2b4ed2b68671",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.12",
	"solcLongVersion": "0.5.12+commit.7709ece9",
	"input": {
		"language": "Solidity",
		"sources": {
			"DaiToken.sol": {
				"content": "/**\r\n *Submitted for verification at Etherscan.io on 2019-11-14\r\n*/\r\n\r\n// hevm: flattened sources of /nix/store/8xb41r4qd0cjb63wcrxf1qmfg88p0961-dss-6fd7de0/src/dai.sol\r\npragma solidity ^0.5.12;\r\n\r\n////// /nix/store/8xb41r4qd0cjb63wcrxf1qmfg88p0961-dss-6fd7de0/src/lib.sol\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n\r\n// You should have received a copy of the GNU General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/* pragma solidity 0.5.12; */\r\n\r\ncontract LibNote {\r\n    event LogNote(\r\n        bytes4   indexed  sig,\r\n        address  indexed  usr,\r\n        bytes32  indexed  arg1,\r\n        bytes32  indexed  arg2,\r\n        bytes             data\r\n    ) anonymous;\r\n\r\n    modifier note {\r\n        _;\r\n        assembly {\r\n            // log an 'anonymous' event with a constant 6 words of calldata\r\n            // and four indexed topics: selector, caller, arg1 and arg2\r\n            let mark := msize                         // end of memory ensures zero\r\n            mstore(0x40, add(mark, 288))              // update free memory pointer\r\n            mstore(mark, 0x20)                        // bytes type data offset\r\n            mstore(add(mark, 0x20), 224)              // bytes size (padded)\r\n            calldatacopy(add(mark, 0x40), 0, 224)     // bytes payload\r\n            log4(mark, 288,                           // calldata\r\n                 shl(224, shr(224, calldataload(0))), // msg.sig\r\n                 caller,                              // msg.sender\r\n                 calldataload(4),                     // arg1\r\n                 calldataload(36)                     // arg2\r\n                )\r\n        }\r\n    }\r\n}\r\n\r\n////// /nix/store/8xb41r4qd0cjb63wcrxf1qmfg88p0961-dss-6fd7de0/src/dai.sol\r\n// Copyright (C) 2017, 2018, 2019 dbrock, rain, mrchico\r\n\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n/* pragma solidity 0.5.12; */\r\n\r\n/* import \"./lib.sol\"; */\r\n\r\ncontract Dai is LibNote {\r\n    // --- Auth ---\r\n    mapping (address => uint) public wards;\r\n    function rely(address guy) external note auth { wards[guy] = 1; }\r\n    function deny(address guy) external note auth { wards[guy] = 0; }\r\n    modifier auth {\r\n        require(wards[msg.sender] == 1, \"Dai/not-authorized\");\r\n        _;\r\n    }\r\n\r\n    // --- ERC20 Data ---\r\n    string  public constant name     = \"Dai Stablecoin\";\r\n    string  public constant symbol   = \"DAI\";\r\n    string  public constant version  = \"1\";\r\n    uint8   public constant decimals = 18;\r\n    uint256 public totalSupply;\r\n\r\n    mapping (address => uint)                      public balanceOf;\r\n    mapping (address => mapping (address => uint)) public allowance;\r\n    mapping (address => uint)                      public nonces;\r\n\r\n    event Approval(address indexed src, address indexed guy, uint wad);\r\n    event Transfer(address indexed src, address indexed dst, uint wad);\r\n\r\n    // --- Math ---\r\n    function add(uint x, uint y) internal pure returns (uint z) {\r\n        require((z = x + y) >= x);\r\n    }\r\n    function sub(uint x, uint y) internal pure returns (uint z) {\r\n        require((z = x - y) <= x);\r\n    }\r\n\r\n    // --- EIP712 niceties ---\r\n    bytes32 public DOMAIN_SEPARATOR;\r\n    // bytes32 public constant PERMIT_TYPEHASH = keccak256(\"Permit(address holder,address spender,uint256 nonce,uint256 expiry,bool allowed)\");\r\n    bytes32 public constant PERMIT_TYPEHASH = 0xea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb;\r\n\r\n    constructor(uint256 chainId_) public {\r\n        wards[msg.sender] = 1;\r\n        DOMAIN_SEPARATOR = keccak256(abi.encode(\r\n            keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"),\r\n            keccak256(bytes(name)),\r\n            keccak256(bytes(version)),\r\n            chainId_,\r\n            address(this)\r\n        ));\r\n    }\r\n\r\n    // --- Token ---\r\n    function transfer(address dst, uint wad) external returns (bool) {\r\n        return transferFrom(msg.sender, dst, wad);\r\n    }\r\n    function transferFrom(address src, address dst, uint wad)\r\n        public returns (bool)\r\n    {\r\n        require(balanceOf[src] >= wad, \"Dai/insufficient-balance\");\r\n        if (src != msg.sender && allowance[src][msg.sender] != uint(-1)) {\r\n            require(allowance[src][msg.sender] >= wad, \"Dai/insufficient-allowance\");\r\n            allowance[src][msg.sender] = sub(allowance[src][msg.sender], wad);\r\n        }\r\n        balanceOf[src] = sub(balanceOf[src], wad);\r\n        balanceOf[dst] = add(balanceOf[dst], wad);\r\n        emit Transfer(src, dst, wad);\r\n        return true;\r\n    }\r\n    function mint(address usr, uint wad) external auth {\r\n        balanceOf[usr] = add(balanceOf[usr], wad);\r\n        totalSupply    = add(totalSupply, wad);\r\n        emit Transfer(address(0), usr, wad);\r\n    }\r\n    function burn(address usr, uint wad) external {\r\n        require(balanceOf[usr] >= wad, \"Dai/insufficient-balance\");\r\n        if (usr != msg.sender && allowance[usr][msg.sender] != uint(-1)) {\r\n            require(allowance[usr][msg.sender] >= wad, \"Dai/insufficient-allowance\");\r\n            allowance[usr][msg.sender] = sub(allowance[usr][msg.sender], wad);\r\n        }\r\n        balanceOf[usr] = sub(balanceOf[usr], wad);\r\n        totalSupply    = sub(totalSupply, wad);\r\n        emit Transfer(usr, address(0), wad);\r\n    }\r\n    function approve(address usr, uint wad) external returns (bool) {\r\n        allowance[msg.sender][usr] = wad;\r\n        emit Approval(msg.sender, usr, wad);\r\n        return true;\r\n    }\r\n\r\n    // --- Alias ---\r\n    function push(address usr, uint wad) external {\r\n        transferFrom(msg.sender, usr, wad);\r\n    }\r\n    function pull(address usr, uint wad) external {\r\n        transferFrom(usr, msg.sender, wad);\r\n    }\r\n    function move(address src, address dst, uint wad) external {\r\n        transferFrom(src, dst, wad);\r\n    }\r\n\r\n    // --- Approve by signature ---\r\n    function permit(address holder, address spender, uint256 nonce, uint256 expiry,\r\n                    bool allowed, uint8 v, bytes32 r, bytes32 s) external\r\n    {\r\n        bytes32 digest =\r\n            keccak256(abi.encodePacked(\r\n                \"\\x19\\x01\",\r\n                DOMAIN_SEPARATOR,\r\n                keccak256(abi.encode(PERMIT_TYPEHASH,\r\n                                     holder,\r\n                                     spender,\r\n                                     nonce,\r\n                                     expiry,\r\n                                     allowed))\r\n        ));\r\n\r\n        require(holder != address(0), \"Dai/invalid-address-0\");\r\n        require(holder == ecrecover(digest, v, r, s), \"Dai/invalid-permit\");\r\n        require(expiry == 0 || now <= expiry, \"Dai/permit-expired\");\r\n        require(nonce == nonces[holder]++, \"Dai/invalid-nonce\");\r\n        uint wad = allowed ? uint(-1) : 0;\r\n        allowance[holder][spender] = wad;\r\n        emit Approval(holder, spender, wad);\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"evmVersion": "petersburg"
		}
	},
	"output": {
		"contracts": {
			"DaiToken.sol": {
				"Dai": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "chainId_",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "src",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "guy",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "wad",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": true,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes4",
									"name": "sig",
									"type": "bytes4"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "usr",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "arg1",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "arg2",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "LogNote",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "src",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "dst",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "wad",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "usr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "wad",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "usr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "wad",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "guy",
									"type": "address"
								}
							],
							"name": "deny",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "usr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "wad",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "src",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "dst",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "wad",
									"type": "uint256"
								}
							],
							"name": "move",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "holder",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "expiry",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "allowed",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "usr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "wad",
									"type": "uint256"
								}
							],
							"name": "pull",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "usr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "wad",
									"type": "uint256"
								}
							],
							"name": "push",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "guy",
									"type": "address"
								}
							],
							"name": "rely",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "dst",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "wad",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "src",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "dst",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "wad",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "wards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"DaiToken.sol\":3038:8036  contract Dai is LibNote {\r... */\n  mstore(0x40, 0x80)\n    /* \"DaiToken.sol\":4571:4948  constructor(uint256 chainId_) public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"DaiToken.sol\":4571:4948  constructor(uint256 chainId_) public {\r... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:15   */\n  0x20\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_2:\n    /* \"DaiToken.sol\":4571:4948  constructor(uint256 chainId_) public {\r... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"DaiToken.sol\":4639:4640  1 */\n  0x01\n    /* \"DaiToken.sol\":4619:4624  wards */\n  0x00\n    /* \"DaiToken.sol\":4619:4636  wards[msg.sender] */\n  dup1\n    /* \"DaiToken.sol\":4625:4635  msg.sender */\n  caller\n    /* \"DaiToken.sol\":4619:4636  wards[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"DaiToken.sol\":4619:4640  wards[msg.sender] = 1 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"DaiToken.sol\":4705:4800  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n  mload(0x40)\n  dup1\n  dup1\n  data_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n  0x52\n  swap2\n  codecopy\n  0x52\n  add\n  swap1\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  keccak256\n    /* \"DaiToken.sol\":4831:4835  name */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0e\n  dup2\n  mstore\n  0x20\n  add\n  0x44616920537461626c65636f696e000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"DaiToken.sol\":4815:4837  keccak256(bytes(name)) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"DaiToken.sol\":4868:4875  version */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x01\n  dup2\n  mstore\n  0x20\n  add\n  0x3100000000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"DaiToken.sol\":4852:4877  keccak256(bytes(version)) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"DaiToken.sol\":4892:4900  chainId_ */\n  dup4\n    /* \"DaiToken.sol\":4923:4927  this */\n  address\n    /* \"DaiToken.sol\":4680:4939  abi.encode(\r... */\n  add(0x20, mload(0x40))\n  dup1\n  dup7\n  dup2\n  mstore\n  0x20\n  add\n  dup6\n  dup2\n  mstore\n  0x20\n  add\n  dup5\n  dup2\n  mstore\n  0x20\n  add\n  dup4\n  dup2\n  mstore\n  0x20\n  add\n  dup3\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n    /* \"--CODEGEN--\":49:53   */\n  0x20\n    /* \"--CODEGEN--\":39:46   */\n  dup2\n    /* \"--CODEGEN--\":30:37   */\n  dup4\n    /* \"--CODEGEN--\":26:47   */\n  sub\n    /* \"--CODEGEN--\":22:54   */\n  sub\n    /* \"--CODEGEN--\":13:20   */\n  dup2\n    /* \"--CODEGEN--\":6:55   */\n  mstore\n    /* \"DaiToken.sol\":4680:4939  abi.encode(\r... */\n  swap1\n  0x40\n  mstore\n    /* \"DaiToken.sol\":4670:4940  keccak256(abi.encode(\r... */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"DaiToken.sol\":4651:4667  DOMAIN_SEPARATOR */\n  0x05\n    /* \"DaiToken.sol\":4651:4940  DOMAIN_SEPARATOR = keccak256(abi.encode(\r... */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"DaiToken.sol\":4571:4948  constructor(uint256 chainId_) public {\r... */\n  pop\n    /* \"DaiToken.sol\":3038:8036  contract Dai is LibNote {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f 454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429\n\nsub_0: assembly {\n        /* \"DaiToken.sol\":3038:8036  contract Dai is LibNote {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"DaiToken.sol\":3038:8036  contract Dai is LibNote {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7ecebe00\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xb753a98c\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xbb35783b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xbf353dbb\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf2d5d56b\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x7ecebe00\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8fcbaf0c\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x9c52a7f1\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x9dc29fac\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x313ce567\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3644e515\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x54fd4d50\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x65fae35e\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x30adf81f\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"DaiToken.sol\":3410:3461  string  public constant name     = \"Dai Stablecoin\" */\n    tag_3:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_30:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_32\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_30)\n    tag_32:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"DaiToken.sol\":3410:3461  string  public constant name     = \"Dai Stablecoin\" */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_33\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_33:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DaiToken.sol\":6447:6630  function approve(address usr, uint wad) external returns (bool) {\r... */\n    tag_4:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_35\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_35:\n        /* \"DaiToken.sol\":6447:6630  function approve(address usr, uint wad) external returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_36\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DaiToken.sol\":3604:3630  uint256 public totalSupply */\n    tag_5:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DaiToken.sol\":5109:5699  function transferFrom(address src, address dst, uint wad)\r... */\n    tag_6:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_40\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_40:\n        /* \"DaiToken.sol\":5109:5699  function transferFrom(address src, address dst, uint wad)\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_41\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DaiToken.sol\":4454:4562  bytes32 public constant PERMIT_TYPEHASH = 0xea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb */\n    tag_7:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DaiToken.sol\":3560:3597  uint8   public constant decimals = 18 */\n    tag_8:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DaiToken.sol\":4271:4302  bytes32 public DOMAIN_SEPARATOR */\n    tag_9:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DaiToken.sol\":5705:5911  function mint(address usr, uint wad) external auth {\r... */\n    tag_10:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_49\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_49:\n        /* \"DaiToken.sol\":5705:5911  function mint(address usr, uint wad) external auth {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_50\n      jump\t// in\n    tag_48:\n      stop\n        /* \"DaiToken.sol\":3515:3553  string  public constant version  = \"1\" */\n    tag_11:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_53:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_55\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_53)\n    tag_55:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"DaiToken.sol\":3515:3553  string  public constant version  = \"1\" */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_56\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_56:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DaiToken.sol\":3135:3200  function rely(address guy) external note auth { wards[guy] = 1; } */\n    tag_12:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_58\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_58:\n        /* \"DaiToken.sol\":3135:3200  function rely(address guy) external note auth { wards[guy] = 1; } */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_59\n      jump\t// in\n    tag_57:\n      stop\n        /* \"DaiToken.sol\":3639:3702  mapping (address => uint)                      public balanceOf */\n    tag_13:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_61\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_61:\n        /* \"DaiToken.sol\":3639:3702  mapping (address => uint)                      public balanceOf */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_62\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DaiToken.sol\":3779:3839  mapping (address => uint)                      public nonces */\n    tag_14:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_64\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_64:\n        /* \"DaiToken.sol\":3779:3839  mapping (address => uint)                      public nonces */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_65\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DaiToken.sol\":7020:8033  function permit(address holder, address spender, uint256 nonce, uint256 expiry,\r... */\n    tag_15:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0x0100\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_67\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_67:\n        /* \"DaiToken.sol\":7020:8033  function permit(address holder, address spender, uint256 nonce, uint256 expiry,\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      iszero\n      iszero\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_68\n      jump\t// in\n    tag_66:\n      stop\n        /* \"DaiToken.sol\":3468:3508  string  public constant symbol   = \"DAI\" */\n    tag_16:\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_71:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_73\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_71)\n    tag_73:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"DaiToken.sol\":3468:3508  string  public constant symbol   = \"DAI\" */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_74\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_74:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DaiToken.sol\":3206:3271  function deny(address guy) external note auth { wards[guy] = 0; } */\n    tag_17:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_76\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_76:\n        /* \"DaiToken.sol\":3206:3271  function deny(address guy) external note auth { wards[guy] = 0; } */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_77\n      jump\t// in\n    tag_75:\n      stop\n        /* \"DaiToken.sol\":5917:6441  function burn(address usr, uint wad) external {\r... */\n    tag_18:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_79\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_79:\n        /* \"DaiToken.sol\":5917:6441  function burn(address usr, uint wad) external {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_80\n      jump\t// in\n    tag_78:\n      stop\n        /* \"DaiToken.sol\":4978:5103  function transfer(address dst, uint wad) external returns (bool) {\r... */\n    tag_19:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_82\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_82:\n        /* \"DaiToken.sol\":4978:5103  function transfer(address dst, uint wad) external returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_83\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DaiToken.sol\":6660:6759  function push(address usr, uint wad) external {\r... */\n    tag_20:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_85\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_85:\n        /* \"DaiToken.sol\":6660:6759  function push(address usr, uint wad) external {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_86\n      jump\t// in\n    tag_84:\n      stop\n        /* \"DaiToken.sol\":6870:6975  function move(address src, address dst, uint wad) external {\r... */\n    tag_21:\n      tag_87\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_88\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_88:\n        /* \"DaiToken.sol\":6870:6975  function move(address src, address dst, uint wad) external {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_89\n      jump\t// in\n    tag_87:\n      stop\n        /* \"DaiToken.sol\":3090:3128  mapping (address => uint) public wards */\n    tag_22:\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_91\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_91:\n        /* \"DaiToken.sol\":3090:3128  mapping (address => uint) public wards */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_92\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DaiToken.sol\":3709:3772  mapping (address => mapping (address => uint)) public allowance */\n    tag_23:\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_94\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_94:\n        /* \"DaiToken.sol\":3709:3772  mapping (address => mapping (address => uint)) public allowance */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_95\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DaiToken.sol\":6765:6864  function pull(address usr, uint wad) external {\r... */\n    tag_24:\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_97\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_97:\n        /* \"DaiToken.sol\":6765:6864  function pull(address usr, uint wad) external {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_98\n      jump\t// in\n    tag_96:\n      stop\n        /* \"DaiToken.sol\":3410:3461  string  public constant name     = \"Dai Stablecoin\" */\n    tag_29:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0e\n      dup2\n      mstore\n      0x20\n      add\n      0x44616920537461626c65636f696e000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"DaiToken.sol\":6447:6630  function approve(address usr, uint wad) external returns (bool) {\r... */\n    tag_36:\n        /* \"DaiToken.sol\":6505:6509  bool */\n      0x00\n        /* \"DaiToken.sol\":6551:6554  wad */\n      dup2\n        /* \"DaiToken.sol\":6522:6531  allowance */\n      0x03\n        /* \"DaiToken.sol\":6522:6543  allowance[msg.sender] */\n      0x00\n        /* \"DaiToken.sol\":6532:6542  msg.sender */\n      caller\n        /* \"DaiToken.sol\":6522:6543  allowance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DaiToken.sol\":6522:6548  allowance[msg.sender][usr] */\n      0x00\n        /* \"DaiToken.sol\":6544:6547  usr */\n      dup6\n        /* \"DaiToken.sol\":6522:6548  allowance[msg.sender][usr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DaiToken.sol\":6522:6554  allowance[msg.sender][usr] = wad */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DaiToken.sol\":6591:6594  usr */\n      dup3\n        /* \"DaiToken.sol\":6570:6600  Approval(msg.sender, usr, wad) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DaiToken.sol\":6579:6589  msg.sender */\n      caller\n        /* \"DaiToken.sol\":6570:6600  Approval(msg.sender, usr, wad) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"DaiToken.sol\":6596:6599  wad */\n      dup5\n        /* \"DaiToken.sol\":6570:6600  Approval(msg.sender, usr, wad) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"DaiToken.sol\":6618:6622  true */\n      0x01\n        /* \"DaiToken.sol\":6611:6622  return true */\n      swap1\n      pop\n        /* \"DaiToken.sol\":6447:6630  function approve(address usr, uint wad) external returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"DaiToken.sol\":3604:3630  uint256 public totalSupply */\n    tag_38:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"DaiToken.sol\":5109:5699  function transferFrom(address src, address dst, uint wad)\r... */\n    tag_41:\n        /* \"DaiToken.sol\":5192:5196  bool */\n      0x00\n        /* \"DaiToken.sol\":5240:5243  wad */\n      dup2\n        /* \"DaiToken.sol\":5222:5231  balanceOf */\n      0x02\n        /* \"DaiToken.sol\":5222:5236  balanceOf[src] */\n      0x00\n        /* \"DaiToken.sol\":5232:5235  src */\n      dup7\n        /* \"DaiToken.sol\":5222:5236  balanceOf[src] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"DaiToken.sol\":5222:5243  balanceOf[src] >= wad */\n      lt\n      iszero\n        /* \"DaiToken.sol\":5214:5272  require(balanceOf[src] >= wad, \"Dai/insufficient-balance\") */\n      tag_101\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x18\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4461692f696e73756666696369656e742d62616c616e63650000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_101:\n        /* \"DaiToken.sol\":5294:5304  msg.sender */\n      caller\n        /* \"DaiToken.sol\":5287:5304  src != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DaiToken.sol\":5287:5290  src */\n      dup5\n        /* \"DaiToken.sol\":5287:5304  src != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"DaiToken.sol\":5287:5346  src != msg.sender && allowance[src][msg.sender] != uint(-1) */\n      dup1\n      iszero\n      tag_102\n      jumpi\n      pop\n        /* \"DaiToken.sol\":5343:5345  -1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"DaiToken.sol\":5308:5317  allowance */\n      0x03\n        /* \"DaiToken.sol\":5308:5322  allowance[src] */\n      0x00\n        /* \"DaiToken.sol\":5318:5321  src */\n      dup7\n        /* \"DaiToken.sol\":5308:5322  allowance[src] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DaiToken.sol\":5308:5334  allowance[src][msg.sender] */\n      0x00\n        /* \"DaiToken.sol\":5323:5333  msg.sender */\n      caller\n        /* \"DaiToken.sol\":5308:5334  allowance[src][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"DaiToken.sol\":5308:5346  allowance[src][msg.sender] != uint(-1) */\n      eq\n      iszero\n        /* \"DaiToken.sol\":5287:5346  src != msg.sender && allowance[src][msg.sender] != uint(-1) */\n    tag_102:\n        /* \"DaiToken.sol\":5283:5527  if (src != msg.sender && allowance[src][msg.sender] != uint(-1)) {\r... */\n      iszero\n      tag_103\n      jumpi\n        /* \"DaiToken.sol\":5401:5404  wad */\n      dup2\n        /* \"DaiToken.sol\":5371:5380  allowance */\n      0x03\n        /* \"DaiToken.sol\":5371:5385  allowance[src] */\n      0x00\n        /* \"DaiToken.sol\":5381:5384  src */\n      dup7\n        /* \"DaiToken.sol\":5371:5385  allowance[src] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DaiToken.sol\":5371:5397  allowance[src][msg.sender] */\n      0x00\n        /* \"DaiToken.sol\":5386:5396  msg.sender */\n      caller\n        /* \"DaiToken.sol\":5371:5397  allowance[src][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"DaiToken.sol\":5371:5404  allowance[src][msg.sender] >= wad */\n      lt\n      iszero\n        /* \"DaiToken.sol\":5363:5435  require(allowance[src][msg.sender] >= wad, \"Dai/insufficient-allowance\") */\n      tag_104\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4461692f696e73756666696369656e742d616c6c6f77616e6365000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_104:\n        /* \"DaiToken.sol\":5479:5515  sub(allowance[src][msg.sender], wad) */\n      tag_105\n        /* \"DaiToken.sol\":5483:5492  allowance */\n      0x03\n        /* \"DaiToken.sol\":5483:5497  allowance[src] */\n      0x00\n        /* \"DaiToken.sol\":5493:5496  src */\n      dup7\n        /* \"DaiToken.sol\":5483:5497  allowance[src] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DaiToken.sol\":5483:5509  allowance[src][msg.sender] */\n      0x00\n        /* \"DaiToken.sol\":5498:5508  msg.sender */\n      caller\n        /* \"DaiToken.sol\":5483:5509  allowance[src][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"DaiToken.sol\":5511:5514  wad */\n      dup4\n        /* \"DaiToken.sol\":5479:5482  sub */\n      tag_106\n        /* \"DaiToken.sol\":5479:5515  sub(allowance[src][msg.sender], wad) */\n      jump\t// in\n    tag_105:\n        /* \"DaiToken.sol\":5450:5459  allowance */\n      0x03\n        /* \"DaiToken.sol\":5450:5464  allowance[src] */\n      0x00\n        /* \"DaiToken.sol\":5460:5463  src */\n      dup7\n        /* \"DaiToken.sol\":5450:5464  allowance[src] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DaiToken.sol\":5450:5476  allowance[src][msg.sender] */\n      0x00\n        /* \"DaiToken.sol\":5465:5475  msg.sender */\n      caller\n        /* \"DaiToken.sol\":5450:5476  allowance[src][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DaiToken.sol\":5450:5515  allowance[src][msg.sender] = sub(allowance[src][msg.sender], wad) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DaiToken.sol\":5283:5527  if (src != msg.sender && allowance[src][msg.sender] != uint(-1)) {\r... */\n    tag_103:\n        /* \"DaiToken.sol\":5554:5578  sub(balanceOf[src], wad) */\n      tag_107\n        /* \"DaiToken.sol\":5558:5567  balanceOf */\n      0x02\n        /* \"DaiToken.sol\":5558:5572  balanceOf[src] */\n      0x00\n        /* \"DaiToken.sol\":5568:5571  src */\n      dup7\n        /* \"DaiToken.sol\":5558:5572  balanceOf[src] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"DaiToken.sol\":5574:5577  wad */\n      dup4\n        /* \"DaiToken.sol\":5554:5557  sub */\n      tag_106\n        /* \"DaiToken.sol\":5554:5578  sub(balanceOf[src], wad) */\n      jump\t// in\n    tag_107:\n        /* \"DaiToken.sol\":5537:5546  balanceOf */\n      0x02\n        /* \"DaiToken.sol\":5537:5551  balanceOf[src] */\n      0x00\n        /* \"DaiToken.sol\":5547:5550  src */\n      dup7\n        /* \"DaiToken.sol\":5537:5551  balanceOf[src] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DaiToken.sol\":5537:5578  balanceOf[src] = sub(balanceOf[src], wad) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DaiToken.sol\":5606:5630  add(balanceOf[dst], wad) */\n      tag_108\n        /* \"DaiToken.sol\":5610:5619  balanceOf */\n      0x02\n        /* \"DaiToken.sol\":5610:5624  balanceOf[dst] */\n      0x00\n        /* \"DaiToken.sol\":5620:5623  dst */\n      dup6\n        /* \"DaiToken.sol\":5610:5624  balanceOf[dst] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"DaiToken.sol\":5626:5629  wad */\n      dup4\n        /* \"DaiToken.sol\":5606:5609  add */\n      tag_109\n        /* \"DaiToken.sol\":5606:5630  add(balanceOf[dst], wad) */\n      jump\t// in\n    tag_108:\n        /* \"DaiToken.sol\":5589:5598  balanceOf */\n      0x02\n        /* \"DaiToken.sol\":5589:5603  balanceOf[dst] */\n      0x00\n        /* \"DaiToken.sol\":5599:5602  dst */\n      dup6\n        /* \"DaiToken.sol\":5589:5603  balanceOf[dst] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DaiToken.sol\":5589:5630  balanceOf[dst] = add(balanceOf[dst], wad) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DaiToken.sol\":5660:5663  dst */\n      dup3\n        /* \"DaiToken.sol\":5646:5669  Transfer(src, dst, wad) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DaiToken.sol\":5655:5658  src */\n      dup5\n        /* \"DaiToken.sol\":5646:5669  Transfer(src, dst, wad) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"DaiToken.sol\":5665:5668  wad */\n      dup5\n        /* \"DaiToken.sol\":5646:5669  Transfer(src, dst, wad) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"DaiToken.sol\":5687:5691  true */\n      0x01\n        /* \"DaiToken.sol\":5680:5691  return true */\n      swap1\n      pop\n        /* \"DaiToken.sol\":5109:5699  function transferFrom(address src, address dst, uint wad)\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DaiToken.sol\":4454:4562  bytes32 public constant PERMIT_TYPEHASH = 0xea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb */\n    tag_43:\n        /* \"DaiToken.sol\":4496:4562  0xea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb */\n      0xea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb\n        /* \"DaiToken.sol\":4454:4562  bytes32 public constant PERMIT_TYPEHASH = 0xea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb */\n      0x00\n      shl\n      dup2\n      jump\t// out\n        /* \"DaiToken.sol\":3560:3597  uint8   public constant decimals = 18 */\n    tag_45:\n        /* \"DaiToken.sol\":3595:3597  18 */\n      0x12\n        /* \"DaiToken.sol\":3560:3597  uint8   public constant decimals = 18 */\n      dup2\n      jump\t// out\n        /* \"DaiToken.sol\":4271:4302  bytes32 public DOMAIN_SEPARATOR */\n    tag_47:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"DaiToken.sol\":5705:5911  function mint(address usr, uint wad) external auth {\r... */\n    tag_50:\n        /* \"DaiToken.sol\":3331:3332  1 */\n      0x01\n        /* \"DaiToken.sol\":3310:3315  wards */\n      0x00\n        /* \"DaiToken.sol\":3310:3327  wards[msg.sender] */\n      dup1\n        /* \"DaiToken.sol\":3316:3326  msg.sender */\n      caller\n        /* \"DaiToken.sol\":3310:3327  wards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"DaiToken.sol\":3310:3332  wards[msg.sender] == 1 */\n      eq\n        /* \"DaiToken.sol\":3302:3355  require(wards[msg.sender] == 1, \"Dai/not-authorized\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x12\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4461692f6e6f742d617574686f72697a65640000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_111:\n        /* \"DaiToken.sol\":5784:5808  add(balanceOf[usr], wad) */\n      tag_113\n        /* \"DaiToken.sol\":5788:5797  balanceOf */\n      0x02\n        /* \"DaiToken.sol\":5788:5802  balanceOf[usr] */\n      0x00\n        /* \"DaiToken.sol\":5798:5801  usr */\n      dup5\n        /* \"DaiToken.sol\":5788:5802  balanceOf[usr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"DaiToken.sol\":5804:5807  wad */\n      dup3\n        /* \"DaiToken.sol\":5784:5787  add */\n      tag_109\n        /* \"DaiToken.sol\":5784:5808  add(balanceOf[usr], wad) */\n      jump\t// in\n    tag_113:\n        /* \"DaiToken.sol\":5767:5776  balanceOf */\n      0x02\n        /* \"DaiToken.sol\":5767:5781  balanceOf[usr] */\n      0x00\n        /* \"DaiToken.sol\":5777:5780  usr */\n      dup5\n        /* \"DaiToken.sol\":5767:5781  balanceOf[usr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DaiToken.sol\":5767:5808  balanceOf[usr] = add(balanceOf[usr], wad) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DaiToken.sol\":5836:5857  add(totalSupply, wad) */\n      tag_114\n        /* \"DaiToken.sol\":5840:5851  totalSupply */\n      sload(0x01)\n        /* \"DaiToken.sol\":5853:5856  wad */\n      dup3\n        /* \"DaiToken.sol\":5836:5839  add */\n      tag_109\n        /* \"DaiToken.sol\":5836:5857  add(totalSupply, wad) */\n      jump\t// in\n    tag_114:\n        /* \"DaiToken.sol\":5819:5830  totalSupply */\n      0x01\n        /* \"DaiToken.sol\":5819:5857  totalSupply    = add(totalSupply, wad) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DaiToken.sol\":5894:5897  usr */\n      dup2\n        /* \"DaiToken.sol\":5873:5903  Transfer(address(0), usr, wad) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DaiToken.sol\":5890:5891  0 */\n      0x00\n        /* \"DaiToken.sol\":5873:5903  Transfer(address(0), usr, wad) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"DaiToken.sol\":5899:5902  wad */\n      dup4\n        /* \"DaiToken.sol\":5873:5903  Transfer(address(0), usr, wad) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"DaiToken.sol\":5705:5911  function mint(address usr, uint wad) external auth {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"DaiToken.sol\":3515:3553  string  public constant version  = \"1\" */\n    tag_52:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x01\n      dup2\n      mstore\n      0x20\n      add\n      0x3100000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"DaiToken.sol\":3135:3200  function rely(address guy) external note auth { wards[guy] = 1; } */\n    tag_59:\n        /* \"DaiToken.sol\":3331:3332  1 */\n      0x01\n        /* \"DaiToken.sol\":3310:3315  wards */\n      0x00\n        /* \"DaiToken.sol\":3310:3327  wards[msg.sender] */\n      dup1\n        /* \"DaiToken.sol\":3316:3326  msg.sender */\n      caller\n        /* \"DaiToken.sol\":3310:3327  wards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"DaiToken.sol\":3310:3332  wards[msg.sender] == 1 */\n      eq\n        /* \"DaiToken.sol\":3302:3355  require(wards[msg.sender] == 1, \"Dai/not-authorized\") */\n      tag_117\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x12\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4461692f6e6f742d617574686f72697a65640000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_117:\n        /* \"DaiToken.sol\":3196:3197  1 */\n      0x01\n        /* \"DaiToken.sol\":3183:3188  wards */\n      0x00\n        /* \"DaiToken.sol\":3183:3193  wards[guy] */\n      dup1\n        /* \"DaiToken.sol\":3189:3192  guy */\n      dup4\n        /* \"DaiToken.sol\":3183:3193  wards[guy] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DaiToken.sol\":3183:3197  wards[guy] = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DaiToken.sol\":1412:1417  msize */\n      msize\n        /* \"DaiToken.sol\":1508:1511  288 */\n      0x0120\n        /* \"DaiToken.sol\":1502:1506  mark */\n      dup2\n        /* \"DaiToken.sol\":1498:1512  add(mark, 288) */\n      add\n        /* \"DaiToken.sol\":1492:1496  0x40 */\n      0x40\n        /* \"DaiToken.sol\":1485:1513  mstore(0x40, add(mark, 288)) */\n      mstore\n        /* \"DaiToken.sol\":1583:1587  0x20 */\n      0x20\n        /* \"DaiToken.sol\":1577:1581  mark */\n      dup2\n        /* \"DaiToken.sol\":1570:1588  mstore(mark, 0x20) */\n      mstore\n        /* \"DaiToken.sol\":1675:1678  224 */\n      0xe0\n        /* \"DaiToken.sol\":1668:1672  0x20 */\n      0x20\n        /* \"DaiToken.sol\":1662:1666  mark */\n      dup3\n        /* \"DaiToken.sol\":1658:1673  add(mark, 0x20) */\n      add\n        /* \"DaiToken.sol\":1651:1679  mstore(add(mark, 0x20), 224) */\n      mstore\n        /* \"DaiToken.sol\":1762:1765  224 */\n      0xe0\n        /* \"DaiToken.sol\":1759:1760  0 */\n      0x00\n        /* \"DaiToken.sol\":1752:1756  0x40 */\n      0x40\n        /* \"DaiToken.sol\":1746:1750  mark */\n      dup4\n        /* \"DaiToken.sol\":1742:1757  add(mark, 0x40) */\n      add\n        /* \"DaiToken.sol\":1729:1766  calldatacopy(add(mark, 0x40), 0, 224) */\n      calldatacopy\n        /* \"DaiToken.sol\":2084:2086  36 */\n      0x24\n        /* \"DaiToken.sol\":2071:2087  calldataload(36) */\n      calldataload\n        /* \"DaiToken.sol\":2021:2022  4 */\n      0x04\n        /* \"DaiToken.sol\":2008:2023  calldataload(4) */\n      calldataload\n        /* \"DaiToken.sol\":1939:1945  caller */\n      caller\n        /* \"DaiToken.sol\":1904:1905  0 */\n      0x00\n        /* \"DaiToken.sol\":1891:1906  calldataload(0) */\n      calldataload\n        /* \"DaiToken.sol\":1886:1889  224 */\n      0xe0\n        /* \"DaiToken.sol\":1882:1907  shr(224, calldataload(0)) */\n      shr\n        /* \"DaiToken.sol\":1877:1880  224 */\n      0xe0\n        /* \"DaiToken.sol\":1873:1908  shl(224, shr(224, calldataload(0))) */\n      shl\n        /* \"DaiToken.sol\":1812:1815  288 */\n      0x0120\n        /* \"DaiToken.sol\":1806:1810  mark */\n      dup6\n        /* \"DaiToken.sol\":1801:2134  log4(mark, 288,                           // calldata\r... */\n      log4\n        /* \"DaiToken.sol\":1235:2145  {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"DaiToken.sol\":3639:3702  mapping (address => uint)                      public balanceOf */\n    tag_62:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"DaiToken.sol\":3779:3839  mapping (address => uint)                      public nonces */\n    tag_65:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"DaiToken.sol\":7020:8033  function permit(address holder, address spender, uint256 nonce, uint256 expiry,\r... */\n    tag_68:\n        /* \"DaiToken.sol\":7191:7205  bytes32 digest */\n      0x00\n        /* \"DaiToken.sol\":7295:7311  DOMAIN_SEPARATOR */\n      sload(0x05)\n        /* \"DaiToken.sol\":4496:4562  0xea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb */\n      0xea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb\n        /* \"DaiToken.sol\":7351:7366  PERMIT_TYPEHASH */\n      0x00\n      shl\n        /* \"DaiToken.sol\":7406:7412  holder */\n      dup11\n        /* \"DaiToken.sol\":7452:7459  spender */\n      dup11\n        /* \"DaiToken.sol\":7499:7504  nonce */\n      dup11\n        /* \"DaiToken.sol\":7544:7550  expiry */\n      dup11\n        /* \"DaiToken.sol\":7590:7597  allowed */\n      dup11\n        /* \"DaiToken.sol\":7340:7598  abi.encode(PERMIT_TYPEHASH,\r... */\n      add(0x20, mload(0x40))\n      dup1\n      dup8\n      dup2\n      mstore\n      0x20\n      add\n      dup7\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"DaiToken.sol\":7340:7598  abi.encode(PERMIT_TYPEHASH,\r... */\n      swap1\n      0x40\n      mstore\n        /* \"DaiToken.sol\":7330:7599  keccak256(abi.encode(PERMIT_TYPEHASH,\r... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"DaiToken.sol\":7231:7610  abi.encodePacked(\r... */\n      add(0x20, mload(0x40))\n      dup1\n      dup1\n      0x1901000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x02\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"DaiToken.sol\":7231:7610  abi.encodePacked(\r... */\n      swap1\n      0x40\n      mstore\n        /* \"DaiToken.sol\":7221:7611  keccak256(abi.encodePacked(\r... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"DaiToken.sol\":7191:7611  bytes32 digest =\r... */\n      swap1\n      pop\n        /* \"DaiToken.sol\":7650:7651  0 */\n      0x00\n        /* \"DaiToken.sol\":7632:7652  holder != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DaiToken.sol\":7632:7638  holder */\n      dup10\n        /* \"DaiToken.sol\":7632:7652  holder != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"DaiToken.sol\":7624:7678  require(holder != address(0), \"Dai/invalid-address-0\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x15\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4461692f696e76616c69642d616464726573732d300000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_120:\n        /* \"DaiToken.sol\":7707:7733  ecrecover(digest, v, r, s) */\n      0x01\n        /* \"DaiToken.sol\":7717:7723  digest */\n      dup2\n        /* \"DaiToken.sol\":7725:7726  v */\n      dup6\n        /* \"DaiToken.sol\":7728:7729  r */\n      dup6\n        /* \"DaiToken.sol\":7731:7732  s */\n      dup6\n        /* \"DaiToken.sol\":7707:7733  ecrecover(digest, v, r, s) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_121\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_121:\n        /* \"DaiToken.sol\":7707:7733  ecrecover(digest, v, r, s) */\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"DaiToken.sol\":7697:7733  holder == ecrecover(digest, v, r, s) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DaiToken.sol\":7697:7703  holder */\n      dup10\n        /* \"DaiToken.sol\":7697:7733  holder == ecrecover(digest, v, r, s) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"DaiToken.sol\":7689:7756  require(holder == ecrecover(digest, v, r, s), \"Dai/invalid-permit\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x12\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4461692f696e76616c69642d7065726d69740000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_122:\n        /* \"DaiToken.sol\":7785:7786  0 */\n      0x00\n        /* \"DaiToken.sol\":7775:7781  expiry */\n      dup7\n        /* \"DaiToken.sol\":7775:7786  expiry == 0 */\n      eq\n        /* \"DaiToken.sol\":7775:7803  expiry == 0 || now <= expiry */\n      dup1\n      tag_123\n      jumpi\n      pop\n        /* \"DaiToken.sol\":7797:7803  expiry */\n      dup6\n        /* \"DaiToken.sol\":7790:7793  now */\n      timestamp\n        /* \"DaiToken.sol\":7790:7803  now <= expiry */\n      gt\n      iszero\n        /* \"DaiToken.sol\":7775:7803  expiry == 0 || now <= expiry */\n    tag_123:\n        /* \"DaiToken.sol\":7767:7826  require(expiry == 0 || now <= expiry, \"Dai/permit-expired\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x12\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4461692f7065726d69742d657870697265640000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_124:\n        /* \"DaiToken.sol\":7854:7860  nonces */\n      0x04\n        /* \"DaiToken.sol\":7854:7868  nonces[holder] */\n      0x00\n        /* \"DaiToken.sol\":7861:7867  holder */\n      dup11\n        /* \"DaiToken.sol\":7854:7868  nonces[holder] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"DaiToken.sol\":7854:7870  nonces[holder]++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      sstore\n        /* \"DaiToken.sol\":7845:7850  nonce */\n      dup8\n        /* \"DaiToken.sol\":7845:7870  nonce == nonces[holder]++ */\n      eq\n        /* \"DaiToken.sol\":7837:7892  require(nonce == nonces[holder]++, \"Dai/invalid-nonce\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x11\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4461692f696e76616c69642d6e6f6e6365000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_125:\n        /* \"DaiToken.sol\":7903:7911  uint wad */\n      0x00\n        /* \"DaiToken.sol\":7914:7921  allowed */\n      dup6\n        /* \"DaiToken.sol\":7914:7936  allowed ? uint(-1) : 0 */\n      tag_126\n      jumpi\n        /* \"DaiToken.sol\":7935:7936  0 */\n      0x00\n        /* \"DaiToken.sol\":7914:7936  allowed ? uint(-1) : 0 */\n      jump(tag_127)\n    tag_126:\n        /* \"DaiToken.sol\":7929:7931  -1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"DaiToken.sol\":7914:7936  allowed ? uint(-1) : 0 */\n    tag_127:\n        /* \"DaiToken.sol\":7903:7936  uint wad = allowed ? uint(-1) : 0 */\n      swap1\n      pop\n        /* \"DaiToken.sol\":7976:7979  wad */\n      dup1\n        /* \"DaiToken.sol\":7947:7956  allowance */\n      0x03\n        /* \"DaiToken.sol\":7947:7964  allowance[holder] */\n      0x00\n        /* \"DaiToken.sol\":7957:7963  holder */\n      dup13\n        /* \"DaiToken.sol\":7947:7964  allowance[holder] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DaiToken.sol\":7947:7973  allowance[holder][spender] */\n      0x00\n        /* \"DaiToken.sol\":7965:7972  spender */\n      dup12\n        /* \"DaiToken.sol\":7947:7973  allowance[holder][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DaiToken.sol\":7947:7979  allowance[holder][spender] = wad */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DaiToken.sol\":8012:8019  spender */\n      dup9\n        /* \"DaiToken.sol\":7995:8025  Approval(holder, spender, wad) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DaiToken.sol\":8004:8010  holder */\n      dup11\n        /* \"DaiToken.sol\":7995:8025  Approval(holder, spender, wad) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"DaiToken.sol\":8021:8024  wad */\n      dup4\n        /* \"DaiToken.sol\":7995:8025  Approval(holder, spender, wad) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"DaiToken.sol\":7020:8033  function permit(address holder, address spender, uint256 nonce, uint256 expiry,\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DaiToken.sol\":3468:3508  string  public constant symbol   = \"DAI\" */\n    tag_70:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x03\n      dup2\n      mstore\n      0x20\n      add\n      0x4441490000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"DaiToken.sol\":3206:3271  function deny(address guy) external note auth { wards[guy] = 0; } */\n    tag_77:\n        /* \"DaiToken.sol\":3331:3332  1 */\n      0x01\n        /* \"DaiToken.sol\":3310:3315  wards */\n      0x00\n        /* \"DaiToken.sol\":3310:3327  wards[msg.sender] */\n      dup1\n        /* \"DaiToken.sol\":3316:3326  msg.sender */\n      caller\n        /* \"DaiToken.sol\":3310:3327  wards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"DaiToken.sol\":3310:3332  wards[msg.sender] == 1 */\n      eq\n        /* \"DaiToken.sol\":3302:3355  require(wards[msg.sender] == 1, \"Dai/not-authorized\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x12\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4461692f6e6f742d617574686f72697a65640000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_130:\n        /* \"DaiToken.sol\":3267:3268  0 */\n      0x00\n        /* \"DaiToken.sol\":3254:3259  wards */\n      dup1\n        /* \"DaiToken.sol\":3254:3264  wards[guy] */\n      0x00\n        /* \"DaiToken.sol\":3260:3263  guy */\n      dup4\n        /* \"DaiToken.sol\":3254:3264  wards[guy] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DaiToken.sol\":3254:3268  wards[guy] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DaiToken.sol\":1412:1417  msize */\n      msize\n        /* \"DaiToken.sol\":1508:1511  288 */\n      0x0120\n        /* \"DaiToken.sol\":1502:1506  mark */\n      dup2\n        /* \"DaiToken.sol\":1498:1512  add(mark, 288) */\n      add\n        /* \"DaiToken.sol\":1492:1496  0x40 */\n      0x40\n        /* \"DaiToken.sol\":1485:1513  mstore(0x40, add(mark, 288)) */\n      mstore\n        /* \"DaiToken.sol\":1583:1587  0x20 */\n      0x20\n        /* \"DaiToken.sol\":1577:1581  mark */\n      dup2\n        /* \"DaiToken.sol\":1570:1588  mstore(mark, 0x20) */\n      mstore\n        /* \"DaiToken.sol\":1675:1678  224 */\n      0xe0\n        /* \"DaiToken.sol\":1668:1672  0x20 */\n      0x20\n        /* \"DaiToken.sol\":1662:1666  mark */\n      dup3\n        /* \"DaiToken.sol\":1658:1673  add(mark, 0x20) */\n      add\n        /* \"DaiToken.sol\":1651:1679  mstore(add(mark, 0x20), 224) */\n      mstore\n        /* \"DaiToken.sol\":1762:1765  224 */\n      0xe0\n        /* \"DaiToken.sol\":1759:1760  0 */\n      0x00\n        /* \"DaiToken.sol\":1752:1756  0x40 */\n      0x40\n        /* \"DaiToken.sol\":1746:1750  mark */\n      dup4\n        /* \"DaiToken.sol\":1742:1757  add(mark, 0x40) */\n      add\n        /* \"DaiToken.sol\":1729:1766  calldatacopy(add(mark, 0x40), 0, 224) */\n      calldatacopy\n        /* \"DaiToken.sol\":2084:2086  36 */\n      0x24\n        /* \"DaiToken.sol\":2071:2087  calldataload(36) */\n      calldataload\n        /* \"DaiToken.sol\":2021:2022  4 */\n      0x04\n        /* \"DaiToken.sol\":2008:2023  calldataload(4) */\n      calldataload\n        /* \"DaiToken.sol\":1939:1945  caller */\n      caller\n        /* \"DaiToken.sol\":1904:1905  0 */\n      0x00\n        /* \"DaiToken.sol\":1891:1906  calldataload(0) */\n      calldataload\n        /* \"DaiToken.sol\":1886:1889  224 */\n      0xe0\n        /* \"DaiToken.sol\":1882:1907  shr(224, calldataload(0)) */\n      shr\n        /* \"DaiToken.sol\":1877:1880  224 */\n      0xe0\n        /* \"DaiToken.sol\":1873:1908  shl(224, shr(224, calldataload(0))) */\n      shl\n        /* \"DaiToken.sol\":1812:1815  288 */\n      0x0120\n        /* \"DaiToken.sol\":1806:1810  mark */\n      dup6\n        /* \"DaiToken.sol\":1801:2134  log4(mark, 288,                           // calldata\r... */\n      log4\n        /* \"DaiToken.sol\":1235:2145  {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"DaiToken.sol\":5917:6441  function burn(address usr, uint wad) external {\r... */\n    tag_80:\n        /* \"DaiToken.sol\":6000:6003  wad */\n      dup1\n        /* \"DaiToken.sol\":5982:5991  balanceOf */\n      0x02\n        /* \"DaiToken.sol\":5982:5996  balanceOf[usr] */\n      0x00\n        /* \"DaiToken.sol\":5992:5995  usr */\n      dup5\n        /* \"DaiToken.sol\":5982:5996  balanceOf[usr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"DaiToken.sol\":5982:6003  balanceOf[usr] >= wad */\n      lt\n      iszero\n        /* \"DaiToken.sol\":5974:6032  require(balanceOf[usr] >= wad, \"Dai/insufficient-balance\") */\n      tag_133\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x18\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4461692f696e73756666696369656e742d62616c616e63650000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_133:\n        /* \"DaiToken.sol\":6054:6064  msg.sender */\n      caller\n        /* \"DaiToken.sol\":6047:6064  usr != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DaiToken.sol\":6047:6050  usr */\n      dup3\n        /* \"DaiToken.sol\":6047:6064  usr != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"DaiToken.sol\":6047:6106  usr != msg.sender && allowance[usr][msg.sender] != uint(-1) */\n      dup1\n      iszero\n      tag_134\n      jumpi\n      pop\n        /* \"DaiToken.sol\":6103:6105  -1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"DaiToken.sol\":6068:6077  allowance */\n      0x03\n        /* \"DaiToken.sol\":6068:6082  allowance[usr] */\n      0x00\n        /* \"DaiToken.sol\":6078:6081  usr */\n      dup5\n        /* \"DaiToken.sol\":6068:6082  allowance[usr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DaiToken.sol\":6068:6094  allowance[usr][msg.sender] */\n      0x00\n        /* \"DaiToken.sol\":6083:6093  msg.sender */\n      caller\n        /* \"DaiToken.sol\":6068:6094  allowance[usr][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"DaiToken.sol\":6068:6106  allowance[usr][msg.sender] != uint(-1) */\n      eq\n      iszero\n        /* \"DaiToken.sol\":6047:6106  usr != msg.sender && allowance[usr][msg.sender] != uint(-1) */\n    tag_134:\n        /* \"DaiToken.sol\":6043:6287  if (usr != msg.sender && allowance[usr][msg.sender] != uint(-1)) {\r... */\n      iszero\n      tag_135\n      jumpi\n        /* \"DaiToken.sol\":6161:6164  wad */\n      dup1\n        /* \"DaiToken.sol\":6131:6140  allowance */\n      0x03\n        /* \"DaiToken.sol\":6131:6145  allowance[usr] */\n      0x00\n        /* \"DaiToken.sol\":6141:6144  usr */\n      dup5\n        /* \"DaiToken.sol\":6131:6145  allowance[usr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DaiToken.sol\":6131:6157  allowance[usr][msg.sender] */\n      0x00\n        /* \"DaiToken.sol\":6146:6156  msg.sender */\n      caller\n        /* \"DaiToken.sol\":6131:6157  allowance[usr][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"DaiToken.sol\":6131:6164  allowance[usr][msg.sender] >= wad */\n      lt\n      iszero\n        /* \"DaiToken.sol\":6123:6195  require(allowance[usr][msg.sender] >= wad, \"Dai/insufficient-allowance\") */\n      tag_136\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4461692f696e73756666696369656e742d616c6c6f77616e6365000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_136:\n        /* \"DaiToken.sol\":6239:6275  sub(allowance[usr][msg.sender], wad) */\n      tag_137\n        /* \"DaiToken.sol\":6243:6252  allowance */\n      0x03\n        /* \"DaiToken.sol\":6243:6257  allowance[usr] */\n      0x00\n        /* \"DaiToken.sol\":6253:6256  usr */\n      dup5\n        /* \"DaiToken.sol\":6243:6257  allowance[usr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DaiToken.sol\":6243:6269  allowance[usr][msg.sender] */\n      0x00\n        /* \"DaiToken.sol\":6258:6268  msg.sender */\n      caller\n        /* \"DaiToken.sol\":6243:6269  allowance[usr][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"DaiToken.sol\":6271:6274  wad */\n      dup3\n        /* \"DaiToken.sol\":6239:6242  sub */\n      tag_106\n        /* \"DaiToken.sol\":6239:6275  sub(allowance[usr][msg.sender], wad) */\n      jump\t// in\n    tag_137:\n        /* \"DaiToken.sol\":6210:6219  allowance */\n      0x03\n        /* \"DaiToken.sol\":6210:6224  allowance[usr] */\n      0x00\n        /* \"DaiToken.sol\":6220:6223  usr */\n      dup5\n        /* \"DaiToken.sol\":6210:6224  allowance[usr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DaiToken.sol\":6210:6236  allowance[usr][msg.sender] */\n      0x00\n        /* \"DaiToken.sol\":6225:6235  msg.sender */\n      caller\n        /* \"DaiToken.sol\":6210:6236  allowance[usr][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DaiToken.sol\":6210:6275  allowance[usr][msg.sender] = sub(allowance[usr][msg.sender], wad) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DaiToken.sol\":6043:6287  if (usr != msg.sender && allowance[usr][msg.sender] != uint(-1)) {\r... */\n    tag_135:\n        /* \"DaiToken.sol\":6314:6338  sub(balanceOf[usr], wad) */\n      tag_138\n        /* \"DaiToken.sol\":6318:6327  balanceOf */\n      0x02\n        /* \"DaiToken.sol\":6318:6332  balanceOf[usr] */\n      0x00\n        /* \"DaiToken.sol\":6328:6331  usr */\n      dup5\n        /* \"DaiToken.sol\":6318:6332  balanceOf[usr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"DaiToken.sol\":6334:6337  wad */\n      dup3\n        /* \"DaiToken.sol\":6314:6317  sub */\n      tag_106\n        /* \"DaiToken.sol\":6314:6338  sub(balanceOf[usr], wad) */\n      jump\t// in\n    tag_138:\n        /* \"DaiToken.sol\":6297:6306  balanceOf */\n      0x02\n        /* \"DaiToken.sol\":6297:6311  balanceOf[usr] */\n      0x00\n        /* \"DaiToken.sol\":6307:6310  usr */\n      dup5\n        /* \"DaiToken.sol\":6297:6311  balanceOf[usr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DaiToken.sol\":6297:6338  balanceOf[usr] = sub(balanceOf[usr], wad) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DaiToken.sol\":6366:6387  sub(totalSupply, wad) */\n      tag_139\n        /* \"DaiToken.sol\":6370:6381  totalSupply */\n      sload(0x01)\n        /* \"DaiToken.sol\":6383:6386  wad */\n      dup3\n        /* \"DaiToken.sol\":6366:6369  sub */\n      tag_106\n        /* \"DaiToken.sol\":6366:6387  sub(totalSupply, wad) */\n      jump\t// in\n    tag_139:\n        /* \"DaiToken.sol\":6349:6360  totalSupply */\n      0x01\n        /* \"DaiToken.sol\":6349:6387  totalSupply    = sub(totalSupply, wad) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DaiToken.sol\":6425:6426  0 */\n      0x00\n        /* \"DaiToken.sol\":6403:6433  Transfer(usr, address(0), wad) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DaiToken.sol\":6412:6415  usr */\n      dup3\n        /* \"DaiToken.sol\":6403:6433  Transfer(usr, address(0), wad) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"DaiToken.sol\":6429:6432  wad */\n      dup4\n        /* \"DaiToken.sol\":6403:6433  Transfer(usr, address(0), wad) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"DaiToken.sol\":5917:6441  function burn(address usr, uint wad) external {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"DaiToken.sol\":4978:5103  function transfer(address dst, uint wad) external returns (bool) {\r... */\n    tag_83:\n        /* \"DaiToken.sol\":5037:5041  bool */\n      0x00\n        /* \"DaiToken.sol\":5061:5095  transferFrom(msg.sender, dst, wad) */\n      tag_141\n        /* \"DaiToken.sol\":5074:5084  msg.sender */\n      caller\n        /* \"DaiToken.sol\":5086:5089  dst */\n      dup5\n        /* \"DaiToken.sol\":5091:5094  wad */\n      dup5\n        /* \"DaiToken.sol\":5061:5073  transferFrom */\n      tag_41\n        /* \"DaiToken.sol\":5061:5095  transferFrom(msg.sender, dst, wad) */\n      jump\t// in\n    tag_141:\n        /* \"DaiToken.sol\":5054:5095  return transferFrom(msg.sender, dst, wad) */\n      swap1\n      pop\n        /* \"DaiToken.sol\":4978:5103  function transfer(address dst, uint wad) external returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"DaiToken.sol\":6660:6759  function push(address usr, uint wad) external {\r... */\n    tag_86:\n        /* \"DaiToken.sol\":6717:6751  transferFrom(msg.sender, usr, wad) */\n      tag_143\n        /* \"DaiToken.sol\":6730:6740  msg.sender */\n      caller\n        /* \"DaiToken.sol\":6742:6745  usr */\n      dup4\n        /* \"DaiToken.sol\":6747:6750  wad */\n      dup4\n        /* \"DaiToken.sol\":6717:6729  transferFrom */\n      tag_41\n        /* \"DaiToken.sol\":6717:6751  transferFrom(msg.sender, usr, wad) */\n      jump\t// in\n    tag_143:\n      pop\n        /* \"DaiToken.sol\":6660:6759  function push(address usr, uint wad) external {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"DaiToken.sol\":6870:6975  function move(address src, address dst, uint wad) external {\r... */\n    tag_89:\n        /* \"DaiToken.sol\":6940:6967  transferFrom(src, dst, wad) */\n      tag_145\n        /* \"DaiToken.sol\":6953:6956  src */\n      dup4\n        /* \"DaiToken.sol\":6958:6961  dst */\n      dup4\n        /* \"DaiToken.sol\":6963:6966  wad */\n      dup4\n        /* \"DaiToken.sol\":6940:6952  transferFrom */\n      tag_41\n        /* \"DaiToken.sol\":6940:6967  transferFrom(src, dst, wad) */\n      jump\t// in\n    tag_145:\n      pop\n        /* \"DaiToken.sol\":6870:6975  function move(address src, address dst, uint wad) external {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DaiToken.sol\":3090:3128  mapping (address => uint) public wards */\n    tag_92:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"DaiToken.sol\":3709:3772  mapping (address => mapping (address => uint)) public allowance */\n    tag_95:\n      mstore(0x20, 0x03)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"DaiToken.sol\":6765:6864  function pull(address usr, uint wad) external {\r... */\n    tag_98:\n        /* \"DaiToken.sol\":6822:6856  transferFrom(usr, msg.sender, wad) */\n      tag_147\n        /* \"DaiToken.sol\":6835:6838  usr */\n      dup3\n        /* \"DaiToken.sol\":6840:6850  msg.sender */\n      caller\n        /* \"DaiToken.sol\":6852:6855  wad */\n      dup4\n        /* \"DaiToken.sol\":6822:6834  transferFrom */\n      tag_41\n        /* \"DaiToken.sol\":6822:6856  transferFrom(usr, msg.sender, wad) */\n      jump\t// in\n    tag_147:\n      pop\n        /* \"DaiToken.sol\":6765:6864  function pull(address usr, uint wad) external {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"DaiToken.sol\":4127:4231  function sub(uint x, uint y) internal pure returns (uint z) {\r... */\n    tag_106:\n        /* \"DaiToken.sol\":4179:4185  uint z */\n      0x00\n        /* \"DaiToken.sol\":4221:4222  x */\n      dup3\n        /* \"DaiToken.sol\":4215:4216  y */\n      dup3\n        /* \"DaiToken.sol\":4211:4212  x */\n      dup5\n        /* \"DaiToken.sol\":4211:4216  x - y */\n      sub\n        /* \"DaiToken.sol\":4207:4216  z = x - y */\n      swap2\n      pop\n      dup2\n        /* \"DaiToken.sol\":4206:4222  (z = x - y) <= x */\n      gt\n      iszero\n        /* \"DaiToken.sol\":4198:4223  require((z = x - y) <= x) */\n      tag_149\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_149:\n        /* \"DaiToken.sol\":4127:4231  function sub(uint x, uint y) internal pure returns (uint z) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"DaiToken.sol\":4017:4121  function add(uint x, uint y) internal pure returns (uint z) {\r... */\n    tag_109:\n        /* \"DaiToken.sol\":4069:4075  uint z */\n      0x00\n        /* \"DaiToken.sol\":4111:4112  x */\n      dup3\n        /* \"DaiToken.sol\":4105:4106  y */\n      dup3\n        /* \"DaiToken.sol\":4101:4102  x */\n      dup5\n        /* \"DaiToken.sol\":4101:4106  x + y */\n      add\n        /* \"DaiToken.sol\":4097:4106  z = x + y */\n      swap2\n      pop\n      dup2\n        /* \"DaiToken.sol\":4096:4112  (z = x + y) >= x */\n      lt\n      iszero\n        /* \"DaiToken.sol\":4088:4113  require((z = x + y) >= x) */\n      tag_151\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_151:\n        /* \"DaiToken.sol\":4017:4121  function add(uint x, uint y) internal pure returns (uint z) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa265627a7a7231582060b9a1d044367c1dadd8490a34d74415e9453abf42d9ffcb991ae3a22978996e64736f6c634300050c0032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516120d33803806120d38339818101604052602081101561003357600080fd5b810190808051906020019092919050505060016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550604051808061208160529139605201905060405180910390206040518060400160405280600e81526020017f44616920537461626c65636f696e000000000000000000000000000000000000815250805190602001206040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250805190602001208330604051602001808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001955050505050506040516020818303038152906040528051906020012060058190555050611ee0806101a16000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c80637ecebe00116100b8578063a9059cbb1161007c578063a9059cbb146106b4578063b753a98c1461071a578063bb35783b14610768578063bf353dbb146107d6578063dd62ed3e1461082e578063f2d5d56b146108a657610142565b80637ecebe00146104a15780638fcbaf0c146104f957806395d89b411461059f5780639c52a7f1146106225780639dc29fac1461066657610142565b8063313ce5671161010a578063313ce567146102f25780633644e5151461031657806340c10f191461033457806354fd4d501461038257806365fae35e1461040557806370a082311461044957610142565b806306fdde0314610147578063095ea7b3146101ca57806318160ddd1461023057806323b872dd1461024e57806330adf81f146102d4575b600080fd5b61014f6108f4565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561018f578082015181840152602081019050610174565b50505050905090810190601f1680156101bc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610216600480360360408110156101e057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061092d565b604051808215151515815260200191505060405180910390f35b610238610a1f565b6040518082815260200191505060405180910390f35b6102ba6004803603606081101561026457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a25565b604051808215151515815260200191505060405180910390f35b6102dc610f3a565b6040518082815260200191505060405180910390f35b6102fa610f61565b604051808260ff1660ff16815260200191505060405180910390f35b61031e610f66565b6040518082815260200191505060405180910390f35b6103806004803603604081101561034a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f6c565b005b61038a611128565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103ca5780820151818401526020810190506103af565b50505050905090810190601f1680156103f75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104476004803603602081101561041b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611161565b005b61048b6004803603602081101561045f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061128f565b6040518082815260200191505060405180910390f35b6104e3600480360360208110156104b757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112a7565b6040518082815260200191505060405180910390f35b61059d600480360361010081101561051057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803515159060200190929190803560ff16906020019092919080359060200190929190803590602001909291905050506112bf565b005b6105a76117fa565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156105e75780820151818401526020810190506105cc565b50505050905090810190601f1680156106145780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6106646004803603602081101561063857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611833565b005b6106b26004803603604081101561067c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611961565b005b610700600480360360408110156106ca57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611df4565b604051808215151515815260200191505060405180910390f35b6107666004803603604081101561073057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611e09565b005b6107d46004803603606081101561077e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611e19565b005b610818600480360360208110156107ec57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611e2a565b6040518082815260200191505060405180910390f35b6108906004803603604081101561084457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611e42565b6040518082815260200191505060405180910390f35b6108f2600480360360408110156108bc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611e67565b005b6040518060400160405280600e81526020017f44616920537461626c65636f696e00000000000000000000000000000000000081525081565b600081600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b60015481565b600081600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610adc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f4461692f696e73756666696369656e742d62616c616e6365000000000000000081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614158015610bb457507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b15610db25781600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610cab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f4461692f696e73756666696369656e742d616c6c6f77616e636500000000000081525060200191505060405180910390fd5b610d31600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483611e77565b600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b610dfb600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483611e77565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610e87600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483611e91565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b7fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb60001b81565b601281565b60055481565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414611020576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f4461692f6e6f742d617574686f72697a6564000000000000000000000000000081525060200191505060405180910390fd5b611069600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482611e91565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506110b860015482611e91565b6001819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b6040518060400160405280600181526020017f310000000000000000000000000000000000000000000000000000000000000081525081565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414611215576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f4461692f6e6f742d617574686f72697a6564000000000000000000000000000081525060200191505060405180910390fd5b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505961012081016040526020815260e0602082015260e0600060408301376024356004353360003560e01c60e01b61012085a45050565b60026020528060005260406000206000915090505481565b60046020528060005260406000206000915090505481565b60006005547fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb60001b8a8a8a8a8a604051602001808781526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020018215151515815260200196505050505050506040516020818303038152906040528051906020012060405160200180807f190100000000000000000000000000000000000000000000000000000000000081525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050600073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff16141561148c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f4461692f696e76616c69642d616464726573732d30000000000000000000000081525060200191505060405180910390fd5b60018185858560405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156114e9573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614611593576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f4461692f696e76616c69642d7065726d6974000000000000000000000000000081525060200191505060405180910390fd5b60008614806115a25750854211155b611614576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f4461692f7065726d69742d65787069726564000000000000000000000000000081525060200191505060405180910390fd5b600460008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505587146116d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4461692f696e76616c69642d6e6f6e636500000000000000000000000000000081525060200191505060405180910390fd5b6000856116e4576000611706565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff5b905080600360008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508873ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a350505050505050505050565b6040518060400160405280600381526020017f444149000000000000000000000000000000000000000000000000000000000081525081565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146118e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f4461692f6e6f742d617574686f72697a6564000000000000000000000000000081525060200191505060405180910390fd5b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505961012081016040526020815260e0602082015260e0600060408301376024356004353360003560e01c60e01b61012085a45050565b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015611a16576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f4461692f696e73756666696369656e742d62616c616e6365000000000000000081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614158015611aee57507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b15611cec5780600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015611be5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f4461692f696e73756666696369656e742d616c6c6f77616e636500000000000081525060200191505060405180910390fd5b611c6b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482611e77565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b611d35600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482611e77565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611d8460015482611e77565b600181905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b6000611e01338484610a25565b905092915050565b611e14338383610a25565b505050565b611e24838383610a25565b50505050565b60006020528060005260406000206000915090505481565b6003602052816000526040600020602052806000526040600020600091509150505481565b611e72823383610a25565b505050565b6000828284039150811115611e8b57600080fd5b92915050565b6000828284019150811015611ea557600080fd5b9291505056fea265627a7a7231582060b9a1d044367c1dadd8490a34d74415e9453abf42d9ffcb991ae3a22978996e64736f6c634300050c0032454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x20D3 CODESIZE SUB DUP1 PUSH2 0x20D3 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 DUP1 PUSH2 0x2081 PUSH1 0x52 SWAP2 CODECOPY PUSH1 0x52 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x44616920537461626C65636F696E000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP PUSH2 0x1EE0 DUP1 PUSH2 0x1A1 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7ECEBE00 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x6B4 JUMPI DUP1 PUSH4 0xB753A98C EQ PUSH2 0x71A JUMPI DUP1 PUSH4 0xBB35783B EQ PUSH2 0x768 JUMPI DUP1 PUSH4 0xBF353DBB EQ PUSH2 0x7D6 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x82E JUMPI DUP1 PUSH4 0xF2D5D56B EQ PUSH2 0x8A6 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x4A1 JUMPI DUP1 PUSH4 0x8FCBAF0C EQ PUSH2 0x4F9 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x59F JUMPI DUP1 PUSH4 0x9C52A7F1 EQ PUSH2 0x622 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x666 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0x65FAE35E EQ PUSH2 0x405 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x449 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x2D4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14F PUSH2 0x8F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x18F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x174 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1BC JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x216 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x92D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x238 PUSH2 0xA1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x264 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DC PUSH2 0xF3A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FA PUSH2 0xF61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31E PUSH2 0xF66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x380 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x34A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF6C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x38A PUSH2 0x1128 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3CA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3AF JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x3F7 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x447 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x41B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1161 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x48B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x45F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x128F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x12A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x59D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x100 DUP2 LT ISZERO PUSH2 0x510 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x12BF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5A7 PUSH2 0x17FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5E7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5CC JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x614 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x664 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x638 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1833 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x67C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1961 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x700 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1DF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x766 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x730 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1E09 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x77E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1E19 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x818 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1E2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x890 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x844 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1E42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x8BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1E67 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x44616920537461626C65636F696E000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0xADC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4461692F696E73756666696369656E742D62616C616E63650000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xBB4 JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO JUMPDEST ISZERO PUSH2 0xDB2 JUMPI DUP2 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0xCAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4461692F696E73756666696369656E742D616C6C6F77616E6365000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD31 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP4 PUSH2 0x1E77 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0xDFB PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP4 PUSH2 0x1E77 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xE87 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP4 PUSH2 0x1E91 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0xEA2AA0A1BE11A07ED86D755C93467F4F82362B452371D1BA94D1715123511ACB PUSH1 0x0 SHL DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x1020 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4461692F6E6F742D617574686F72697A65640000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1069 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 PUSH2 0x1E91 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x10B8 PUSH1 0x1 SLOAD DUP3 PUSH2 0x1E91 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x1215 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4461692F6E6F742D617574686F72697A65640000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP MSIZE PUSH2 0x120 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0xE0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xE0 PUSH1 0x0 PUSH1 0x40 DUP4 ADD CALLDATACOPY PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD CALLER PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR PUSH1 0xE0 SHL PUSH2 0x120 DUP6 LOG4 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD PUSH32 0xEA2AA0A1BE11A07ED86D755C93467F4F82362B452371D1BA94D1715123511ACB PUSH1 0x0 SHL DUP11 DUP11 DUP11 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x148C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4461692F696E76616C69642D616464726573732D300000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1593 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4461692F696E76616C69642D7065726D69740000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP7 EQ DUP1 PUSH2 0x15A2 JUMPI POP DUP6 TIMESTAMP GT ISZERO JUMPDEST PUSH2 0x1614 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4461692F7065726D69742D657870697265640000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE DUP8 EQ PUSH2 0x16D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4461692F696E76616C69642D6E6F6E6365000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 PUSH2 0x16E4 JUMPI PUSH1 0x0 PUSH2 0x1706 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4441490000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x18E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4461692F6E6F742D617574686F72697A65640000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP MSIZE PUSH2 0x120 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0xE0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xE0 PUSH1 0x0 PUSH1 0x40 DUP4 ADD CALLDATACOPY PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD CALLER PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR PUSH1 0xE0 SHL PUSH2 0x120 DUP6 LOG4 POP POP JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x1A16 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4461692F696E73756666696369656E742D62616C616E63650000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1AEE JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO JUMPDEST ISZERO PUSH2 0x1CEC JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x1BE5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4461692F696E73756666696369656E742D616C6C6F77616E6365000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C6B PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 PUSH2 0x1E77 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x1D35 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 PUSH2 0x1E77 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1D84 PUSH1 0x1 SLOAD DUP3 PUSH2 0x1E77 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E01 CALLER DUP5 DUP5 PUSH2 0xA25 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E14 CALLER DUP4 DUP4 PUSH2 0xA25 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1E24 DUP4 DUP4 DUP4 PUSH2 0xA25 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1E72 DUP3 CALLER DUP4 PUSH2 0xA25 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 SUB SWAP2 POP DUP2 GT ISZERO PUSH2 0x1E8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 ADD SWAP2 POP DUP2 LT ISZERO PUSH2 0x1EA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 PUSH1 0xB9 LOG1 0xd0 DIFFICULTY CALLDATASIZE PUSH29 0x1DADD8490A34D74415E9453ABF42D9FFCB991AE3A22978996E64736F6C PUSH4 0x4300050C STOP ORIGIN GASLIMIT 0x49 POP CALLDATACOPY BALANCE ORIGIN DIFFICULTY PUSH16 0x6D61696E28737472696E67206E616D65 0x2c PUSH20 0x7472696E672076657273696F6E2C75696E743235 CALLDATASIZE KECCAK256 PUSH4 0x6861696E 0x49 PUSH5 0x2C61646472 PUSH6 0x737320766572 PUSH10 0x6679696E67436F6E7472 PUSH2 0x6374 0x29 ",
							"sourceMap": "3038:4998:0:-;;;4571:377;8:9:-1;5:2;;;30:1;27;20:12;5:2;4571:377:0;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4571:377:0;;;;;;;;;;;;;;;;4639:1;4619:5;:17;4625:10;4619:17;;;;;;;;;;;;;;;:21;;;;4705:95;;;;;;;;;;;;;;;;;;;4831:4;;;;;;;;;;;;;;;;;4815:22;;;;;;4868:7;;;;;;;;;;;;;;;;;4852:25;;;;;;4892:8;4923:4;4680:259;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4680:259:0;;;4670:270;;;;;;4651:16;:289;;;;4571:377;3038:4998;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101425760003560e01c80637ecebe00116100b8578063a9059cbb1161007c578063a9059cbb146106b4578063b753a98c1461071a578063bb35783b14610768578063bf353dbb146107d6578063dd62ed3e1461082e578063f2d5d56b146108a657610142565b80637ecebe00146104a15780638fcbaf0c146104f957806395d89b411461059f5780639c52a7f1146106225780639dc29fac1461066657610142565b8063313ce5671161010a578063313ce567146102f25780633644e5151461031657806340c10f191461033457806354fd4d501461038257806365fae35e1461040557806370a082311461044957610142565b806306fdde0314610147578063095ea7b3146101ca57806318160ddd1461023057806323b872dd1461024e57806330adf81f146102d4575b600080fd5b61014f6108f4565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561018f578082015181840152602081019050610174565b50505050905090810190601f1680156101bc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610216600480360360408110156101e057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061092d565b604051808215151515815260200191505060405180910390f35b610238610a1f565b6040518082815260200191505060405180910390f35b6102ba6004803603606081101561026457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a25565b604051808215151515815260200191505060405180910390f35b6102dc610f3a565b6040518082815260200191505060405180910390f35b6102fa610f61565b604051808260ff1660ff16815260200191505060405180910390f35b61031e610f66565b6040518082815260200191505060405180910390f35b6103806004803603604081101561034a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f6c565b005b61038a611128565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103ca5780820151818401526020810190506103af565b50505050905090810190601f1680156103f75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104476004803603602081101561041b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611161565b005b61048b6004803603602081101561045f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061128f565b6040518082815260200191505060405180910390f35b6104e3600480360360208110156104b757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112a7565b6040518082815260200191505060405180910390f35b61059d600480360361010081101561051057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803515159060200190929190803560ff16906020019092919080359060200190929190803590602001909291905050506112bf565b005b6105a76117fa565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156105e75780820151818401526020810190506105cc565b50505050905090810190601f1680156106145780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6106646004803603602081101561063857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611833565b005b6106b26004803603604081101561067c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611961565b005b610700600480360360408110156106ca57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611df4565b604051808215151515815260200191505060405180910390f35b6107666004803603604081101561073057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611e09565b005b6107d46004803603606081101561077e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611e19565b005b610818600480360360208110156107ec57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611e2a565b6040518082815260200191505060405180910390f35b6108906004803603604081101561084457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611e42565b6040518082815260200191505060405180910390f35b6108f2600480360360408110156108bc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611e67565b005b6040518060400160405280600e81526020017f44616920537461626c65636f696e00000000000000000000000000000000000081525081565b600081600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b60015481565b600081600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610adc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f4461692f696e73756666696369656e742d62616c616e6365000000000000000081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614158015610bb457507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b15610db25781600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610cab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f4461692f696e73756666696369656e742d616c6c6f77616e636500000000000081525060200191505060405180910390fd5b610d31600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483611e77565b600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b610dfb600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483611e77565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610e87600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483611e91565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b7fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb60001b81565b601281565b60055481565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414611020576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f4461692f6e6f742d617574686f72697a6564000000000000000000000000000081525060200191505060405180910390fd5b611069600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482611e91565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506110b860015482611e91565b6001819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b6040518060400160405280600181526020017f310000000000000000000000000000000000000000000000000000000000000081525081565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414611215576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f4461692f6e6f742d617574686f72697a6564000000000000000000000000000081525060200191505060405180910390fd5b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505961012081016040526020815260e0602082015260e0600060408301376024356004353360003560e01c60e01b61012085a45050565b60026020528060005260406000206000915090505481565b60046020528060005260406000206000915090505481565b60006005547fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb60001b8a8a8a8a8a604051602001808781526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020018215151515815260200196505050505050506040516020818303038152906040528051906020012060405160200180807f190100000000000000000000000000000000000000000000000000000000000081525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050600073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff16141561148c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f4461692f696e76616c69642d616464726573732d30000000000000000000000081525060200191505060405180910390fd5b60018185858560405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156114e9573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614611593576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f4461692f696e76616c69642d7065726d6974000000000000000000000000000081525060200191505060405180910390fd5b60008614806115a25750854211155b611614576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f4461692f7065726d69742d65787069726564000000000000000000000000000081525060200191505060405180910390fd5b600460008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505587146116d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4461692f696e76616c69642d6e6f6e636500000000000000000000000000000081525060200191505060405180910390fd5b6000856116e4576000611706565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff5b905080600360008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508873ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a350505050505050505050565b6040518060400160405280600381526020017f444149000000000000000000000000000000000000000000000000000000000081525081565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146118e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f4461692f6e6f742d617574686f72697a6564000000000000000000000000000081525060200191505060405180910390fd5b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505961012081016040526020815260e0602082015260e0600060408301376024356004353360003560e01c60e01b61012085a45050565b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015611a16576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f4461692f696e73756666696369656e742d62616c616e6365000000000000000081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614158015611aee57507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b15611cec5780600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015611be5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f4461692f696e73756666696369656e742d616c6c6f77616e636500000000000081525060200191505060405180910390fd5b611c6b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482611e77565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b611d35600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482611e77565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611d8460015482611e77565b600181905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b6000611e01338484610a25565b905092915050565b611e14338383610a25565b505050565b611e24838383610a25565b50505050565b60006020528060005260406000206000915090505481565b6003602052816000526040600020602052806000526040600020600091509150505481565b611e72823383610a25565b505050565b6000828284039150811115611e8b57600080fd5b92915050565b6000828284019150811015611ea557600080fd5b9291505056fea265627a7a7231582060b9a1d044367c1dadd8490a34d74415e9453abf42d9ffcb991ae3a22978996e64736f6c634300050c0032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7ECEBE00 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x6B4 JUMPI DUP1 PUSH4 0xB753A98C EQ PUSH2 0x71A JUMPI DUP1 PUSH4 0xBB35783B EQ PUSH2 0x768 JUMPI DUP1 PUSH4 0xBF353DBB EQ PUSH2 0x7D6 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x82E JUMPI DUP1 PUSH4 0xF2D5D56B EQ PUSH2 0x8A6 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x4A1 JUMPI DUP1 PUSH4 0x8FCBAF0C EQ PUSH2 0x4F9 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x59F JUMPI DUP1 PUSH4 0x9C52A7F1 EQ PUSH2 0x622 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x666 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0x65FAE35E EQ PUSH2 0x405 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x449 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x2D4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14F PUSH2 0x8F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x18F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x174 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1BC JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x216 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x92D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x238 PUSH2 0xA1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x264 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DC PUSH2 0xF3A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FA PUSH2 0xF61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31E PUSH2 0xF66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x380 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x34A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF6C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x38A PUSH2 0x1128 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3CA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3AF JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x3F7 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x447 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x41B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1161 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x48B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x45F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x128F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x12A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x59D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x100 DUP2 LT ISZERO PUSH2 0x510 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x12BF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5A7 PUSH2 0x17FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5E7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5CC JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x614 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x664 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x638 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1833 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x67C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1961 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x700 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1DF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x766 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x730 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1E09 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x77E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1E19 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x818 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1E2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x890 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x844 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1E42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x8BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1E67 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x44616920537461626C65636F696E000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0xADC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4461692F696E73756666696369656E742D62616C616E63650000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xBB4 JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO JUMPDEST ISZERO PUSH2 0xDB2 JUMPI DUP2 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0xCAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4461692F696E73756666696369656E742D616C6C6F77616E6365000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD31 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP4 PUSH2 0x1E77 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0xDFB PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP4 PUSH2 0x1E77 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xE87 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP4 PUSH2 0x1E91 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0xEA2AA0A1BE11A07ED86D755C93467F4F82362B452371D1BA94D1715123511ACB PUSH1 0x0 SHL DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x1020 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4461692F6E6F742D617574686F72697A65640000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1069 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 PUSH2 0x1E91 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x10B8 PUSH1 0x1 SLOAD DUP3 PUSH2 0x1E91 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x1215 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4461692F6E6F742D617574686F72697A65640000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP MSIZE PUSH2 0x120 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0xE0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xE0 PUSH1 0x0 PUSH1 0x40 DUP4 ADD CALLDATACOPY PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD CALLER PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR PUSH1 0xE0 SHL PUSH2 0x120 DUP6 LOG4 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD PUSH32 0xEA2AA0A1BE11A07ED86D755C93467F4F82362B452371D1BA94D1715123511ACB PUSH1 0x0 SHL DUP11 DUP11 DUP11 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x148C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4461692F696E76616C69642D616464726573732D300000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1593 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4461692F696E76616C69642D7065726D69740000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP7 EQ DUP1 PUSH2 0x15A2 JUMPI POP DUP6 TIMESTAMP GT ISZERO JUMPDEST PUSH2 0x1614 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4461692F7065726D69742D657870697265640000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE DUP8 EQ PUSH2 0x16D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4461692F696E76616C69642D6E6F6E6365000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 PUSH2 0x16E4 JUMPI PUSH1 0x0 PUSH2 0x1706 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4441490000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x18E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4461692F6E6F742D617574686F72697A65640000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP MSIZE PUSH2 0x120 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0xE0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xE0 PUSH1 0x0 PUSH1 0x40 DUP4 ADD CALLDATACOPY PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD CALLER PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR PUSH1 0xE0 SHL PUSH2 0x120 DUP6 LOG4 POP POP JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x1A16 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4461692F696E73756666696369656E742D62616C616E63650000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1AEE JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO JUMPDEST ISZERO PUSH2 0x1CEC JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x1BE5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4461692F696E73756666696369656E742D616C6C6F77616E6365000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C6B PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 PUSH2 0x1E77 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x1D35 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 PUSH2 0x1E77 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1D84 PUSH1 0x1 SLOAD DUP3 PUSH2 0x1E77 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E01 CALLER DUP5 DUP5 PUSH2 0xA25 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E14 CALLER DUP4 DUP4 PUSH2 0xA25 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1E24 DUP4 DUP4 DUP4 PUSH2 0xA25 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1E72 DUP3 CALLER DUP4 PUSH2 0xA25 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 SUB SWAP2 POP DUP2 GT ISZERO PUSH2 0x1E8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 ADD SWAP2 POP DUP2 LT ISZERO PUSH2 0x1EA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 PUSH1 0xB9 LOG1 0xd0 DIFFICULTY CALLDATASIZE PUSH29 0x1DADD8490A34D74415E9453ABF42D9FFCB991AE3A22978996E64736F6C PUSH4 0x4300050C STOP ORIGIN ",
							"sourceMap": "3038:4998:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3038:4998:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3410:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3410:51:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6447:183;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6447:183:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3604:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5109:590;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5109:590:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4454:108;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3560:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4271:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5705:206;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5705:206:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3515:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3515:38:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3135:65;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3135:65:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;3639:63;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3639:63:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3779:60;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3779:60:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7020:1013;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;7020:1013:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3468:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3468:40:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3206:65;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3206:65:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;5917:524;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5917:524:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4978:125;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4978:125:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6660:99;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6660:99:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6870:105;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6870:105:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3090:38;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3090:38:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3709:63;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3709:63:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6765:99;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6765:99:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3410:51;;;;;;;;;;;;;;;;;;;:::o;6447:183::-;6505:4;6551:3;6522:9;:21;6532:10;6522:21;;;;;;;;;;;;;;;:26;6544:3;6522:26;;;;;;;;;;;;;;;:32;;;;6591:3;6570:30;;6579:10;6570:30;;;6596:3;6570:30;;;;;;;;;;;;;;;;;;6618:4;6611:11;;6447:183;;;;:::o;3604:26::-;;;;:::o;5109:590::-;5192:4;5240:3;5222:9;:14;5232:3;5222:14;;;;;;;;;;;;;;;;:21;;5214:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5294:10;5287:17;;:3;:17;;;;:59;;;;;5343:2;5308:9;:14;5318:3;5308:14;;;;;;;;;;;;;;;:26;5323:10;5308:26;;;;;;;;;;;;;;;;:38;;5287:59;5283:244;;;5401:3;5371:9;:14;5381:3;5371:14;;;;;;;;;;;;;;;:26;5386:10;5371:26;;;;;;;;;;;;;;;;:33;;5363:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5479:36;5483:9;:14;5493:3;5483:14;;;;;;;;;;;;;;;:26;5498:10;5483:26;;;;;;;;;;;;;;;;5511:3;5479;:36::i;:::-;5450:9;:14;5460:3;5450:14;;;;;;;;;;;;;;;:26;5465:10;5450:26;;;;;;;;;;;;;;;:65;;;;5283:244;5554:24;5558:9;:14;5568:3;5558:14;;;;;;;;;;;;;;;;5574:3;5554;:24::i;:::-;5537:9;:14;5547:3;5537:14;;;;;;;;;;;;;;;:41;;;;5606:24;5610:9;:14;5620:3;5610:14;;;;;;;;;;;;;;;;5626:3;5606;:24::i;:::-;5589:9;:14;5599:3;5589:14;;;;;;;;;;;;;;;:41;;;;5660:3;5646:23;;5655:3;5646:23;;;5665:3;5646:23;;;;;;;;;;;;;;;;;;5687:4;5680:11;;5109:590;;;;;:::o;4454:108::-;4496:66;4454:108;;;:::o;3560:37::-;3595:2;3560:37;:::o;4271:31::-;;;;:::o;5705:206::-;3331:1;3310:5;:17;3316:10;3310:17;;;;;;;;;;;;;;;;:22;3302:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5784:24;5788:9;:14;5798:3;5788:14;;;;;;;;;;;;;;;;5804:3;5784;:24::i;:::-;5767:9;:14;5777:3;5767:14;;;;;;;;;;;;;;;:41;;;;5836:21;5840:11;;5853:3;5836;:21::i;:::-;5819:11;:38;;;;5894:3;5873:30;;5890:1;5873:30;;;5899:3;5873:30;;;;;;;;;;;;;;;;;;5705:206;;:::o;3515:38::-;;;;;;;;;;;;;;;;;;;:::o;3135:65::-;3331:1;3310:5;:17;3316:10;3310:17;;;;;;;;;;;;;;;;:22;3302:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3196:1;3183:5;:10;3189:3;3183:10;;;;;;;;;;;;;;;:14;;;;1412:5;1508:3;1502:4;1498:14;1492:4;1485:28;1583:4;1577;1570:18;1675:3;1668:4;1662;1658:15;1651:28;1762:3;1759:1;1752:4;1746;1742:15;1729:37;2084:2;2071:16;2021:1;2008:15;1939:6;1904:1;1891:15;1886:3;1882:25;1877:3;1873:35;1812:3;1806:4;1801:333;1235:910;;:::o;3639:63::-;;;;;;;;;;;;;;;;;:::o;3779:60::-;;;;;;;;;;;;;;;;;:::o;7020:1013::-;7191:14;7295:16;;4496:66;7351:15;;7406:6;7452:7;7499:5;7544:6;7590:7;7340:258;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;7340:258:0;;;7330:269;;;;;;7231:379;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;7231:379:0;;;7221:390;;;;;;7191:420;;7650:1;7632:20;;:6;:20;;;;7624:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7707:26;7717:6;7725:1;7728;7731;7707:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7707:26:0;;;;;;;;7697:36;;:6;:36;;;7689:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7785:1;7775:6;:11;:28;;;;7797:6;7790:3;:13;;7775:28;7767:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7854:6;:14;7861:6;7854:14;;;;;;;;;;;;;;;;:16;;;;;;;;;;;;7845:5;:25;7837:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7903:8;7914:7;:22;;7935:1;7914:22;;;7929:2;7914:22;7903:33;;7976:3;7947:9;:17;7957:6;7947:17;;;;;;;;;;;;;;;:26;7965:7;7947:26;;;;;;;;;;;;;;;:32;;;;8012:7;7995:30;;8004:6;7995:30;;;8021:3;7995:30;;;;;;;;;;;;;;;;;;7020:1013;;;;;;;;;;:::o;3468:40::-;;;;;;;;;;;;;;;;;;;:::o;3206:65::-;3331:1;3310:5;:17;3316:10;3310:17;;;;;;;;;;;;;;;;:22;3302:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3267:1;3254:5;:10;3260:3;3254:10;;;;;;;;;;;;;;;:14;;;;1412:5;1508:3;1502:4;1498:14;1492:4;1485:28;1583:4;1577;1570:18;1675:3;1668:4;1662;1658:15;1651:28;1762:3;1759:1;1752:4;1746;1742:15;1729:37;2084:2;2071:16;2021:1;2008:15;1939:6;1904:1;1891:15;1886:3;1882:25;1877:3;1873:35;1812:3;1806:4;1801:333;1235:910;;:::o;5917:524::-;6000:3;5982:9;:14;5992:3;5982:14;;;;;;;;;;;;;;;;:21;;5974:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6054:10;6047:17;;:3;:17;;;;:59;;;;;6103:2;6068:9;:14;6078:3;6068:14;;;;;;;;;;;;;;;:26;6083:10;6068:26;;;;;;;;;;;;;;;;:38;;6047:59;6043:244;;;6161:3;6131:9;:14;6141:3;6131:14;;;;;;;;;;;;;;;:26;6146:10;6131:26;;;;;;;;;;;;;;;;:33;;6123:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6239:36;6243:9;:14;6253:3;6243:14;;;;;;;;;;;;;;;:26;6258:10;6243:26;;;;;;;;;;;;;;;;6271:3;6239;:36::i;:::-;6210:9;:14;6220:3;6210:14;;;;;;;;;;;;;;;:26;6225:10;6210:26;;;;;;;;;;;;;;;:65;;;;6043:244;6314:24;6318:9;:14;6328:3;6318:14;;;;;;;;;;;;;;;;6334:3;6314;:24::i;:::-;6297:9;:14;6307:3;6297:14;;;;;;;;;;;;;;;:41;;;;6366:21;6370:11;;6383:3;6366;:21::i;:::-;6349:11;:38;;;;6425:1;6403:30;;6412:3;6403:30;;;6429:3;6403:30;;;;;;;;;;;;;;;;;;5917:524;;:::o;4978:125::-;5037:4;5061:34;5074:10;5086:3;5091;5061:12;:34::i;:::-;5054:41;;4978:125;;;;:::o;6660:99::-;6717:34;6730:10;6742:3;6747;6717:12;:34::i;:::-;;6660:99;;:::o;6870:105::-;6940:27;6953:3;6958;6963;6940:12;:27::i;:::-;;6870:105;;;:::o;3090:38::-;;;;;;;;;;;;;;;;;:::o;3709:63::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6765:99::-;6822:34;6835:3;6840:10;6852:3;6822:12;:34::i;:::-;;6765:99;;:::o;4127:104::-;4179:6;4221:1;4215;4211;:5;4207:9;;;4206:16;;4198:25;;;;;;4127:104;;;;:::o;4017:::-;4069:6;4111:1;4105;4101;:5;4097:9;;;4096:16;;4088:25;;;;;;4017:104;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1580800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "450",
								"PERMIT_TYPEHASH()": "323",
								"allowance(address,address)": "777",
								"approve(address,uint256)": "22414",
								"balanceOf(address)": "702",
								"burn(address,uint256)": "infinite",
								"decimals()": "240",
								"deny(address)": "infinite",
								"mint(address,uint256)": "infinite",
								"move(address,address,uint256)": "infinite",
								"name()": "infinite",
								"nonces(address)": "592",
								"permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)": "infinite",
								"pull(address,uint256)": "infinite",
								"push(address,uint256)": "43523",
								"rely(address)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "473",
								"transfer(address,uint256)": "43574",
								"transferFrom(address,address,uint256)": "infinite",
								"version()": "infinite",
								"wards(address)": "657"
							},
							"internal": {
								"add(uint256,uint256)": "62",
								"sub(uint256,uint256)": "62"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3038,
									"end": 8036,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 3038,
									"end": 8036,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 3038,
									"end": 8036,
									"name": "MSTORE"
								},
								{
									"begin": 4571,
									"end": 4948,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 4571,
									"end": 4948,
									"name": "POP"
								},
								{
									"begin": 4571,
									"end": 4948,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 4571,
									"end": 4948,
									"name": "MLOAD"
								},
								{
									"begin": 4571,
									"end": 4948,
									"name": "PUSHSIZE"
								},
								{
									"begin": 4571,
									"end": 4948,
									"name": "CODESIZE"
								},
								{
									"begin": 4571,
									"end": 4948,
									"name": "SUB"
								},
								{
									"begin": 4571,
									"end": 4948,
									"name": "DUP1"
								},
								{
									"begin": 4571,
									"end": 4948,
									"name": "PUSHSIZE"
								},
								{
									"begin": 4571,
									"end": 4948,
									"name": "DUP4"
								},
								{
									"begin": 4571,
									"end": 4948,
									"name": "CODECOPY"
								},
								{
									"begin": 4571,
									"end": 4948,
									"name": "DUP2"
								},
								{
									"begin": 4571,
									"end": 4948,
									"name": "DUP2"
								},
								{
									"begin": 4571,
									"end": 4948,
									"name": "ADD"
								},
								{
									"begin": 4571,
									"end": 4948,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 4571,
									"end": 4948,
									"name": "MSTORE"
								},
								{
									"begin": 13,
									"end": 15,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 16,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 27,
									"name": "DUP1"
								},
								{
									"begin": 19,
									"end": 31,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": 4571,
									"end": 4948,
									"name": "DUP2"
								},
								{
									"begin": 4571,
									"end": 4948,
									"name": "ADD"
								},
								{
									"begin": 4571,
									"end": 4948,
									"name": "SWAP1"
								},
								{
									"begin": 4571,
									"end": 4948,
									"name": "DUP1"
								},
								{
									"begin": 4571,
									"end": 4948,
									"name": "DUP1"
								},
								{
									"begin": 4571,
									"end": 4948,
									"name": "MLOAD"
								},
								{
									"begin": 4571,
									"end": 4948,
									"name": "SWAP1"
								},
								{
									"begin": 4571,
									"end": 4948,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4571,
									"end": 4948,
									"name": "ADD"
								},
								{
									"begin": 4571,
									"end": 4948,
									"name": "SWAP1"
								},
								{
									"begin": 4571,
									"end": 4948,
									"name": "SWAP3"
								},
								{
									"begin": 4571,
									"end": 4948,
									"name": "SWAP2"
								},
								{
									"begin": 4571,
									"end": 4948,
									"name": "SWAP1"
								},
								{
									"begin": 4571,
									"end": 4948,
									"name": "POP"
								},
								{
									"begin": 4571,
									"end": 4948,
									"name": "POP"
								},
								{
									"begin": 4571,
									"end": 4948,
									"name": "POP"
								},
								{
									"begin": 4639,
									"end": 4640,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 4619,
									"end": 4624,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4619,
									"end": 4636,
									"name": "DUP1"
								},
								{
									"begin": 4625,
									"end": 4635,
									"name": "CALLER"
								},
								{
									"begin": 4619,
									"end": 4636,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4619,
									"end": 4636,
									"name": "AND"
								},
								{
									"begin": 4619,
									"end": 4636,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4619,
									"end": 4636,
									"name": "AND"
								},
								{
									"begin": 4619,
									"end": 4636,
									"name": "DUP2"
								},
								{
									"begin": 4619,
									"end": 4636,
									"name": "MSTORE"
								},
								{
									"begin": 4619,
									"end": 4636,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4619,
									"end": 4636,
									"name": "ADD"
								},
								{
									"begin": 4619,
									"end": 4636,
									"name": "SWAP1"
								},
								{
									"begin": 4619,
									"end": 4636,
									"name": "DUP2"
								},
								{
									"begin": 4619,
									"end": 4636,
									"name": "MSTORE"
								},
								{
									"begin": 4619,
									"end": 4636,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4619,
									"end": 4636,
									"name": "ADD"
								},
								{
									"begin": 4619,
									"end": 4636,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4619,
									"end": 4636,
									"name": "KECCAK256"
								},
								{
									"begin": 4619,
									"end": 4640,
									"name": "DUP2"
								},
								{
									"begin": 4619,
									"end": 4640,
									"name": "SWAP1"
								},
								{
									"begin": 4619,
									"end": 4640,
									"name": "SSTORE"
								},
								{
									"begin": 4619,
									"end": 4640,
									"name": "POP"
								},
								{
									"begin": 4705,
									"end": 4800,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 4705,
									"end": 4800,
									"name": "MLOAD"
								},
								{
									"begin": 4705,
									"end": 4800,
									"name": "DUP1"
								},
								{
									"begin": 4705,
									"end": 4800,
									"name": "DUP1"
								},
								{
									"begin": 4705,
									"end": 4800,
									"name": "PUSH data",
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 4705,
									"end": 4800,
									"name": "PUSH",
									"value": "52"
								},
								{
									"begin": 4705,
									"end": 4800,
									"name": "SWAP2"
								},
								{
									"begin": 4705,
									"end": 4800,
									"name": "CODECOPY"
								},
								{
									"begin": 4705,
									"end": 4800,
									"name": "PUSH",
									"value": "52"
								},
								{
									"begin": 4705,
									"end": 4800,
									"name": "ADD"
								},
								{
									"begin": 4705,
									"end": 4800,
									"name": "SWAP1"
								},
								{
									"begin": 4705,
									"end": 4800,
									"name": "POP"
								},
								{
									"begin": 4705,
									"end": 4800,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 4705,
									"end": 4800,
									"name": "MLOAD"
								},
								{
									"begin": 4705,
									"end": 4800,
									"name": "DUP1"
								},
								{
									"begin": 4705,
									"end": 4800,
									"name": "SWAP2"
								},
								{
									"begin": 4705,
									"end": 4800,
									"name": "SUB"
								},
								{
									"begin": 4705,
									"end": 4800,
									"name": "SWAP1"
								},
								{
									"begin": 4705,
									"end": 4800,
									"name": "KECCAK256"
								},
								{
									"begin": 4831,
									"end": 4835,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 4831,
									"end": 4835,
									"name": "MLOAD"
								},
								{
									"begin": 4831,
									"end": 4835,
									"name": "DUP1"
								},
								{
									"begin": 4831,
									"end": 4835,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 4831,
									"end": 4835,
									"name": "ADD"
								},
								{
									"begin": 4831,
									"end": 4835,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 4831,
									"end": 4835,
									"name": "MSTORE"
								},
								{
									"begin": 4831,
									"end": 4835,
									"name": "DUP1"
								},
								{
									"begin": 4831,
									"end": 4835,
									"name": "PUSH",
									"value": "E"
								},
								{
									"begin": 4831,
									"end": 4835,
									"name": "DUP2"
								},
								{
									"begin": 4831,
									"end": 4835,
									"name": "MSTORE"
								},
								{
									"begin": 4831,
									"end": 4835,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4831,
									"end": 4835,
									"name": "ADD"
								},
								{
									"begin": 4831,
									"end": 4835,
									"name": "PUSH",
									"value": "44616920537461626C65636F696E000000000000000000000000000000000000"
								},
								{
									"begin": 4831,
									"end": 4835,
									"name": "DUP2"
								},
								{
									"begin": 4831,
									"end": 4835,
									"name": "MSTORE"
								},
								{
									"begin": 4831,
									"end": 4835,
									"name": "POP"
								},
								{
									"begin": 4815,
									"end": 4837,
									"name": "DUP1"
								},
								{
									"begin": 4815,
									"end": 4837,
									"name": "MLOAD"
								},
								{
									"begin": 4815,
									"end": 4837,
									"name": "SWAP1"
								},
								{
									"begin": 4815,
									"end": 4837,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4815,
									"end": 4837,
									"name": "ADD"
								},
								{
									"begin": 4815,
									"end": 4837,
									"name": "KECCAK256"
								},
								{
									"begin": 4868,
									"end": 4875,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 4868,
									"end": 4875,
									"name": "MLOAD"
								},
								{
									"begin": 4868,
									"end": 4875,
									"name": "DUP1"
								},
								{
									"begin": 4868,
									"end": 4875,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 4868,
									"end": 4875,
									"name": "ADD"
								},
								{
									"begin": 4868,
									"end": 4875,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 4868,
									"end": 4875,
									"name": "MSTORE"
								},
								{
									"begin": 4868,
									"end": 4875,
									"name": "DUP1"
								},
								{
									"begin": 4868,
									"end": 4875,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 4868,
									"end": 4875,
									"name": "DUP2"
								},
								{
									"begin": 4868,
									"end": 4875,
									"name": "MSTORE"
								},
								{
									"begin": 4868,
									"end": 4875,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4868,
									"end": 4875,
									"name": "ADD"
								},
								{
									"begin": 4868,
									"end": 4875,
									"name": "PUSH",
									"value": "3100000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4868,
									"end": 4875,
									"name": "DUP2"
								},
								{
									"begin": 4868,
									"end": 4875,
									"name": "MSTORE"
								},
								{
									"begin": 4868,
									"end": 4875,
									"name": "POP"
								},
								{
									"begin": 4852,
									"end": 4877,
									"name": "DUP1"
								},
								{
									"begin": 4852,
									"end": 4877,
									"name": "MLOAD"
								},
								{
									"begin": 4852,
									"end": 4877,
									"name": "SWAP1"
								},
								{
									"begin": 4852,
									"end": 4877,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4852,
									"end": 4877,
									"name": "ADD"
								},
								{
									"begin": 4852,
									"end": 4877,
									"name": "KECCAK256"
								},
								{
									"begin": 4892,
									"end": 4900,
									"name": "DUP4"
								},
								{
									"begin": 4923,
									"end": 4927,
									"name": "ADDRESS"
								},
								{
									"begin": 4680,
									"end": 4939,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 4680,
									"end": 4939,
									"name": "MLOAD"
								},
								{
									"begin": 4680,
									"end": 4939,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4680,
									"end": 4939,
									"name": "ADD"
								},
								{
									"begin": 4680,
									"end": 4939,
									"name": "DUP1"
								},
								{
									"begin": 4680,
									"end": 4939,
									"name": "DUP7"
								},
								{
									"begin": 4680,
									"end": 4939,
									"name": "DUP2"
								},
								{
									"begin": 4680,
									"end": 4939,
									"name": "MSTORE"
								},
								{
									"begin": 4680,
									"end": 4939,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4680,
									"end": 4939,
									"name": "ADD"
								},
								{
									"begin": 4680,
									"end": 4939,
									"name": "DUP6"
								},
								{
									"begin": 4680,
									"end": 4939,
									"name": "DUP2"
								},
								{
									"begin": 4680,
									"end": 4939,
									"name": "MSTORE"
								},
								{
									"begin": 4680,
									"end": 4939,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4680,
									"end": 4939,
									"name": "ADD"
								},
								{
									"begin": 4680,
									"end": 4939,
									"name": "DUP5"
								},
								{
									"begin": 4680,
									"end": 4939,
									"name": "DUP2"
								},
								{
									"begin": 4680,
									"end": 4939,
									"name": "MSTORE"
								},
								{
									"begin": 4680,
									"end": 4939,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4680,
									"end": 4939,
									"name": "ADD"
								},
								{
									"begin": 4680,
									"end": 4939,
									"name": "DUP4"
								},
								{
									"begin": 4680,
									"end": 4939,
									"name": "DUP2"
								},
								{
									"begin": 4680,
									"end": 4939,
									"name": "MSTORE"
								},
								{
									"begin": 4680,
									"end": 4939,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4680,
									"end": 4939,
									"name": "ADD"
								},
								{
									"begin": 4680,
									"end": 4939,
									"name": "DUP3"
								},
								{
									"begin": 4680,
									"end": 4939,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4680,
									"end": 4939,
									"name": "AND"
								},
								{
									"begin": 4680,
									"end": 4939,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4680,
									"end": 4939,
									"name": "AND"
								},
								{
									"begin": 4680,
									"end": 4939,
									"name": "DUP2"
								},
								{
									"begin": 4680,
									"end": 4939,
									"name": "MSTORE"
								},
								{
									"begin": 4680,
									"end": 4939,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4680,
									"end": 4939,
									"name": "ADD"
								},
								{
									"begin": 4680,
									"end": 4939,
									"name": "SWAP6"
								},
								{
									"begin": 4680,
									"end": 4939,
									"name": "POP"
								},
								{
									"begin": 4680,
									"end": 4939,
									"name": "POP"
								},
								{
									"begin": 4680,
									"end": 4939,
									"name": "POP"
								},
								{
									"begin": 4680,
									"end": 4939,
									"name": "POP"
								},
								{
									"begin": 4680,
									"end": 4939,
									"name": "POP"
								},
								{
									"begin": 4680,
									"end": 4939,
									"name": "POP"
								},
								{
									"begin": 4680,
									"end": 4939,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 4680,
									"end": 4939,
									"name": "MLOAD"
								},
								{
									"begin": 49,
									"end": 53,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 39,
									"end": 46,
									"name": "DUP2"
								},
								{
									"begin": 30,
									"end": 37,
									"name": "DUP4"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "SUB"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "SUB"
								},
								{
									"begin": 13,
									"end": 20,
									"name": "DUP2"
								},
								{
									"begin": 6,
									"end": 55,
									"name": "MSTORE"
								},
								{
									"begin": 4680,
									"end": 4939,
									"name": "SWAP1"
								},
								{
									"begin": 4680,
									"end": 4939,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 4680,
									"end": 4939,
									"name": "MSTORE"
								},
								{
									"begin": 4670,
									"end": 4940,
									"name": "DUP1"
								},
								{
									"begin": 4670,
									"end": 4940,
									"name": "MLOAD"
								},
								{
									"begin": 4670,
									"end": 4940,
									"name": "SWAP1"
								},
								{
									"begin": 4670,
									"end": 4940,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4670,
									"end": 4940,
									"name": "ADD"
								},
								{
									"begin": 4670,
									"end": 4940,
									"name": "KECCAK256"
								},
								{
									"begin": 4651,
									"end": 4667,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 4651,
									"end": 4940,
									"name": "DUP2"
								},
								{
									"begin": 4651,
									"end": 4940,
									"name": "SWAP1"
								},
								{
									"begin": 4651,
									"end": 4940,
									"name": "SSTORE"
								},
								{
									"begin": 4651,
									"end": 4940,
									"name": "POP"
								},
								{
									"begin": 4571,
									"end": 4948,
									"name": "POP"
								},
								{
									"begin": 3038,
									"end": 8036,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3038,
									"end": 8036,
									"name": "DUP1"
								},
								{
									"begin": 3038,
									"end": 8036,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3038,
									"end": 8036,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3038,
									"end": 8036,
									"name": "CODECOPY"
								},
								{
									"begin": 3038,
									"end": 8036,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3038,
									"end": 8036,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a7231582060b9a1d044367c1dadd8490a34d74415e9453abf42d9ffcb991ae3a22978996e64736f6c634300050c0032",
									".code": [
										{
											"begin": 3038,
											"end": 8036,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "MSTORE"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "POP"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "LT"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "JUMPI"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "SHR"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "DUP1"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "PUSH",
											"value": "7ECEBE00"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "GT"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "JUMPI"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "DUP1"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "GT"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "JUMPI"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "DUP1"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "EQ"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "JUMPI"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "DUP1"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "PUSH",
											"value": "B753A98C"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "EQ"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "JUMPI"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "DUP1"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "PUSH",
											"value": "BB35783B"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "EQ"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "JUMPI"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "DUP1"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "PUSH",
											"value": "BF353DBB"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "EQ"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "JUMPI"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "DUP1"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "EQ"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "JUMPI"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "DUP1"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "PUSH",
											"value": "F2D5D56B"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "EQ"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "JUMPI"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "JUMP"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "JUMPDEST"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "DUP1"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "PUSH",
											"value": "7ECEBE00"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "EQ"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "JUMPI"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "DUP1"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "PUSH",
											"value": "8FCBAF0C"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "EQ"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "JUMPI"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "DUP1"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "EQ"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "JUMPI"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "DUP1"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "PUSH",
											"value": "9C52A7F1"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "EQ"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "JUMPI"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "DUP1"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "PUSH",
											"value": "9DC29FAC"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "EQ"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "JUMPI"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "JUMP"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "JUMPDEST"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "DUP1"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "GT"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "JUMPI"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "DUP1"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "EQ"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "JUMPI"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "DUP1"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "PUSH",
											"value": "3644E515"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "EQ"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "JUMPI"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "DUP1"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "PUSH",
											"value": "40C10F19"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "EQ"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "JUMPI"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "DUP1"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "PUSH",
											"value": "54FD4D50"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "EQ"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "JUMPI"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "DUP1"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "PUSH",
											"value": "65FAE35E"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "EQ"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "JUMPI"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "DUP1"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "EQ"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "JUMPI"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "JUMP"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "JUMPDEST"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "DUP1"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "EQ"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "JUMPI"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "DUP1"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "EQ"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "JUMPI"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "DUP1"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "EQ"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "JUMPI"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "DUP1"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "EQ"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "JUMPI"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "DUP1"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "PUSH",
											"value": "30ADF81F"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "EQ"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "JUMPI"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "JUMPDEST"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "DUP1"
										},
										{
											"begin": 3038,
											"end": 8036,
											"name": "REVERT"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "JUMPDEST"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "JUMPDEST"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "MLOAD"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "DUP1"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "DUP1"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "ADD"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "DUP3"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "DUP2"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "SUB"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "DUP3"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "MSTORE"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "DUP4"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "DUP2"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "DUP2"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "MLOAD"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "DUP2"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "MSTORE"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "ADD"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "SWAP2"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "DUP1"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "MLOAD"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "SWAP1"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "ADD"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "SWAP1"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "DUP1"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "DUP4"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "SWAP1"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "SWAP1"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "DUP2"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "ADD"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "SWAP1"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "AND"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "DUP1"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "ISZERO"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "JUMPI"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "DUP1"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "DUP3"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "SUB"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "DUP1"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "MLOAD"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "DUP4"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "SUB"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "EXP"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "SUB"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "NOT"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "AND"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "DUP2"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "MSTORE"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "ADD"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "SWAP2"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "JUMPDEST"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "SWAP3"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "MLOAD"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "DUP1"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "SWAP2"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "SUB"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "SWAP1"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "RETURN"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "JUMPDEST"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "DUP1"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "DUP2"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "ADD"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "SWAP1"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "DUP1"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "DUP1"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "AND"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "SWAP1"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "ADD"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "SWAP1"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "SWAP3"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "SWAP2"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "SWAP1"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "DUP1"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "SWAP1"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "ADD"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "SWAP1"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "SWAP3"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "SWAP2"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "SWAP1"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "POP"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "POP"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "POP"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "JUMPDEST"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "MLOAD"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "DUP1"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "DUP3"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "ISZERO"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "ISZERO"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "ISZERO"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "ISZERO"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "DUP2"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "MSTORE"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "ADD"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "SWAP2"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "POP"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "POP"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "MLOAD"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "DUP1"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "SWAP2"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "SUB"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "SWAP1"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "RETURN"
										},
										{
											"begin": 3604,
											"end": 3630,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 3604,
											"end": 3630,
											"name": "JUMPDEST"
										},
										{
											"begin": 3604,
											"end": 3630,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 3604,
											"end": 3630,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 3604,
											"end": 3630,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3604,
											"end": 3630,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 3604,
											"end": 3630,
											"name": "JUMPDEST"
										},
										{
											"begin": 3604,
											"end": 3630,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3604,
											"end": 3630,
											"name": "MLOAD"
										},
										{
											"begin": 3604,
											"end": 3630,
											"name": "DUP1"
										},
										{
											"begin": 3604,
											"end": 3630,
											"name": "DUP3"
										},
										{
											"begin": 3604,
											"end": 3630,
											"name": "DUP2"
										},
										{
											"begin": 3604,
											"end": 3630,
											"name": "MSTORE"
										},
										{
											"begin": 3604,
											"end": 3630,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3604,
											"end": 3630,
											"name": "ADD"
										},
										{
											"begin": 3604,
											"end": 3630,
											"name": "SWAP2"
										},
										{
											"begin": 3604,
											"end": 3630,
											"name": "POP"
										},
										{
											"begin": 3604,
											"end": 3630,
											"name": "POP"
										},
										{
											"begin": 3604,
											"end": 3630,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3604,
											"end": 3630,
											"name": "MLOAD"
										},
										{
											"begin": 3604,
											"end": 3630,
											"name": "DUP1"
										},
										{
											"begin": 3604,
											"end": 3630,
											"name": "SWAP2"
										},
										{
											"begin": 3604,
											"end": 3630,
											"name": "SUB"
										},
										{
											"begin": 3604,
											"end": 3630,
											"name": "SWAP1"
										},
										{
											"begin": 3604,
											"end": 3630,
											"name": "RETURN"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "JUMPDEST"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "DUP1"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "DUP2"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "ADD"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "SWAP1"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "DUP1"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "DUP1"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "AND"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "SWAP1"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "ADD"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "SWAP1"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "SWAP3"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "SWAP2"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "SWAP1"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "DUP1"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "AND"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "SWAP1"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "ADD"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "SWAP1"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "SWAP3"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "SWAP2"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "SWAP1"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "DUP1"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "SWAP1"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "ADD"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "SWAP1"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "SWAP3"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "SWAP2"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "SWAP1"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "POP"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "POP"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "POP"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "JUMPDEST"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "MLOAD"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "DUP1"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "DUP3"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "ISZERO"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "ISZERO"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "ISZERO"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "ISZERO"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "DUP2"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "MSTORE"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "ADD"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "SWAP2"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "POP"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "POP"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "MLOAD"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "DUP1"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "SWAP2"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "SUB"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "SWAP1"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "RETURN"
										},
										{
											"begin": 4454,
											"end": 4562,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 4454,
											"end": 4562,
											"name": "JUMPDEST"
										},
										{
											"begin": 4454,
											"end": 4562,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 4454,
											"end": 4562,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 4454,
											"end": 4562,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4454,
											"end": 4562,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 4454,
											"end": 4562,
											"name": "JUMPDEST"
										},
										{
											"begin": 4454,
											"end": 4562,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4454,
											"end": 4562,
											"name": "MLOAD"
										},
										{
											"begin": 4454,
											"end": 4562,
											"name": "DUP1"
										},
										{
											"begin": 4454,
											"end": 4562,
											"name": "DUP3"
										},
										{
											"begin": 4454,
											"end": 4562,
											"name": "DUP2"
										},
										{
											"begin": 4454,
											"end": 4562,
											"name": "MSTORE"
										},
										{
											"begin": 4454,
											"end": 4562,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4454,
											"end": 4562,
											"name": "ADD"
										},
										{
											"begin": 4454,
											"end": 4562,
											"name": "SWAP2"
										},
										{
											"begin": 4454,
											"end": 4562,
											"name": "POP"
										},
										{
											"begin": 4454,
											"end": 4562,
											"name": "POP"
										},
										{
											"begin": 4454,
											"end": 4562,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4454,
											"end": 4562,
											"name": "MLOAD"
										},
										{
											"begin": 4454,
											"end": 4562,
											"name": "DUP1"
										},
										{
											"begin": 4454,
											"end": 4562,
											"name": "SWAP2"
										},
										{
											"begin": 4454,
											"end": 4562,
											"name": "SUB"
										},
										{
											"begin": 4454,
											"end": 4562,
											"name": "SWAP1"
										},
										{
											"begin": 4454,
											"end": 4562,
											"name": "RETURN"
										},
										{
											"begin": 3560,
											"end": 3597,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 3560,
											"end": 3597,
											"name": "JUMPDEST"
										},
										{
											"begin": 3560,
											"end": 3597,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 3560,
											"end": 3597,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 3560,
											"end": 3597,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3560,
											"end": 3597,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 3560,
											"end": 3597,
											"name": "JUMPDEST"
										},
										{
											"begin": 3560,
											"end": 3597,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3560,
											"end": 3597,
											"name": "MLOAD"
										},
										{
											"begin": 3560,
											"end": 3597,
											"name": "DUP1"
										},
										{
											"begin": 3560,
											"end": 3597,
											"name": "DUP3"
										},
										{
											"begin": 3560,
											"end": 3597,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3560,
											"end": 3597,
											"name": "AND"
										},
										{
											"begin": 3560,
											"end": 3597,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3560,
											"end": 3597,
											"name": "AND"
										},
										{
											"begin": 3560,
											"end": 3597,
											"name": "DUP2"
										},
										{
											"begin": 3560,
											"end": 3597,
											"name": "MSTORE"
										},
										{
											"begin": 3560,
											"end": 3597,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3560,
											"end": 3597,
											"name": "ADD"
										},
										{
											"begin": 3560,
											"end": 3597,
											"name": "SWAP2"
										},
										{
											"begin": 3560,
											"end": 3597,
											"name": "POP"
										},
										{
											"begin": 3560,
											"end": 3597,
											"name": "POP"
										},
										{
											"begin": 3560,
											"end": 3597,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3560,
											"end": 3597,
											"name": "MLOAD"
										},
										{
											"begin": 3560,
											"end": 3597,
											"name": "DUP1"
										},
										{
											"begin": 3560,
											"end": 3597,
											"name": "SWAP2"
										},
										{
											"begin": 3560,
											"end": 3597,
											"name": "SUB"
										},
										{
											"begin": 3560,
											"end": 3597,
											"name": "SWAP1"
										},
										{
											"begin": 3560,
											"end": 3597,
											"name": "RETURN"
										},
										{
											"begin": 4271,
											"end": 4302,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 4271,
											"end": 4302,
											"name": "JUMPDEST"
										},
										{
											"begin": 4271,
											"end": 4302,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 4271,
											"end": 4302,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 4271,
											"end": 4302,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4271,
											"end": 4302,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 4271,
											"end": 4302,
											"name": "JUMPDEST"
										},
										{
											"begin": 4271,
											"end": 4302,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4271,
											"end": 4302,
											"name": "MLOAD"
										},
										{
											"begin": 4271,
											"end": 4302,
											"name": "DUP1"
										},
										{
											"begin": 4271,
											"end": 4302,
											"name": "DUP3"
										},
										{
											"begin": 4271,
											"end": 4302,
											"name": "DUP2"
										},
										{
											"begin": 4271,
											"end": 4302,
											"name": "MSTORE"
										},
										{
											"begin": 4271,
											"end": 4302,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4271,
											"end": 4302,
											"name": "ADD"
										},
										{
											"begin": 4271,
											"end": 4302,
											"name": "SWAP2"
										},
										{
											"begin": 4271,
											"end": 4302,
											"name": "POP"
										},
										{
											"begin": 4271,
											"end": 4302,
											"name": "POP"
										},
										{
											"begin": 4271,
											"end": 4302,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4271,
											"end": 4302,
											"name": "MLOAD"
										},
										{
											"begin": 4271,
											"end": 4302,
											"name": "DUP1"
										},
										{
											"begin": 4271,
											"end": 4302,
											"name": "SWAP2"
										},
										{
											"begin": 4271,
											"end": 4302,
											"name": "SUB"
										},
										{
											"begin": 4271,
											"end": 4302,
											"name": "SWAP1"
										},
										{
											"begin": 4271,
											"end": 4302,
											"name": "RETURN"
										},
										{
											"begin": 5705,
											"end": 5911,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 5705,
											"end": 5911,
											"name": "JUMPDEST"
										},
										{
											"begin": 5705,
											"end": 5911,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 5705,
											"end": 5911,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5705,
											"end": 5911,
											"name": "DUP1"
										},
										{
											"begin": 5705,
											"end": 5911,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5705,
											"end": 5911,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 5705,
											"end": 5911,
											"name": "DUP2"
										},
										{
											"begin": 5705,
											"end": 5911,
											"name": "ADD"
										},
										{
											"begin": 5705,
											"end": 5911,
											"name": "SWAP1"
										},
										{
											"begin": 5705,
											"end": 5911,
											"name": "DUP1"
										},
										{
											"begin": 5705,
											"end": 5911,
											"name": "DUP1"
										},
										{
											"begin": 5705,
											"end": 5911,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5705,
											"end": 5911,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5705,
											"end": 5911,
											"name": "AND"
										},
										{
											"begin": 5705,
											"end": 5911,
											"name": "SWAP1"
										},
										{
											"begin": 5705,
											"end": 5911,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5705,
											"end": 5911,
											"name": "ADD"
										},
										{
											"begin": 5705,
											"end": 5911,
											"name": "SWAP1"
										},
										{
											"begin": 5705,
											"end": 5911,
											"name": "SWAP3"
										},
										{
											"begin": 5705,
											"end": 5911,
											"name": "SWAP2"
										},
										{
											"begin": 5705,
											"end": 5911,
											"name": "SWAP1"
										},
										{
											"begin": 5705,
											"end": 5911,
											"name": "DUP1"
										},
										{
											"begin": 5705,
											"end": 5911,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5705,
											"end": 5911,
											"name": "SWAP1"
										},
										{
											"begin": 5705,
											"end": 5911,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5705,
											"end": 5911,
											"name": "ADD"
										},
										{
											"begin": 5705,
											"end": 5911,
											"name": "SWAP1"
										},
										{
											"begin": 5705,
											"end": 5911,
											"name": "SWAP3"
										},
										{
											"begin": 5705,
											"end": 5911,
											"name": "SWAP2"
										},
										{
											"begin": 5705,
											"end": 5911,
											"name": "SWAP1"
										},
										{
											"begin": 5705,
											"end": 5911,
											"name": "POP"
										},
										{
											"begin": 5705,
											"end": 5911,
											"name": "POP"
										},
										{
											"begin": 5705,
											"end": 5911,
											"name": "POP"
										},
										{
											"begin": 5705,
											"end": 5911,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 5705,
											"end": 5911,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5705,
											"end": 5911,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 5705,
											"end": 5911,
											"name": "JUMPDEST"
										},
										{
											"begin": 5705,
											"end": 5911,
											"name": "STOP"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "JUMPDEST"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "JUMPDEST"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "MLOAD"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "DUP1"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "DUP1"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "ADD"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "DUP3"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "DUP2"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "SUB"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "DUP3"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "MSTORE"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "DUP4"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "DUP2"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "DUP2"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "MLOAD"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "DUP2"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "MSTORE"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "ADD"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "SWAP2"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "POP"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "DUP1"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "MLOAD"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "SWAP1"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "ADD"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "SWAP1"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "DUP1"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "DUP4"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "POP"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "POP"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "POP"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "SWAP1"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "POP"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "SWAP1"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "DUP2"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "ADD"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "SWAP1"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "AND"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "DUP1"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "ISZERO"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "JUMPI"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "DUP1"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "DUP3"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "SUB"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "DUP1"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "MLOAD"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "DUP4"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "SUB"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "EXP"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "SUB"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "NOT"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "AND"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "DUP2"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "MSTORE"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "ADD"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "SWAP2"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "POP"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "JUMPDEST"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "POP"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "SWAP3"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "POP"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "POP"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "POP"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "MLOAD"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "DUP1"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "SWAP2"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "SUB"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "SWAP1"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "RETURN"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "JUMPDEST"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "DUP1"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "DUP2"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "ADD"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "SWAP1"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "DUP1"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "DUP1"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "AND"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "SWAP1"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "ADD"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "SWAP1"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "SWAP3"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "SWAP2"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "SWAP1"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "POP"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "POP"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "POP"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "JUMPDEST"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "STOP"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "JUMPDEST"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "DUP1"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "DUP2"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "ADD"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "SWAP1"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "DUP1"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "DUP1"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "AND"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "SWAP1"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "ADD"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "SWAP1"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "SWAP3"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "SWAP2"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "SWAP1"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "POP"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "POP"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "POP"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "JUMPDEST"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "MLOAD"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "DUP1"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "DUP3"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "DUP2"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "MSTORE"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "ADD"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "SWAP2"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "POP"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "POP"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "MLOAD"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "DUP1"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "SWAP2"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "SUB"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "SWAP1"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "RETURN"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "JUMPDEST"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "DUP1"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "DUP2"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "ADD"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "SWAP1"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "DUP1"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "DUP1"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "AND"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "SWAP1"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "ADD"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "SWAP1"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "SWAP3"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "SWAP2"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "SWAP1"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "POP"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "POP"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "POP"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "JUMPDEST"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "MLOAD"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "DUP1"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "DUP3"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "DUP2"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "MSTORE"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "ADD"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "SWAP2"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "POP"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "POP"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "MLOAD"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "DUP1"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "SWAP2"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "SUB"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "SWAP1"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "RETURN"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "JUMPDEST"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "DUP1"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "DUP2"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "ADD"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "SWAP1"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "DUP1"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "DUP1"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "AND"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "SWAP1"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "ADD"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "SWAP1"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "SWAP3"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "SWAP2"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "SWAP1"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "DUP1"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "AND"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "SWAP1"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "ADD"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "SWAP1"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "SWAP3"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "SWAP2"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "SWAP1"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "DUP1"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "SWAP1"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "ADD"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "SWAP1"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "SWAP3"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "SWAP2"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "SWAP1"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "DUP1"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "SWAP1"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "ADD"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "SWAP1"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "SWAP3"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "SWAP2"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "SWAP1"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "DUP1"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "ISZERO"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "ISZERO"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "SWAP1"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "ADD"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "SWAP1"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "SWAP3"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "SWAP2"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "SWAP1"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "DUP1"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "AND"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "SWAP1"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "ADD"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "SWAP1"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "SWAP3"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "SWAP2"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "SWAP1"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "DUP1"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "SWAP1"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "ADD"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "SWAP1"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "SWAP3"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "SWAP2"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "SWAP1"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "DUP1"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "SWAP1"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "ADD"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "SWAP1"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "SWAP3"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "SWAP2"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "SWAP1"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "POP"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "POP"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "POP"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "JUMPDEST"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "STOP"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "JUMPDEST"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "JUMPDEST"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "MLOAD"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "DUP1"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "DUP1"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "ADD"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "DUP3"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "DUP2"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "SUB"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "DUP3"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "MSTORE"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "DUP4"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "DUP2"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "DUP2"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "MLOAD"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "DUP2"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "MSTORE"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "ADD"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "SWAP2"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "POP"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "DUP1"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "MLOAD"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "SWAP1"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "ADD"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "SWAP1"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "DUP1"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "DUP4"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "POP"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "POP"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "POP"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "SWAP1"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "POP"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "SWAP1"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "DUP2"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "ADD"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "SWAP1"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "AND"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "DUP1"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "ISZERO"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "JUMPI"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "DUP1"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "DUP3"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "SUB"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "DUP1"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "MLOAD"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "DUP4"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "SUB"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "EXP"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "SUB"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "NOT"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "AND"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "DUP2"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "MSTORE"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "ADD"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "SWAP2"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "POP"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "JUMPDEST"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "POP"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "SWAP3"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "POP"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "POP"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "POP"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "MLOAD"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "DUP1"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "SWAP2"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "SUB"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "SWAP1"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "RETURN"
										},
										{
											"begin": 3206,
											"end": 3271,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 3206,
											"end": 3271,
											"name": "JUMPDEST"
										},
										{
											"begin": 3206,
											"end": 3271,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 3206,
											"end": 3271,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3206,
											"end": 3271,
											"name": "DUP1"
										},
										{
											"begin": 3206,
											"end": 3271,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3206,
											"end": 3271,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3206,
											"end": 3271,
											"name": "DUP2"
										},
										{
											"begin": 3206,
											"end": 3271,
											"name": "ADD"
										},
										{
											"begin": 3206,
											"end": 3271,
											"name": "SWAP1"
										},
										{
											"begin": 3206,
											"end": 3271,
											"name": "DUP1"
										},
										{
											"begin": 3206,
											"end": 3271,
											"name": "DUP1"
										},
										{
											"begin": 3206,
											"end": 3271,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3206,
											"end": 3271,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3206,
											"end": 3271,
											"name": "AND"
										},
										{
											"begin": 3206,
											"end": 3271,
											"name": "SWAP1"
										},
										{
											"begin": 3206,
											"end": 3271,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3206,
											"end": 3271,
											"name": "ADD"
										},
										{
											"begin": 3206,
											"end": 3271,
											"name": "SWAP1"
										},
										{
											"begin": 3206,
											"end": 3271,
											"name": "SWAP3"
										},
										{
											"begin": 3206,
											"end": 3271,
											"name": "SWAP2"
										},
										{
											"begin": 3206,
											"end": 3271,
											"name": "SWAP1"
										},
										{
											"begin": 3206,
											"end": 3271,
											"name": "POP"
										},
										{
											"begin": 3206,
											"end": 3271,
											"name": "POP"
										},
										{
											"begin": 3206,
											"end": 3271,
											"name": "POP"
										},
										{
											"begin": 3206,
											"end": 3271,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 3206,
											"end": 3271,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3206,
											"end": 3271,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 3206,
											"end": 3271,
											"name": "JUMPDEST"
										},
										{
											"begin": 3206,
											"end": 3271,
											"name": "STOP"
										},
										{
											"begin": 5917,
											"end": 6441,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 5917,
											"end": 6441,
											"name": "JUMPDEST"
										},
										{
											"begin": 5917,
											"end": 6441,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 5917,
											"end": 6441,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5917,
											"end": 6441,
											"name": "DUP1"
										},
										{
											"begin": 5917,
											"end": 6441,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5917,
											"end": 6441,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 5917,
											"end": 6441,
											"name": "DUP2"
										},
										{
											"begin": 5917,
											"end": 6441,
											"name": "ADD"
										},
										{
											"begin": 5917,
											"end": 6441,
											"name": "SWAP1"
										},
										{
											"begin": 5917,
											"end": 6441,
											"name": "DUP1"
										},
										{
											"begin": 5917,
											"end": 6441,
											"name": "DUP1"
										},
										{
											"begin": 5917,
											"end": 6441,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5917,
											"end": 6441,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5917,
											"end": 6441,
											"name": "AND"
										},
										{
											"begin": 5917,
											"end": 6441,
											"name": "SWAP1"
										},
										{
											"begin": 5917,
											"end": 6441,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5917,
											"end": 6441,
											"name": "ADD"
										},
										{
											"begin": 5917,
											"end": 6441,
											"name": "SWAP1"
										},
										{
											"begin": 5917,
											"end": 6441,
											"name": "SWAP3"
										},
										{
											"begin": 5917,
											"end": 6441,
											"name": "SWAP2"
										},
										{
											"begin": 5917,
											"end": 6441,
											"name": "SWAP1"
										},
										{
											"begin": 5917,
											"end": 6441,
											"name": "DUP1"
										},
										{
											"begin": 5917,
											"end": 6441,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5917,
											"end": 6441,
											"name": "SWAP1"
										},
										{
											"begin": 5917,
											"end": 6441,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5917,
											"end": 6441,
											"name": "ADD"
										},
										{
											"begin": 5917,
											"end": 6441,
											"name": "SWAP1"
										},
										{
											"begin": 5917,
											"end": 6441,
											"name": "SWAP3"
										},
										{
											"begin": 5917,
											"end": 6441,
											"name": "SWAP2"
										},
										{
											"begin": 5917,
											"end": 6441,
											"name": "SWAP1"
										},
										{
											"begin": 5917,
											"end": 6441,
											"name": "POP"
										},
										{
											"begin": 5917,
											"end": 6441,
											"name": "POP"
										},
										{
											"begin": 5917,
											"end": 6441,
											"name": "POP"
										},
										{
											"begin": 5917,
											"end": 6441,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 5917,
											"end": 6441,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5917,
											"end": 6441,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 5917,
											"end": 6441,
											"name": "JUMPDEST"
										},
										{
											"begin": 5917,
											"end": 6441,
											"name": "STOP"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "JUMPDEST"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "DUP1"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "DUP2"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "ADD"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "SWAP1"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "DUP1"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "DUP1"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "AND"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "SWAP1"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "ADD"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "SWAP1"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "SWAP3"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "SWAP2"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "SWAP1"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "DUP1"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "SWAP1"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "ADD"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "SWAP1"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "SWAP3"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "SWAP2"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "SWAP1"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "POP"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "POP"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "POP"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "JUMPDEST"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "MLOAD"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "DUP1"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "DUP3"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "ISZERO"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "ISZERO"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "ISZERO"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "ISZERO"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "DUP2"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "MSTORE"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "ADD"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "SWAP2"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "POP"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "POP"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "MLOAD"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "DUP1"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "SWAP2"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "SUB"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "SWAP1"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "RETURN"
										},
										{
											"begin": 6660,
											"end": 6759,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 6660,
											"end": 6759,
											"name": "JUMPDEST"
										},
										{
											"begin": 6660,
											"end": 6759,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 6660,
											"end": 6759,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6660,
											"end": 6759,
											"name": "DUP1"
										},
										{
											"begin": 6660,
											"end": 6759,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 6660,
											"end": 6759,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 6660,
											"end": 6759,
											"name": "DUP2"
										},
										{
											"begin": 6660,
											"end": 6759,
											"name": "ADD"
										},
										{
											"begin": 6660,
											"end": 6759,
											"name": "SWAP1"
										},
										{
											"begin": 6660,
											"end": 6759,
											"name": "DUP1"
										},
										{
											"begin": 6660,
											"end": 6759,
											"name": "DUP1"
										},
										{
											"begin": 6660,
											"end": 6759,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6660,
											"end": 6759,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6660,
											"end": 6759,
											"name": "AND"
										},
										{
											"begin": 6660,
											"end": 6759,
											"name": "SWAP1"
										},
										{
											"begin": 6660,
											"end": 6759,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6660,
											"end": 6759,
											"name": "ADD"
										},
										{
											"begin": 6660,
											"end": 6759,
											"name": "SWAP1"
										},
										{
											"begin": 6660,
											"end": 6759,
											"name": "SWAP3"
										},
										{
											"begin": 6660,
											"end": 6759,
											"name": "SWAP2"
										},
										{
											"begin": 6660,
											"end": 6759,
											"name": "SWAP1"
										},
										{
											"begin": 6660,
											"end": 6759,
											"name": "DUP1"
										},
										{
											"begin": 6660,
											"end": 6759,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6660,
											"end": 6759,
											"name": "SWAP1"
										},
										{
											"begin": 6660,
											"end": 6759,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6660,
											"end": 6759,
											"name": "ADD"
										},
										{
											"begin": 6660,
											"end": 6759,
											"name": "SWAP1"
										},
										{
											"begin": 6660,
											"end": 6759,
											"name": "SWAP3"
										},
										{
											"begin": 6660,
											"end": 6759,
											"name": "SWAP2"
										},
										{
											"begin": 6660,
											"end": 6759,
											"name": "SWAP1"
										},
										{
											"begin": 6660,
											"end": 6759,
											"name": "POP"
										},
										{
											"begin": 6660,
											"end": 6759,
											"name": "POP"
										},
										{
											"begin": 6660,
											"end": 6759,
											"name": "POP"
										},
										{
											"begin": 6660,
											"end": 6759,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 6660,
											"end": 6759,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6660,
											"end": 6759,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 6660,
											"end": 6759,
											"name": "JUMPDEST"
										},
										{
											"begin": 6660,
											"end": 6759,
											"name": "STOP"
										},
										{
											"begin": 6870,
											"end": 6975,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 6870,
											"end": 6975,
											"name": "JUMPDEST"
										},
										{
											"begin": 6870,
											"end": 6975,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 6870,
											"end": 6975,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6870,
											"end": 6975,
											"name": "DUP1"
										},
										{
											"begin": 6870,
											"end": 6975,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 6870,
											"end": 6975,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 6870,
											"end": 6975,
											"name": "DUP2"
										},
										{
											"begin": 6870,
											"end": 6975,
											"name": "ADD"
										},
										{
											"begin": 6870,
											"end": 6975,
											"name": "SWAP1"
										},
										{
											"begin": 6870,
											"end": 6975,
											"name": "DUP1"
										},
										{
											"begin": 6870,
											"end": 6975,
											"name": "DUP1"
										},
										{
											"begin": 6870,
											"end": 6975,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6870,
											"end": 6975,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6870,
											"end": 6975,
											"name": "AND"
										},
										{
											"begin": 6870,
											"end": 6975,
											"name": "SWAP1"
										},
										{
											"begin": 6870,
											"end": 6975,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6870,
											"end": 6975,
											"name": "ADD"
										},
										{
											"begin": 6870,
											"end": 6975,
											"name": "SWAP1"
										},
										{
											"begin": 6870,
											"end": 6975,
											"name": "SWAP3"
										},
										{
											"begin": 6870,
											"end": 6975,
											"name": "SWAP2"
										},
										{
											"begin": 6870,
											"end": 6975,
											"name": "SWAP1"
										},
										{
											"begin": 6870,
											"end": 6975,
											"name": "DUP1"
										},
										{
											"begin": 6870,
											"end": 6975,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6870,
											"end": 6975,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6870,
											"end": 6975,
											"name": "AND"
										},
										{
											"begin": 6870,
											"end": 6975,
											"name": "SWAP1"
										},
										{
											"begin": 6870,
											"end": 6975,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6870,
											"end": 6975,
											"name": "ADD"
										},
										{
											"begin": 6870,
											"end": 6975,
											"name": "SWAP1"
										},
										{
											"begin": 6870,
											"end": 6975,
											"name": "SWAP3"
										},
										{
											"begin": 6870,
											"end": 6975,
											"name": "SWAP2"
										},
										{
											"begin": 6870,
											"end": 6975,
											"name": "SWAP1"
										},
										{
											"begin": 6870,
											"end": 6975,
											"name": "DUP1"
										},
										{
											"begin": 6870,
											"end": 6975,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6870,
											"end": 6975,
											"name": "SWAP1"
										},
										{
											"begin": 6870,
											"end": 6975,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6870,
											"end": 6975,
											"name": "ADD"
										},
										{
											"begin": 6870,
											"end": 6975,
											"name": "SWAP1"
										},
										{
											"begin": 6870,
											"end": 6975,
											"name": "SWAP3"
										},
										{
											"begin": 6870,
											"end": 6975,
											"name": "SWAP2"
										},
										{
											"begin": 6870,
											"end": 6975,
											"name": "SWAP1"
										},
										{
											"begin": 6870,
											"end": 6975,
											"name": "POP"
										},
										{
											"begin": 6870,
											"end": 6975,
											"name": "POP"
										},
										{
											"begin": 6870,
											"end": 6975,
											"name": "POP"
										},
										{
											"begin": 6870,
											"end": 6975,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 6870,
											"end": 6975,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6870,
											"end": 6975,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 6870,
											"end": 6975,
											"name": "JUMPDEST"
										},
										{
											"begin": 6870,
											"end": 6975,
											"name": "STOP"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "JUMPDEST"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "DUP1"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "DUP2"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "ADD"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "SWAP1"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "DUP1"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "DUP1"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "AND"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "SWAP1"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "ADD"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "SWAP1"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "SWAP3"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "SWAP2"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "SWAP1"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "POP"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "POP"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "POP"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "JUMPDEST"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "MLOAD"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "DUP1"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "DUP3"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "DUP2"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "MSTORE"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "ADD"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "SWAP2"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "POP"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "POP"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "MLOAD"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "DUP1"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "SWAP2"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "SUB"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "SWAP1"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "RETURN"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "JUMPDEST"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "DUP1"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "DUP2"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "ADD"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "SWAP1"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "DUP1"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "DUP1"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "AND"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "SWAP1"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "ADD"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "SWAP1"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "SWAP3"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "SWAP2"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "SWAP1"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "DUP1"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "AND"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "SWAP1"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "ADD"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "SWAP1"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "SWAP3"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "SWAP2"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "SWAP1"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "POP"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "POP"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "POP"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "JUMPDEST"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "MLOAD"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "DUP1"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "DUP3"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "DUP2"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "MSTORE"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "ADD"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "SWAP2"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "POP"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "POP"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "MLOAD"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "DUP1"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "SWAP2"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "SUB"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "SWAP1"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "RETURN"
										},
										{
											"begin": 6765,
											"end": 6864,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 6765,
											"end": 6864,
											"name": "JUMPDEST"
										},
										{
											"begin": 6765,
											"end": 6864,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 6765,
											"end": 6864,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6765,
											"end": 6864,
											"name": "DUP1"
										},
										{
											"begin": 6765,
											"end": 6864,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 6765,
											"end": 6864,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 6765,
											"end": 6864,
											"name": "DUP2"
										},
										{
											"begin": 6765,
											"end": 6864,
											"name": "ADD"
										},
										{
											"begin": 6765,
											"end": 6864,
											"name": "SWAP1"
										},
										{
											"begin": 6765,
											"end": 6864,
											"name": "DUP1"
										},
										{
											"begin": 6765,
											"end": 6864,
											"name": "DUP1"
										},
										{
											"begin": 6765,
											"end": 6864,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6765,
											"end": 6864,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6765,
											"end": 6864,
											"name": "AND"
										},
										{
											"begin": 6765,
											"end": 6864,
											"name": "SWAP1"
										},
										{
											"begin": 6765,
											"end": 6864,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6765,
											"end": 6864,
											"name": "ADD"
										},
										{
											"begin": 6765,
											"end": 6864,
											"name": "SWAP1"
										},
										{
											"begin": 6765,
											"end": 6864,
											"name": "SWAP3"
										},
										{
											"begin": 6765,
											"end": 6864,
											"name": "SWAP2"
										},
										{
											"begin": 6765,
											"end": 6864,
											"name": "SWAP1"
										},
										{
											"begin": 6765,
											"end": 6864,
											"name": "DUP1"
										},
										{
											"begin": 6765,
											"end": 6864,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6765,
											"end": 6864,
											"name": "SWAP1"
										},
										{
											"begin": 6765,
											"end": 6864,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6765,
											"end": 6864,
											"name": "ADD"
										},
										{
											"begin": 6765,
											"end": 6864,
											"name": "SWAP1"
										},
										{
											"begin": 6765,
											"end": 6864,
											"name": "SWAP3"
										},
										{
											"begin": 6765,
											"end": 6864,
											"name": "SWAP2"
										},
										{
											"begin": 6765,
											"end": 6864,
											"name": "SWAP1"
										},
										{
											"begin": 6765,
											"end": 6864,
											"name": "POP"
										},
										{
											"begin": 6765,
											"end": 6864,
											"name": "POP"
										},
										{
											"begin": 6765,
											"end": 6864,
											"name": "POP"
										},
										{
											"begin": 6765,
											"end": 6864,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 6765,
											"end": 6864,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6765,
											"end": 6864,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 6765,
											"end": 6864,
											"name": "JUMPDEST"
										},
										{
											"begin": 6765,
											"end": 6864,
											"name": "STOP"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "JUMPDEST"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "MLOAD"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "DUP1"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "ADD"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "MSTORE"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "DUP1"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "DUP2"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "MSTORE"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "ADD"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "PUSH",
											"value": "44616920537461626C65636F696E000000000000000000000000000000000000"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "DUP2"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "MSTORE"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "DUP2"
										},
										{
											"begin": 3410,
											"end": 3461,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "JUMPDEST"
										},
										{
											"begin": 6505,
											"end": 6509,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6551,
											"end": 6554,
											"name": "DUP2"
										},
										{
											"begin": 6522,
											"end": 6531,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 6522,
											"end": 6543,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6532,
											"end": 6542,
											"name": "CALLER"
										},
										{
											"begin": 6522,
											"end": 6543,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6522,
											"end": 6543,
											"name": "AND"
										},
										{
											"begin": 6522,
											"end": 6543,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6522,
											"end": 6543,
											"name": "AND"
										},
										{
											"begin": 6522,
											"end": 6543,
											"name": "DUP2"
										},
										{
											"begin": 6522,
											"end": 6543,
											"name": "MSTORE"
										},
										{
											"begin": 6522,
											"end": 6543,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6522,
											"end": 6543,
											"name": "ADD"
										},
										{
											"begin": 6522,
											"end": 6543,
											"name": "SWAP1"
										},
										{
											"begin": 6522,
											"end": 6543,
											"name": "DUP2"
										},
										{
											"begin": 6522,
											"end": 6543,
											"name": "MSTORE"
										},
										{
											"begin": 6522,
											"end": 6543,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6522,
											"end": 6543,
											"name": "ADD"
										},
										{
											"begin": 6522,
											"end": 6543,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6522,
											"end": 6543,
											"name": "KECCAK256"
										},
										{
											"begin": 6522,
											"end": 6548,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6544,
											"end": 6547,
											"name": "DUP6"
										},
										{
											"begin": 6522,
											"end": 6548,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6522,
											"end": 6548,
											"name": "AND"
										},
										{
											"begin": 6522,
											"end": 6548,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6522,
											"end": 6548,
											"name": "AND"
										},
										{
											"begin": 6522,
											"end": 6548,
											"name": "DUP2"
										},
										{
											"begin": 6522,
											"end": 6548,
											"name": "MSTORE"
										},
										{
											"begin": 6522,
											"end": 6548,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6522,
											"end": 6548,
											"name": "ADD"
										},
										{
											"begin": 6522,
											"end": 6548,
											"name": "SWAP1"
										},
										{
											"begin": 6522,
											"end": 6548,
											"name": "DUP2"
										},
										{
											"begin": 6522,
											"end": 6548,
											"name": "MSTORE"
										},
										{
											"begin": 6522,
											"end": 6548,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6522,
											"end": 6548,
											"name": "ADD"
										},
										{
											"begin": 6522,
											"end": 6548,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6522,
											"end": 6548,
											"name": "KECCAK256"
										},
										{
											"begin": 6522,
											"end": 6554,
											"name": "DUP2"
										},
										{
											"begin": 6522,
											"end": 6554,
											"name": "SWAP1"
										},
										{
											"begin": 6522,
											"end": 6554,
											"name": "SSTORE"
										},
										{
											"begin": 6522,
											"end": 6554,
											"name": "POP"
										},
										{
											"begin": 6591,
											"end": 6594,
											"name": "DUP3"
										},
										{
											"begin": 6570,
											"end": 6600,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6600,
											"name": "AND"
										},
										{
											"begin": 6579,
											"end": 6589,
											"name": "CALLER"
										},
										{
											"begin": 6570,
											"end": 6600,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6600,
											"name": "AND"
										},
										{
											"begin": 6570,
											"end": 6600,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 6596,
											"end": 6599,
											"name": "DUP5"
										},
										{
											"begin": 6570,
											"end": 6600,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6570,
											"end": 6600,
											"name": "MLOAD"
										},
										{
											"begin": 6570,
											"end": 6600,
											"name": "DUP1"
										},
										{
											"begin": 6570,
											"end": 6600,
											"name": "DUP3"
										},
										{
											"begin": 6570,
											"end": 6600,
											"name": "DUP2"
										},
										{
											"begin": 6570,
											"end": 6600,
											"name": "MSTORE"
										},
										{
											"begin": 6570,
											"end": 6600,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6600,
											"name": "ADD"
										},
										{
											"begin": 6570,
											"end": 6600,
											"name": "SWAP2"
										},
										{
											"begin": 6570,
											"end": 6600,
											"name": "POP"
										},
										{
											"begin": 6570,
											"end": 6600,
											"name": "POP"
										},
										{
											"begin": 6570,
											"end": 6600,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6570,
											"end": 6600,
											"name": "MLOAD"
										},
										{
											"begin": 6570,
											"end": 6600,
											"name": "DUP1"
										},
										{
											"begin": 6570,
											"end": 6600,
											"name": "SWAP2"
										},
										{
											"begin": 6570,
											"end": 6600,
											"name": "SUB"
										},
										{
											"begin": 6570,
											"end": 6600,
											"name": "SWAP1"
										},
										{
											"begin": 6570,
											"end": 6600,
											"name": "LOG3"
										},
										{
											"begin": 6618,
											"end": 6622,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6611,
											"end": 6622,
											"name": "SWAP1"
										},
										{
											"begin": 6611,
											"end": 6622,
											"name": "POP"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "SWAP3"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "SWAP2"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "POP"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "POP"
										},
										{
											"begin": 6447,
											"end": 6630,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3604,
											"end": 3630,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 3604,
											"end": 3630,
											"name": "JUMPDEST"
										},
										{
											"begin": 3604,
											"end": 3630,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3604,
											"end": 3630,
											"name": "SLOAD"
										},
										{
											"begin": 3604,
											"end": 3630,
											"name": "DUP2"
										},
										{
											"begin": 3604,
											"end": 3630,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "JUMPDEST"
										},
										{
											"begin": 5192,
											"end": 5196,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5240,
											"end": 5243,
											"name": "DUP2"
										},
										{
											"begin": 5222,
											"end": 5231,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5222,
											"end": 5236,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5232,
											"end": 5235,
											"name": "DUP7"
										},
										{
											"begin": 5222,
											"end": 5236,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5222,
											"end": 5236,
											"name": "AND"
										},
										{
											"begin": 5222,
											"end": 5236,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5222,
											"end": 5236,
											"name": "AND"
										},
										{
											"begin": 5222,
											"end": 5236,
											"name": "DUP2"
										},
										{
											"begin": 5222,
											"end": 5236,
											"name": "MSTORE"
										},
										{
											"begin": 5222,
											"end": 5236,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5222,
											"end": 5236,
											"name": "ADD"
										},
										{
											"begin": 5222,
											"end": 5236,
											"name": "SWAP1"
										},
										{
											"begin": 5222,
											"end": 5236,
											"name": "DUP2"
										},
										{
											"begin": 5222,
											"end": 5236,
											"name": "MSTORE"
										},
										{
											"begin": 5222,
											"end": 5236,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5222,
											"end": 5236,
											"name": "ADD"
										},
										{
											"begin": 5222,
											"end": 5236,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5222,
											"end": 5236,
											"name": "KECCAK256"
										},
										{
											"begin": 5222,
											"end": 5236,
											"name": "SLOAD"
										},
										{
											"begin": 5222,
											"end": 5243,
											"name": "LT"
										},
										{
											"begin": 5222,
											"end": 5243,
											"name": "ISZERO"
										},
										{
											"begin": 5214,
											"end": 5272,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 5214,
											"end": 5272,
											"name": "JUMPI"
										},
										{
											"begin": 5214,
											"end": 5272,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5214,
											"end": 5272,
											"name": "MLOAD"
										},
										{
											"begin": 5214,
											"end": 5272,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5214,
											"end": 5272,
											"name": "DUP2"
										},
										{
											"begin": 5214,
											"end": 5272,
											"name": "MSTORE"
										},
										{
											"begin": 5214,
											"end": 5272,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5214,
											"end": 5272,
											"name": "ADD"
										},
										{
											"begin": 5214,
											"end": 5272,
											"name": "DUP1"
										},
										{
											"begin": 5214,
											"end": 5272,
											"name": "DUP1"
										},
										{
											"begin": 5214,
											"end": 5272,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5214,
											"end": 5272,
											"name": "ADD"
										},
										{
											"begin": 5214,
											"end": 5272,
											"name": "DUP3"
										},
										{
											"begin": 5214,
											"end": 5272,
											"name": "DUP2"
										},
										{
											"begin": 5214,
											"end": 5272,
											"name": "SUB"
										},
										{
											"begin": 5214,
											"end": 5272,
											"name": "DUP3"
										},
										{
											"begin": 5214,
											"end": 5272,
											"name": "MSTORE"
										},
										{
											"begin": 5214,
											"end": 5272,
											"name": "PUSH",
											"value": "18"
										},
										{
											"begin": 5214,
											"end": 5272,
											"name": "DUP2"
										},
										{
											"begin": 5214,
											"end": 5272,
											"name": "MSTORE"
										},
										{
											"begin": 5214,
											"end": 5272,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5214,
											"end": 5272,
											"name": "ADD"
										},
										{
											"begin": 5214,
											"end": 5272,
											"name": "DUP1"
										},
										{
											"begin": 5214,
											"end": 5272,
											"name": "PUSH",
											"value": "4461692F696E73756666696369656E742D62616C616E63650000000000000000"
										},
										{
											"begin": 5214,
											"end": 5272,
											"name": "DUP2"
										},
										{
											"begin": 5214,
											"end": 5272,
											"name": "MSTORE"
										},
										{
											"begin": 5214,
											"end": 5272,
											"name": "POP"
										},
										{
											"begin": 5214,
											"end": 5272,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5214,
											"end": 5272,
											"name": "ADD"
										},
										{
											"begin": 5214,
											"end": 5272,
											"name": "SWAP2"
										},
										{
											"begin": 5214,
											"end": 5272,
											"name": "POP"
										},
										{
											"begin": 5214,
											"end": 5272,
											"name": "POP"
										},
										{
											"begin": 5214,
											"end": 5272,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5214,
											"end": 5272,
											"name": "MLOAD"
										},
										{
											"begin": 5214,
											"end": 5272,
											"name": "DUP1"
										},
										{
											"begin": 5214,
											"end": 5272,
											"name": "SWAP2"
										},
										{
											"begin": 5214,
											"end": 5272,
											"name": "SUB"
										},
										{
											"begin": 5214,
											"end": 5272,
											"name": "SWAP1"
										},
										{
											"begin": 5214,
											"end": 5272,
											"name": "REVERT"
										},
										{
											"begin": 5214,
											"end": 5272,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 5214,
											"end": 5272,
											"name": "JUMPDEST"
										},
										{
											"begin": 5294,
											"end": 5304,
											"name": "CALLER"
										},
										{
											"begin": 5287,
											"end": 5304,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5287,
											"end": 5304,
											"name": "AND"
										},
										{
											"begin": 5287,
											"end": 5290,
											"name": "DUP5"
										},
										{
											"begin": 5287,
											"end": 5304,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5287,
											"end": 5304,
											"name": "AND"
										},
										{
											"begin": 5287,
											"end": 5304,
											"name": "EQ"
										},
										{
											"begin": 5287,
											"end": 5304,
											"name": "ISZERO"
										},
										{
											"begin": 5287,
											"end": 5346,
											"name": "DUP1"
										},
										{
											"begin": 5287,
											"end": 5346,
											"name": "ISZERO"
										},
										{
											"begin": 5287,
											"end": 5346,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 5287,
											"end": 5346,
											"name": "JUMPI"
										},
										{
											"begin": 5287,
											"end": 5346,
											"name": "POP"
										},
										{
											"begin": 5343,
											"end": 5345,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5308,
											"end": 5317,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 5308,
											"end": 5322,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5318,
											"end": 5321,
											"name": "DUP7"
										},
										{
											"begin": 5308,
											"end": 5322,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5308,
											"end": 5322,
											"name": "AND"
										},
										{
											"begin": 5308,
											"end": 5322,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5308,
											"end": 5322,
											"name": "AND"
										},
										{
											"begin": 5308,
											"end": 5322,
											"name": "DUP2"
										},
										{
											"begin": 5308,
											"end": 5322,
											"name": "MSTORE"
										},
										{
											"begin": 5308,
											"end": 5322,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5308,
											"end": 5322,
											"name": "ADD"
										},
										{
											"begin": 5308,
											"end": 5322,
											"name": "SWAP1"
										},
										{
											"begin": 5308,
											"end": 5322,
											"name": "DUP2"
										},
										{
											"begin": 5308,
											"end": 5322,
											"name": "MSTORE"
										},
										{
											"begin": 5308,
											"end": 5322,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5308,
											"end": 5322,
											"name": "ADD"
										},
										{
											"begin": 5308,
											"end": 5322,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5308,
											"end": 5322,
											"name": "KECCAK256"
										},
										{
											"begin": 5308,
											"end": 5334,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5323,
											"end": 5333,
											"name": "CALLER"
										},
										{
											"begin": 5308,
											"end": 5334,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5308,
											"end": 5334,
											"name": "AND"
										},
										{
											"begin": 5308,
											"end": 5334,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5308,
											"end": 5334,
											"name": "AND"
										},
										{
											"begin": 5308,
											"end": 5334,
											"name": "DUP2"
										},
										{
											"begin": 5308,
											"end": 5334,
											"name": "MSTORE"
										},
										{
											"begin": 5308,
											"end": 5334,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5308,
											"end": 5334,
											"name": "ADD"
										},
										{
											"begin": 5308,
											"end": 5334,
											"name": "SWAP1"
										},
										{
											"begin": 5308,
											"end": 5334,
											"name": "DUP2"
										},
										{
											"begin": 5308,
											"end": 5334,
											"name": "MSTORE"
										},
										{
											"begin": 5308,
											"end": 5334,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5308,
											"end": 5334,
											"name": "ADD"
										},
										{
											"begin": 5308,
											"end": 5334,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5308,
											"end": 5334,
											"name": "KECCAK256"
										},
										{
											"begin": 5308,
											"end": 5334,
											"name": "SLOAD"
										},
										{
											"begin": 5308,
											"end": 5346,
											"name": "EQ"
										},
										{
											"begin": 5308,
											"end": 5346,
											"name": "ISZERO"
										},
										{
											"begin": 5287,
											"end": 5346,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 5287,
											"end": 5346,
											"name": "JUMPDEST"
										},
										{
											"begin": 5283,
											"end": 5527,
											"name": "ISZERO"
										},
										{
											"begin": 5283,
											"end": 5527,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 5283,
											"end": 5527,
											"name": "JUMPI"
										},
										{
											"begin": 5401,
											"end": 5404,
											"name": "DUP2"
										},
										{
											"begin": 5371,
											"end": 5380,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 5371,
											"end": 5385,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5381,
											"end": 5384,
											"name": "DUP7"
										},
										{
											"begin": 5371,
											"end": 5385,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5371,
											"end": 5385,
											"name": "AND"
										},
										{
											"begin": 5371,
											"end": 5385,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5371,
											"end": 5385,
											"name": "AND"
										},
										{
											"begin": 5371,
											"end": 5385,
											"name": "DUP2"
										},
										{
											"begin": 5371,
											"end": 5385,
											"name": "MSTORE"
										},
										{
											"begin": 5371,
											"end": 5385,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5371,
											"end": 5385,
											"name": "ADD"
										},
										{
											"begin": 5371,
											"end": 5385,
											"name": "SWAP1"
										},
										{
											"begin": 5371,
											"end": 5385,
											"name": "DUP2"
										},
										{
											"begin": 5371,
											"end": 5385,
											"name": "MSTORE"
										},
										{
											"begin": 5371,
											"end": 5385,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5371,
											"end": 5385,
											"name": "ADD"
										},
										{
											"begin": 5371,
											"end": 5385,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5371,
											"end": 5385,
											"name": "KECCAK256"
										},
										{
											"begin": 5371,
											"end": 5397,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5386,
											"end": 5396,
											"name": "CALLER"
										},
										{
											"begin": 5371,
											"end": 5397,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5371,
											"end": 5397,
											"name": "AND"
										},
										{
											"begin": 5371,
											"end": 5397,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5371,
											"end": 5397,
											"name": "AND"
										},
										{
											"begin": 5371,
											"end": 5397,
											"name": "DUP2"
										},
										{
											"begin": 5371,
											"end": 5397,
											"name": "MSTORE"
										},
										{
											"begin": 5371,
											"end": 5397,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5371,
											"end": 5397,
											"name": "ADD"
										},
										{
											"begin": 5371,
											"end": 5397,
											"name": "SWAP1"
										},
										{
											"begin": 5371,
											"end": 5397,
											"name": "DUP2"
										},
										{
											"begin": 5371,
											"end": 5397,
											"name": "MSTORE"
										},
										{
											"begin": 5371,
											"end": 5397,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5371,
											"end": 5397,
											"name": "ADD"
										},
										{
											"begin": 5371,
											"end": 5397,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5371,
											"end": 5397,
											"name": "KECCAK256"
										},
										{
											"begin": 5371,
											"end": 5397,
											"name": "SLOAD"
										},
										{
											"begin": 5371,
											"end": 5404,
											"name": "LT"
										},
										{
											"begin": 5371,
											"end": 5404,
											"name": "ISZERO"
										},
										{
											"begin": 5363,
											"end": 5435,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 5363,
											"end": 5435,
											"name": "JUMPI"
										},
										{
											"begin": 5363,
											"end": 5435,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5363,
											"end": 5435,
											"name": "MLOAD"
										},
										{
											"begin": 5363,
											"end": 5435,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5363,
											"end": 5435,
											"name": "DUP2"
										},
										{
											"begin": 5363,
											"end": 5435,
											"name": "MSTORE"
										},
										{
											"begin": 5363,
											"end": 5435,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5363,
											"end": 5435,
											"name": "ADD"
										},
										{
											"begin": 5363,
											"end": 5435,
											"name": "DUP1"
										},
										{
											"begin": 5363,
											"end": 5435,
											"name": "DUP1"
										},
										{
											"begin": 5363,
											"end": 5435,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5363,
											"end": 5435,
											"name": "ADD"
										},
										{
											"begin": 5363,
											"end": 5435,
											"name": "DUP3"
										},
										{
											"begin": 5363,
											"end": 5435,
											"name": "DUP2"
										},
										{
											"begin": 5363,
											"end": 5435,
											"name": "SUB"
										},
										{
											"begin": 5363,
											"end": 5435,
											"name": "DUP3"
										},
										{
											"begin": 5363,
											"end": 5435,
											"name": "MSTORE"
										},
										{
											"begin": 5363,
											"end": 5435,
											"name": "PUSH",
											"value": "1A"
										},
										{
											"begin": 5363,
											"end": 5435,
											"name": "DUP2"
										},
										{
											"begin": 5363,
											"end": 5435,
											"name": "MSTORE"
										},
										{
											"begin": 5363,
											"end": 5435,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5363,
											"end": 5435,
											"name": "ADD"
										},
										{
											"begin": 5363,
											"end": 5435,
											"name": "DUP1"
										},
										{
											"begin": 5363,
											"end": 5435,
											"name": "PUSH",
											"value": "4461692F696E73756666696369656E742D616C6C6F77616E6365000000000000"
										},
										{
											"begin": 5363,
											"end": 5435,
											"name": "DUP2"
										},
										{
											"begin": 5363,
											"end": 5435,
											"name": "MSTORE"
										},
										{
											"begin": 5363,
											"end": 5435,
											"name": "POP"
										},
										{
											"begin": 5363,
											"end": 5435,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5363,
											"end": 5435,
											"name": "ADD"
										},
										{
											"begin": 5363,
											"end": 5435,
											"name": "SWAP2"
										},
										{
											"begin": 5363,
											"end": 5435,
											"name": "POP"
										},
										{
											"begin": 5363,
											"end": 5435,
											"name": "POP"
										},
										{
											"begin": 5363,
											"end": 5435,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5363,
											"end": 5435,
											"name": "MLOAD"
										},
										{
											"begin": 5363,
											"end": 5435,
											"name": "DUP1"
										},
										{
											"begin": 5363,
											"end": 5435,
											"name": "SWAP2"
										},
										{
											"begin": 5363,
											"end": 5435,
											"name": "SUB"
										},
										{
											"begin": 5363,
											"end": 5435,
											"name": "SWAP1"
										},
										{
											"begin": 5363,
											"end": 5435,
											"name": "REVERT"
										},
										{
											"begin": 5363,
											"end": 5435,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 5363,
											"end": 5435,
											"name": "JUMPDEST"
										},
										{
											"begin": 5479,
											"end": 5515,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 5483,
											"end": 5492,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 5483,
											"end": 5497,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5493,
											"end": 5496,
											"name": "DUP7"
										},
										{
											"begin": 5483,
											"end": 5497,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5483,
											"end": 5497,
											"name": "AND"
										},
										{
											"begin": 5483,
											"end": 5497,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5483,
											"end": 5497,
											"name": "AND"
										},
										{
											"begin": 5483,
											"end": 5497,
											"name": "DUP2"
										},
										{
											"begin": 5483,
											"end": 5497,
											"name": "MSTORE"
										},
										{
											"begin": 5483,
											"end": 5497,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5483,
											"end": 5497,
											"name": "ADD"
										},
										{
											"begin": 5483,
											"end": 5497,
											"name": "SWAP1"
										},
										{
											"begin": 5483,
											"end": 5497,
											"name": "DUP2"
										},
										{
											"begin": 5483,
											"end": 5497,
											"name": "MSTORE"
										},
										{
											"begin": 5483,
											"end": 5497,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5483,
											"end": 5497,
											"name": "ADD"
										},
										{
											"begin": 5483,
											"end": 5497,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5483,
											"end": 5497,
											"name": "KECCAK256"
										},
										{
											"begin": 5483,
											"end": 5509,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5508,
											"name": "CALLER"
										},
										{
											"begin": 5483,
											"end": 5509,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5483,
											"end": 5509,
											"name": "AND"
										},
										{
											"begin": 5483,
											"end": 5509,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5483,
											"end": 5509,
											"name": "AND"
										},
										{
											"begin": 5483,
											"end": 5509,
											"name": "DUP2"
										},
										{
											"begin": 5483,
											"end": 5509,
											"name": "MSTORE"
										},
										{
											"begin": 5483,
											"end": 5509,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5483,
											"end": 5509,
											"name": "ADD"
										},
										{
											"begin": 5483,
											"end": 5509,
											"name": "SWAP1"
										},
										{
											"begin": 5483,
											"end": 5509,
											"name": "DUP2"
										},
										{
											"begin": 5483,
											"end": 5509,
											"name": "MSTORE"
										},
										{
											"begin": 5483,
											"end": 5509,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5483,
											"end": 5509,
											"name": "ADD"
										},
										{
											"begin": 5483,
											"end": 5509,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5483,
											"end": 5509,
											"name": "KECCAK256"
										},
										{
											"begin": 5483,
											"end": 5509,
											"name": "SLOAD"
										},
										{
											"begin": 5511,
											"end": 5514,
											"name": "DUP4"
										},
										{
											"begin": 5479,
											"end": 5482,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 5479,
											"end": 5515,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5479,
											"end": 5515,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 5479,
											"end": 5515,
											"name": "JUMPDEST"
										},
										{
											"begin": 5450,
											"end": 5459,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 5450,
											"end": 5464,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5460,
											"end": 5463,
											"name": "DUP7"
										},
										{
											"begin": 5450,
											"end": 5464,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5450,
											"end": 5464,
											"name": "AND"
										},
										{
											"begin": 5450,
											"end": 5464,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5450,
											"end": 5464,
											"name": "AND"
										},
										{
											"begin": 5450,
											"end": 5464,
											"name": "DUP2"
										},
										{
											"begin": 5450,
											"end": 5464,
											"name": "MSTORE"
										},
										{
											"begin": 5450,
											"end": 5464,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5450,
											"end": 5464,
											"name": "ADD"
										},
										{
											"begin": 5450,
											"end": 5464,
											"name": "SWAP1"
										},
										{
											"begin": 5450,
											"end": 5464,
											"name": "DUP2"
										},
										{
											"begin": 5450,
											"end": 5464,
											"name": "MSTORE"
										},
										{
											"begin": 5450,
											"end": 5464,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5450,
											"end": 5464,
											"name": "ADD"
										},
										{
											"begin": 5450,
											"end": 5464,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5450,
											"end": 5464,
											"name": "KECCAK256"
										},
										{
											"begin": 5450,
											"end": 5476,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5465,
											"end": 5475,
											"name": "CALLER"
										},
										{
											"begin": 5450,
											"end": 5476,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5450,
											"end": 5476,
											"name": "AND"
										},
										{
											"begin": 5450,
											"end": 5476,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5450,
											"end": 5476,
											"name": "AND"
										},
										{
											"begin": 5450,
											"end": 5476,
											"name": "DUP2"
										},
										{
											"begin": 5450,
											"end": 5476,
											"name": "MSTORE"
										},
										{
											"begin": 5450,
											"end": 5476,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5450,
											"end": 5476,
											"name": "ADD"
										},
										{
											"begin": 5450,
											"end": 5476,
											"name": "SWAP1"
										},
										{
											"begin": 5450,
											"end": 5476,
											"name": "DUP2"
										},
										{
											"begin": 5450,
											"end": 5476,
											"name": "MSTORE"
										},
										{
											"begin": 5450,
											"end": 5476,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5450,
											"end": 5476,
											"name": "ADD"
										},
										{
											"begin": 5450,
											"end": 5476,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5450,
											"end": 5476,
											"name": "KECCAK256"
										},
										{
											"begin": 5450,
											"end": 5515,
											"name": "DUP2"
										},
										{
											"begin": 5450,
											"end": 5515,
											"name": "SWAP1"
										},
										{
											"begin": 5450,
											"end": 5515,
											"name": "SSTORE"
										},
										{
											"begin": 5450,
											"end": 5515,
											"name": "POP"
										},
										{
											"begin": 5283,
											"end": 5527,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 5283,
											"end": 5527,
											"name": "JUMPDEST"
										},
										{
											"begin": 5554,
											"end": 5578,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 5558,
											"end": 5567,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5558,
											"end": 5572,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5568,
											"end": 5571,
											"name": "DUP7"
										},
										{
											"begin": 5558,
											"end": 5572,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5558,
											"end": 5572,
											"name": "AND"
										},
										{
											"begin": 5558,
											"end": 5572,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5558,
											"end": 5572,
											"name": "AND"
										},
										{
											"begin": 5558,
											"end": 5572,
											"name": "DUP2"
										},
										{
											"begin": 5558,
											"end": 5572,
											"name": "MSTORE"
										},
										{
											"begin": 5558,
											"end": 5572,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5558,
											"end": 5572,
											"name": "ADD"
										},
										{
											"begin": 5558,
											"end": 5572,
											"name": "SWAP1"
										},
										{
											"begin": 5558,
											"end": 5572,
											"name": "DUP2"
										},
										{
											"begin": 5558,
											"end": 5572,
											"name": "MSTORE"
										},
										{
											"begin": 5558,
											"end": 5572,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5558,
											"end": 5572,
											"name": "ADD"
										},
										{
											"begin": 5558,
											"end": 5572,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5558,
											"end": 5572,
											"name": "KECCAK256"
										},
										{
											"begin": 5558,
											"end": 5572,
											"name": "SLOAD"
										},
										{
											"begin": 5574,
											"end": 5577,
											"name": "DUP4"
										},
										{
											"begin": 5554,
											"end": 5557,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 5554,
											"end": 5578,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5554,
											"end": 5578,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 5554,
											"end": 5578,
											"name": "JUMPDEST"
										},
										{
											"begin": 5537,
											"end": 5546,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5537,
											"end": 5551,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5547,
											"end": 5550,
											"name": "DUP7"
										},
										{
											"begin": 5537,
											"end": 5551,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5537,
											"end": 5551,
											"name": "AND"
										},
										{
											"begin": 5537,
											"end": 5551,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5537,
											"end": 5551,
											"name": "AND"
										},
										{
											"begin": 5537,
											"end": 5551,
											"name": "DUP2"
										},
										{
											"begin": 5537,
											"end": 5551,
											"name": "MSTORE"
										},
										{
											"begin": 5537,
											"end": 5551,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5551,
											"name": "ADD"
										},
										{
											"begin": 5537,
											"end": 5551,
											"name": "SWAP1"
										},
										{
											"begin": 5537,
											"end": 5551,
											"name": "DUP2"
										},
										{
											"begin": 5537,
											"end": 5551,
											"name": "MSTORE"
										},
										{
											"begin": 5537,
											"end": 5551,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5551,
											"name": "ADD"
										},
										{
											"begin": 5537,
											"end": 5551,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5537,
											"end": 5551,
											"name": "KECCAK256"
										},
										{
											"begin": 5537,
											"end": 5578,
											"name": "DUP2"
										},
										{
											"begin": 5537,
											"end": 5578,
											"name": "SWAP1"
										},
										{
											"begin": 5537,
											"end": 5578,
											"name": "SSTORE"
										},
										{
											"begin": 5537,
											"end": 5578,
											"name": "POP"
										},
										{
											"begin": 5606,
											"end": 5630,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 5610,
											"end": 5619,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5610,
											"end": 5624,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5620,
											"end": 5623,
											"name": "DUP6"
										},
										{
											"begin": 5610,
											"end": 5624,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5610,
											"end": 5624,
											"name": "AND"
										},
										{
											"begin": 5610,
											"end": 5624,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5610,
											"end": 5624,
											"name": "AND"
										},
										{
											"begin": 5610,
											"end": 5624,
											"name": "DUP2"
										},
										{
											"begin": 5610,
											"end": 5624,
											"name": "MSTORE"
										},
										{
											"begin": 5610,
											"end": 5624,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5610,
											"end": 5624,
											"name": "ADD"
										},
										{
											"begin": 5610,
											"end": 5624,
											"name": "SWAP1"
										},
										{
											"begin": 5610,
											"end": 5624,
											"name": "DUP2"
										},
										{
											"begin": 5610,
											"end": 5624,
											"name": "MSTORE"
										},
										{
											"begin": 5610,
											"end": 5624,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5610,
											"end": 5624,
											"name": "ADD"
										},
										{
											"begin": 5610,
											"end": 5624,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5624,
											"name": "KECCAK256"
										},
										{
											"begin": 5610,
											"end": 5624,
											"name": "SLOAD"
										},
										{
											"begin": 5626,
											"end": 5629,
											"name": "DUP4"
										},
										{
											"begin": 5606,
											"end": 5609,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 5606,
											"end": 5630,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5606,
											"end": 5630,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 5606,
											"end": 5630,
											"name": "JUMPDEST"
										},
										{
											"begin": 5589,
											"end": 5598,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5589,
											"end": 5603,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5599,
											"end": 5602,
											"name": "DUP6"
										},
										{
											"begin": 5589,
											"end": 5603,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5589,
											"end": 5603,
											"name": "AND"
										},
										{
											"begin": 5589,
											"end": 5603,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5589,
											"end": 5603,
											"name": "AND"
										},
										{
											"begin": 5589,
											"end": 5603,
											"name": "DUP2"
										},
										{
											"begin": 5589,
											"end": 5603,
											"name": "MSTORE"
										},
										{
											"begin": 5589,
											"end": 5603,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5589,
											"end": 5603,
											"name": "ADD"
										},
										{
											"begin": 5589,
											"end": 5603,
											"name": "SWAP1"
										},
										{
											"begin": 5589,
											"end": 5603,
											"name": "DUP2"
										},
										{
											"begin": 5589,
											"end": 5603,
											"name": "MSTORE"
										},
										{
											"begin": 5589,
											"end": 5603,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5589,
											"end": 5603,
											"name": "ADD"
										},
										{
											"begin": 5589,
											"end": 5603,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5589,
											"end": 5603,
											"name": "KECCAK256"
										},
										{
											"begin": 5589,
											"end": 5630,
											"name": "DUP2"
										},
										{
											"begin": 5589,
											"end": 5630,
											"name": "SWAP1"
										},
										{
											"begin": 5589,
											"end": 5630,
											"name": "SSTORE"
										},
										{
											"begin": 5589,
											"end": 5630,
											"name": "POP"
										},
										{
											"begin": 5660,
											"end": 5663,
											"name": "DUP3"
										},
										{
											"begin": 5646,
											"end": 5669,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5646,
											"end": 5669,
											"name": "AND"
										},
										{
											"begin": 5655,
											"end": 5658,
											"name": "DUP5"
										},
										{
											"begin": 5646,
											"end": 5669,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5646,
											"end": 5669,
											"name": "AND"
										},
										{
											"begin": 5646,
											"end": 5669,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 5665,
											"end": 5668,
											"name": "DUP5"
										},
										{
											"begin": 5646,
											"end": 5669,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5646,
											"end": 5669,
											"name": "MLOAD"
										},
										{
											"begin": 5646,
											"end": 5669,
											"name": "DUP1"
										},
										{
											"begin": 5646,
											"end": 5669,
											"name": "DUP3"
										},
										{
											"begin": 5646,
											"end": 5669,
											"name": "DUP2"
										},
										{
											"begin": 5646,
											"end": 5669,
											"name": "MSTORE"
										},
										{
											"begin": 5646,
											"end": 5669,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5646,
											"end": 5669,
											"name": "ADD"
										},
										{
											"begin": 5646,
											"end": 5669,
											"name": "SWAP2"
										},
										{
											"begin": 5646,
											"end": 5669,
											"name": "POP"
										},
										{
											"begin": 5646,
											"end": 5669,
											"name": "POP"
										},
										{
											"begin": 5646,
											"end": 5669,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5646,
											"end": 5669,
											"name": "MLOAD"
										},
										{
											"begin": 5646,
											"end": 5669,
											"name": "DUP1"
										},
										{
											"begin": 5646,
											"end": 5669,
											"name": "SWAP2"
										},
										{
											"begin": 5646,
											"end": 5669,
											"name": "SUB"
										},
										{
											"begin": 5646,
											"end": 5669,
											"name": "SWAP1"
										},
										{
											"begin": 5646,
											"end": 5669,
											"name": "LOG3"
										},
										{
											"begin": 5687,
											"end": 5691,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5680,
											"end": 5691,
											"name": "SWAP1"
										},
										{
											"begin": 5680,
											"end": 5691,
											"name": "POP"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "SWAP4"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "SWAP3"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "POP"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "POP"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "POP"
										},
										{
											"begin": 5109,
											"end": 5699,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4454,
											"end": 4562,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 4454,
											"end": 4562,
											"name": "JUMPDEST"
										},
										{
											"begin": 4496,
											"end": 4562,
											"name": "PUSH",
											"value": "EA2AA0A1BE11A07ED86D755C93467F4F82362B452371D1BA94D1715123511ACB"
										},
										{
											"begin": 4454,
											"end": 4562,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4454,
											"end": 4562,
											"name": "SHL"
										},
										{
											"begin": 4454,
											"end": 4562,
											"name": "DUP2"
										},
										{
											"begin": 4454,
											"end": 4562,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3560,
											"end": 3597,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 3560,
											"end": 3597,
											"name": "JUMPDEST"
										},
										{
											"begin": 3595,
											"end": 3597,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 3560,
											"end": 3597,
											"name": "DUP2"
										},
										{
											"begin": 3560,
											"end": 3597,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4271,
											"end": 4302,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 4271,
											"end": 4302,
											"name": "JUMPDEST"
										},
										{
											"begin": 4271,
											"end": 4302,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4271,
											"end": 4302,
											"name": "SLOAD"
										},
										{
											"begin": 4271,
											"end": 4302,
											"name": "DUP2"
										},
										{
											"begin": 4271,
											"end": 4302,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5705,
											"end": 5911,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 5705,
											"end": 5911,
											"name": "JUMPDEST"
										},
										{
											"begin": 3331,
											"end": 3332,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3310,
											"end": 3315,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3310,
											"end": 3327,
											"name": "DUP1"
										},
										{
											"begin": 3316,
											"end": 3326,
											"name": "CALLER"
										},
										{
											"begin": 3310,
											"end": 3327,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3310,
											"end": 3327,
											"name": "AND"
										},
										{
											"begin": 3310,
											"end": 3327,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3310,
											"end": 3327,
											"name": "AND"
										},
										{
											"begin": 3310,
											"end": 3327,
											"name": "DUP2"
										},
										{
											"begin": 3310,
											"end": 3327,
											"name": "MSTORE"
										},
										{
											"begin": 3310,
											"end": 3327,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3310,
											"end": 3327,
											"name": "ADD"
										},
										{
											"begin": 3310,
											"end": 3327,
											"name": "SWAP1"
										},
										{
											"begin": 3310,
											"end": 3327,
											"name": "DUP2"
										},
										{
											"begin": 3310,
											"end": 3327,
											"name": "MSTORE"
										},
										{
											"begin": 3310,
											"end": 3327,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3310,
											"end": 3327,
											"name": "ADD"
										},
										{
											"begin": 3310,
											"end": 3327,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3310,
											"end": 3327,
											"name": "KECCAK256"
										},
										{
											"begin": 3310,
											"end": 3327,
											"name": "SLOAD"
										},
										{
											"begin": 3310,
											"end": 3332,
											"name": "EQ"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "JUMPI"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "MLOAD"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "DUP2"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "MSTORE"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "ADD"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "DUP1"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "DUP1"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "ADD"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "DUP3"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "DUP2"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "SUB"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "DUP3"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "MSTORE"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "DUP2"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "MSTORE"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "ADD"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "DUP1"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "PUSH",
											"value": "4461692F6E6F742D617574686F72697A65640000000000000000000000000000"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "DUP2"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "MSTORE"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "POP"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "ADD"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "SWAP2"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "POP"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "POP"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "MLOAD"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "DUP1"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "SWAP2"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "SUB"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "SWAP1"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "REVERT"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "tag",
											"value": "111"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "JUMPDEST"
										},
										{
											"begin": 5784,
											"end": 5808,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 5788,
											"end": 5797,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5788,
											"end": 5802,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5798,
											"end": 5801,
											"name": "DUP5"
										},
										{
											"begin": 5788,
											"end": 5802,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5788,
											"end": 5802,
											"name": "AND"
										},
										{
											"begin": 5788,
											"end": 5802,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5788,
											"end": 5802,
											"name": "AND"
										},
										{
											"begin": 5788,
											"end": 5802,
											"name": "DUP2"
										},
										{
											"begin": 5788,
											"end": 5802,
											"name": "MSTORE"
										},
										{
											"begin": 5788,
											"end": 5802,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5788,
											"end": 5802,
											"name": "ADD"
										},
										{
											"begin": 5788,
											"end": 5802,
											"name": "SWAP1"
										},
										{
											"begin": 5788,
											"end": 5802,
											"name": "DUP2"
										},
										{
											"begin": 5788,
											"end": 5802,
											"name": "MSTORE"
										},
										{
											"begin": 5788,
											"end": 5802,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5788,
											"end": 5802,
											"name": "ADD"
										},
										{
											"begin": 5788,
											"end": 5802,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5788,
											"end": 5802,
											"name": "KECCAK256"
										},
										{
											"begin": 5788,
											"end": 5802,
											"name": "SLOAD"
										},
										{
											"begin": 5804,
											"end": 5807,
											"name": "DUP3"
										},
										{
											"begin": 5784,
											"end": 5787,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 5784,
											"end": 5808,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5784,
											"end": 5808,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 5784,
											"end": 5808,
											"name": "JUMPDEST"
										},
										{
											"begin": 5767,
											"end": 5776,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5767,
											"end": 5781,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5777,
											"end": 5780,
											"name": "DUP5"
										},
										{
											"begin": 5767,
											"end": 5781,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5767,
											"end": 5781,
											"name": "AND"
										},
										{
											"begin": 5767,
											"end": 5781,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5767,
											"end": 5781,
											"name": "AND"
										},
										{
											"begin": 5767,
											"end": 5781,
											"name": "DUP2"
										},
										{
											"begin": 5767,
											"end": 5781,
											"name": "MSTORE"
										},
										{
											"begin": 5767,
											"end": 5781,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5767,
											"end": 5781,
											"name": "ADD"
										},
										{
											"begin": 5767,
											"end": 5781,
											"name": "SWAP1"
										},
										{
											"begin": 5767,
											"end": 5781,
											"name": "DUP2"
										},
										{
											"begin": 5767,
											"end": 5781,
											"name": "MSTORE"
										},
										{
											"begin": 5767,
											"end": 5781,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5767,
											"end": 5781,
											"name": "ADD"
										},
										{
											"begin": 5767,
											"end": 5781,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5767,
											"end": 5781,
											"name": "KECCAK256"
										},
										{
											"begin": 5767,
											"end": 5808,
											"name": "DUP2"
										},
										{
											"begin": 5767,
											"end": 5808,
											"name": "SWAP1"
										},
										{
											"begin": 5767,
											"end": 5808,
											"name": "SSTORE"
										},
										{
											"begin": 5767,
											"end": 5808,
											"name": "POP"
										},
										{
											"begin": 5836,
											"end": 5857,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 5840,
											"end": 5851,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5840,
											"end": 5851,
											"name": "SLOAD"
										},
										{
											"begin": 5853,
											"end": 5856,
											"name": "DUP3"
										},
										{
											"begin": 5836,
											"end": 5839,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 5836,
											"end": 5857,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5836,
											"end": 5857,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 5836,
											"end": 5857,
											"name": "JUMPDEST"
										},
										{
											"begin": 5819,
											"end": 5830,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5819,
											"end": 5857,
											"name": "DUP2"
										},
										{
											"begin": 5819,
											"end": 5857,
											"name": "SWAP1"
										},
										{
											"begin": 5819,
											"end": 5857,
											"name": "SSTORE"
										},
										{
											"begin": 5819,
											"end": 5857,
											"name": "POP"
										},
										{
											"begin": 5894,
											"end": 5897,
											"name": "DUP2"
										},
										{
											"begin": 5873,
											"end": 5903,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5873,
											"end": 5903,
											"name": "AND"
										},
										{
											"begin": 5890,
											"end": 5891,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5903,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5873,
											"end": 5903,
											"name": "AND"
										},
										{
											"begin": 5873,
											"end": 5903,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 5899,
											"end": 5902,
											"name": "DUP4"
										},
										{
											"begin": 5873,
											"end": 5903,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5903,
											"name": "MLOAD"
										},
										{
											"begin": 5873,
											"end": 5903,
											"name": "DUP1"
										},
										{
											"begin": 5873,
											"end": 5903,
											"name": "DUP3"
										},
										{
											"begin": 5873,
											"end": 5903,
											"name": "DUP2"
										},
										{
											"begin": 5873,
											"end": 5903,
											"name": "MSTORE"
										},
										{
											"begin": 5873,
											"end": 5903,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5873,
											"end": 5903,
											"name": "ADD"
										},
										{
											"begin": 5873,
											"end": 5903,
											"name": "SWAP2"
										},
										{
											"begin": 5873,
											"end": 5903,
											"name": "POP"
										},
										{
											"begin": 5873,
											"end": 5903,
											"name": "POP"
										},
										{
											"begin": 5873,
											"end": 5903,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5903,
											"name": "MLOAD"
										},
										{
											"begin": 5873,
											"end": 5903,
											"name": "DUP1"
										},
										{
											"begin": 5873,
											"end": 5903,
											"name": "SWAP2"
										},
										{
											"begin": 5873,
											"end": 5903,
											"name": "SUB"
										},
										{
											"begin": 5873,
											"end": 5903,
											"name": "SWAP1"
										},
										{
											"begin": 5873,
											"end": 5903,
											"name": "LOG3"
										},
										{
											"begin": 5705,
											"end": 5911,
											"name": "POP"
										},
										{
											"begin": 5705,
											"end": 5911,
											"name": "POP"
										},
										{
											"begin": 5705,
											"end": 5911,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "JUMPDEST"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "MLOAD"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "DUP1"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "ADD"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "MSTORE"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "DUP1"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "DUP2"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "MSTORE"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "ADD"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "PUSH",
											"value": "3100000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "DUP2"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "MSTORE"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "POP"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "DUP2"
										},
										{
											"begin": 3515,
											"end": 3553,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "JUMPDEST"
										},
										{
											"begin": 3331,
											"end": 3332,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3310,
											"end": 3315,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3310,
											"end": 3327,
											"name": "DUP1"
										},
										{
											"begin": 3316,
											"end": 3326,
											"name": "CALLER"
										},
										{
											"begin": 3310,
											"end": 3327,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3310,
											"end": 3327,
											"name": "AND"
										},
										{
											"begin": 3310,
											"end": 3327,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3310,
											"end": 3327,
											"name": "AND"
										},
										{
											"begin": 3310,
											"end": 3327,
											"name": "DUP2"
										},
										{
											"begin": 3310,
											"end": 3327,
											"name": "MSTORE"
										},
										{
											"begin": 3310,
											"end": 3327,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3310,
											"end": 3327,
											"name": "ADD"
										},
										{
											"begin": 3310,
											"end": 3327,
											"name": "SWAP1"
										},
										{
											"begin": 3310,
											"end": 3327,
											"name": "DUP2"
										},
										{
											"begin": 3310,
											"end": 3327,
											"name": "MSTORE"
										},
										{
											"begin": 3310,
											"end": 3327,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3310,
											"end": 3327,
											"name": "ADD"
										},
										{
											"begin": 3310,
											"end": 3327,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3310,
											"end": 3327,
											"name": "KECCAK256"
										},
										{
											"begin": 3310,
											"end": 3327,
											"name": "SLOAD"
										},
										{
											"begin": 3310,
											"end": 3332,
											"name": "EQ"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "JUMPI"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "MLOAD"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "DUP2"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "MSTORE"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "ADD"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "DUP1"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "DUP1"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "ADD"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "DUP3"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "DUP2"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "SUB"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "DUP3"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "MSTORE"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "DUP2"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "MSTORE"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "ADD"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "DUP1"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "PUSH",
											"value": "4461692F6E6F742D617574686F72697A65640000000000000000000000000000"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "DUP2"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "MSTORE"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "POP"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "ADD"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "SWAP2"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "POP"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "POP"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "MLOAD"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "DUP1"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "SWAP2"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "SUB"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "SWAP1"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "REVERT"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "tag",
											"value": "117"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "JUMPDEST"
										},
										{
											"begin": 3196,
											"end": 3197,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3183,
											"end": 3188,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3183,
											"end": 3193,
											"name": "DUP1"
										},
										{
											"begin": 3189,
											"end": 3192,
											"name": "DUP4"
										},
										{
											"begin": 3183,
											"end": 3193,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3183,
											"end": 3193,
											"name": "AND"
										},
										{
											"begin": 3183,
											"end": 3193,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3183,
											"end": 3193,
											"name": "AND"
										},
										{
											"begin": 3183,
											"end": 3193,
											"name": "DUP2"
										},
										{
											"begin": 3183,
											"end": 3193,
											"name": "MSTORE"
										},
										{
											"begin": 3183,
											"end": 3193,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3183,
											"end": 3193,
											"name": "ADD"
										},
										{
											"begin": 3183,
											"end": 3193,
											"name": "SWAP1"
										},
										{
											"begin": 3183,
											"end": 3193,
											"name": "DUP2"
										},
										{
											"begin": 3183,
											"end": 3193,
											"name": "MSTORE"
										},
										{
											"begin": 3183,
											"end": 3193,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3183,
											"end": 3193,
											"name": "ADD"
										},
										{
											"begin": 3183,
											"end": 3193,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3183,
											"end": 3193,
											"name": "KECCAK256"
										},
										{
											"begin": 3183,
											"end": 3197,
											"name": "DUP2"
										},
										{
											"begin": 3183,
											"end": 3197,
											"name": "SWAP1"
										},
										{
											"begin": 3183,
											"end": 3197,
											"name": "SSTORE"
										},
										{
											"begin": 3183,
											"end": 3197,
											"name": "POP"
										},
										{
											"begin": 1412,
											"end": 1417,
											"name": "MSIZE"
										},
										{
											"begin": 1508,
											"end": 1511,
											"name": "PUSH",
											"value": "120"
										},
										{
											"begin": 1502,
											"end": 1506,
											"name": "DUP2"
										},
										{
											"begin": 1498,
											"end": 1512,
											"name": "ADD"
										},
										{
											"begin": 1492,
											"end": 1496,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1485,
											"end": 1513,
											"name": "MSTORE"
										},
										{
											"begin": 1583,
											"end": 1587,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1577,
											"end": 1581,
											"name": "DUP2"
										},
										{
											"begin": 1570,
											"end": 1588,
											"name": "MSTORE"
										},
										{
											"begin": 1675,
											"end": 1678,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 1668,
											"end": 1672,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "DUP3"
										},
										{
											"begin": 1658,
											"end": 1673,
											"name": "ADD"
										},
										{
											"begin": 1651,
											"end": 1679,
											"name": "MSTORE"
										},
										{
											"begin": 1762,
											"end": 1765,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1752,
											"end": 1756,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1746,
											"end": 1750,
											"name": "DUP4"
										},
										{
											"begin": 1742,
											"end": 1757,
											"name": "ADD"
										},
										{
											"begin": 1729,
											"end": 1766,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 2084,
											"end": 2086,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 2071,
											"end": 2087,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2021,
											"end": 2022,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2008,
											"end": 2023,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1939,
											"end": 1945,
											"name": "CALLER"
										},
										{
											"begin": 1904,
											"end": 1905,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1891,
											"end": 1906,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1886,
											"end": 1889,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 1882,
											"end": 1907,
											"name": "SHR"
										},
										{
											"begin": 1877,
											"end": 1880,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 1873,
											"end": 1908,
											"name": "SHL"
										},
										{
											"begin": 1812,
											"end": 1815,
											"name": "PUSH",
											"value": "120"
										},
										{
											"begin": 1806,
											"end": 1810,
											"name": "DUP6"
										},
										{
											"begin": 1801,
											"end": 2134,
											"name": "LOG4"
										},
										{
											"begin": 1235,
											"end": 2145,
											"name": "POP"
										},
										{
											"begin": 1235,
											"end": 2145,
											"name": "POP"
										},
										{
											"begin": 1235,
											"end": 2145,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "JUMPDEST"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "MSTORE"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "DUP1"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "MSTORE"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "KECCAK256"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "SWAP2"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "POP"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "SWAP1"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "POP"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "SLOAD"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "DUP2"
										},
										{
											"begin": 3639,
											"end": 3702,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "JUMPDEST"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "MSTORE"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "DUP1"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "MSTORE"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "KECCAK256"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "SWAP2"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "POP"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "SWAP1"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "POP"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "SLOAD"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "DUP2"
										},
										{
											"begin": 3779,
											"end": 3839,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "JUMPDEST"
										},
										{
											"begin": 7191,
											"end": 7205,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7295,
											"end": 7311,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 7295,
											"end": 7311,
											"name": "SLOAD"
										},
										{
											"begin": 4496,
											"end": 4562,
											"name": "PUSH",
											"value": "EA2AA0A1BE11A07ED86D755C93467F4F82362B452371D1BA94D1715123511ACB"
										},
										{
											"begin": 7351,
											"end": 7366,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7351,
											"end": 7366,
											"name": "SHL"
										},
										{
											"begin": 7406,
											"end": 7412,
											"name": "DUP11"
										},
										{
											"begin": 7452,
											"end": 7459,
											"name": "DUP11"
										},
										{
											"begin": 7499,
											"end": 7504,
											"name": "DUP11"
										},
										{
											"begin": 7544,
											"end": 7550,
											"name": "DUP11"
										},
										{
											"begin": 7590,
											"end": 7597,
											"name": "DUP11"
										},
										{
											"begin": 7340,
											"end": 7598,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7340,
											"end": 7598,
											"name": "MLOAD"
										},
										{
											"begin": 7340,
											"end": 7598,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7340,
											"end": 7598,
											"name": "ADD"
										},
										{
											"begin": 7340,
											"end": 7598,
											"name": "DUP1"
										},
										{
											"begin": 7340,
											"end": 7598,
											"name": "DUP8"
										},
										{
											"begin": 7340,
											"end": 7598,
											"name": "DUP2"
										},
										{
											"begin": 7340,
											"end": 7598,
											"name": "MSTORE"
										},
										{
											"begin": 7340,
											"end": 7598,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7340,
											"end": 7598,
											"name": "ADD"
										},
										{
											"begin": 7340,
											"end": 7598,
											"name": "DUP7"
										},
										{
											"begin": 7340,
											"end": 7598,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7340,
											"end": 7598,
											"name": "AND"
										},
										{
											"begin": 7340,
											"end": 7598,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7340,
											"end": 7598,
											"name": "AND"
										},
										{
											"begin": 7340,
											"end": 7598,
											"name": "DUP2"
										},
										{
											"begin": 7340,
											"end": 7598,
											"name": "MSTORE"
										},
										{
											"begin": 7340,
											"end": 7598,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7340,
											"end": 7598,
											"name": "ADD"
										},
										{
											"begin": 7340,
											"end": 7598,
											"name": "DUP6"
										},
										{
											"begin": 7340,
											"end": 7598,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7340,
											"end": 7598,
											"name": "AND"
										},
										{
											"begin": 7340,
											"end": 7598,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7340,
											"end": 7598,
											"name": "AND"
										},
										{
											"begin": 7340,
											"end": 7598,
											"name": "DUP2"
										},
										{
											"begin": 7340,
											"end": 7598,
											"name": "MSTORE"
										},
										{
											"begin": 7340,
											"end": 7598,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7340,
											"end": 7598,
											"name": "ADD"
										},
										{
											"begin": 7340,
											"end": 7598,
											"name": "DUP5"
										},
										{
											"begin": 7340,
											"end": 7598,
											"name": "DUP2"
										},
										{
											"begin": 7340,
											"end": 7598,
											"name": "MSTORE"
										},
										{
											"begin": 7340,
											"end": 7598,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7340,
											"end": 7598,
											"name": "ADD"
										},
										{
											"begin": 7340,
											"end": 7598,
											"name": "DUP4"
										},
										{
											"begin": 7340,
											"end": 7598,
											"name": "DUP2"
										},
										{
											"begin": 7340,
											"end": 7598,
											"name": "MSTORE"
										},
										{
											"begin": 7340,
											"end": 7598,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7340,
											"end": 7598,
											"name": "ADD"
										},
										{
											"begin": 7340,
											"end": 7598,
											"name": "DUP3"
										},
										{
											"begin": 7340,
											"end": 7598,
											"name": "ISZERO"
										},
										{
											"begin": 7340,
											"end": 7598,
											"name": "ISZERO"
										},
										{
											"begin": 7340,
											"end": 7598,
											"name": "ISZERO"
										},
										{
											"begin": 7340,
											"end": 7598,
											"name": "ISZERO"
										},
										{
											"begin": 7340,
											"end": 7598,
											"name": "DUP2"
										},
										{
											"begin": 7340,
											"end": 7598,
											"name": "MSTORE"
										},
										{
											"begin": 7340,
											"end": 7598,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7340,
											"end": 7598,
											"name": "ADD"
										},
										{
											"begin": 7340,
											"end": 7598,
											"name": "SWAP7"
										},
										{
											"begin": 7340,
											"end": 7598,
											"name": "POP"
										},
										{
											"begin": 7340,
											"end": 7598,
											"name": "POP"
										},
										{
											"begin": 7340,
											"end": 7598,
											"name": "POP"
										},
										{
											"begin": 7340,
											"end": 7598,
											"name": "POP"
										},
										{
											"begin": 7340,
											"end": 7598,
											"name": "POP"
										},
										{
											"begin": 7340,
											"end": 7598,
											"name": "POP"
										},
										{
											"begin": 7340,
											"end": 7598,
											"name": "POP"
										},
										{
											"begin": 7340,
											"end": 7598,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7340,
											"end": 7598,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 7340,
											"end": 7598,
											"name": "SWAP1"
										},
										{
											"begin": 7340,
											"end": 7598,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7340,
											"end": 7598,
											"name": "MSTORE"
										},
										{
											"begin": 7330,
											"end": 7599,
											"name": "DUP1"
										},
										{
											"begin": 7330,
											"end": 7599,
											"name": "MLOAD"
										},
										{
											"begin": 7330,
											"end": 7599,
											"name": "SWAP1"
										},
										{
											"begin": 7330,
											"end": 7599,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7330,
											"end": 7599,
											"name": "ADD"
										},
										{
											"begin": 7330,
											"end": 7599,
											"name": "KECCAK256"
										},
										{
											"begin": 7231,
											"end": 7610,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7231,
											"end": 7610,
											"name": "MLOAD"
										},
										{
											"begin": 7231,
											"end": 7610,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7231,
											"end": 7610,
											"name": "ADD"
										},
										{
											"begin": 7231,
											"end": 7610,
											"name": "DUP1"
										},
										{
											"begin": 7231,
											"end": 7610,
											"name": "DUP1"
										},
										{
											"begin": 7231,
											"end": 7610,
											"name": "PUSH",
											"value": "1901000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7231,
											"end": 7610,
											"name": "DUP2"
										},
										{
											"begin": 7231,
											"end": 7610,
											"name": "MSTORE"
										},
										{
											"begin": 7231,
											"end": 7610,
											"name": "POP"
										},
										{
											"begin": 7231,
											"end": 7610,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 7231,
											"end": 7610,
											"name": "ADD"
										},
										{
											"begin": 7231,
											"end": 7610,
											"name": "DUP4"
										},
										{
											"begin": 7231,
											"end": 7610,
											"name": "DUP2"
										},
										{
											"begin": 7231,
											"end": 7610,
											"name": "MSTORE"
										},
										{
											"begin": 7231,
											"end": 7610,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7231,
											"end": 7610,
											"name": "ADD"
										},
										{
											"begin": 7231,
											"end": 7610,
											"name": "DUP3"
										},
										{
											"begin": 7231,
											"end": 7610,
											"name": "DUP2"
										},
										{
											"begin": 7231,
											"end": 7610,
											"name": "MSTORE"
										},
										{
											"begin": 7231,
											"end": 7610,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7231,
											"end": 7610,
											"name": "ADD"
										},
										{
											"begin": 7231,
											"end": 7610,
											"name": "SWAP3"
										},
										{
											"begin": 7231,
											"end": 7610,
											"name": "POP"
										},
										{
											"begin": 7231,
											"end": 7610,
											"name": "POP"
										},
										{
											"begin": 7231,
											"end": 7610,
											"name": "POP"
										},
										{
											"begin": 7231,
											"end": 7610,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7231,
											"end": 7610,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 7231,
											"end": 7610,
											"name": "SWAP1"
										},
										{
											"begin": 7231,
											"end": 7610,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7231,
											"end": 7610,
											"name": "MSTORE"
										},
										{
											"begin": 7221,
											"end": 7611,
											"name": "DUP1"
										},
										{
											"begin": 7221,
											"end": 7611,
											"name": "MLOAD"
										},
										{
											"begin": 7221,
											"end": 7611,
											"name": "SWAP1"
										},
										{
											"begin": 7221,
											"end": 7611,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7221,
											"end": 7611,
											"name": "ADD"
										},
										{
											"begin": 7221,
											"end": 7611,
											"name": "KECCAK256"
										},
										{
											"begin": 7191,
											"end": 7611,
											"name": "SWAP1"
										},
										{
											"begin": 7191,
											"end": 7611,
											"name": "POP"
										},
										{
											"begin": 7650,
											"end": 7651,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7632,
											"end": 7652,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7632,
											"end": 7652,
											"name": "AND"
										},
										{
											"begin": 7632,
											"end": 7638,
											"name": "DUP10"
										},
										{
											"begin": 7632,
											"end": 7652,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7632,
											"end": 7652,
											"name": "AND"
										},
										{
											"begin": 7632,
											"end": 7652,
											"name": "EQ"
										},
										{
											"begin": 7632,
											"end": 7652,
											"name": "ISZERO"
										},
										{
											"begin": 7624,
											"end": 7678,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 7624,
											"end": 7678,
											"name": "JUMPI"
										},
										{
											"begin": 7624,
											"end": 7678,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7624,
											"end": 7678,
											"name": "MLOAD"
										},
										{
											"begin": 7624,
											"end": 7678,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7624,
											"end": 7678,
											"name": "DUP2"
										},
										{
											"begin": 7624,
											"end": 7678,
											"name": "MSTORE"
										},
										{
											"begin": 7624,
											"end": 7678,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7624,
											"end": 7678,
											"name": "ADD"
										},
										{
											"begin": 7624,
											"end": 7678,
											"name": "DUP1"
										},
										{
											"begin": 7624,
											"end": 7678,
											"name": "DUP1"
										},
										{
											"begin": 7624,
											"end": 7678,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7624,
											"end": 7678,
											"name": "ADD"
										},
										{
											"begin": 7624,
											"end": 7678,
											"name": "DUP3"
										},
										{
											"begin": 7624,
											"end": 7678,
											"name": "DUP2"
										},
										{
											"begin": 7624,
											"end": 7678,
											"name": "SUB"
										},
										{
											"begin": 7624,
											"end": 7678,
											"name": "DUP3"
										},
										{
											"begin": 7624,
											"end": 7678,
											"name": "MSTORE"
										},
										{
											"begin": 7624,
											"end": 7678,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 7624,
											"end": 7678,
											"name": "DUP2"
										},
										{
											"begin": 7624,
											"end": 7678,
											"name": "MSTORE"
										},
										{
											"begin": 7624,
											"end": 7678,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7624,
											"end": 7678,
											"name": "ADD"
										},
										{
											"begin": 7624,
											"end": 7678,
											"name": "DUP1"
										},
										{
											"begin": 7624,
											"end": 7678,
											"name": "PUSH",
											"value": "4461692F696E76616C69642D616464726573732D300000000000000000000000"
										},
										{
											"begin": 7624,
											"end": 7678,
											"name": "DUP2"
										},
										{
											"begin": 7624,
											"end": 7678,
											"name": "MSTORE"
										},
										{
											"begin": 7624,
											"end": 7678,
											"name": "POP"
										},
										{
											"begin": 7624,
											"end": 7678,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7624,
											"end": 7678,
											"name": "ADD"
										},
										{
											"begin": 7624,
											"end": 7678,
											"name": "SWAP2"
										},
										{
											"begin": 7624,
											"end": 7678,
											"name": "POP"
										},
										{
											"begin": 7624,
											"end": 7678,
											"name": "POP"
										},
										{
											"begin": 7624,
											"end": 7678,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7624,
											"end": 7678,
											"name": "MLOAD"
										},
										{
											"begin": 7624,
											"end": 7678,
											"name": "DUP1"
										},
										{
											"begin": 7624,
											"end": 7678,
											"name": "SWAP2"
										},
										{
											"begin": 7624,
											"end": 7678,
											"name": "SUB"
										},
										{
											"begin": 7624,
											"end": 7678,
											"name": "SWAP1"
										},
										{
											"begin": 7624,
											"end": 7678,
											"name": "REVERT"
										},
										{
											"begin": 7624,
											"end": 7678,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 7624,
											"end": 7678,
											"name": "JUMPDEST"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7717,
											"end": 7723,
											"name": "DUP2"
										},
										{
											"begin": 7725,
											"end": 7726,
											"name": "DUP6"
										},
										{
											"begin": 7728,
											"end": 7729,
											"name": "DUP6"
										},
										{
											"begin": 7731,
											"end": 7732,
											"name": "DUP6"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "MLOAD"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "DUP2"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "MSTORE"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "ADD"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "MSTORE"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "MLOAD"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "DUP1"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "DUP6"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "DUP2"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "MSTORE"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "ADD"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "DUP5"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "AND"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "AND"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "DUP2"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "MSTORE"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "ADD"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "DUP4"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "DUP2"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "MSTORE"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "ADD"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "DUP3"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "DUP2"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "MSTORE"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "ADD"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "SWAP5"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "POP"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "POP"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "POP"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "POP"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "POP"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "MLOAD"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "DUP2"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "SUB"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "SWAP1"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "DUP1"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "DUP5"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "SUB"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "SWAP1"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "DUP6"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "GAS"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "STATICCALL"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "POP"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "POP"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "POP"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "MLOAD"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "SUB"
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "MLOAD"
										},
										{
											"begin": 7697,
											"end": 7733,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7697,
											"end": 7733,
											"name": "AND"
										},
										{
											"begin": 7697,
											"end": 7703,
											"name": "DUP10"
										},
										{
											"begin": 7697,
											"end": 7733,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7697,
											"end": 7733,
											"name": "AND"
										},
										{
											"begin": 7697,
											"end": 7733,
											"name": "EQ"
										},
										{
											"begin": 7689,
											"end": 7756,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 7689,
											"end": 7756,
											"name": "JUMPI"
										},
										{
											"begin": 7689,
											"end": 7756,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7689,
											"end": 7756,
											"name": "MLOAD"
										},
										{
											"begin": 7689,
											"end": 7756,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7689,
											"end": 7756,
											"name": "DUP2"
										},
										{
											"begin": 7689,
											"end": 7756,
											"name": "MSTORE"
										},
										{
											"begin": 7689,
											"end": 7756,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7689,
											"end": 7756,
											"name": "ADD"
										},
										{
											"begin": 7689,
											"end": 7756,
											"name": "DUP1"
										},
										{
											"begin": 7689,
											"end": 7756,
											"name": "DUP1"
										},
										{
											"begin": 7689,
											"end": 7756,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7689,
											"end": 7756,
											"name": "ADD"
										},
										{
											"begin": 7689,
											"end": 7756,
											"name": "DUP3"
										},
										{
											"begin": 7689,
											"end": 7756,
											"name": "DUP2"
										},
										{
											"begin": 7689,
											"end": 7756,
											"name": "SUB"
										},
										{
											"begin": 7689,
											"end": 7756,
											"name": "DUP3"
										},
										{
											"begin": 7689,
											"end": 7756,
											"name": "MSTORE"
										},
										{
											"begin": 7689,
											"end": 7756,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 7689,
											"end": 7756,
											"name": "DUP2"
										},
										{
											"begin": 7689,
											"end": 7756,
											"name": "MSTORE"
										},
										{
											"begin": 7689,
											"end": 7756,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7689,
											"end": 7756,
											"name": "ADD"
										},
										{
											"begin": 7689,
											"end": 7756,
											"name": "DUP1"
										},
										{
											"begin": 7689,
											"end": 7756,
											"name": "PUSH",
											"value": "4461692F696E76616C69642D7065726D69740000000000000000000000000000"
										},
										{
											"begin": 7689,
											"end": 7756,
											"name": "DUP2"
										},
										{
											"begin": 7689,
											"end": 7756,
											"name": "MSTORE"
										},
										{
											"begin": 7689,
											"end": 7756,
											"name": "POP"
										},
										{
											"begin": 7689,
											"end": 7756,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7689,
											"end": 7756,
											"name": "ADD"
										},
										{
											"begin": 7689,
											"end": 7756,
											"name": "SWAP2"
										},
										{
											"begin": 7689,
											"end": 7756,
											"name": "POP"
										},
										{
											"begin": 7689,
											"end": 7756,
											"name": "POP"
										},
										{
											"begin": 7689,
											"end": 7756,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7689,
											"end": 7756,
											"name": "MLOAD"
										},
										{
											"begin": 7689,
											"end": 7756,
											"name": "DUP1"
										},
										{
											"begin": 7689,
											"end": 7756,
											"name": "SWAP2"
										},
										{
											"begin": 7689,
											"end": 7756,
											"name": "SUB"
										},
										{
											"begin": 7689,
											"end": 7756,
											"name": "SWAP1"
										},
										{
											"begin": 7689,
											"end": 7756,
											"name": "REVERT"
										},
										{
											"begin": 7689,
											"end": 7756,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 7689,
											"end": 7756,
											"name": "JUMPDEST"
										},
										{
											"begin": 7785,
											"end": 7786,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7775,
											"end": 7781,
											"name": "DUP7"
										},
										{
											"begin": 7775,
											"end": 7786,
											"name": "EQ"
										},
										{
											"begin": 7775,
											"end": 7803,
											"name": "DUP1"
										},
										{
											"begin": 7775,
											"end": 7803,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 7775,
											"end": 7803,
											"name": "JUMPI"
										},
										{
											"begin": 7775,
											"end": 7803,
											"name": "POP"
										},
										{
											"begin": 7797,
											"end": 7803,
											"name": "DUP6"
										},
										{
											"begin": 7790,
											"end": 7793,
											"name": "TIMESTAMP"
										},
										{
											"begin": 7790,
											"end": 7803,
											"name": "GT"
										},
										{
											"begin": 7790,
											"end": 7803,
											"name": "ISZERO"
										},
										{
											"begin": 7775,
											"end": 7803,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 7775,
											"end": 7803,
											"name": "JUMPDEST"
										},
										{
											"begin": 7767,
											"end": 7826,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 7767,
											"end": 7826,
											"name": "JUMPI"
										},
										{
											"begin": 7767,
											"end": 7826,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7767,
											"end": 7826,
											"name": "MLOAD"
										},
										{
											"begin": 7767,
											"end": 7826,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7767,
											"end": 7826,
											"name": "DUP2"
										},
										{
											"begin": 7767,
											"end": 7826,
											"name": "MSTORE"
										},
										{
											"begin": 7767,
											"end": 7826,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7767,
											"end": 7826,
											"name": "ADD"
										},
										{
											"begin": 7767,
											"end": 7826,
											"name": "DUP1"
										},
										{
											"begin": 7767,
											"end": 7826,
											"name": "DUP1"
										},
										{
											"begin": 7767,
											"end": 7826,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7767,
											"end": 7826,
											"name": "ADD"
										},
										{
											"begin": 7767,
											"end": 7826,
											"name": "DUP3"
										},
										{
											"begin": 7767,
											"end": 7826,
											"name": "DUP2"
										},
										{
											"begin": 7767,
											"end": 7826,
											"name": "SUB"
										},
										{
											"begin": 7767,
											"end": 7826,
											"name": "DUP3"
										},
										{
											"begin": 7767,
											"end": 7826,
											"name": "MSTORE"
										},
										{
											"begin": 7767,
											"end": 7826,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 7767,
											"end": 7826,
											"name": "DUP2"
										},
										{
											"begin": 7767,
											"end": 7826,
											"name": "MSTORE"
										},
										{
											"begin": 7767,
											"end": 7826,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7767,
											"end": 7826,
											"name": "ADD"
										},
										{
											"begin": 7767,
											"end": 7826,
											"name": "DUP1"
										},
										{
											"begin": 7767,
											"end": 7826,
											"name": "PUSH",
											"value": "4461692F7065726D69742D657870697265640000000000000000000000000000"
										},
										{
											"begin": 7767,
											"end": 7826,
											"name": "DUP2"
										},
										{
											"begin": 7767,
											"end": 7826,
											"name": "MSTORE"
										},
										{
											"begin": 7767,
											"end": 7826,
											"name": "POP"
										},
										{
											"begin": 7767,
											"end": 7826,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7767,
											"end": 7826,
											"name": "ADD"
										},
										{
											"begin": 7767,
											"end": 7826,
											"name": "SWAP2"
										},
										{
											"begin": 7767,
											"end": 7826,
											"name": "POP"
										},
										{
											"begin": 7767,
											"end": 7826,
											"name": "POP"
										},
										{
											"begin": 7767,
											"end": 7826,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7767,
											"end": 7826,
											"name": "MLOAD"
										},
										{
											"begin": 7767,
											"end": 7826,
											"name": "DUP1"
										},
										{
											"begin": 7767,
											"end": 7826,
											"name": "SWAP2"
										},
										{
											"begin": 7767,
											"end": 7826,
											"name": "SUB"
										},
										{
											"begin": 7767,
											"end": 7826,
											"name": "SWAP1"
										},
										{
											"begin": 7767,
											"end": 7826,
											"name": "REVERT"
										},
										{
											"begin": 7767,
											"end": 7826,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 7767,
											"end": 7826,
											"name": "JUMPDEST"
										},
										{
											"begin": 7854,
											"end": 7860,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7854,
											"end": 7868,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7861,
											"end": 7867,
											"name": "DUP11"
										},
										{
											"begin": 7854,
											"end": 7868,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7854,
											"end": 7868,
											"name": "AND"
										},
										{
											"begin": 7854,
											"end": 7868,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7854,
											"end": 7868,
											"name": "AND"
										},
										{
											"begin": 7854,
											"end": 7868,
											"name": "DUP2"
										},
										{
											"begin": 7854,
											"end": 7868,
											"name": "MSTORE"
										},
										{
											"begin": 7854,
											"end": 7868,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7854,
											"end": 7868,
											"name": "ADD"
										},
										{
											"begin": 7854,
											"end": 7868,
											"name": "SWAP1"
										},
										{
											"begin": 7854,
											"end": 7868,
											"name": "DUP2"
										},
										{
											"begin": 7854,
											"end": 7868,
											"name": "MSTORE"
										},
										{
											"begin": 7854,
											"end": 7868,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7854,
											"end": 7868,
											"name": "ADD"
										},
										{
											"begin": 7854,
											"end": 7868,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7854,
											"end": 7868,
											"name": "KECCAK256"
										},
										{
											"begin": 7854,
											"end": 7868,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7854,
											"end": 7870,
											"name": "DUP2"
										},
										{
											"begin": 7854,
											"end": 7870,
											"name": "SLOAD"
										},
										{
											"begin": 7854,
											"end": 7870,
											"name": "DUP1"
										},
										{
											"begin": 7854,
											"end": 7870,
											"name": "SWAP3"
										},
										{
											"begin": 7854,
											"end": 7870,
											"name": "SWAP2"
										},
										{
											"begin": 7854,
											"end": 7870,
											"name": "SWAP1"
										},
										{
											"begin": 7854,
											"end": 7870,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7854,
											"end": 7870,
											"name": "ADD"
										},
										{
											"begin": 7854,
											"end": 7870,
											"name": "SWAP2"
										},
										{
											"begin": 7854,
											"end": 7870,
											"name": "SWAP1"
										},
										{
											"begin": 7854,
											"end": 7870,
											"name": "POP"
										},
										{
											"begin": 7854,
											"end": 7870,
											"name": "SSTORE"
										},
										{
											"begin": 7845,
											"end": 7850,
											"name": "DUP8"
										},
										{
											"begin": 7845,
											"end": 7870,
											"name": "EQ"
										},
										{
											"begin": 7837,
											"end": 7892,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 7837,
											"end": 7892,
											"name": "JUMPI"
										},
										{
											"begin": 7837,
											"end": 7892,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7837,
											"end": 7892,
											"name": "MLOAD"
										},
										{
											"begin": 7837,
											"end": 7892,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7837,
											"end": 7892,
											"name": "DUP2"
										},
										{
											"begin": 7837,
											"end": 7892,
											"name": "MSTORE"
										},
										{
											"begin": 7837,
											"end": 7892,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7837,
											"end": 7892,
											"name": "ADD"
										},
										{
											"begin": 7837,
											"end": 7892,
											"name": "DUP1"
										},
										{
											"begin": 7837,
											"end": 7892,
											"name": "DUP1"
										},
										{
											"begin": 7837,
											"end": 7892,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7837,
											"end": 7892,
											"name": "ADD"
										},
										{
											"begin": 7837,
											"end": 7892,
											"name": "DUP3"
										},
										{
											"begin": 7837,
											"end": 7892,
											"name": "DUP2"
										},
										{
											"begin": 7837,
											"end": 7892,
											"name": "SUB"
										},
										{
											"begin": 7837,
											"end": 7892,
											"name": "DUP3"
										},
										{
											"begin": 7837,
											"end": 7892,
											"name": "MSTORE"
										},
										{
											"begin": 7837,
											"end": 7892,
											"name": "PUSH",
											"value": "11"
										},
										{
											"begin": 7837,
											"end": 7892,
											"name": "DUP2"
										},
										{
											"begin": 7837,
											"end": 7892,
											"name": "MSTORE"
										},
										{
											"begin": 7837,
											"end": 7892,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7837,
											"end": 7892,
											"name": "ADD"
										},
										{
											"begin": 7837,
											"end": 7892,
											"name": "DUP1"
										},
										{
											"begin": 7837,
											"end": 7892,
											"name": "PUSH",
											"value": "4461692F696E76616C69642D6E6F6E6365000000000000000000000000000000"
										},
										{
											"begin": 7837,
											"end": 7892,
											"name": "DUP2"
										},
										{
											"begin": 7837,
											"end": 7892,
											"name": "MSTORE"
										},
										{
											"begin": 7837,
											"end": 7892,
											"name": "POP"
										},
										{
											"begin": 7837,
											"end": 7892,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7837,
											"end": 7892,
											"name": "ADD"
										},
										{
											"begin": 7837,
											"end": 7892,
											"name": "SWAP2"
										},
										{
											"begin": 7837,
											"end": 7892,
											"name": "POP"
										},
										{
											"begin": 7837,
											"end": 7892,
											"name": "POP"
										},
										{
											"begin": 7837,
											"end": 7892,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7837,
											"end": 7892,
											"name": "MLOAD"
										},
										{
											"begin": 7837,
											"end": 7892,
											"name": "DUP1"
										},
										{
											"begin": 7837,
											"end": 7892,
											"name": "SWAP2"
										},
										{
											"begin": 7837,
											"end": 7892,
											"name": "SUB"
										},
										{
											"begin": 7837,
											"end": 7892,
											"name": "SWAP1"
										},
										{
											"begin": 7837,
											"end": 7892,
											"name": "REVERT"
										},
										{
											"begin": 7837,
											"end": 7892,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 7837,
											"end": 7892,
											"name": "JUMPDEST"
										},
										{
											"begin": 7903,
											"end": 7911,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7914,
											"end": 7921,
											"name": "DUP6"
										},
										{
											"begin": 7914,
											"end": 7936,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 7914,
											"end": 7936,
											"name": "JUMPI"
										},
										{
											"begin": 7935,
											"end": 7936,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7914,
											"end": 7936,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 7914,
											"end": 7936,
											"name": "JUMP"
										},
										{
											"begin": 7914,
											"end": 7936,
											"name": "tag",
											"value": "126"
										},
										{
											"begin": 7914,
											"end": 7936,
											"name": "JUMPDEST"
										},
										{
											"begin": 7929,
											"end": 7931,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7914,
											"end": 7936,
											"name": "tag",
											"value": "127"
										},
										{
											"begin": 7914,
											"end": 7936,
											"name": "JUMPDEST"
										},
										{
											"begin": 7903,
											"end": 7936,
											"name": "SWAP1"
										},
										{
											"begin": 7903,
											"end": 7936,
											"name": "POP"
										},
										{
											"begin": 7976,
											"end": 7979,
											"name": "DUP1"
										},
										{
											"begin": 7947,
											"end": 7956,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 7947,
											"end": 7964,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7957,
											"end": 7963,
											"name": "DUP13"
										},
										{
											"begin": 7947,
											"end": 7964,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7947,
											"end": 7964,
											"name": "AND"
										},
										{
											"begin": 7947,
											"end": 7964,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7947,
											"end": 7964,
											"name": "AND"
										},
										{
											"begin": 7947,
											"end": 7964,
											"name": "DUP2"
										},
										{
											"begin": 7947,
											"end": 7964,
											"name": "MSTORE"
										},
										{
											"begin": 7947,
											"end": 7964,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7947,
											"end": 7964,
											"name": "ADD"
										},
										{
											"begin": 7947,
											"end": 7964,
											"name": "SWAP1"
										},
										{
											"begin": 7947,
											"end": 7964,
											"name": "DUP2"
										},
										{
											"begin": 7947,
											"end": 7964,
											"name": "MSTORE"
										},
										{
											"begin": 7947,
											"end": 7964,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7947,
											"end": 7964,
											"name": "ADD"
										},
										{
											"begin": 7947,
											"end": 7964,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7947,
											"end": 7964,
											"name": "KECCAK256"
										},
										{
											"begin": 7947,
											"end": 7973,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7965,
											"end": 7972,
											"name": "DUP12"
										},
										{
											"begin": 7947,
											"end": 7973,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7947,
											"end": 7973,
											"name": "AND"
										},
										{
											"begin": 7947,
											"end": 7973,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7947,
											"end": 7973,
											"name": "AND"
										},
										{
											"begin": 7947,
											"end": 7973,
											"name": "DUP2"
										},
										{
											"begin": 7947,
											"end": 7973,
											"name": "MSTORE"
										},
										{
											"begin": 7947,
											"end": 7973,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7947,
											"end": 7973,
											"name": "ADD"
										},
										{
											"begin": 7947,
											"end": 7973,
											"name": "SWAP1"
										},
										{
											"begin": 7947,
											"end": 7973,
											"name": "DUP2"
										},
										{
											"begin": 7947,
											"end": 7973,
											"name": "MSTORE"
										},
										{
											"begin": 7947,
											"end": 7973,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7947,
											"end": 7973,
											"name": "ADD"
										},
										{
											"begin": 7947,
											"end": 7973,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7947,
											"end": 7973,
											"name": "KECCAK256"
										},
										{
											"begin": 7947,
											"end": 7979,
											"name": "DUP2"
										},
										{
											"begin": 7947,
											"end": 7979,
											"name": "SWAP1"
										},
										{
											"begin": 7947,
											"end": 7979,
											"name": "SSTORE"
										},
										{
											"begin": 7947,
											"end": 7979,
											"name": "POP"
										},
										{
											"begin": 8012,
											"end": 8019,
											"name": "DUP9"
										},
										{
											"begin": 7995,
											"end": 8025,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7995,
											"end": 8025,
											"name": "AND"
										},
										{
											"begin": 8004,
											"end": 8010,
											"name": "DUP11"
										},
										{
											"begin": 7995,
											"end": 8025,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7995,
											"end": 8025,
											"name": "AND"
										},
										{
											"begin": 7995,
											"end": 8025,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 8021,
											"end": 8024,
											"name": "DUP4"
										},
										{
											"begin": 7995,
											"end": 8025,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7995,
											"end": 8025,
											"name": "MLOAD"
										},
										{
											"begin": 7995,
											"end": 8025,
											"name": "DUP1"
										},
										{
											"begin": 7995,
											"end": 8025,
											"name": "DUP3"
										},
										{
											"begin": 7995,
											"end": 8025,
											"name": "DUP2"
										},
										{
											"begin": 7995,
											"end": 8025,
											"name": "MSTORE"
										},
										{
											"begin": 7995,
											"end": 8025,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7995,
											"end": 8025,
											"name": "ADD"
										},
										{
											"begin": 7995,
											"end": 8025,
											"name": "SWAP2"
										},
										{
											"begin": 7995,
											"end": 8025,
											"name": "POP"
										},
										{
											"begin": 7995,
											"end": 8025,
											"name": "POP"
										},
										{
											"begin": 7995,
											"end": 8025,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7995,
											"end": 8025,
											"name": "MLOAD"
										},
										{
											"begin": 7995,
											"end": 8025,
											"name": "DUP1"
										},
										{
											"begin": 7995,
											"end": 8025,
											"name": "SWAP2"
										},
										{
											"begin": 7995,
											"end": 8025,
											"name": "SUB"
										},
										{
											"begin": 7995,
											"end": 8025,
											"name": "SWAP1"
										},
										{
											"begin": 7995,
											"end": 8025,
											"name": "LOG3"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "POP"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "POP"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "POP"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "POP"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "POP"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "POP"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "POP"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "POP"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "POP"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "POP"
										},
										{
											"begin": 7020,
											"end": 8033,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "JUMPDEST"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "MLOAD"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "DUP1"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "ADD"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "MSTORE"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "DUP1"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "DUP2"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "MSTORE"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "ADD"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "PUSH",
											"value": "4441490000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "DUP2"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "MSTORE"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "POP"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "DUP2"
										},
										{
											"begin": 3468,
											"end": 3508,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3206,
											"end": 3271,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 3206,
											"end": 3271,
											"name": "JUMPDEST"
										},
										{
											"begin": 3331,
											"end": 3332,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3310,
											"end": 3315,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3310,
											"end": 3327,
											"name": "DUP1"
										},
										{
											"begin": 3316,
											"end": 3326,
											"name": "CALLER"
										},
										{
											"begin": 3310,
											"end": 3327,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3310,
											"end": 3327,
											"name": "AND"
										},
										{
											"begin": 3310,
											"end": 3327,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3310,
											"end": 3327,
											"name": "AND"
										},
										{
											"begin": 3310,
											"end": 3327,
											"name": "DUP2"
										},
										{
											"begin": 3310,
											"end": 3327,
											"name": "MSTORE"
										},
										{
											"begin": 3310,
											"end": 3327,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3310,
											"end": 3327,
											"name": "ADD"
										},
										{
											"begin": 3310,
											"end": 3327,
											"name": "SWAP1"
										},
										{
											"begin": 3310,
											"end": 3327,
											"name": "DUP2"
										},
										{
											"begin": 3310,
											"end": 3327,
											"name": "MSTORE"
										},
										{
											"begin": 3310,
											"end": 3327,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3310,
											"end": 3327,
											"name": "ADD"
										},
										{
											"begin": 3310,
											"end": 3327,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3310,
											"end": 3327,
											"name": "KECCAK256"
										},
										{
											"begin": 3310,
											"end": 3327,
											"name": "SLOAD"
										},
										{
											"begin": 3310,
											"end": 3332,
											"name": "EQ"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "JUMPI"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "MLOAD"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "DUP2"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "MSTORE"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "ADD"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "DUP1"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "DUP1"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "ADD"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "DUP3"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "DUP2"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "SUB"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "DUP3"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "MSTORE"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "DUP2"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "MSTORE"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "ADD"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "DUP1"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "PUSH",
											"value": "4461692F6E6F742D617574686F72697A65640000000000000000000000000000"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "DUP2"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "MSTORE"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "POP"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "ADD"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "SWAP2"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "POP"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "POP"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "MLOAD"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "DUP1"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "SWAP2"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "SUB"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "SWAP1"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "REVERT"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "tag",
											"value": "130"
										},
										{
											"begin": 3302,
											"end": 3355,
											"name": "JUMPDEST"
										},
										{
											"begin": 3267,
											"end": 3268,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3254,
											"end": 3259,
											"name": "DUP1"
										},
										{
											"begin": 3254,
											"end": 3264,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3260,
											"end": 3263,
											"name": "DUP4"
										},
										{
											"begin": 3254,
											"end": 3264,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3254,
											"end": 3264,
											"name": "AND"
										},
										{
											"begin": 3254,
											"end": 3264,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3254,
											"end": 3264,
											"name": "AND"
										},
										{
											"begin": 3254,
											"end": 3264,
											"name": "DUP2"
										},
										{
											"begin": 3254,
											"end": 3264,
											"name": "MSTORE"
										},
										{
											"begin": 3254,
											"end": 3264,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3254,
											"end": 3264,
											"name": "ADD"
										},
										{
											"begin": 3254,
											"end": 3264,
											"name": "SWAP1"
										},
										{
											"begin": 3254,
											"end": 3264,
											"name": "DUP2"
										},
										{
											"begin": 3254,
											"end": 3264,
											"name": "MSTORE"
										},
										{
											"begin": 3254,
											"end": 3264,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3254,
											"end": 3264,
											"name": "ADD"
										},
										{
											"begin": 3254,
											"end": 3264,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3254,
											"end": 3264,
											"name": "KECCAK256"
										},
										{
											"begin": 3254,
											"end": 3268,
											"name": "DUP2"
										},
										{
											"begin": 3254,
											"end": 3268,
											"name": "SWAP1"
										},
										{
											"begin": 3254,
											"end": 3268,
											"name": "SSTORE"
										},
										{
											"begin": 3254,
											"end": 3268,
											"name": "POP"
										},
										{
											"begin": 1412,
											"end": 1417,
											"name": "MSIZE"
										},
										{
											"begin": 1508,
											"end": 1511,
											"name": "PUSH",
											"value": "120"
										},
										{
											"begin": 1502,
											"end": 1506,
											"name": "DUP2"
										},
										{
											"begin": 1498,
											"end": 1512,
											"name": "ADD"
										},
										{
											"begin": 1492,
											"end": 1496,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1485,
											"end": 1513,
											"name": "MSTORE"
										},
										{
											"begin": 1583,
											"end": 1587,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1577,
											"end": 1581,
											"name": "DUP2"
										},
										{
											"begin": 1570,
											"end": 1588,
											"name": "MSTORE"
										},
										{
											"begin": 1675,
											"end": 1678,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 1668,
											"end": 1672,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "DUP3"
										},
										{
											"begin": 1658,
											"end": 1673,
											"name": "ADD"
										},
										{
											"begin": 1651,
											"end": 1679,
											"name": "MSTORE"
										},
										{
											"begin": 1762,
											"end": 1765,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1752,
											"end": 1756,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1746,
											"end": 1750,
											"name": "DUP4"
										},
										{
											"begin": 1742,
											"end": 1757,
											"name": "ADD"
										},
										{
											"begin": 1729,
											"end": 1766,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 2084,
											"end": 2086,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 2071,
											"end": 2087,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2021,
											"end": 2022,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2008,
											"end": 2023,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1939,
											"end": 1945,
											"name": "CALLER"
										},
										{
											"begin": 1904,
											"end": 1905,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1891,
											"end": 1906,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1886,
											"end": 1889,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 1882,
											"end": 1907,
											"name": "SHR"
										},
										{
											"begin": 1877,
											"end": 1880,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 1873,
											"end": 1908,
											"name": "SHL"
										},
										{
											"begin": 1812,
											"end": 1815,
											"name": "PUSH",
											"value": "120"
										},
										{
											"begin": 1806,
											"end": 1810,
											"name": "DUP6"
										},
										{
											"begin": 1801,
											"end": 2134,
											"name": "LOG4"
										},
										{
											"begin": 1235,
											"end": 2145,
											"name": "POP"
										},
										{
											"begin": 1235,
											"end": 2145,
											"name": "POP"
										},
										{
											"begin": 1235,
											"end": 2145,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5917,
											"end": 6441,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 5917,
											"end": 6441,
											"name": "JUMPDEST"
										},
										{
											"begin": 6000,
											"end": 6003,
											"name": "DUP1"
										},
										{
											"begin": 5982,
											"end": 5991,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5982,
											"end": 5996,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5992,
											"end": 5995,
											"name": "DUP5"
										},
										{
											"begin": 5982,
											"end": 5996,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5982,
											"end": 5996,
											"name": "AND"
										},
										{
											"begin": 5982,
											"end": 5996,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5982,
											"end": 5996,
											"name": "AND"
										},
										{
											"begin": 5982,
											"end": 5996,
											"name": "DUP2"
										},
										{
											"begin": 5982,
											"end": 5996,
											"name": "MSTORE"
										},
										{
											"begin": 5982,
											"end": 5996,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5982,
											"end": 5996,
											"name": "ADD"
										},
										{
											"begin": 5982,
											"end": 5996,
											"name": "SWAP1"
										},
										{
											"begin": 5982,
											"end": 5996,
											"name": "DUP2"
										},
										{
											"begin": 5982,
											"end": 5996,
											"name": "MSTORE"
										},
										{
											"begin": 5982,
											"end": 5996,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5982,
											"end": 5996,
											"name": "ADD"
										},
										{
											"begin": 5982,
											"end": 5996,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5982,
											"end": 5996,
											"name": "KECCAK256"
										},
										{
											"begin": 5982,
											"end": 5996,
											"name": "SLOAD"
										},
										{
											"begin": 5982,
											"end": 6003,
											"name": "LT"
										},
										{
											"begin": 5982,
											"end": 6003,
											"name": "ISZERO"
										},
										{
											"begin": 5974,
											"end": 6032,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 5974,
											"end": 6032,
											"name": "JUMPI"
										},
										{
											"begin": 5974,
											"end": 6032,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5974,
											"end": 6032,
											"name": "MLOAD"
										},
										{
											"begin": 5974,
											"end": 6032,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5974,
											"end": 6032,
											"name": "DUP2"
										},
										{
											"begin": 5974,
											"end": 6032,
											"name": "MSTORE"
										},
										{
											"begin": 5974,
											"end": 6032,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5974,
											"end": 6032,
											"name": "ADD"
										},
										{
											"begin": 5974,
											"end": 6032,
											"name": "DUP1"
										},
										{
											"begin": 5974,
											"end": 6032,
											"name": "DUP1"
										},
										{
											"begin": 5974,
											"end": 6032,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5974,
											"end": 6032,
											"name": "ADD"
										},
										{
											"begin": 5974,
											"end": 6032,
											"name": "DUP3"
										},
										{
											"begin": 5974,
											"end": 6032,
											"name": "DUP2"
										},
										{
											"begin": 5974,
											"end": 6032,
											"name": "SUB"
										},
										{
											"begin": 5974,
											"end": 6032,
											"name": "DUP3"
										},
										{
											"begin": 5974,
											"end": 6032,
											"name": "MSTORE"
										},
										{
											"begin": 5974,
											"end": 6032,
											"name": "PUSH",
											"value": "18"
										},
										{
											"begin": 5974,
											"end": 6032,
											"name": "DUP2"
										},
										{
											"begin": 5974,
											"end": 6032,
											"name": "MSTORE"
										},
										{
											"begin": 5974,
											"end": 6032,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5974,
											"end": 6032,
											"name": "ADD"
										},
										{
											"begin": 5974,
											"end": 6032,
											"name": "DUP1"
										},
										{
											"begin": 5974,
											"end": 6032,
											"name": "PUSH",
											"value": "4461692F696E73756666696369656E742D62616C616E63650000000000000000"
										},
										{
											"begin": 5974,
											"end": 6032,
											"name": "DUP2"
										},
										{
											"begin": 5974,
											"end": 6032,
											"name": "MSTORE"
										},
										{
											"begin": 5974,
											"end": 6032,
											"name": "POP"
										},
										{
											"begin": 5974,
											"end": 6032,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5974,
											"end": 6032,
											"name": "ADD"
										},
										{
											"begin": 5974,
											"end": 6032,
											"name": "SWAP2"
										},
										{
											"begin": 5974,
											"end": 6032,
											"name": "POP"
										},
										{
											"begin": 5974,
											"end": 6032,
											"name": "POP"
										},
										{
											"begin": 5974,
											"end": 6032,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5974,
											"end": 6032,
											"name": "MLOAD"
										},
										{
											"begin": 5974,
											"end": 6032,
											"name": "DUP1"
										},
										{
											"begin": 5974,
											"end": 6032,
											"name": "SWAP2"
										},
										{
											"begin": 5974,
											"end": 6032,
											"name": "SUB"
										},
										{
											"begin": 5974,
											"end": 6032,
											"name": "SWAP1"
										},
										{
											"begin": 5974,
											"end": 6032,
											"name": "REVERT"
										},
										{
											"begin": 5974,
											"end": 6032,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 5974,
											"end": 6032,
											"name": "JUMPDEST"
										},
										{
											"begin": 6054,
											"end": 6064,
											"name": "CALLER"
										},
										{
											"begin": 6047,
											"end": 6064,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6047,
											"end": 6064,
											"name": "AND"
										},
										{
											"begin": 6047,
											"end": 6050,
											"name": "DUP3"
										},
										{
											"begin": 6047,
											"end": 6064,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6047,
											"end": 6064,
											"name": "AND"
										},
										{
											"begin": 6047,
											"end": 6064,
											"name": "EQ"
										},
										{
											"begin": 6047,
											"end": 6064,
											"name": "ISZERO"
										},
										{
											"begin": 6047,
											"end": 6106,
											"name": "DUP1"
										},
										{
											"begin": 6047,
											"end": 6106,
											"name": "ISZERO"
										},
										{
											"begin": 6047,
											"end": 6106,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 6047,
											"end": 6106,
											"name": "JUMPI"
										},
										{
											"begin": 6047,
											"end": 6106,
											"name": "POP"
										},
										{
											"begin": 6103,
											"end": 6105,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6068,
											"end": 6077,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 6068,
											"end": 6082,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6078,
											"end": 6081,
											"name": "DUP5"
										},
										{
											"begin": 6068,
											"end": 6082,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6068,
											"end": 6082,
											"name": "AND"
										},
										{
											"begin": 6068,
											"end": 6082,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6068,
											"end": 6082,
											"name": "AND"
										},
										{
											"begin": 6068,
											"end": 6082,
											"name": "DUP2"
										},
										{
											"begin": 6068,
											"end": 6082,
											"name": "MSTORE"
										},
										{
											"begin": 6068,
											"end": 6082,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6068,
											"end": 6082,
											"name": "ADD"
										},
										{
											"begin": 6068,
											"end": 6082,
											"name": "SWAP1"
										},
										{
											"begin": 6068,
											"end": 6082,
											"name": "DUP2"
										},
										{
											"begin": 6068,
											"end": 6082,
											"name": "MSTORE"
										},
										{
											"begin": 6068,
											"end": 6082,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6068,
											"end": 6082,
											"name": "ADD"
										},
										{
											"begin": 6068,
											"end": 6082,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6068,
											"end": 6082,
											"name": "KECCAK256"
										},
										{
											"begin": 6068,
											"end": 6094,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6083,
											"end": 6093,
											"name": "CALLER"
										},
										{
											"begin": 6068,
											"end": 6094,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6068,
											"end": 6094,
											"name": "AND"
										},
										{
											"begin": 6068,
											"end": 6094,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6068,
											"end": 6094,
											"name": "AND"
										},
										{
											"begin": 6068,
											"end": 6094,
											"name": "DUP2"
										},
										{
											"begin": 6068,
											"end": 6094,
											"name": "MSTORE"
										},
										{
											"begin": 6068,
											"end": 6094,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6068,
											"end": 6094,
											"name": "ADD"
										},
										{
											"begin": 6068,
											"end": 6094,
											"name": "SWAP1"
										},
										{
											"begin": 6068,
											"end": 6094,
											"name": "DUP2"
										},
										{
											"begin": 6068,
											"end": 6094,
											"name": "MSTORE"
										},
										{
											"begin": 6068,
											"end": 6094,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6068,
											"end": 6094,
											"name": "ADD"
										},
										{
											"begin": 6068,
											"end": 6094,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6068,
											"end": 6094,
											"name": "KECCAK256"
										},
										{
											"begin": 6068,
											"end": 6094,
											"name": "SLOAD"
										},
										{
											"begin": 6068,
											"end": 6106,
											"name": "EQ"
										},
										{
											"begin": 6068,
											"end": 6106,
											"name": "ISZERO"
										},
										{
											"begin": 6047,
											"end": 6106,
											"name": "tag",
											"value": "134"
										},
										{
											"begin": 6047,
											"end": 6106,
											"name": "JUMPDEST"
										},
										{
											"begin": 6043,
											"end": 6287,
											"name": "ISZERO"
										},
										{
											"begin": 6043,
											"end": 6287,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 6043,
											"end": 6287,
											"name": "JUMPI"
										},
										{
											"begin": 6161,
											"end": 6164,
											"name": "DUP1"
										},
										{
											"begin": 6131,
											"end": 6140,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 6131,
											"end": 6145,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6141,
											"end": 6144,
											"name": "DUP5"
										},
										{
											"begin": 6131,
											"end": 6145,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6131,
											"end": 6145,
											"name": "AND"
										},
										{
											"begin": 6131,
											"end": 6145,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6131,
											"end": 6145,
											"name": "AND"
										},
										{
											"begin": 6131,
											"end": 6145,
											"name": "DUP2"
										},
										{
											"begin": 6131,
											"end": 6145,
											"name": "MSTORE"
										},
										{
											"begin": 6131,
											"end": 6145,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6131,
											"end": 6145,
											"name": "ADD"
										},
										{
											"begin": 6131,
											"end": 6145,
											"name": "SWAP1"
										},
										{
											"begin": 6131,
											"end": 6145,
											"name": "DUP2"
										},
										{
											"begin": 6131,
											"end": 6145,
											"name": "MSTORE"
										},
										{
											"begin": 6131,
											"end": 6145,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6131,
											"end": 6145,
											"name": "ADD"
										},
										{
											"begin": 6131,
											"end": 6145,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6131,
											"end": 6145,
											"name": "KECCAK256"
										},
										{
											"begin": 6131,
											"end": 6157,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6146,
											"end": 6156,
											"name": "CALLER"
										},
										{
											"begin": 6131,
											"end": 6157,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6131,
											"end": 6157,
											"name": "AND"
										},
										{
											"begin": 6131,
											"end": 6157,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6131,
											"end": 6157,
											"name": "AND"
										},
										{
											"begin": 6131,
											"end": 6157,
											"name": "DUP2"
										},
										{
											"begin": 6131,
											"end": 6157,
											"name": "MSTORE"
										},
										{
											"begin": 6131,
											"end": 6157,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6131,
											"end": 6157,
											"name": "ADD"
										},
										{
											"begin": 6131,
											"end": 6157,
											"name": "SWAP1"
										},
										{
											"begin": 6131,
											"end": 6157,
											"name": "DUP2"
										},
										{
											"begin": 6131,
											"end": 6157,
											"name": "MSTORE"
										},
										{
											"begin": 6131,
											"end": 6157,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6131,
											"end": 6157,
											"name": "ADD"
										},
										{
											"begin": 6131,
											"end": 6157,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6131,
											"end": 6157,
											"name": "KECCAK256"
										},
										{
											"begin": 6131,
											"end": 6157,
											"name": "SLOAD"
										},
										{
											"begin": 6131,
											"end": 6164,
											"name": "LT"
										},
										{
											"begin": 6131,
											"end": 6164,
											"name": "ISZERO"
										},
										{
											"begin": 6123,
											"end": 6195,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 6123,
											"end": 6195,
											"name": "JUMPI"
										},
										{
											"begin": 6123,
											"end": 6195,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6123,
											"end": 6195,
											"name": "MLOAD"
										},
										{
											"begin": 6123,
											"end": 6195,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6123,
											"end": 6195,
											"name": "DUP2"
										},
										{
											"begin": 6123,
											"end": 6195,
											"name": "MSTORE"
										},
										{
											"begin": 6123,
											"end": 6195,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6123,
											"end": 6195,
											"name": "ADD"
										},
										{
											"begin": 6123,
											"end": 6195,
											"name": "DUP1"
										},
										{
											"begin": 6123,
											"end": 6195,
											"name": "DUP1"
										},
										{
											"begin": 6123,
											"end": 6195,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6123,
											"end": 6195,
											"name": "ADD"
										},
										{
											"begin": 6123,
											"end": 6195,
											"name": "DUP3"
										},
										{
											"begin": 6123,
											"end": 6195,
											"name": "DUP2"
										},
										{
											"begin": 6123,
											"end": 6195,
											"name": "SUB"
										},
										{
											"begin": 6123,
											"end": 6195,
											"name": "DUP3"
										},
										{
											"begin": 6123,
											"end": 6195,
											"name": "MSTORE"
										},
										{
											"begin": 6123,
											"end": 6195,
											"name": "PUSH",
											"value": "1A"
										},
										{
											"begin": 6123,
											"end": 6195,
											"name": "DUP2"
										},
										{
											"begin": 6123,
											"end": 6195,
											"name": "MSTORE"
										},
										{
											"begin": 6123,
											"end": 6195,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6123,
											"end": 6195,
											"name": "ADD"
										},
										{
											"begin": 6123,
											"end": 6195,
											"name": "DUP1"
										},
										{
											"begin": 6123,
											"end": 6195,
											"name": "PUSH",
											"value": "4461692F696E73756666696369656E742D616C6C6F77616E6365000000000000"
										},
										{
											"begin": 6123,
											"end": 6195,
											"name": "DUP2"
										},
										{
											"begin": 6123,
											"end": 6195,
											"name": "MSTORE"
										},
										{
											"begin": 6123,
											"end": 6195,
											"name": "POP"
										},
										{
											"begin": 6123,
											"end": 6195,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6123,
											"end": 6195,
											"name": "ADD"
										},
										{
											"begin": 6123,
											"end": 6195,
											"name": "SWAP2"
										},
										{
											"begin": 6123,
											"end": 6195,
											"name": "POP"
										},
										{
											"begin": 6123,
											"end": 6195,
											"name": "POP"
										},
										{
											"begin": 6123,
											"end": 6195,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6123,
											"end": 6195,
											"name": "MLOAD"
										},
										{
											"begin": 6123,
											"end": 6195,
											"name": "DUP1"
										},
										{
											"begin": 6123,
											"end": 6195,
											"name": "SWAP2"
										},
										{
											"begin": 6123,
											"end": 6195,
											"name": "SUB"
										},
										{
											"begin": 6123,
											"end": 6195,
											"name": "SWAP1"
										},
										{
											"begin": 6123,
											"end": 6195,
											"name": "REVERT"
										},
										{
											"begin": 6123,
											"end": 6195,
											"name": "tag",
											"value": "136"
										},
										{
											"begin": 6123,
											"end": 6195,
											"name": "JUMPDEST"
										},
										{
											"begin": 6239,
											"end": 6275,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 6243,
											"end": 6252,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 6243,
											"end": 6257,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6253,
											"end": 6256,
											"name": "DUP5"
										},
										{
											"begin": 6243,
											"end": 6257,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6243,
											"end": 6257,
											"name": "AND"
										},
										{
											"begin": 6243,
											"end": 6257,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6243,
											"end": 6257,
											"name": "AND"
										},
										{
											"begin": 6243,
											"end": 6257,
											"name": "DUP2"
										},
										{
											"begin": 6243,
											"end": 6257,
											"name": "MSTORE"
										},
										{
											"begin": 6243,
											"end": 6257,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6243,
											"end": 6257,
											"name": "ADD"
										},
										{
											"begin": 6243,
											"end": 6257,
											"name": "SWAP1"
										},
										{
											"begin": 6243,
											"end": 6257,
											"name": "DUP2"
										},
										{
											"begin": 6243,
											"end": 6257,
											"name": "MSTORE"
										},
										{
											"begin": 6243,
											"end": 6257,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6243,
											"end": 6257,
											"name": "ADD"
										},
										{
											"begin": 6243,
											"end": 6257,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6243,
											"end": 6257,
											"name": "KECCAK256"
										},
										{
											"begin": 6243,
											"end": 6269,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6258,
											"end": 6268,
											"name": "CALLER"
										},
										{
											"begin": 6243,
											"end": 6269,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6243,
											"end": 6269,
											"name": "AND"
										},
										{
											"begin": 6243,
											"end": 6269,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6243,
											"end": 6269,
											"name": "AND"
										},
										{
											"begin": 6243,
											"end": 6269,
											"name": "DUP2"
										},
										{
											"begin": 6243,
											"end": 6269,
											"name": "MSTORE"
										},
										{
											"begin": 6243,
											"end": 6269,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6243,
											"end": 6269,
											"name": "ADD"
										},
										{
											"begin": 6243,
											"end": 6269,
											"name": "SWAP1"
										},
										{
											"begin": 6243,
											"end": 6269,
											"name": "DUP2"
										},
										{
											"begin": 6243,
											"end": 6269,
											"name": "MSTORE"
										},
										{
											"begin": 6243,
											"end": 6269,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6243,
											"end": 6269,
											"name": "ADD"
										},
										{
											"begin": 6243,
											"end": 6269,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6243,
											"end": 6269,
											"name": "KECCAK256"
										},
										{
											"begin": 6243,
											"end": 6269,
											"name": "SLOAD"
										},
										{
											"begin": 6271,
											"end": 6274,
											"name": "DUP3"
										},
										{
											"begin": 6239,
											"end": 6242,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 6239,
											"end": 6275,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6239,
											"end": 6275,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 6239,
											"end": 6275,
											"name": "JUMPDEST"
										},
										{
											"begin": 6210,
											"end": 6219,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 6210,
											"end": 6224,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6220,
											"end": 6223,
											"name": "DUP5"
										},
										{
											"begin": 6210,
											"end": 6224,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6210,
											"end": 6224,
											"name": "AND"
										},
										{
											"begin": 6210,
											"end": 6224,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6210,
											"end": 6224,
											"name": "AND"
										},
										{
											"begin": 6210,
											"end": 6224,
											"name": "DUP2"
										},
										{
											"begin": 6210,
											"end": 6224,
											"name": "MSTORE"
										},
										{
											"begin": 6210,
											"end": 6224,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6210,
											"end": 6224,
											"name": "ADD"
										},
										{
											"begin": 6210,
											"end": 6224,
											"name": "SWAP1"
										},
										{
											"begin": 6210,
											"end": 6224,
											"name": "DUP2"
										},
										{
											"begin": 6210,
											"end": 6224,
											"name": "MSTORE"
										},
										{
											"begin": 6210,
											"end": 6224,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6210,
											"end": 6224,
											"name": "ADD"
										},
										{
											"begin": 6210,
											"end": 6224,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6210,
											"end": 6224,
											"name": "KECCAK256"
										},
										{
											"begin": 6210,
											"end": 6236,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6225,
											"end": 6235,
											"name": "CALLER"
										},
										{
											"begin": 6210,
											"end": 6236,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6210,
											"end": 6236,
											"name": "AND"
										},
										{
											"begin": 6210,
											"end": 6236,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6210,
											"end": 6236,
											"name": "AND"
										},
										{
											"begin": 6210,
											"end": 6236,
											"name": "DUP2"
										},
										{
											"begin": 6210,
											"end": 6236,
											"name": "MSTORE"
										},
										{
											"begin": 6210,
											"end": 6236,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6210,
											"end": 6236,
											"name": "ADD"
										},
										{
											"begin": 6210,
											"end": 6236,
											"name": "SWAP1"
										},
										{
											"begin": 6210,
											"end": 6236,
											"name": "DUP2"
										},
										{
											"begin": 6210,
											"end": 6236,
											"name": "MSTORE"
										},
										{
											"begin": 6210,
											"end": 6236,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6210,
											"end": 6236,
											"name": "ADD"
										},
										{
											"begin": 6210,
											"end": 6236,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6210,
											"end": 6236,
											"name": "KECCAK256"
										},
										{
											"begin": 6210,
											"end": 6275,
											"name": "DUP2"
										},
										{
											"begin": 6210,
											"end": 6275,
											"name": "SWAP1"
										},
										{
											"begin": 6210,
											"end": 6275,
											"name": "SSTORE"
										},
										{
											"begin": 6210,
											"end": 6275,
											"name": "POP"
										},
										{
											"begin": 6043,
											"end": 6287,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 6043,
											"end": 6287,
											"name": "JUMPDEST"
										},
										{
											"begin": 6314,
											"end": 6338,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 6318,
											"end": 6327,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 6318,
											"end": 6332,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6328,
											"end": 6331,
											"name": "DUP5"
										},
										{
											"begin": 6318,
											"end": 6332,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6318,
											"end": 6332,
											"name": "AND"
										},
										{
											"begin": 6318,
											"end": 6332,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6318,
											"end": 6332,
											"name": "AND"
										},
										{
											"begin": 6318,
											"end": 6332,
											"name": "DUP2"
										},
										{
											"begin": 6318,
											"end": 6332,
											"name": "MSTORE"
										},
										{
											"begin": 6318,
											"end": 6332,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6318,
											"end": 6332,
											"name": "ADD"
										},
										{
											"begin": 6318,
											"end": 6332,
											"name": "SWAP1"
										},
										{
											"begin": 6318,
											"end": 6332,
											"name": "DUP2"
										},
										{
											"begin": 6318,
											"end": 6332,
											"name": "MSTORE"
										},
										{
											"begin": 6318,
											"end": 6332,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6318,
											"end": 6332,
											"name": "ADD"
										},
										{
											"begin": 6318,
											"end": 6332,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6318,
											"end": 6332,
											"name": "KECCAK256"
										},
										{
											"begin": 6318,
											"end": 6332,
											"name": "SLOAD"
										},
										{
											"begin": 6334,
											"end": 6337,
											"name": "DUP3"
										},
										{
											"begin": 6314,
											"end": 6317,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 6314,
											"end": 6338,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6314,
											"end": 6338,
											"name": "tag",
											"value": "138"
										},
										{
											"begin": 6314,
											"end": 6338,
											"name": "JUMPDEST"
										},
										{
											"begin": 6297,
											"end": 6306,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 6297,
											"end": 6311,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6310,
											"name": "DUP5"
										},
										{
											"begin": 6297,
											"end": 6311,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6297,
											"end": 6311,
											"name": "AND"
										},
										{
											"begin": 6297,
											"end": 6311,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6297,
											"end": 6311,
											"name": "AND"
										},
										{
											"begin": 6297,
											"end": 6311,
											"name": "DUP2"
										},
										{
											"begin": 6297,
											"end": 6311,
											"name": "MSTORE"
										},
										{
											"begin": 6297,
											"end": 6311,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6297,
											"end": 6311,
											"name": "ADD"
										},
										{
											"begin": 6297,
											"end": 6311,
											"name": "SWAP1"
										},
										{
											"begin": 6297,
											"end": 6311,
											"name": "DUP2"
										},
										{
											"begin": 6297,
											"end": 6311,
											"name": "MSTORE"
										},
										{
											"begin": 6297,
											"end": 6311,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6297,
											"end": 6311,
											"name": "ADD"
										},
										{
											"begin": 6297,
											"end": 6311,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6297,
											"end": 6311,
											"name": "KECCAK256"
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "DUP2"
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "SWAP1"
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "SSTORE"
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "POP"
										},
										{
											"begin": 6366,
											"end": 6387,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 6370,
											"end": 6381,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6370,
											"end": 6381,
											"name": "SLOAD"
										},
										{
											"begin": 6383,
											"end": 6386,
											"name": "DUP3"
										},
										{
											"begin": 6366,
											"end": 6369,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 6366,
											"end": 6387,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6366,
											"end": 6387,
											"name": "tag",
											"value": "139"
										},
										{
											"begin": 6366,
											"end": 6387,
											"name": "JUMPDEST"
										},
										{
											"begin": 6349,
											"end": 6360,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6349,
											"end": 6387,
											"name": "DUP2"
										},
										{
											"begin": 6349,
											"end": 6387,
											"name": "SWAP1"
										},
										{
											"begin": 6349,
											"end": 6387,
											"name": "SSTORE"
										},
										{
											"begin": 6349,
											"end": 6387,
											"name": "POP"
										},
										{
											"begin": 6425,
											"end": 6426,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6403,
											"end": 6433,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6403,
											"end": 6433,
											"name": "AND"
										},
										{
											"begin": 6412,
											"end": 6415,
											"name": "DUP3"
										},
										{
											"begin": 6403,
											"end": 6433,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6403,
											"end": 6433,
											"name": "AND"
										},
										{
											"begin": 6403,
											"end": 6433,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 6429,
											"end": 6432,
											"name": "DUP4"
										},
										{
											"begin": 6403,
											"end": 6433,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6403,
											"end": 6433,
											"name": "MLOAD"
										},
										{
											"begin": 6403,
											"end": 6433,
											"name": "DUP1"
										},
										{
											"begin": 6403,
											"end": 6433,
											"name": "DUP3"
										},
										{
											"begin": 6403,
											"end": 6433,
											"name": "DUP2"
										},
										{
											"begin": 6403,
											"end": 6433,
											"name": "MSTORE"
										},
										{
											"begin": 6403,
											"end": 6433,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6403,
											"end": 6433,
											"name": "ADD"
										},
										{
											"begin": 6403,
											"end": 6433,
											"name": "SWAP2"
										},
										{
											"begin": 6403,
											"end": 6433,
											"name": "POP"
										},
										{
											"begin": 6403,
											"end": 6433,
											"name": "POP"
										},
										{
											"begin": 6403,
											"end": 6433,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6403,
											"end": 6433,
											"name": "MLOAD"
										},
										{
											"begin": 6403,
											"end": 6433,
											"name": "DUP1"
										},
										{
											"begin": 6403,
											"end": 6433,
											"name": "SWAP2"
										},
										{
											"begin": 6403,
											"end": 6433,
											"name": "SUB"
										},
										{
											"begin": 6403,
											"end": 6433,
											"name": "SWAP1"
										},
										{
											"begin": 6403,
											"end": 6433,
											"name": "LOG3"
										},
										{
											"begin": 5917,
											"end": 6441,
											"name": "POP"
										},
										{
											"begin": 5917,
											"end": 6441,
											"name": "POP"
										},
										{
											"begin": 5917,
											"end": 6441,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "JUMPDEST"
										},
										{
											"begin": 5037,
											"end": 5041,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5061,
											"end": 5095,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 5074,
											"end": 5084,
											"name": "CALLER"
										},
										{
											"begin": 5086,
											"end": 5089,
											"name": "DUP5"
										},
										{
											"begin": 5091,
											"end": 5094,
											"name": "DUP5"
										},
										{
											"begin": 5061,
											"end": 5073,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 5061,
											"end": 5095,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5061,
											"end": 5095,
											"name": "tag",
											"value": "141"
										},
										{
											"begin": 5061,
											"end": 5095,
											"name": "JUMPDEST"
										},
										{
											"begin": 5054,
											"end": 5095,
											"name": "SWAP1"
										},
										{
											"begin": 5054,
											"end": 5095,
											"name": "POP"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "SWAP3"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "SWAP2"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "POP"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "POP"
										},
										{
											"begin": 4978,
											"end": 5103,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6660,
											"end": 6759,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 6660,
											"end": 6759,
											"name": "JUMPDEST"
										},
										{
											"begin": 6717,
											"end": 6751,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 6730,
											"end": 6740,
											"name": "CALLER"
										},
										{
											"begin": 6742,
											"end": 6745,
											"name": "DUP4"
										},
										{
											"begin": 6747,
											"end": 6750,
											"name": "DUP4"
										},
										{
											"begin": 6717,
											"end": 6729,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 6717,
											"end": 6751,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6717,
											"end": 6751,
											"name": "tag",
											"value": "143"
										},
										{
											"begin": 6717,
											"end": 6751,
											"name": "JUMPDEST"
										},
										{
											"begin": 6717,
											"end": 6751,
											"name": "POP"
										},
										{
											"begin": 6660,
											"end": 6759,
											"name": "POP"
										},
										{
											"begin": 6660,
											"end": 6759,
											"name": "POP"
										},
										{
											"begin": 6660,
											"end": 6759,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6870,
											"end": 6975,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 6870,
											"end": 6975,
											"name": "JUMPDEST"
										},
										{
											"begin": 6940,
											"end": 6967,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 6953,
											"end": 6956,
											"name": "DUP4"
										},
										{
											"begin": 6958,
											"end": 6961,
											"name": "DUP4"
										},
										{
											"begin": 6963,
											"end": 6966,
											"name": "DUP4"
										},
										{
											"begin": 6940,
											"end": 6952,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 6940,
											"end": 6967,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6940,
											"end": 6967,
											"name": "tag",
											"value": "145"
										},
										{
											"begin": 6940,
											"end": 6967,
											"name": "JUMPDEST"
										},
										{
											"begin": 6940,
											"end": 6967,
											"name": "POP"
										},
										{
											"begin": 6870,
											"end": 6975,
											"name": "POP"
										},
										{
											"begin": 6870,
											"end": 6975,
											"name": "POP"
										},
										{
											"begin": 6870,
											"end": 6975,
											"name": "POP"
										},
										{
											"begin": 6870,
											"end": 6975,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "JUMPDEST"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "MSTORE"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "DUP1"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "MSTORE"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "KECCAK256"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "SWAP2"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "POP"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "SWAP1"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "POP"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "SLOAD"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "DUP2"
										},
										{
											"begin": 3090,
											"end": 3128,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "JUMPDEST"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "MSTORE"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "DUP2"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "MSTORE"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "KECCAK256"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "MSTORE"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "DUP1"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "MSTORE"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "KECCAK256"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "SWAP2"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "POP"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "SWAP2"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "POP"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "POP"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "SLOAD"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "DUP2"
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6765,
											"end": 6864,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 6765,
											"end": 6864,
											"name": "JUMPDEST"
										},
										{
											"begin": 6822,
											"end": 6856,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 6835,
											"end": 6838,
											"name": "DUP3"
										},
										{
											"begin": 6840,
											"end": 6850,
											"name": "CALLER"
										},
										{
											"begin": 6852,
											"end": 6855,
											"name": "DUP4"
										},
										{
											"begin": 6822,
											"end": 6834,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 6822,
											"end": 6856,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6822,
											"end": 6856,
											"name": "tag",
											"value": "147"
										},
										{
											"begin": 6822,
											"end": 6856,
											"name": "JUMPDEST"
										},
										{
											"begin": 6822,
											"end": 6856,
											"name": "POP"
										},
										{
											"begin": 6765,
											"end": 6864,
											"name": "POP"
										},
										{
											"begin": 6765,
											"end": 6864,
											"name": "POP"
										},
										{
											"begin": 6765,
											"end": 6864,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4127,
											"end": 4231,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 4127,
											"end": 4231,
											"name": "JUMPDEST"
										},
										{
											"begin": 4179,
											"end": 4185,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4221,
											"end": 4222,
											"name": "DUP3"
										},
										{
											"begin": 4215,
											"end": 4216,
											"name": "DUP3"
										},
										{
											"begin": 4211,
											"end": 4212,
											"name": "DUP5"
										},
										{
											"begin": 4211,
											"end": 4216,
											"name": "SUB"
										},
										{
											"begin": 4207,
											"end": 4216,
											"name": "SWAP2"
										},
										{
											"begin": 4207,
											"end": 4216,
											"name": "POP"
										},
										{
											"begin": 4207,
											"end": 4216,
											"name": "DUP2"
										},
										{
											"begin": 4206,
											"end": 4222,
											"name": "GT"
										},
										{
											"begin": 4206,
											"end": 4222,
											"name": "ISZERO"
										},
										{
											"begin": 4198,
											"end": 4223,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 4198,
											"end": 4223,
											"name": "JUMPI"
										},
										{
											"begin": 4198,
											"end": 4223,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4198,
											"end": 4223,
											"name": "DUP1"
										},
										{
											"begin": 4198,
											"end": 4223,
											"name": "REVERT"
										},
										{
											"begin": 4198,
											"end": 4223,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 4198,
											"end": 4223,
											"name": "JUMPDEST"
										},
										{
											"begin": 4127,
											"end": 4231,
											"name": "SWAP3"
										},
										{
											"begin": 4127,
											"end": 4231,
											"name": "SWAP2"
										},
										{
											"begin": 4127,
											"end": 4231,
											"name": "POP"
										},
										{
											"begin": 4127,
											"end": 4231,
											"name": "POP"
										},
										{
											"begin": 4127,
											"end": 4231,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4017,
											"end": 4121,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 4017,
											"end": 4121,
											"name": "JUMPDEST"
										},
										{
											"begin": 4069,
											"end": 4075,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4111,
											"end": 4112,
											"name": "DUP3"
										},
										{
											"begin": 4105,
											"end": 4106,
											"name": "DUP3"
										},
										{
											"begin": 4101,
											"end": 4102,
											"name": "DUP5"
										},
										{
											"begin": 4101,
											"end": 4106,
											"name": "ADD"
										},
										{
											"begin": 4097,
											"end": 4106,
											"name": "SWAP2"
										},
										{
											"begin": 4097,
											"end": 4106,
											"name": "POP"
										},
										{
											"begin": 4097,
											"end": 4106,
											"name": "DUP2"
										},
										{
											"begin": 4096,
											"end": 4112,
											"name": "LT"
										},
										{
											"begin": 4096,
											"end": 4112,
											"name": "ISZERO"
										},
										{
											"begin": 4088,
											"end": 4113,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 4088,
											"end": 4113,
											"name": "JUMPI"
										},
										{
											"begin": 4088,
											"end": 4113,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4088,
											"end": 4113,
											"name": "DUP1"
										},
										{
											"begin": 4088,
											"end": 4113,
											"name": "REVERT"
										},
										{
											"begin": 4088,
											"end": 4113,
											"name": "tag",
											"value": "151"
										},
										{
											"begin": 4088,
											"end": 4113,
											"name": "JUMPDEST"
										},
										{
											"begin": 4017,
											"end": 4121,
											"name": "SWAP3"
										},
										{
											"begin": 4017,
											"end": 4121,
											"name": "SWAP2"
										},
										{
											"begin": 4017,
											"end": 4121,
											"name": "POP"
										},
										{
											"begin": 4017,
											"end": 4121,
											"name": "POP"
										},
										{
											"begin": 4017,
											"end": 4121,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								},
								"8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429"
							}
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address,uint256)": "9dc29fac",
							"decimals()": "313ce567",
							"deny(address)": "9c52a7f1",
							"mint(address,uint256)": "40c10f19",
							"move(address,address,uint256)": "bb35783b",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)": "8fcbaf0c",
							"pull(address,uint256)": "f2d5d56b",
							"push(address,uint256)": "b753a98c",
							"rely(address)": "65fae35e",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"version()": "54fd4d50",
							"wards(address)": "bf353dbb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId_\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"arg1\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"arg2\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"deny\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"rely\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"wards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{},\"notice\":\"/// /nix/store/8xb41r4qd0cjb63wcrxf1qmfg88p0961-dss-6fd7de0/src/dai.sol\"}},\"settings\":{\"compilationTarget\":{\"DaiToken.sol\":\"Dai\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"DaiToken.sol\":{\"keccak256\":\"0x034a46d6cc40815fda998564f338b84e0c163526f80dcb74b57f48a46b38a91b\",\"urls\":[\"bzz-raw://dc4727400de20b75e06886591db8d92c1814c32d654a92975d4c3e64ddb461c9\",\"dweb:/ipfs/QmdxTURzuVpjVv91RbvxEVSintGK45ScGvBAKh96fNH6oB\"]}},\"version\":1}",
					"userdoc": {
						"methods": {},
						"notice": "/// /nix/store/8xb41r4qd0cjb63wcrxf1qmfg88p0961-dss-6fd7de0/src/dai.sol"
					}
				},
				"LibNote": {
					"abi": [
						{
							"anonymous": true,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes4",
									"name": "sig",
									"type": "bytes4"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "usr",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "arg1",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "arg2",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "LogNote",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"DaiToken.sol\":963:2155  contract LibNote {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"DaiToken.sol\":963:2155  contract LibNote {\r... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"DaiToken.sol\":963:2155  contract LibNote {\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a723158200960b8bbddfa56e189951545325f2d3fa77684ce2a958ef02e26f677b8388a9d64736f6c634300050c0032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603e80601d6000396000f3fe6080604052600080fdfea265627a7a723158200960b8bbddfa56e189951545325f2d3fa77684ce2a958ef02e26f677b8388a9d64736f6c634300050c0032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3E DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 MULMOD PUSH1 0xB8 0xbb 0xdd STATICCALL JUMP 0xe1 DUP10 SWAP6 ISZERO GASLIMIT ORIGIN 0x5f 0x2d EXTCODEHASH 0xa7 PUSH23 0x84CE2A958EF02E26F677B8388A9D64736F6C634300050C STOP ORIGIN ",
							"sourceMap": "963:1192:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;963:1192:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600080fdfea265627a7a723158200960b8bbddfa56e189951545325f2d3fa77684ce2a958ef02e26f677b8388a9d64736f6c634300050c0032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 MULMOD PUSH1 0xB8 0xbb 0xdd STATICCALL JUMP 0xe1 DUP10 SWAP6 ISZERO GASLIMIT ORIGIN 0x5f 0x2d EXTCODEHASH 0xa7 PUSH23 0x84CE2A958EF02E26F677B8388A9D64736F6C634300050C STOP ORIGIN ",
							"sourceMap": "963:1192:0:-;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12400",
								"executionCost": "66",
								"totalCost": "12466"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 963,
									"end": 2155,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 963,
									"end": 2155,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 963,
									"end": 2155,
									"name": "MSTORE"
								},
								{
									"begin": 963,
									"end": 2155,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 963,
									"end": 2155,
									"name": "POP"
								},
								{
									"begin": 963,
									"end": 2155,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 963,
									"end": 2155,
									"name": "DUP1"
								},
								{
									"begin": 963,
									"end": 2155,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 963,
									"end": 2155,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 963,
									"end": 2155,
									"name": "CODECOPY"
								},
								{
									"begin": 963,
									"end": 2155,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 963,
									"end": 2155,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158200960b8bbddfa56e189951545325f2d3fa77684ce2a958ef02e26f677b8388a9d64736f6c634300050c0032",
									".code": [
										{
											"begin": 963,
											"end": 2155,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 963,
											"end": 2155,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 963,
											"end": 2155,
											"name": "MSTORE"
										},
										{
											"begin": 963,
											"end": 2155,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 963,
											"end": 2155,
											"name": "DUP1"
										},
										{
											"begin": 963,
											"end": 2155,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"arg1\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"arg2\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{},\"notice\":\"/// /nix/store/8xb41r4qd0cjb63wcrxf1qmfg88p0961-dss-6fd7de0/src/lib.sol\"}},\"settings\":{\"compilationTarget\":{\"DaiToken.sol\":\"LibNote\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"DaiToken.sol\":{\"keccak256\":\"0x034a46d6cc40815fda998564f338b84e0c163526f80dcb74b57f48a46b38a91b\",\"urls\":[\"bzz-raw://dc4727400de20b75e06886591db8d92c1814c32d654a92975d4c3e64ddb461c9\",\"dweb:/ipfs/QmdxTURzuVpjVv91RbvxEVSintGK45ScGvBAKh96fNH6oB\"]}},\"version\":1}",
					"userdoc": {
						"methods": {},
						"notice": "/// /nix/store/8xb41r4qd0cjb63wcrxf1qmfg88p0961-dss-6fd7de0/src/lib.sol"
					}
				}
			}
		},
		"sources": {
			"DaiToken.sol": {
				"ast": {
					"absolutePath": "DaiToken.sol",
					"exportedSymbols": {
						"Dai": [
							623
						],
						"LibNote": [
							19
						]
					},
					"id": 624,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "170:24:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": "/// /nix/store/8xb41r4qd0cjb63wcrxf1qmfg88p0961-dss-6fd7de0/src/lib.sol",
							"fullyImplemented": true,
							"id": 19,
							"linearizedBaseContracts": [
								19
							],
							"name": "LibNote",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": true,
									"documentation": null,
									"id": 13,
									"name": "LogNote",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"indexed": true,
												"name": "sig",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "1011:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1011:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"name": "usr",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "1043:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"name": "arg1",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "1075:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 6,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1075:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"name": "arg2",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "1108:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 8,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1108:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": false,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "1141:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 10,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1141:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1000:170:0"
									},
									"src": "987:194:0"
								},
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "1203:949:0",
										"statements": [
											{
												"id": 15,
												"nodeType": "PlaceholderStatement",
												"src": "1214:1:0"
											},
											{
												"externalReferences": [],
												"id": 16,
												"nodeType": "InlineAssembly",
												"operations": "{\n    let mark := msize()\n    mstore(0x40, add(mark, 288))\n    mstore(mark, 0x20)\n    mstore(add(mark, 0x20), 224)\n    calldatacopy(add(mark, 0x40), 0, 224)\n    log4(mark, 288, shl(224, shr(224, calldataload(0))), caller(), calldataload(4), calldataload(36))\n}",
												"src": "1226:919:0"
											}
										]
									},
									"documentation": null,
									"id": 18,
									"name": "note",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1203:0:0"
									},
									"src": "1189:963:0",
									"visibility": "internal"
								}
							],
							"scope": 624,
							"src": "963:1192:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 20,
										"name": "LibNote",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 19,
										"src": "3054:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_LibNote_$19",
											"typeString": "contract LibNote"
										}
									},
									"id": 21,
									"nodeType": "InheritanceSpecifier",
									"src": "3054:7:0"
								}
							],
							"contractDependencies": [
								19
							],
							"contractKind": "contract",
							"documentation": "/// /nix/store/8xb41r4qd0cjb63wcrxf1qmfg88p0961-dss-6fd7de0/src/dai.sol",
							"fullyImplemented": true,
							"id": 623,
							"linearizedBaseContracts": [
								623,
								19
							],
							"name": "Dai",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 25,
									"name": "wards",
									"nodeType": "VariableDeclaration",
									"scope": 623,
									"src": "3090:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 24,
										"keyType": {
											"id": 22,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3099:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3090:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 23,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "3110:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "3181:19:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 34,
															"name": "wards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "3183:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 36,
														"indexExpression": {
															"argumentTypes": null,
															"id": 35,
															"name": "guy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "3189:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3183:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 37,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3196:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3183:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 39,
												"nodeType": "ExpressionStatement",
												"src": "3183:14:0"
											}
										]
									},
									"documentation": null,
									"id": 41,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 30,
											"modifierName": {
												"argumentTypes": null,
												"id": 29,
												"name": "note",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 18,
												"src": "3171:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3171:4:0"
										},
										{
											"arguments": null,
											"id": 32,
											"modifierName": {
												"argumentTypes": null,
												"id": 31,
												"name": "auth",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 71,
												"src": "3176:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3176:4:0"
										}
									],
									"name": "rely",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"name": "guy",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "3149:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3149:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3148:13:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3181:0:0"
									},
									"scope": 623,
									"src": "3135:65:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 56,
										"nodeType": "Block",
										"src": "3252:19:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 50,
															"name": "wards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "3254:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 52,
														"indexExpression": {
															"argumentTypes": null,
															"id": 51,
															"name": "guy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "3260:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3254:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 53,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3267:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3254:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "3254:14:0"
											}
										]
									},
									"documentation": null,
									"id": 57,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 46,
											"modifierName": {
												"argumentTypes": null,
												"id": 45,
												"name": "note",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 18,
												"src": "3242:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3242:4:0"
										},
										{
											"arguments": null,
											"id": 48,
											"modifierName": {
												"argumentTypes": null,
												"id": 47,
												"name": "auth",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 71,
												"src": "3247:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3247:4:0"
										}
									],
									"name": "deny",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"name": "guy",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "3220:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 42,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3220:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3219:13:0"
									},
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3252:0:0"
									},
									"scope": 623,
									"src": "3206:65:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 70,
										"nodeType": "Block",
										"src": "3291:84:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 60,
																	"name": "wards",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 25,
																	"src": "3310:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 63,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 61,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 638,
																		"src": "3316:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 62,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "3316:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3310:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "31",
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3331:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "3310:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4461692f6e6f742d617574686f72697a6564",
															"id": 66,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3334:20:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3be4598c02bca0f13eeb6d4ba1696751ebabf37b25dbcabf9c189a64a0e7d0fa",
																"typeString": "literal_string \"Dai/not-authorized\""
															},
															"value": "Dai/not-authorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3be4598c02bca0f13eeb6d4ba1696751ebabf37b25dbcabf9c189a64a0e7d0fa",
																"typeString": "literal_string \"Dai/not-authorized\""
															}
														],
														"id": 59,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															641,
															642
														],
														"referencedDeclaration": 642,
														"src": "3302:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3302:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 68,
												"nodeType": "ExpressionStatement",
												"src": "3302:53:0"
											},
											{
												"id": 69,
												"nodeType": "PlaceholderStatement",
												"src": "3366:1:0"
											}
										]
									},
									"documentation": null,
									"id": 71,
									"name": "auth",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3291:0:0"
									},
									"src": "3277:98:0",
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 74,
									"name": "name",
									"nodeType": "VariableDeclaration",
									"scope": 623,
									"src": "3410:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 72,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3410:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "44616920537461626c65636f696e",
										"id": 73,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3445:16:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_0b1461ddc0c1d5ded79a1db0f74dae949050a7c0b28728c724b24958c27a328b",
											"typeString": "literal_string \"Dai Stablecoin\""
										},
										"value": "Dai Stablecoin"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 77,
									"name": "symbol",
									"nodeType": "VariableDeclaration",
									"scope": 623,
									"src": "3468:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 75,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3468:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "444149",
										"id": 76,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3503:5:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_a5e92f3efb6826155f1f728e162af9d7cda33a574a1153b58f03ea01cc37e568",
											"typeString": "literal_string \"DAI\""
										},
										"value": "DAI"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 80,
									"name": "version",
									"nodeType": "VariableDeclaration",
									"scope": 623,
									"src": "3515:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 78,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3515:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "31",
										"id": 79,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3550:3:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
											"typeString": "literal_string \"1\""
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 83,
									"name": "decimals",
									"nodeType": "VariableDeclaration",
									"scope": 623,
									"src": "3560:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 81,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "3560:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3138",
										"id": 82,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3595:2:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 85,
									"name": "totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 623,
									"src": "3604:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 84,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3604:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 89,
									"name": "balanceOf",
									"nodeType": "VariableDeclaration",
									"scope": 623,
									"src": "3639:63:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 88,
										"keyType": {
											"id": 86,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3648:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3639:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 87,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "3659:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 95,
									"name": "allowance",
									"nodeType": "VariableDeclaration",
									"scope": 623,
									"src": "3709:63:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 94,
										"keyType": {
											"id": 90,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3718:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3709:46:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 93,
											"keyType": {
												"id": 91,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3738:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "3729:25:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 92,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3749:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 99,
									"name": "nonces",
									"nodeType": "VariableDeclaration",
									"scope": 623,
									"src": "3779:60:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 98,
										"keyType": {
											"id": 96,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3788:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3779:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 97,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "3799:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 107,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"indexed": true,
												"name": "src",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "3863:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"indexed": true,
												"name": "guy",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "3884:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3884:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 105,
												"indexed": false,
												"name": "wad",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "3905:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 104,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3905:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3862:52:0"
									},
									"src": "3848:67:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 115,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"indexed": true,
												"name": "src",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "3936:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"indexed": true,
												"name": "dst",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "3957:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3957:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 113,
												"indexed": false,
												"name": "wad",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "3978:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 112,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3978:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3935:52:0"
									},
									"src": "3921:67:0"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "4077:44:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"id": 129,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 125,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 122,
																			"src": "4097:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 128,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 126,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 117,
																				"src": "4101:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 127,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 119,
																				"src": "4105:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4101:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4097:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 130,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4096:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 131,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "4111:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4096:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 124,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															641,
															642
														],
														"referencedDeclaration": 641,
														"src": "4088:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4088:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "4088:25:0"
											}
										]
									},
									"documentation": null,
									"id": 136,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "4030:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4030:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "4038:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 118,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4038:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4029:16:0"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "4069:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4069:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4068:8:0"
									},
									"scope": 623,
									"src": "4017:104:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 156,
										"nodeType": "Block",
										"src": "4187:44:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"id": 150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 146,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 143,
																			"src": "4207:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 149,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 147,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 138,
																				"src": "4211:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 148,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 140,
																				"src": "4215:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4211:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4207:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 151,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4206:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 152,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 138,
																"src": "4221:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4206:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 145,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															641,
															642
														],
														"referencedDeclaration": 641,
														"src": "4198:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4198:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 155,
												"nodeType": "ExpressionStatement",
												"src": "4198:25:0"
											}
										]
									},
									"documentation": null,
									"id": 157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "4140:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4140:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 140,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "4148:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4148:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4139:16:0"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "4179:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4179:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4178:8:0"
									},
									"scope": 623,
									"src": "4127:104:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 159,
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "VariableDeclaration",
									"scope": 623,
									"src": "4271:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 158,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4271:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 162,
									"name": "PERMIT_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"scope": 623,
									"src": "4454:108:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 160,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4454:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307865613261613061316265313161303765643836643735356339333436376634663832333632623435323337316431626139346431373135313233353131616362",
										"id": 161,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4496:66:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_105916522785188513640362517802612480037966763957092682311465172263008277174987_by_1",
											"typeString": "int_const 1059...(70 digits omitted)...4987"
										},
										"value": "0xea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "4608:340:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 167,
															"name": "wards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "4619:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 170,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 168,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 638,
																"src": "4625:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4625:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4619:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 171,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4639:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4619:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 173,
												"nodeType": "ExpressionStatement",
												"src": "4619:21:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 174,
														"name": "DOMAIN_SEPARATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "4651:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
																				"id": 179,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4715:84:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				},
																				"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				}
																			],
																			"id": 178,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 632,
																			"src": "4705:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 180,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4705:95:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 183,
																						"name": "name",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 74,
																						"src": "4831:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_string_memory",
																							"typeString": "string memory"
																						}
																					],
																					"id": 182,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "4825:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": "bytes"
																				},
																				"id": 184,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4825:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 181,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 632,
																			"src": "4815:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4815:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 188,
																						"name": "version",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 80,
																						"src": "4868:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_string_memory",
																							"typeString": "string memory"
																						}
																					],
																					"id": 187,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "4862:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": "bytes"
																				},
																				"id": 189,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4862:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 186,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 632,
																			"src": "4852:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 190,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4852:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 191,
																		"name": "chainId_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 164,
																		"src": "4892:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 193,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 654,
																				"src": "4923:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Dai_$623",
																					"typeString": "contract Dai"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Dai_$623",
																					"typeString": "contract Dai"
																				}
																			],
																			"id": 192,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4915:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 194,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4915:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 176,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 625,
																		"src": "4680:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encode",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "4680:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 195,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4680:259:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 175,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "4670:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 196,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4670:270:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "4651:289:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 198,
												"nodeType": "ExpressionStatement",
												"src": "4651:289:0"
											}
										]
									},
									"documentation": null,
									"id": 200,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"name": "chainId_",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "4583:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4583:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4582:18:0"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4608:0:0"
									},
									"scope": 623,
									"src": "4571:377:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "5043:60:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 210,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 638,
																"src": "5074:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5074:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 212,
															"name": "dst",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "5086:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 213,
															"name": "wad",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 204,
															"src": "5091:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 209,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "5061:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5061:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 208,
												"id": 215,
												"nodeType": "Return",
												"src": "5054:41:0"
											}
										]
									},
									"documentation": null,
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"name": "dst",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "4996:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"name": "wad",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5009:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5009:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4995:23:0"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5037:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 206,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5037:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5036:6:0"
									},
									"scope": 623,
									"src": "4978:125:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 314,
										"nodeType": "Block",
										"src": "5203:496:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 229,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 89,
																	"src": "5222:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 231,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 230,
																	"name": "src",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "5232:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5222:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 232,
																"name": "wad",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 223,
																"src": "5240:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5222:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4461692f696e73756666696369656e742d62616c616e6365",
															"id": 234,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5245:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_81d4f90f41a40b202519ea11e7240209a00f9ccd5114c8ff9e7ca99dac344c0e",
																"typeString": "literal_string \"Dai/insufficient-balance\""
															},
															"value": "Dai/insufficient-balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_81d4f90f41a40b202519ea11e7240209a00f9ccd5114c8ff9e7ca99dac344c0e",
																"typeString": "literal_string \"Dai/insufficient-balance\""
															}
														],
														"id": 228,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															641,
															642
														],
														"referencedDeclaration": 642,
														"src": "5214:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5214:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 236,
												"nodeType": "ExpressionStatement",
												"src": "5214:58:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 240,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 237,
															"name": "src",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "5287:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 238,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 638,
																"src": "5294:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5294:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"src": "5287:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 241,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 95,
																	"src": "5308:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(address => uint256))"
																	}
																},
																"id": 243,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 242,
																	"name": "src",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "5318:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5308:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 246,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 244,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "5323:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 245,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "5323:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5308:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 249,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "-",
																	"prefix": true,
																	"src": "5343:2:0",
																	"subExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 248,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5344:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_minus_1_by_1",
																		"typeString": "int_const -1"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_minus_1_by_1",
																		"typeString": "int_const -1"
																	}
																],
																"id": 247,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5338:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": "uint"
															},
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5338:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5308:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5287:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 283,
												"nodeType": "IfStatement",
												"src": "5283:244:0",
												"trueBody": {
													"id": 282,
													"nodeType": "Block",
													"src": "5348:179:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 261,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 254,
																					"name": "allowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 95,
																					"src": "5371:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(address => mapping(address => uint256))"
																					}
																				},
																				"id": 256,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 255,
																					"name": "src",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 219,
																					"src": "5381:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5371:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 259,
																			"indexExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 257,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 638,
																					"src": "5386:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 258,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "5386:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5371:26:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 260,
																			"name": "wad",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 223,
																			"src": "5401:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5371:33:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "4461692f696e73756666696369656e742d616c6c6f77616e6365",
																		"id": 262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5406:28:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_dc58e5d7bface59881a0c9cb071ac4c6184df72982996070a51bb5124c2b87ba",
																			"typeString": "literal_string \"Dai/insufficient-allowance\""
																		},
																		"value": "Dai/insufficient-allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_dc58e5d7bface59881a0c9cb071ac4c6184df72982996070a51bb5124c2b87ba",
																			"typeString": "literal_string \"Dai/insufficient-allowance\""
																		}
																	],
																	"id": 253,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		641,
																		642
																	],
																	"referencedDeclaration": 642,
																	"src": "5363:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 263,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5363:72:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 264,
															"nodeType": "ExpressionStatement",
															"src": "5363:72:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 265,
																			"name": "allowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 95,
																			"src": "5450:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 269,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 266,
																			"name": "src",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 219,
																			"src": "5460:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5450:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 270,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 267,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 638,
																			"src": "5465:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 268,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "5465:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5450:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 272,
																					"name": "allowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 95,
																					"src": "5483:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(address => mapping(address => uint256))"
																					}
																				},
																				"id": 274,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 273,
																					"name": "src",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 219,
																					"src": "5493:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5483:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 277,
																			"indexExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 275,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 638,
																					"src": "5498:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 276,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "5498:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5483:26:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 278,
																			"name": "wad",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 223,
																			"src": "5511:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 271,
																		"name": "sub",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 157,
																		"src": "5479:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5479:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5450:65:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 281,
															"nodeType": "ExpressionStatement",
															"src": "5450:65:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 284,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "5537:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 286,
														"indexExpression": {
															"argumentTypes": null,
															"id": 285,
															"name": "src",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "5547:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5537:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 288,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 89,
																	"src": "5558:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 290,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 289,
																	"name": "src",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "5568:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5558:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 291,
																"name": "wad",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 223,
																"src": "5574:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 287,
															"name": "sub",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "5554:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 292,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5554:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5537:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 294,
												"nodeType": "ExpressionStatement",
												"src": "5537:41:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 295,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "5589:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 297,
														"indexExpression": {
															"argumentTypes": null,
															"id": 296,
															"name": "dst",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "5599:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5589:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 299,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 89,
																	"src": "5610:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 301,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 300,
																	"name": "dst",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 221,
																	"src": "5620:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5610:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 302,
																"name": "wad",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 223,
																"src": "5626:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 298,
															"name": "add",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "5606:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 303,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5606:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5589:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 305,
												"nodeType": "ExpressionStatement",
												"src": "5589:41:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 307,
															"name": "src",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "5655:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 308,
															"name": "dst",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "5660:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 309,
															"name": "wad",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "5665:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 306,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "5646:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5646:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 311,
												"nodeType": "EmitStatement",
												"src": "5641:28:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5687:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 227,
												"id": 313,
												"nodeType": "Return",
												"src": "5680:11:0"
											}
										]
									},
									"documentation": null,
									"id": 315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"name": "src",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "5131:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5131:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"name": "dst",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "5144:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5144:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"name": "wad",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "5157:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5157:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5130:36:0"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "5192:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5192:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5191:6:0"
									},
									"scope": 623,
									"src": "5109:590:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 350,
										"nodeType": "Block",
										"src": "5756:155:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 324,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "5767:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 326,
														"indexExpression": {
															"argumentTypes": null,
															"id": 325,
															"name": "usr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "5777:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5767:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 328,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 89,
																	"src": "5788:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 330,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 329,
																	"name": "usr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 317,
																	"src": "5798:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5788:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 331,
																"name": "wad",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 319,
																"src": "5804:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 327,
															"name": "add",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "5784:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 332,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5784:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5767:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "5767:41:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 335,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "5819:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 337,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "5840:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 338,
																"name": "wad",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 319,
																"src": "5853:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 336,
															"name": "add",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "5836:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 339,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5836:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5819:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 341,
												"nodeType": "ExpressionStatement",
												"src": "5819:38:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 344,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5890:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 343,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5882:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5882:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 346,
															"name": "usr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "5894:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 347,
															"name": "wad",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "5899:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 342,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "5873:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5873:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 349,
												"nodeType": "EmitStatement",
												"src": "5868:35:0"
											}
										]
									},
									"documentation": null,
									"id": 351,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 322,
											"modifierName": {
												"argumentTypes": null,
												"id": 321,
												"name": "auth",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 71,
												"src": "5751:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "5751:4:0"
										}
									],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"name": "usr",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "5719:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5719:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"name": "wad",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "5732:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 318,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5732:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5718:23:0"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5756:0:0"
									},
									"scope": 623,
									"src": "5705:206:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 440,
										"nodeType": "Block",
										"src": "5963:478:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 359,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 89,
																	"src": "5982:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 361,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 360,
																	"name": "usr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "5992:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5982:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 362,
																"name": "wad",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 355,
																"src": "6000:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5982:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4461692f696e73756666696369656e742d62616c616e6365",
															"id": 364,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6005:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_81d4f90f41a40b202519ea11e7240209a00f9ccd5114c8ff9e7ca99dac344c0e",
																"typeString": "literal_string \"Dai/insufficient-balance\""
															},
															"value": "Dai/insufficient-balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_81d4f90f41a40b202519ea11e7240209a00f9ccd5114c8ff9e7ca99dac344c0e",
																"typeString": "literal_string \"Dai/insufficient-balance\""
															}
														],
														"id": 358,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															641,
															642
														],
														"referencedDeclaration": 642,
														"src": "5974:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5974:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 366,
												"nodeType": "ExpressionStatement",
												"src": "5974:58:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 370,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 367,
															"name": "usr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "6047:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 368,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 638,
																"src": "6054:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "6054:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"src": "6047:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 381,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 371,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 95,
																	"src": "6068:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(address => uint256))"
																	}
																},
																"id": 373,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 372,
																	"name": "usr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "6078:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6068:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 376,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 374,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "6083:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 375,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "6083:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6068:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "-",
																	"prefix": true,
																	"src": "6103:2:0",
																	"subExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 378,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6104:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_minus_1_by_1",
																		"typeString": "int_const -1"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_minus_1_by_1",
																		"typeString": "int_const -1"
																	}
																],
																"id": 377,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6098:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": "uint"
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6098:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6068:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6047:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 413,
												"nodeType": "IfStatement",
												"src": "6043:244:0",
												"trueBody": {
													"id": 412,
													"nodeType": "Block",
													"src": "6108:179:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 391,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 384,
																					"name": "allowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 95,
																					"src": "6131:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(address => mapping(address => uint256))"
																					}
																				},
																				"id": 386,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 385,
																					"name": "usr",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 353,
																					"src": "6141:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "6131:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 389,
																			"indexExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 387,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 638,
																					"src": "6146:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 388,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "6146:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6131:26:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 390,
																			"name": "wad",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 355,
																			"src": "6161:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6131:33:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "4461692f696e73756666696369656e742d616c6c6f77616e6365",
																		"id": 392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6166:28:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_dc58e5d7bface59881a0c9cb071ac4c6184df72982996070a51bb5124c2b87ba",
																			"typeString": "literal_string \"Dai/insufficient-allowance\""
																		},
																		"value": "Dai/insufficient-allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_dc58e5d7bface59881a0c9cb071ac4c6184df72982996070a51bb5124c2b87ba",
																			"typeString": "literal_string \"Dai/insufficient-allowance\""
																		}
																	],
																	"id": 383,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		641,
																		642
																	],
																	"referencedDeclaration": 642,
																	"src": "6123:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 393,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6123:72:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 394,
															"nodeType": "ExpressionStatement",
															"src": "6123:72:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 395,
																			"name": "allowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 95,
																			"src": "6210:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 399,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 396,
																			"name": "usr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 353,
																			"src": "6220:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6210:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 400,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 397,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 638,
																			"src": "6225:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "6225:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6210:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 402,
																					"name": "allowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 95,
																					"src": "6243:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(address => mapping(address => uint256))"
																					}
																				},
																				"id": 404,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 403,
																					"name": "usr",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 353,
																					"src": "6253:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "6243:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 407,
																			"indexExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 405,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 638,
																					"src": "6258:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 406,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "6258:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6243:26:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 408,
																			"name": "wad",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 355,
																			"src": "6271:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 401,
																		"name": "sub",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 157,
																		"src": "6239:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6239:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6210:65:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 411,
															"nodeType": "ExpressionStatement",
															"src": "6210:65:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 414,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "6297:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 416,
														"indexExpression": {
															"argumentTypes": null,
															"id": 415,
															"name": "usr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "6307:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6297:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 418,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 89,
																	"src": "6318:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 420,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 419,
																	"name": "usr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "6328:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6318:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 421,
																"name": "wad",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 355,
																"src": "6334:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 417,
															"name": "sub",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "6314:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 422,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6314:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6297:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 424,
												"nodeType": "ExpressionStatement",
												"src": "6297:41:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 425,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "6349:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 427,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "6370:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 428,
																"name": "wad",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 355,
																"src": "6383:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 426,
															"name": "sub",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "6366:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 429,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6366:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6349:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 431,
												"nodeType": "ExpressionStatement",
												"src": "6349:38:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 433,
															"name": "usr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "6412:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6425:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 434,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6417:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6417:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 437,
															"name": "wad",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "6429:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 432,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "6403:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6403:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 439,
												"nodeType": "EmitStatement",
												"src": "6398:35:0"
											}
										]
									},
									"documentation": null,
									"id": 441,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"name": "usr",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "5931:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 355,
												"name": "wad",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "5944:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5944:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5930:23:0"
									},
									"returnParameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5963:0:0"
									},
									"scope": 623,
									"src": "5917:524:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 468,
										"nodeType": "Block",
										"src": "6511:119:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 450,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 95,
																"src": "6522:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 454,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 451,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "6532:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "6532:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6522:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 455,
														"indexExpression": {
															"argumentTypes": null,
															"id": 453,
															"name": "usr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 443,
															"src": "6544:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6522:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 456,
														"name": "wad",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "6551:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6522:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 458,
												"nodeType": "ExpressionStatement",
												"src": "6522:32:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 460,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 638,
																"src": "6579:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "6579:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 462,
															"name": "usr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 443,
															"src": "6591:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 463,
															"name": "wad",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "6596:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 459,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 107,
														"src": "6570:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6570:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 465,
												"nodeType": "EmitStatement",
												"src": "6565:35:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 466,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6618:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 449,
												"id": 467,
												"nodeType": "Return",
												"src": "6611:11:0"
											}
										]
									},
									"documentation": null,
									"id": 469,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"name": "usr",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "6464:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6464:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"name": "wad",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "6477:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 444,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6477:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6463:23:0"
									},
									"returnParameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "6505:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 447,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6505:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6504:6:0"
									},
									"scope": 623,
									"src": "6447:183:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 483,
										"nodeType": "Block",
										"src": "6706:53:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 477,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 638,
																"src": "6730:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "6730:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 479,
															"name": "usr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "6742:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 480,
															"name": "wad",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "6747:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 476,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "6717:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6717:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 482,
												"nodeType": "ExpressionStatement",
												"src": "6717:34:0"
											}
										]
									},
									"documentation": null,
									"id": 484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "push",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"name": "usr",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "6674:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6674:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 473,
												"name": "wad",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "6687:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 472,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6687:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6673:23:0"
									},
									"returnParameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6706:0:0"
									},
									"scope": 623,
									"src": "6660:99:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 498,
										"nodeType": "Block",
										"src": "6811:53:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 492,
															"name": "usr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "6835:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 493,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 638,
																"src": "6840:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "6840:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 495,
															"name": "wad",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 488,
															"src": "6852:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 491,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "6822:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6822:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 497,
												"nodeType": "ExpressionStatement",
												"src": "6822:34:0"
											}
										]
									},
									"documentation": null,
									"id": 499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pull",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"name": "usr",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "6779:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6779:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"name": "wad",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "6792:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6792:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6778:23:0"
									},
									"returnParameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6811:0:0"
									},
									"scope": 623,
									"src": "6765:99:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 514,
										"nodeType": "Block",
										"src": "6929:46:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 509,
															"name": "src",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "6953:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 510,
															"name": "dst",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "6958:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 511,
															"name": "wad",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 505,
															"src": "6963:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 508,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "6940:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6940:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "ExpressionStatement",
												"src": "6940:27:0"
											}
										]
									},
									"documentation": null,
									"id": 515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "move",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"name": "src",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "6884:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6884:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"name": "dst",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "6897:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6897:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"name": "wad",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "6910:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 504,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6910:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6883:36:0"
									},
									"returnParameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6929:0:0"
									},
									"scope": 623,
									"src": "6870:105:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 621,
										"nodeType": "Block",
										"src": "7180:853:0",
										"statements": [
											{
												"assignments": [
													535
												],
												"declarations": [
													{
														"constant": false,
														"id": 535,
														"name": "digest",
														"nodeType": "VariableDeclaration",
														"scope": 621,
														"src": "7191:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 534,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7191:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 554,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "1901",
																	"id": 539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7266:10:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	"value": "\u0019\u0001"
																},
																{
																	"argumentTypes": null,
																	"id": 540,
																	"name": "DOMAIN_SEPARATOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "7295:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 544,
																					"name": "PERMIT_TYPEHASH",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 162,
																					"src": "7351:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 545,
																					"name": "holder",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 517,
																					"src": "7406:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 546,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 519,
																					"src": "7452:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 547,
																					"name": "nonce",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 521,
																					"src": "7499:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 548,
																					"name": "expiry",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 523,
																					"src": "7544:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 549,
																					"name": "allowed",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 525,
																					"src": "7590:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 542,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 625,
																					"src": "7340:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 543,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "encode",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "7340:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 550,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7340:258:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 541,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 632,
																		"src": "7330:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7330:269:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 537,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 625,
																	"src": "7231:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 538,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "7231:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7231:379:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 536,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 632,
														"src": "7221:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7221:390:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7191:420:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 556,
																"name": "holder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 517,
																"src": "7632:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7650:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7642:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 559,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7642:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7632:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4461692f696e76616c69642d616464726573732d30",
															"id": 561,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7654:23:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6cade1c7c8c98b461ad80d1311ad396c59d17ffb04ff0f7a511ced53dd9ceec1",
																"typeString": "literal_string \"Dai/invalid-address-0\""
															},
															"value": "Dai/invalid-address-0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6cade1c7c8c98b461ad80d1311ad396c59d17ffb04ff0f7a511ced53dd9ceec1",
																"typeString": "literal_string \"Dai/invalid-address-0\""
															}
														],
														"id": 555,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															641,
															642
														],
														"referencedDeclaration": 642,
														"src": "7624:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 563,
												"nodeType": "ExpressionStatement",
												"src": "7624:54:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 565,
																"name": "holder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 517,
																"src": "7697:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 567,
																		"name": "digest",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 535,
																		"src": "7717:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 568,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 527,
																		"src": "7725:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 569,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 529,
																		"src": "7728:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 570,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 531,
																		"src": "7731:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 566,
																	"name": "ecrecover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 630,
																	"src": "7707:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
																		"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
																	}
																},
																"id": 571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7707:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7697:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4461692f696e76616c69642d7065726d6974",
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7735:20:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e974ba7acb290ca076887e7ba12e7b1839924d20ca241ab20707d98be809b312",
																"typeString": "literal_string \"Dai/invalid-permit\""
															},
															"value": "Dai/invalid-permit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e974ba7acb290ca076887e7ba12e7b1839924d20ca241ab20707d98be809b312",
																"typeString": "literal_string \"Dai/invalid-permit\""
															}
														],
														"id": 564,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															641,
															642
														],
														"referencedDeclaration": 642,
														"src": "7689:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7689:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 575,
												"nodeType": "ExpressionStatement",
												"src": "7689:67:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 579,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 577,
																	"name": "expiry",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 523,
																	"src": "7775:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7785:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7775:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 580,
																	"name": "now",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 640,
																	"src": "7790:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 581,
																	"name": "expiry",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 523,
																	"src": "7797:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7790:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7775:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4461692f7065726d69742d65787069726564",
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7805:20:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_22f5fc5d7aaf9b3e6dfc2273ed4394be56ea60a0b5067b49b7f63dc922b30c7a",
																"typeString": "literal_string \"Dai/permit-expired\""
															},
															"value": "Dai/permit-expired"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_22f5fc5d7aaf9b3e6dfc2273ed4394be56ea60a0b5067b49b7f63dc922b30c7a",
																"typeString": "literal_string \"Dai/permit-expired\""
															}
														],
														"id": 576,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															641,
															642
														],
														"referencedDeclaration": 642,
														"src": "7767:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7767:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 586,
												"nodeType": "ExpressionStatement",
												"src": "7767:59:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 588,
																"name": "nonce",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 521,
																"src": "7845:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "7854:16:0",
																"subExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 589,
																		"name": "nonces",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 99,
																		"src": "7854:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 591,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 590,
																		"name": "holder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 517,
																		"src": "7861:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7854:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7845:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4461692f696e76616c69642d6e6f6e6365",
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7872:19:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_56fdb16ed5471260b4f6bf21cd668c7795fa94d1be81d33f14e5ceb3647b779b",
																"typeString": "literal_string \"Dai/invalid-nonce\""
															},
															"value": "Dai/invalid-nonce"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_56fdb16ed5471260b4f6bf21cd668c7795fa94d1be81d33f14e5ceb3647b779b",
																"typeString": "literal_string \"Dai/invalid-nonce\""
															}
														],
														"id": 587,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															641,
															642
														],
														"referencedDeclaration": 642,
														"src": "7837:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7837:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 596,
												"nodeType": "ExpressionStatement",
												"src": "7837:55:0"
											},
											{
												"assignments": [
													598
												],
												"declarations": [
													{
														"constant": false,
														"id": 598,
														"name": "wad",
														"nodeType": "VariableDeclaration",
														"scope": 621,
														"src": "7903:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 597,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7903:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 606,
												"initialValue": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"id": 599,
														"name": "allowed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 525,
														"src": "7914:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 604,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7935:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "7914:22:0",
													"trueExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 602,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "7929:2:0",
																"subExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 601,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7930:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															],
															"id": 600,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7924:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": "uint"
														},
														"id": 603,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7924:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7903:33:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 607,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 95,
																"src": "7947:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 610,
															"indexExpression": {
																"argumentTypes": null,
																"id": 608,
																"name": "holder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 517,
																"src": "7957:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7947:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 611,
														"indexExpression": {
															"argumentTypes": null,
															"id": 609,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "7965:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7947:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 612,
														"name": "wad",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "7976:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7947:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 614,
												"nodeType": "ExpressionStatement",
												"src": "7947:32:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 616,
															"name": "holder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 517,
															"src": "8004:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 617,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "8012:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 618,
															"name": "wad",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "8021:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 615,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 107,
														"src": "7995:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7995:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 620,
												"nodeType": "EmitStatement",
												"src": "7990:35:0"
											}
										]
									},
									"documentation": null,
									"id": 622,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"name": "holder",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "7036:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7036:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 519,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "7052:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7052:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"name": "nonce",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "7069:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7069:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 523,
												"name": "expiry",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "7084:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7084:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"name": "allowed",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "7121:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 524,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7121:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "7135:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 526,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "7135:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "7144:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 528,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7144:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "7155:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 530,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7155:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7035:130:0"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7180:0:0"
									},
									"scope": 623,
									"src": "7020:1013:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 624,
							"src": "3038:4998:0"
						}
					],
					"src": "170:7866:0"
				},
				"id": 0
			}
		}
	}
}