{
	"id": "cb309b940422a8565ce33ed5110a00eb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.21",
	"solcLongVersion": "0.8.21+commit.d9974bed",
	"input": {
		"language": "Solidity",
		"sources": {
			"erc721Flat.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// File: @openzeppelin/contracts/utils/Counters.sol\r\n\r\n\r\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\r\n\r\npragma solidity ^0.8.7;\r\n\r\n/**\r\n\r\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\r\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\r\n *\r\n * Include with `using Counters for Counters.Counter;`\r\n */\r\nlibrary Counters {\r\n    struct Counter {\r\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\r\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\r\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\r\n        uint256 _value; // default: 0\r\n    }\r\n\r\n    function current(Counter storage counter) internal view returns (uint256) {\r\n        return counter._value;\r\n    }\r\n\r\n    function increment(Counter storage counter) internal {\r\n        unchecked {\r\n            counter._value += 1;\r\n        }\r\n    }\r\n}\r\n\r\n// File: @openzeppelin/contracts/interfaces/draft-IERC6093.sol\r\n\r\n\r\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\r\npragma solidity ^0.8.7;\r\n\r\n/**\r\n * @dev Standard ERC20 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\r\n */\r\ninterface IERC20Errors {\r\n    /**\r\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param balance Current balance for the interacting account.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     */\r\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC20InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC20InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\r\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\r\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     */\r\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC20InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\r\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC20InvalidSpender(address spender);\r\n}\r\n\r\n/**\r\n * @dev Standard ERC721 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\r\n */\r\ninterface IERC721Errors {\r\n    /**\r\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\r\n     * Used in balance queries.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC721InvalidOwner(address owner);\r\n\r\n    /**\r\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC721NonexistentToken(uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param tokenId Identifier number of a token.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC721InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC721InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC721InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC721InvalidOperator(address operator);\r\n}\r\n\r\n/**\r\n * @dev Standard ERC1155 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\r\n */\r\ninterface IERC1155Errors {\r\n    /**\r\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param balance Current balance for the interacting account.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC1155InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC1155InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC1155MissingApprovalForAll(address operator, address owner);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC1155InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC1155InvalidOperator(address operator);\r\n\r\n    /**\r\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\r\n     * Used in batch transfers.\r\n     * @param idsLength Length of the array of token identifiers\r\n     * @param valuesLength Length of the array of token amounts\r\n     */\r\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\r\n}\r\n\r\n// File: @openzeppelin/contracts/utils/math/SignedMath.sol\r\n\r\n\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\r\n\r\npragma solidity ^0.8.7;\r\n\r\n/**\r\n * @dev Standard signed math utilities missing in the Solidity language.\r\n */\r\n\r\n\r\n// File: @openzeppelin/contracts/utils/math/Math.sol\r\n\r\n\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\r\n\r\npragma solidity ^0.8.7;\r\n\r\n/**\r\n * @dev Standard math utilities missing in the Solidity language.\r\n */\r\nlibrary Math {\r\n    /**\r\n     * @dev Muldiv operation overflow.\r\n     */\r\n    error MathOverflowedMulDiv();\r\n\r\n    enum Rounding {\r\n        Floor, // Toward negative infinity\r\n        Ceil, // Toward positive infinity\r\n        Trunc, // Toward zero\r\n        Expand // Away from zero\r\n    }\r\n\r\n    \r\n    \r\n\r\n\r\n\r\n    \r\n\r\n   \r\n\r\n  \r\n    \r\n\r\n    /**\r\n     * @notice Calculates sqrt(a), following the selected rounding direction.\r\n     */\r\n  \r\n\r\n    \r\n\r\n\r\n\r\n    /**\r\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\r\n     * Returns 0 if given 0.\r\n     */\r\n\r\n}\r\n\r\n// File: @openzeppelin/contracts/utils/Strings.sol\r\n\r\n\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\r\n\r\npragma solidity ^0.8.7;\r\n\r\n\r\n\r\n/**\r\n * @dev String operations.\r\n */\r\nlibrary Strings {\r\n   \r\n\r\n    /**\r\n     * @dev The `value` string doesn't fit in the specified `length`.\r\n     */\r\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\r\n     */\r\n     \r\n    function toString(uint256 value) internal pure returns (string memory) {\r\n        if (value == 0) {\r\n            return \"0\";\r\n        }\r\n        \r\n        uint256 temp = value;\r\n        uint256 digits;\r\n        while (temp != 0) {\r\n            digits++;\r\n            temp /= 10;\r\n        }\r\n        \r\n        bytes memory buffer = new bytes(digits);\r\n        while (value != 0) {\r\n            digits -= 1;\r\n            buffer[digits] = bytes1(uint8(48 + value % 10));\r\n            value /= 10;\r\n        }\r\n        \r\n        return string(buffer);\r\n    }\r\n\r\n\r\n}\r\n\r\n// File: @openzeppelin/contracts/utils/Context.sol\r\n\r\n\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\r\n\r\npragma solidity ^0.8.7;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n}\r\n\r\n// File: @openzeppelin/contracts/access/Ownable.sol\r\n\r\n\r\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\r\n\r\npragma solidity ^0.8.7;\r\n\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * The initial owner is set to the address provided by the deployer. This can\r\n * later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    /**\r\n     * @dev The caller account is not authorized to perform an operation.\r\n     */\r\n    error OwnableUnauthorizedAccount(address account);\r\n\r\n    /**\r\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\r\n     */\r\n    error OwnableInvalidOwner(address owner);\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\r\n     */\r\n    constructor(address initialOwner) {\r\n        if (initialOwner == address(0)) {\r\n            revert OwnableInvalidOwner(address(0));\r\n        }\r\n        _transferOwnership(initialOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        _checkOwner();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if the sender is not the owner.\r\n     */\r\n    function _checkOwner() internal view virtual {\r\n        if (owner() != _msgSender()) {\r\n            revert OwnableUnauthorizedAccount(_msgSender());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby disabling any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() external virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) external virtual onlyOwner {\r\n        if (newOwner == address(0)) {\r\n            revert OwnableInvalidOwner(address(0));\r\n        }\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n\r\n// File: @openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\r\n\r\n\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\r\n\r\npragma solidity ^0.8.7;\r\n\r\n/**\r\n * @title ERC721 token receiver interface\r\n * @dev Interface for any contract that wants to support safeTransfers\r\n * from ERC721 asset contracts.\r\n */\r\ninterface IERC721Receiver {\r\n    /**\r\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\r\n     * by `operator` from `from`, this function is called.\r\n     *\r\n     * It must return its Solidity selector to confirm the token transfer.\r\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\r\n     * reverted.\r\n     *\r\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\r\n     */\r\n    function onERC721Received(\r\n        address operator,\r\n        address from,\r\n        uint256 tokenId,\r\n        bytes calldata data\r\n    ) external returns (bytes4);\r\n}\r\n\r\n// File: @openzeppelin/contracts/utils/introspection/IERC165.sol\r\n\r\n\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\r\n\r\npragma solidity ^0.8.7;\r\n\r\n/**\r\n * @dev Interface of the ERC165 standard, as defined in the\r\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\r\n *\r\n * Implementers can declare support of contract interfaces, which can then be\r\n * queried by others ({ERC165Checker}).\r\n *\r\n * For an implementation, see {ERC165}.\r\n */\r\ninterface IERC165 {\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30 000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n}\r\n\r\n// File: @openzeppelin/contracts/interfaces/IERC165.sol\r\n\r\n\r\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\r\n\r\npragma solidity ^0.8.7;\r\n\r\n\r\n// File: @openzeppelin/contracts/utils/introspection/ERC165.sol\r\n\r\n\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\r\n\r\npragma solidity ^0.8.7;\r\n\r\n\r\n/**\r\n * @dev Implementation of the {IERC165} interface.\r\n *\r\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\r\n * for the additional interface id that will be supported. For example:\r\n *\r\n * ```solidity\r\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\r\n * }\r\n * ```\r\n */\r\nabstract contract ERC165 is IERC165 {\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\r\n        return interfaceId == type(IERC165).interfaceId;\r\n    }\r\n}\r\n\r\n// File: @openzeppelin/contracts/token/ERC721/IERC721.sol\r\n\r\n\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\r\n\r\npragma solidity ^0.8.7;\r\n\r\n\r\n/**\r\n * @dev Required interface of an ERC721 compliant contract.\r\n */\r\ninterface IERC721 is IERC165 {\r\n    /**\r\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\r\n     */\r\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\r\n     */\r\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\r\n\r\n    /**\r\n     * @dev Returns the number of tokens in ``owner``'s account.\r\n     */\r\n    function balanceOf(address owner) external view returns (uint256 balance);\r\n\r\n    /**\r\n     * @dev Returns the owner of the `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function ownerOf(uint256 tokenId) external view returns (address owner);\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\r\n     *   a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\r\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\r\n     *   {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\r\n     *   a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\r\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\r\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address from, address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\r\n     * The approval is cleared when the token is transferred.\r\n     *\r\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The caller must own the token or be an approved operator.\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Approve or remove `operator` as an operator for the caller.\r\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The `operator` cannot be the address zero.\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     */\r\n    function setApprovalForAll(address operator, bool approved) external;\r\n\r\n    /**\r\n     * @dev Returns the account approved for `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function getApproved(uint256 tokenId) external view returns (address operator);\r\n\r\n    /**\r\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\r\n     *\r\n     * See {setApprovalForAll}\r\n     */\r\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\r\n}\r\n\r\n// File: @openzeppelin/contracts/interfaces/IERC721.sol\r\n\r\n\r\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC721.sol)\r\n\r\npragma solidity ^0.8.7;\r\n\r\n\r\n// File: @openzeppelin/contracts/interfaces/IERC4906.sol\r\n\r\n\r\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC4906.sol)\r\n\r\npragma solidity ^0.8.7;\r\n\r\n\r\n\r\n/// @title EIP-721 Metadata Update Extension\r\ninterface IERC4906 is IERC165, IERC721 {\r\n    /// @dev This event emits when the metadata of a token is changed.\r\n    /// So that the third-party platforms such as NFT market could\r\n    /// timely update the images and related attributes of the NFT.\r\n    event MetadataUpdate(uint256 _tokenId);\r\n\r\n    /// @dev This event emits when the metadata of a range of tokens is changed.\r\n    /// So that the third-party platforms such as NFT market could\r\n    /// timely update the images and related attributes of the NFTs.\r\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\r\n}\r\n\r\n// File: @openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\r\n\r\n\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\r\n\r\npragma solidity ^0.8.7;\r\n\r\n\r\n/**\r\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\r\n * @dev See https://eips.ethereum.org/EIPS/eip-721\r\n */\r\ninterface IERC721Metadata is IERC721 {\r\n    /**\r\n     * @dev Returns the token collection name.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the token collection symbol.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\r\n     */\r\n    function tokenURI(uint256 tokenId) external view returns (string memory);\r\n}\r\n\r\n// File: @openzeppelin/contracts/token/ERC721/ERC721.sol\r\n\r\n\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\r\n\r\npragma solidity ^0.8.7;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\r\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\r\n * {ERC721Enumerable}.\r\n */\r\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\r\n    using Strings for uint256;\r\n\r\n    // Token name\r\n    string private _name;\r\n\r\n    // Token symbol\r\n    string private _symbol;\r\n\r\n    mapping(uint256 tokenId => address) private _owners;\r\n\r\n    mapping(address owner => uint256) private _balances;\r\n\r\n    mapping(uint256 tokenId => address) private _tokenApprovals;\r\n\r\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\r\n\r\n    /**\r\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\r\n     */\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\r\n        return\r\n            interfaceId == type(IERC721).interfaceId ||\r\n            interfaceId == type(IERC721Metadata).interfaceId ||\r\n            super.supportsInterface(interfaceId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-balanceOf}.\r\n     */\r\n    function balanceOf(address owner) external view virtual returns (uint256) {\r\n        if (owner == address(0)) {\r\n            revert ERC721InvalidOwner(address(0));\r\n        }\r\n        return _balances[owner];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-ownerOf}.\r\n     */\r\n    function ownerOf(uint256 tokenId) external view virtual returns (address) {\r\n        return _requireOwned(tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-name}.\r\n     */\r\n    function name() external view virtual returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-symbol}.\r\n     */\r\n    function symbol() external view virtual returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-tokenURI}.\r\n     */\r\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\r\n        _requireOwned(tokenId);\r\n\r\n        string memory baseURI = _baseURI();\r\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\r\n    }\r\n\r\n    /**\r\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\r\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\r\n     * by default, can be overridden in child contracts.\r\n     */\r\n    function _baseURI() internal pure returns (string memory) {\r\n        return \"ipfs://Qmac89sZTSGvKkyYa2vrxdRakPREaGFJSNJRRWetzTLQTM/\";\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-approve}.\r\n     */\r\n    function approve(address to, uint256 tokenId) external virtual {\r\n        _approve(to, tokenId, _msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-getApproved}.\r\n     */\r\n    function getApproved(uint256 tokenId) external view virtual returns (address) {\r\n        _requireOwned(tokenId);\r\n\r\n        return _getApproved(tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-setApprovalForAll}.\r\n     */\r\n    function setApprovalForAll(address operator, bool approved)external virtual {\r\n        _setApprovalForAll(_msgSender(), operator, approved);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-isApprovedForAll}.\r\n     */\r\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\r\n        return _operatorApprovals[owner][operator];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-transferFrom}.\r\n     */\r\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\r\n        if (to == address(0)) {\r\n            revert ERC721InvalidReceiver(address(0));\r\n        }\r\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\r\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\r\n        address previousOwner = _update(to, tokenId, _msgSender());\r\n        if (previousOwner != from) {\r\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-safeTransferFrom}.\r\n     */\r\n    function safeTransferFrom(address from, address to, uint256 tokenId) external {\r\n        safeTransferFrom(from, to, tokenId, \"\");\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-safeTransferFrom}.\r\n     */\r\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\r\n        transferFrom(from, to, tokenId);\r\n        _checkOnERC721Received(from, to, tokenId, data);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\r\n     *\r\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\r\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\r\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\r\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\r\n     */\r\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\r\n        return _owners[tokenId];\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\r\n     */\r\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\r\n        return _tokenApprovals[tokenId];\r\n    }\r\n\r\n    /**\r\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\r\n     * particular (ignoring whether it is owned by `owner`).\r\n     *\r\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\r\n     * assumption.\r\n     */\r\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\r\n        return\r\n            spender != address(0) &&\r\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\r\n    }\r\n\r\n    /**\r\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\r\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\r\n     * the `spender` for the specific `tokenId`.\r\n     *\r\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\r\n     * assumption.\r\n     */\r\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\r\n        if (!_isAuthorized(owner, spender, tokenId)) {\r\n            if (owner == address(0)) {\r\n                revert ERC721NonexistentToken(tokenId);\r\n            } else {\r\n                revert ERC721InsufficientApproval(spender, tokenId);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\r\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\r\n     *\r\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\r\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\r\n     */\r\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\r\n        address from = _ownerOf(tokenId);\r\n\r\n        // Perform (optional) operator check\r\n        if (auth != address(0)) {\r\n            _checkAuthorized(from, auth, tokenId);\r\n        }\r\n\r\n        // Execute the update\r\n        if (from != address(0)) {\r\n            // Clear approval. No need to re-authorize or emit the Approval event\r\n            _approve(address(0), tokenId, address(0), false);\r\n\r\n            unchecked {\r\n                _balances[from] -= 1;\r\n            }\r\n        }\r\n\r\n        if (to != address(0)) {\r\n            unchecked {\r\n                _balances[to] += 1;\r\n            }\r\n        }\r\n\r\n        _owners[tokenId] = to;\r\n\r\n        emit Transfer(from, to, tokenId);\r\n\r\n        return from;\r\n    }\r\n\r\n    /**\r\n     * @dev Mints `tokenId` and transfers it to `to`.\r\n     *\r\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must not exist.\r\n     * - `to` cannot be the zero address.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _mint(address to, uint256 tokenId) internal {\r\n        if (to == address(0)) {\r\n            revert ERC721InvalidReceiver(address(0));\r\n        }\r\n        address previousOwner = _update(to, tokenId, address(0));\r\n        if (previousOwner != address(0)) {\r\n            revert ERC721InvalidSender(address(0));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must not exist.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _safeMint(address to, uint256 tokenId) internal {\r\n        _safeMint(to, tokenId, \"\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\r\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\r\n     */\r\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\r\n        _mint(to, tokenId);\r\n        _checkOnERC721Received(address(0), to, tokenId, data);\r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n    function _approve(address to, uint256 tokenId, address auth) internal {\r\n        _approve(to, tokenId, auth, true);\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\r\n     * emitted in the context of transfers.\r\n     */\r\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\r\n        // Avoid reading the owner unless necessary\r\n        if (emitEvent || auth != address(0)) {\r\n            address owner = _requireOwned(tokenId);\r\n\r\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\r\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\r\n                revert ERC721InvalidApprover(auth);\r\n            }\r\n\r\n            if (emitEvent) {\r\n                emit Approval(owner, to, tokenId);\r\n            }\r\n        }\r\n\r\n        _tokenApprovals[tokenId] = to;\r\n    }\r\n\r\n    /**\r\n     * @dev Approve `operator` to operate on all of `owner` tokens\r\n     *\r\n     * Requirements:\r\n     * - operator can't be the address zero.\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     */\r\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\r\n        if (operator == address(0)) {\r\n            revert ERC721InvalidOperator(operator);\r\n        }\r\n        _operatorApprovals[owner][operator] = approved;\r\n        emit ApprovalForAll(owner, operator, approved);\r\n    }\r\n\r\n    /**\r\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\r\n     * Returns the owner.\r\n     *\r\n     * Overrides to ownership logic should be done to {_ownerOf}.\r\n     */\r\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\r\n        address owner = _ownerOf(tokenId);\r\n        if (owner == address(0)) {\r\n            revert ERC721NonexistentToken(tokenId);\r\n        }\r\n        return owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\r\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\r\n     *\r\n     * @param from address representing the previous owner of the given token ID\r\n     * @param to target address that will receive the tokens\r\n     * @param tokenId uint256 ID of the token to be transferred\r\n     * @param data bytes optional data to send along with the call\r\n     */\r\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\r\n        if (to.code.length > 0) {\r\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\r\n                if (retval != IERC721Receiver.onERC721Received.selector) {\r\n                    revert ERC721InvalidReceiver(to);\r\n                }\r\n            } catch (bytes memory reason) {\r\n                if (reason.length == 0) {\r\n                    revert ERC721InvalidReceiver(to);\r\n                } else {\r\n                    /// @solidity memory-safe-assembly\r\n                    // assembly {\r\n                    //     revert(add(32, reason), mload(reason))\r\n                    // }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// File: @openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\r\n\r\n\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721Burnable.sol)\r\n\r\npragma solidity ^0.8.7;\r\n\r\n\r\n\r\n/**\r\n * @title ERC721 Burnable Token\r\n * @dev ERC721 Token that can be burned (destroyed).\r\n */\r\nabstract contract ERC721Burnable is Context, ERC721 {\r\n    /**\r\n     * @dev Burns `tokenId`. See {ERC721-_burn}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The caller must own `tokenId` or be an approved operator.\r\n     */\r\n    function burn(uint256 tokenId) external virtual {\r\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\r\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\r\n        _update(address(0), tokenId, _msgSender());\r\n    }\r\n}\r\n\r\n// File: @openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\r\n\r\n\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721URIStorage.sol)\r\n\r\npragma solidity ^0.8.7;\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * @dev ERC721 token with storage based token URI management.\r\n */\r\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\r\n    using Strings for uint256;\r\n\r\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\r\n    // defines events and does not include any external function.\r\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\r\n\r\n    // Optional mapping for token URIs\r\n    mapping(uint256 tokenId => string) private _tokenURIs;\r\n\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\r\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-tokenURI}.\r\n     */\r\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\r\n        _requireOwned(tokenId);\r\n\r\n        string memory _tokenURI = _tokenURIs[tokenId];\r\n        string memory base = _baseURI();\r\n\r\n        // If there is no base URI, return the token URI.\r\n        if (bytes(base).length == 0) {\r\n            return _tokenURI;\r\n        }\r\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\r\n        if (bytes(_tokenURI).length > 0) {\r\n            return string.concat(base, _tokenURI);\r\n        }\r\n\r\n        return super.tokenURI(tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\r\n     *\r\n     * Emits {MetadataUpdate}.\r\n     */\r\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\r\n        _tokenURIs[tokenId] = _tokenURI;\r\n        emit MetadataUpdate(tokenId);\r\n    }\r\n}\r\n\r\n// File: erc721test.sol\r\n\r\n\r\npragma solidity ^0.8.7;\r\n\r\ncontract myerc721 is ERC721, ERC721URIStorage, ERC721Burnable, Ownable(msg.sender) {\r\n    using Counters for Counters.Counter;\r\n    using Strings for uint256;\r\n    Counters.Counter private _tokenIdCounter;\r\n    bool private reentrancyGuard;\r\n    modifier nonReentrant() {\r\n        require(!reentrancyGuard, \"Reentrant call detected\");\r\n        reentrancyGuard = true;\r\n        _;\r\n        reentrancyGuard = false;\r\n    }\r\n    constructor() ERC721(\"e721\", \"721\") {}\r\n    \r\n\r\n    function safeMint(address to) external nonReentrant onlyOwner {\r\n        uint256 tokenId = _tokenIdCounter.current();\r\n        _tokenIdCounter.increment();\r\n        string memory uri = string.concat(tokenId.toString(),\".json\");\r\n        _setTokenURI(tokenId, uri);\r\n        _safeMint(to, tokenId);\r\n    }\r\n\r\n    // The following functions are overrides required by Solidity.\r\n\r\n\r\n    function tokenURI(uint256 tokenId)\r\n        public\r\n        view\r\n        override(ERC721, ERC721URIStorage)\r\n        returns (string memory)\r\n    {\r\n        return super.tokenURI(tokenId);\r\n    }\r\n\r\n    function supportsInterface(bytes4 interfaceId)\r\n        public\r\n        view\r\n        override(ERC721, ERC721URIStorage)\r\n        returns (bool)\r\n    {\r\n        return super.supportsInterface(interfaceId);\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"erc721Flat.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721Flat.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc721Flat.sol\":{\"keccak256\":\"0x5b956dc5af8ab9e234898e3d61394478611cee8011379a005db0e5efdef579da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38203483954bcb4d14167960f546c6e865cc30a8f1e2d56e253fe4151d831b04\",\"dweb:/ipfs/QmWgs7v7PUsq8Lo6zEkYxePqSqvYVsPWTXjyFhGfN9h63x\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Counters": {
					"abi": [],
					"devdoc": {
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"erc721Flat.sol\":442:1105  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"erc721Flat.sol\":442:1105  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122078405a299ef2579b3b0dd8adde76a9ab42fdcba2f12693f0172e86cfc33ae2f764736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122078405a299ef2579b3b0dd8adde76a9ab42fdcba2f12693f0172e86cfc33ae2f764736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0x405A299EF2579B3B0DD8ADDE76A9AB42FDCBA2F12693F0172E DUP7 0xCF 0xC3 GASPRICE 0xE2 0xF7 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "442:663:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122078405a299ef2579b3b0dd8adde76a9ab42fdcba2f12693f0172e86cfc33ae2f764736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0x405A299EF2579B3B0DD8ADDE76A9AB42FDCBA2F12693F0172E DUP7 0xCF 0xC3 GASPRICE 0xE2 0xF7 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "442:663:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 442,
									"end": 1105,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 442,
									"end": 1105,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 442,
									"end": 1105,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 442,
									"end": 1105,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 442,
									"end": 1105,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 442,
									"end": 1105,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 442,
									"end": 1105,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 442,
									"end": 1105,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 442,
									"end": 1105,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 442,
									"end": 1105,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 442,
									"end": 1105,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 442,
									"end": 1105,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 442,
									"end": 1105,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 442,
									"end": 1105,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 442,
									"end": 1105,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 442,
									"end": 1105,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 442,
									"end": 1105,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 442,
									"end": 1105,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 442,
									"end": 1105,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 442,
									"end": 1105,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 442,
									"end": 1105,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 442,
									"end": 1105,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 442,
									"end": 1105,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 442,
									"end": 1105,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 442,
									"end": 1105,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 442,
									"end": 1105,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 442,
									"end": 1105,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 442,
									"end": 1105,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 442,
									"end": 1105,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 442,
									"end": 1105,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 442,
									"end": 1105,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 442,
									"end": 1105,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 442,
									"end": 1105,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 442,
									"end": 1105,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 442,
									"end": 1105,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122078405a299ef2579b3b0dd8adde76a9ab42fdcba2f12693f0172e86cfc33ae2f764736f6c63430008150033",
									".code": [
										{
											"begin": 442,
											"end": 1105,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 442,
											"end": 1105,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 442,
											"end": 1105,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 442,
											"end": 1105,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 442,
											"end": 1105,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 442,
											"end": 1105,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 442,
											"end": 1105,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 442,
											"end": 1105,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 442,
											"end": 1105,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"erc721Flat.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721Flat.sol\":\"Counters\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc721Flat.sol\":{\"keccak256\":\"0x5b956dc5af8ab9e234898e3d61394478611cee8011379a005db0e5efdef579da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38203483954bcb4d14167960f546c6e865cc30a8f1e2d56e253fe4151d831b04\",\"dweb:/ipfs/QmWgs7v7PUsq8Lo6zEkYxePqSqvYVsPWTXjyFhGfN9h63x\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721Flat.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc721Flat.sol\":{\"keccak256\":\"0x5b956dc5af8ab9e234898e3d61394478611cee8011379a005db0e5efdef579da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38203483954bcb4d14167960f546c6e865cc30a8f1e2d56e253fe4151d831b04\",\"dweb:/ipfs/QmWgs7v7PUsq8Lo6zEkYxePqSqvYVsPWTXjyFhGfN9h63x\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721Flat.sol\":\"ERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc721Flat.sol\":{\"keccak256\":\"0x5b956dc5af8ab9e234898e3d61394478611cee8011379a005db0e5efdef579da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38203483954bcb4d14167960f546c6e865cc30a8f1e2d56e253fe4151d831b04\",\"dweb:/ipfs/QmWgs7v7PUsq8Lo6zEkYxePqSqvYVsPWTXjyFhGfN9h63x\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 649,
								"contract": "erc721Flat.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 651,
								"contract": "erc721Flat.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 655,
								"contract": "erc721Flat.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 659,
								"contract": "erc721Flat.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 663,
								"contract": "erc721Flat.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 669,
								"contract": "erc721Flat.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721Burnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 Token that can be burned (destroyed).",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"title": "ERC721 Burnable Token",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 Token that can be burned (destroyed).\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"title\":\"ERC721 Burnable Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721Flat.sol\":\"ERC721Burnable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc721Flat.sol\":{\"keccak256\":\"0x5b956dc5af8ab9e234898e3d61394478611cee8011379a005db0e5efdef579da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38203483954bcb4d14167960f546c6e865cc30a8f1e2d56e253fe4151d831b04\",\"dweb:/ipfs/QmWgs7v7PUsq8Lo6zEkYxePqSqvYVsPWTXjyFhGfN9h63x\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 649,
								"contract": "erc721Flat.sol:ERC721Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 651,
								"contract": "erc721Flat.sol:ERC721Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 655,
								"contract": "erc721Flat.sol:ERC721Burnable",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 659,
								"contract": "erc721Flat.sol:ERC721Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 663,
								"contract": "erc721Flat.sol:ERC721Burnable",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 669,
								"contract": "erc721Flat.sol:ERC721Burnable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721URIStorage": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 token with storage based token URI management.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}"
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721Flat.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc721Flat.sol\":{\"keccak256\":\"0x5b956dc5af8ab9e234898e3d61394478611cee8011379a005db0e5efdef579da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38203483954bcb4d14167960f546c6e865cc30a8f1e2d56e253fe4151d831b04\",\"dweb:/ipfs/QmWgs7v7PUsq8Lo6zEkYxePqSqvYVsPWTXjyFhGfN9h63x\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 649,
								"contract": "erc721Flat.sol:ERC721URIStorage",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 651,
								"contract": "erc721Flat.sol:ERC721URIStorage",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 655,
								"contract": "erc721Flat.sol:ERC721URIStorage",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 659,
								"contract": "erc721Flat.sol:ERC721URIStorage",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 663,
								"contract": "erc721Flat.sol:ERC721URIStorage",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 669,
								"contract": "erc721Flat.sol:ERC721URIStorage",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1513,
								"contract": "erc721Flat.sol:ERC721URIStorage",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721Flat.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc721Flat.sol\":{\"keccak256\":\"0x5b956dc5af8ab9e234898e3d61394478611cee8011379a005db0e5efdef579da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38203483954bcb4d14167960f546c6e865cc30a8f1e2d56e253fe4151d831b04\",\"dweb:/ipfs/QmWgs7v7PUsq8Lo6zEkYxePqSqvYVsPWTXjyFhGfN9h63x\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721Flat.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc721Flat.sol\":{\"keccak256\":\"0x5b956dc5af8ab9e234898e3d61394478611cee8011379a005db0e5efdef579da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38203483954bcb4d14167960f546c6e865cc30a8f1e2d56e253fe4151d831b04\",\"dweb:/ipfs/QmWgs7v7PUsq8Lo6zEkYxePqSqvYVsPWTXjyFhGfN9h63x\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721Flat.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc721Flat.sol\":{\"keccak256\":\"0x5b956dc5af8ab9e234898e3d61394478611cee8011379a005db0e5efdef579da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38203483954bcb4d14167960f546c6e865cc30a8f1e2d56e253fe4151d831b04\",\"dweb:/ipfs/QmWgs7v7PUsq8Lo6zEkYxePqSqvYVsPWTXjyFhGfN9h63x\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC4906": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "EIP-721 Metadata Update Extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"EIP-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721Flat.sol\":\"IERC4906\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc721Flat.sol\":{\"keccak256\":\"0x5b956dc5af8ab9e234898e3d61394478611cee8011379a005db0e5efdef579da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38203483954bcb4d14167960f546c6e865cc30a8f1e2d56e253fe4151d831b04\",\"dweb:/ipfs/QmWgs7v7PUsq8Lo6zEkYxePqSqvYVsPWTXjyFhGfN9h63x\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721Flat.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc721Flat.sol\":{\"keccak256\":\"0x5b956dc5af8ab9e234898e3d61394478611cee8011379a005db0e5efdef579da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38203483954bcb4d14167960f546c6e865cc30a8f1e2d56e253fe4151d831b04\",\"dweb:/ipfs/QmWgs7v7PUsq8Lo6zEkYxePqSqvYVsPWTXjyFhGfN9h63x\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721Flat.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc721Flat.sol\":{\"keccak256\":\"0x5b956dc5af8ab9e234898e3d61394478611cee8011379a005db0e5efdef579da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38203483954bcb4d14167960f546c6e865cc30a8f1e2d56e253fe4151d831b04\",\"dweb:/ipfs/QmWgs7v7PUsq8Lo6zEkYxePqSqvYVsPWTXjyFhGfN9h63x\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721Flat.sol\":\"IERC721Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc721Flat.sol\":{\"keccak256\":\"0x5b956dc5af8ab9e234898e3d61394478611cee8011379a005db0e5efdef579da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38203483954bcb4d14167960f546c6e865cc30a8f1e2d56e253fe4151d831b04\",\"dweb:/ipfs/QmWgs7v7PUsq8Lo6zEkYxePqSqvYVsPWTXjyFhGfN9h63x\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721Flat.sol\":\"IERC721Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc721Flat.sol\":{\"keccak256\":\"0x5b956dc5af8ab9e234898e3d61394478611cee8011379a005db0e5efdef579da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38203483954bcb4d14167960f546c6e865cc30a8f1e2d56e253fe4151d831b04\",\"dweb:/ipfs/QmWgs7v7PUsq8Lo6zEkYxePqSqvYVsPWTXjyFhGfN9h63x\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"erc721Flat.sol\":8331:8916  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"erc721Flat.sol\":8331:8916  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c0232d1780b32bc9a983bb44b25f24f797c22d18326405bd4f4ac06dbe5160fe64736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c0232d1780b32bc9a983bb44b25f24f797c22d18326405bd4f4ac06dbe5160fe64736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 0x23 0x2D OR DUP1 0xB3 0x2B 0xC9 0xA9 DUP4 0xBB PREVRANDAO 0xB2 PUSH0 0x24 0xF7 SWAP8 0xC2 0x2D XOR ORIGIN PUSH5 0x5BD4F4AC0 PUSH14 0xBE5160FE64736F6C634300081500 CALLER ",
							"sourceMap": "8331:585:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c0232d1780b32bc9a983bb44b25f24f797c22d18326405bd4f4ac06dbe5160fe64736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 0x23 0x2D OR DUP1 0xB3 0x2B 0xC9 0xA9 DUP4 0xBB PREVRANDAO 0xB2 PUSH0 0x24 0xF7 SWAP8 0xC2 0x2D XOR ORIGIN PUSH5 0x5BD4F4AC0 PUSH14 0xBE5160FE64736F6C634300081500 CALLER ",
							"sourceMap": "8331:585:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 8331,
									"end": 8916,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8331,
									"end": 8916,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8331,
									"end": 8916,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 8331,
									"end": 8916,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8331,
									"end": 8916,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8331,
									"end": 8916,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8331,
									"end": 8916,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 8331,
									"end": 8916,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8331,
									"end": 8916,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8331,
									"end": 8916,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8331,
									"end": 8916,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 8331,
									"end": 8916,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 8331,
									"end": 8916,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 8331,
									"end": 8916,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8331,
									"end": 8916,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8331,
									"end": 8916,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8331,
									"end": 8916,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8331,
									"end": 8916,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8331,
									"end": 8916,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8331,
									"end": 8916,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 8331,
									"end": 8916,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8331,
									"end": 8916,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 8331,
									"end": 8916,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8331,
									"end": 8916,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 8331,
									"end": 8916,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8331,
									"end": 8916,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8331,
									"end": 8916,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 8331,
									"end": 8916,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8331,
									"end": 8916,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8331,
									"end": 8916,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 8331,
									"end": 8916,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8331,
									"end": 8916,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 8331,
									"end": 8916,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8331,
									"end": 8916,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8331,
									"end": 8916,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c0232d1780b32bc9a983bb44b25f24f797c22d18326405bd4f4ac06dbe5160fe64736f6c63430008150033",
									".code": [
										{
											"begin": 8331,
											"end": 8916,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 8331,
											"end": 8916,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 8331,
											"end": 8916,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8331,
											"end": 8916,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8331,
											"end": 8916,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8331,
											"end": 8916,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8331,
											"end": 8916,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8331,
											"end": 8916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8331,
											"end": 8916,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"erc721Flat.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721Flat.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc721Flat.sol\":{\"keccak256\":\"0x5b956dc5af8ab9e234898e3d61394478611cee8011379a005db0e5efdef579da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38203483954bcb4d14167960f546c6e865cc30a8f1e2d56e253fe4151d831b04\",\"dweb:/ipfs/QmWgs7v7PUsq8Lo6zEkYxePqSqvYVsPWTXjyFhGfN9h63x\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721Flat.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc721Flat.sol\":{\"keccak256\":\"0x5b956dc5af8ab9e234898e3d61394478611cee8011379a005db0e5efdef579da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38203483954bcb4d14167960f546c6e865cc30a8f1e2d56e253fe4151d831b04\",\"dweb:/ipfs/QmWgs7v7PUsq8Lo6zEkYxePqSqvYVsPWTXjyFhGfN9h63x\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 284,
								"contract": "erc721Flat.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"erc721Flat.sol\":9116:9974  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"erc721Flat.sol\":9116:9974  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c99eba184c4dfdca684c6284299612b7f57103ab50970e5ea6abb3861ec0411a64736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c99eba184c4dfdca684c6284299612b7f57103ab50970e5ea6abb3861ec0411a64736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 SWAP15 0xBA XOR 0x4C 0x4D REVERT 0xCA PUSH9 0x4C6284299612B7F571 SUB 0xAB POP SWAP8 0xE 0x5E 0xA6 0xAB 0xB3 DUP7 0x1E 0xC0 COINBASE BYTE PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "9116:858:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c99eba184c4dfdca684c6284299612b7f57103ab50970e5ea6abb3861ec0411a64736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 SWAP15 0xBA XOR 0x4C 0x4D REVERT 0xCA PUSH9 0x4C6284299612B7F571 SUB 0xAB POP SWAP8 0xE 0x5E 0xA6 0xAB 0xB3 DUP7 0x1E 0xC0 COINBASE BYTE PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "9116:858:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 9116,
									"end": 9974,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9116,
									"end": 9974,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9116,
									"end": 9974,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 9116,
									"end": 9974,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9116,
									"end": 9974,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9116,
									"end": 9974,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9116,
									"end": 9974,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 9116,
									"end": 9974,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9116,
									"end": 9974,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 9116,
									"end": 9974,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9116,
									"end": 9974,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 9116,
									"end": 9974,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 9116,
									"end": 9974,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 9116,
									"end": 9974,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 9116,
									"end": 9974,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 9116,
									"end": 9974,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9116,
									"end": 9974,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9116,
									"end": 9974,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 9116,
									"end": 9974,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9116,
									"end": 9974,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 9116,
									"end": 9974,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 9116,
									"end": 9974,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 9116,
									"end": 9974,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9116,
									"end": 9974,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 9116,
									"end": 9974,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 9116,
									"end": 9974,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 9116,
									"end": 9974,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 9116,
									"end": 9974,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9116,
									"end": 9974,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 9116,
									"end": 9974,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 9116,
									"end": 9974,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9116,
									"end": 9974,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 9116,
									"end": 9974,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9116,
									"end": 9974,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9116,
									"end": 9974,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c99eba184c4dfdca684c6284299612b7f57103ab50970e5ea6abb3861ec0411a64736f6c63430008150033",
									".code": [
										{
											"begin": 9116,
											"end": 9974,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9974,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9974,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9974,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 9116,
											"end": 9974,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9116,
											"end": 9974,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9116,
											"end": 9974,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9974,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"erc721Flat.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721Flat.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc721Flat.sol\":{\"keccak256\":\"0x5b956dc5af8ab9e234898e3d61394478611cee8011379a005db0e5efdef579da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38203483954bcb4d14167960f546c6e865cc30a8f1e2d56e253fe4151d831b04\",\"dweb:/ipfs/QmWgs7v7PUsq8Lo6zEkYxePqSqvYVsPWTXjyFhGfN9h63x\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"myerc721": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "safeMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"erc721Flat.sol\":40556:41837  contract myerc721 is ERC721, ERC721URIStorage, ERC721Burnable, Ownable(msg.sender) {... */\n  mstore(0x40, 0x80)\n    /* \"erc721Flat.sol\":40982:41020  constructor() ERC721(\"e721\", \"721\") {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"erc721Flat.sol\":40627:40637  msg.sender */\n  caller\n    /* \"erc721Flat.sol\":24950:25066  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x6537323100000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x3732310000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"erc721Flat.sol\":25025:25030  name_ */\n  dup2\n    /* \"erc721Flat.sol\":25017:25022  _name */\n  0x00\n    /* \"erc721Flat.sol\":25017:25030  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"erc721Flat.sol\":25051:25058  symbol_ */\n  dup1\n    /* \"erc721Flat.sol\":25041:25048  _symbol */\n  0x01\n    /* \"erc721Flat.sol\":25041:25058  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"erc721Flat.sol\":24950:25066  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"erc721Flat.sol\":12090:12091  0 */\n  0x00\n    /* \"erc721Flat.sol\":12066:12092  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"erc721Flat.sol\":12066:12078  initialOwner */\n  dup2\n    /* \"erc721Flat.sol\":12066:12092  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"erc721Flat.sol\":12062:12159  if (initialOwner == address(0)) {... */\n  tag_10\n  jumpi\n    /* \"erc721Flat.sol\":12144:12145  0 */\n  0x00\n    /* \"erc721Flat.sol\":12116:12147  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_11\n  swap2\n  swap1\n  tag_12\n  jump\t// in\ntag_11:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"erc721Flat.sol\":12062:12159  if (initialOwner == address(0)) {... */\ntag_10:\n    /* \"erc721Flat.sol\":12169:12201  _transferOwnership(initialOwner) */\n  tag_13\n    /* \"erc721Flat.sol\":12188:12200  initialOwner */\n  dup2\n    /* \"erc721Flat.sol\":12169:12187  _transferOwnership */\n  shl(0x20, tag_14)\n    /* \"erc721Flat.sol\":12169:12201  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"erc721Flat.sol\":12017:12209  constructor(address initialOwner) {... */\n  pop\n    /* \"erc721Flat.sol\":40556:41837  contract myerc721 is ERC721, ERC721URIStorage, ERC721Burnable, Ownable(msg.sender) {... */\n  jump(tag_16)\n    /* \"erc721Flat.sol\":13765:13956  function _transferOwnership(address newOwner) internal virtual {... */\ntag_14:\n    /* \"erc721Flat.sol\":13839:13855  address oldOwner */\n  0x00\n    /* \"erc721Flat.sol\":13858:13864  _owner */\n  0x07\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"erc721Flat.sol\":13839:13864  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"erc721Flat.sol\":13884:13892  newOwner */\n  dup2\n    /* \"erc721Flat.sol\":13875:13881  _owner */\n  0x07\n  0x00\n    /* \"erc721Flat.sol\":13875:13892  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"erc721Flat.sol\":13939:13947  newOwner */\n  dup2\n    /* \"erc721Flat.sol\":13908:13948  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"erc721Flat.sol\":13929:13937  oldOwner */\n  dup2\n    /* \"erc721Flat.sol\":13908:13948  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"erc721Flat.sol\":13828:13956  {... */\n  pop\n    /* \"erc721Flat.sol\":13765:13956  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_18:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_19:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_20:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_21:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_46\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_46:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_47\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_48\n  tag_20\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":714:798   */\ntag_47:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_22:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_23:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_24:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_25:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_53\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_24\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1429:1468   */\n  tag_54\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_24\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_26:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_27:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_28:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_58\n    /* \"#utility.yul\":1818:1852   */\n  tag_59\n    /* \"#utility.yul\":1827:1851   */\n  tag_60\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_26\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1818:1852   */\n  tag_27\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1800:1853   */\n  tag_26\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_29:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_30:\n    /* \"#utility.yul\":2056:2095   */\n  tag_63\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_28\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2117:2208   */\n  tag_64\n    /* \"#utility.yul\":2166:2207   */\n  tag_65\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_29\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_25\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_31:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_32:\n    /* \"#utility.yul\":2377:2409   */\n  tag_68\n  tag_31\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":2418:2483   */\n  tag_69\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_30\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_33:\n    /* \"#utility.yul\":2555:2675   */\ntag_71:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_74\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_32\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_71)\ntag_73:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_34:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_77\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_22\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2906:2935   */\n  tag_78\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_23\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_79\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_79:\n    /* \"#utility.yul\":3133:3213   */\n  tag_80\n    /* \"#utility.yul\":3189:3211   */\n  tag_81\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_23\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_33\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_76:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_35:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_36:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_84\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_35\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_37:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_86\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_36\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_7:\n    /* \"#utility.yul\":3950:3987   */\n  tag_88\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_18\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_90\n  tag_19\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":4038:4094   */\ntag_89:\n    /* \"#utility.yul\":4118:4156   */\n  tag_91\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_21\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4203:4270   */\n  tag_92\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_34\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_94\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_95:\n    /* \"#utility.yul\":5144:5211   */\n  tag_96\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_37\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_93)\n    /* \"#utility.yul\":4365:4983   */\ntag_94:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_97\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_22\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_98:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_100\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_98)\ntag_100:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_101\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_102\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_36\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_101:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_93:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5360   */\ntag_38:\n    /* \"#utility.yul\":5271:5278   */\n  0x00\n    /* \"#utility.yul\":5311:5353   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5304:5309   */\n  dup3\n    /* \"#utility.yul\":5300:5354   */\n  and\n    /* \"#utility.yul\":5289:5354   */\n  swap1\n  pop\n    /* \"#utility.yul\":5234:5360   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5366:5462   */\ntag_39:\n    /* \"#utility.yul\":5403:5410   */\n  0x00\n    /* \"#utility.yul\":5432:5456   */\n  tag_105\n    /* \"#utility.yul\":5450:5455   */\n  dup3\n    /* \"#utility.yul\":5432:5456   */\n  tag_38\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":5421:5456   */\n  swap1\n  pop\n    /* \"#utility.yul\":5366:5462   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5468:5586   */\ntag_40:\n    /* \"#utility.yul\":5555:5579   */\n  tag_107\n    /* \"#utility.yul\":5573:5578   */\n  dup2\n    /* \"#utility.yul\":5555:5579   */\n  tag_39\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":5550:5553   */\n  dup3\n    /* \"#utility.yul\":5543:5580   */\n  mstore\n    /* \"#utility.yul\":5468:5586   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5592:5814   */\ntag_12:\n    /* \"#utility.yul\":5685:5689   */\n  0x00\n    /* \"#utility.yul\":5723:5725   */\n  0x20\n    /* \"#utility.yul\":5712:5721   */\n  dup3\n    /* \"#utility.yul\":5708:5726   */\n  add\n    /* \"#utility.yul\":5700:5726   */\n  swap1\n  pop\n    /* \"#utility.yul\":5736:5807   */\n  tag_109\n    /* \"#utility.yul\":5804:5805   */\n  0x00\n    /* \"#utility.yul\":5793:5802   */\n  dup4\n    /* \"#utility.yul\":5789:5806   */\n  add\n    /* \"#utility.yul\":5780:5786   */\n  dup5\n    /* \"#utility.yul\":5736:5807   */\n  tag_40\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":5592:5814   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"erc721Flat.sol\":40556:41837  contract myerc721 is ERC721, ERC721URIStorage, ERC721Burnable, Ownable(msg.sender) {... */\ntag_16:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"erc721Flat.sol\":40556:41837  contract myerc721 is ERC721, ERC721URIStorage, ERC721Burnable, Ownable(msg.sender) {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x23b872dd\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x40d097c3\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"erc721Flat.sol\":41622:41834  function supportsInterface(bytes4 interfaceId)... */\n    tag_3:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc721Flat.sol\":25973:26066  function name() external view virtual returns (string memory) {... */\n    tag_4:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc721Flat.sol\":27197:27357  function getApproved(uint256 tokenId) external view virtual returns (address) {... */\n    tag_5:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc721Flat.sol\":27014:27131  function approve(address to, uint256 tokenId) external virtual {... */\n    tag_6:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"erc721Flat.sol\":27869:28457  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_7:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      stop\n        /* \"erc721Flat.sol\":41034:41338  function safeMint(address to) external nonReentrant onlyOwner {... */\n    tag_8:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      stop\n        /* \"erc721Flat.sol\":28528:28664  function safeTransferFrom(address from, address to, uint256 tokenId) external {... */\n    tag_9:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n    tag_52:\n      stop\n        /* \"erc721Flat.sol\":38173:38493  function burn(uint256 tokenId) external virtual {... */\n    tag_10:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      stop\n        /* \"erc721Flat.sol\":25784:25906  function ownerOf(uint256 tokenId) external view virtual returns (address) {... */\n    tag_11:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc721Flat.sol\":25507:25722  function balanceOf(address owner) external view virtual returns (uint256) {... */\n    tag_12:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc721Flat.sol\":13123:13228  function renounceOwnership() external virtual onlyOwner {... */\n    tag_13:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      stop\n        /* \"erc721Flat.sol\":12448:12535  function owner() public view virtual returns (address) {... */\n    tag_14:\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc721Flat.sol\":26135:26232  function symbol() external view virtual returns (string memory) {... */\n    tag_15:\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc721Flat.sol\":27429:27576  function setApprovalForAll(address operator, bool approved)external virtual {... */\n    tag_16:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n    tag_75:\n      stop\n        /* \"erc721Flat.sol\":28735:28946  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_17:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n    tag_79:\n      stop\n        /* \"erc721Flat.sol\":41418:41614  function tokenURI(uint256 tokenId)... */\n    tag_18:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc721Flat.sol\":27647:27802  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_19:\n      tag_87\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      tag_90\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_91\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc721Flat.sol\":13383:13605  function transferOwnership(address newOwner) external virtual onlyOwner {... */\n    tag_20:\n      tag_92\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_93:\n      tag_94\n      jump\t// in\n    tag_92:\n      stop\n        /* \"erc721Flat.sol\":41622:41834  function supportsInterface(bytes4 interfaceId)... */\n    tag_27:\n        /* \"erc721Flat.sol\":41761:41765  bool */\n      0x00\n        /* \"erc721Flat.sol\":41790:41826  super.supportsInterface(interfaceId) */\n      tag_96\n        /* \"erc721Flat.sol\":41814:41825  interfaceId */\n      dup3\n        /* \"erc721Flat.sol\":41790:41813  super.supportsInterface */\n      tag_97\n        /* \"erc721Flat.sol\":41790:41826  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_96:\n        /* \"erc721Flat.sol\":41783:41826  return super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"erc721Flat.sol\":41622:41834  function supportsInterface(bytes4 interfaceId)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"erc721Flat.sol\":25973:26066  function name() external view virtual returns (string memory) {... */\n    tag_31:\n        /* \"erc721Flat.sol\":26020:26033  string memory */\n      0x60\n        /* \"erc721Flat.sol\":26053:26058  _name */\n      0x00\n        /* \"erc721Flat.sol\":26046:26058  return _name */\n      dup1\n      sload\n      tag_99\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_101\n      swap1\n      tag_100\n      jump\t// in\n    tag_101:\n      dup1\n      iszero\n      tag_102\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_103\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_102)\n    tag_103:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_104:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_104\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_102:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"erc721Flat.sol\":25973:26066  function name() external view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"erc721Flat.sol\":27197:27357  function getApproved(uint256 tokenId) external view virtual returns (address) {... */\n    tag_37:\n        /* \"erc721Flat.sol\":27266:27273  address */\n      0x00\n        /* \"erc721Flat.sol\":27286:27308  _requireOwned(tokenId) */\n      tag_106\n        /* \"erc721Flat.sol\":27300:27307  tokenId */\n      dup3\n        /* \"erc721Flat.sol\":27286:27299  _requireOwned */\n      tag_107\n        /* \"erc721Flat.sol\":27286:27308  _requireOwned(tokenId) */\n      jump\t// in\n    tag_106:\n      pop\n        /* \"erc721Flat.sol\":27328:27349  _getApproved(tokenId) */\n      tag_108\n        /* \"erc721Flat.sol\":27341:27348  tokenId */\n      dup3\n        /* \"erc721Flat.sol\":27328:27340  _getApproved */\n      tag_109\n        /* \"erc721Flat.sol\":27328:27349  _getApproved(tokenId) */\n      jump\t// in\n    tag_108:\n        /* \"erc721Flat.sol\":27321:27349  return _getApproved(tokenId) */\n      swap1\n      pop\n        /* \"erc721Flat.sol\":27197:27357  function getApproved(uint256 tokenId) external view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"erc721Flat.sol\":27014:27131  function approve(address to, uint256 tokenId) external virtual {... */\n    tag_43:\n        /* \"erc721Flat.sol\":27088:27123  _approve(to, tokenId, _msgSender()) */\n      tag_111\n        /* \"erc721Flat.sol\":27097:27099  to */\n      dup3\n        /* \"erc721Flat.sol\":27101:27108  tokenId */\n      dup3\n        /* \"erc721Flat.sol\":27110:27122  _msgSender() */\n      tag_112\n        /* \"erc721Flat.sol\":27110:27120  _msgSender */\n      tag_113\n        /* \"erc721Flat.sol\":27110:27122  _msgSender() */\n      jump\t// in\n    tag_112:\n        /* \"erc721Flat.sol\":27088:27096  _approve */\n      tag_114\n        /* \"erc721Flat.sol\":27088:27123  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_111:\n        /* \"erc721Flat.sol\":27014:27131  function approve(address to, uint256 tokenId) external virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"erc721Flat.sol\":27869:28457  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_47:\n        /* \"erc721Flat.sol\":27978:27979  0 */\n      0x00\n        /* \"erc721Flat.sol\":27964:27980  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721Flat.sol\":27964:27966  to */\n      dup3\n        /* \"erc721Flat.sol\":27964:27980  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"erc721Flat.sol\":27960:28049  if (to == address(0)) {... */\n      tag_116\n      jumpi\n        /* \"erc721Flat.sol\":28034:28035  0 */\n      0x00\n        /* \"erc721Flat.sol\":28004:28037  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721Flat.sol\":27960:28049  if (to == address(0)) {... */\n    tag_116:\n        /* \"erc721Flat.sol\":28270:28291  address previousOwner */\n      0x00\n        /* \"erc721Flat.sol\":28294:28328  _update(to, tokenId, _msgSender()) */\n      tag_118\n        /* \"erc721Flat.sol\":28302:28304  to */\n      dup4\n        /* \"erc721Flat.sol\":28306:28313  tokenId */\n      dup4\n        /* \"erc721Flat.sol\":28315:28327  _msgSender() */\n      tag_119\n        /* \"erc721Flat.sol\":28315:28325  _msgSender */\n      tag_113\n        /* \"erc721Flat.sol\":28315:28327  _msgSender() */\n      jump\t// in\n    tag_119:\n        /* \"erc721Flat.sol\":28294:28301  _update */\n      tag_120\n        /* \"erc721Flat.sol\":28294:28328  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_118:\n        /* \"erc721Flat.sol\":28270:28328  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"erc721Flat.sol\":28360:28364  from */\n      dup4\n        /* \"erc721Flat.sol\":28343:28364  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721Flat.sol\":28343:28356  previousOwner */\n      dup2\n        /* \"erc721Flat.sol\":28343:28364  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"erc721Flat.sol\":28339:28450  if (previousOwner != from) {... */\n      tag_121\n      jumpi\n        /* \"erc721Flat.sol\":28409:28413  from */\n      dup4\n        /* \"erc721Flat.sol\":28415:28422  tokenId */\n      dup3\n        /* \"erc721Flat.sol\":28424:28437  previousOwner */\n      dup3\n        /* \"erc721Flat.sol\":28388:28438  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      0x64283d7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721Flat.sol\":28339:28450  if (previousOwner != from) {... */\n    tag_121:\n        /* \"erc721Flat.sol\":27949:28457  {... */\n      pop\n        /* \"erc721Flat.sol\":27869:28457  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721Flat.sol\":41034:41338  function safeMint(address to) external nonReentrant onlyOwner {... */\n    tag_51:\n        /* \"erc721Flat.sol\":40846:40861  reentrancyGuard */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"erc721Flat.sol\":40845:40861  !reentrancyGuard */\n      iszero\n        /* \"erc721Flat.sol\":40837:40889  require(!reentrancyGuard, \"Reentrant call detected\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_126\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_125:\n        /* \"erc721Flat.sol\":40918:40922  true */\n      0x01\n        /* \"erc721Flat.sol\":40900:40915  reentrancyGuard */\n      0x09\n      0x00\n        /* \"erc721Flat.sol\":40900:40922  reentrancyGuard = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"erc721Flat.sol\":12334:12347  _checkOwner() */\n      tag_129\n        /* \"erc721Flat.sol\":12334:12345  _checkOwner */\n      tag_130\n        /* \"erc721Flat.sol\":12334:12347  _checkOwner() */\n      jump\t// in\n    tag_129:\n        /* \"erc721Flat.sol\":41107:41122  uint256 tokenId */\n      0x00\n        /* \"erc721Flat.sol\":41125:41150  _tokenIdCounter.current() */\n      tag_132\n        /* \"erc721Flat.sol\":41125:41140  _tokenIdCounter */\n      0x08\n        /* \"erc721Flat.sol\":41125:41148  _tokenIdCounter.current */\n      tag_133\n        /* \"erc721Flat.sol\":41125:41150  _tokenIdCounter.current() */\n      jump\t// in\n    tag_132:\n        /* \"erc721Flat.sol\":41107:41150  uint256 tokenId = _tokenIdCounter.current() */\n      swap1\n      pop\n        /* \"erc721Flat.sol\":41161:41188  _tokenIdCounter.increment() */\n      tag_134\n        /* \"erc721Flat.sol\":41161:41176  _tokenIdCounter */\n      0x08\n        /* \"erc721Flat.sol\":41161:41186  _tokenIdCounter.increment */\n      tag_135\n        /* \"erc721Flat.sol\":41161:41188  _tokenIdCounter.increment() */\n      jump\t// in\n    tag_134:\n        /* \"erc721Flat.sol\":41199:41216  string memory uri */\n      0x00\n        /* \"erc721Flat.sol\":41233:41251  tokenId.toString() */\n      tag_136\n        /* \"erc721Flat.sol\":41233:41240  tokenId */\n      dup3\n        /* \"erc721Flat.sol\":41233:41249  tokenId.toString */\n      tag_137\n        /* \"erc721Flat.sol\":41233:41251  tokenId.toString() */\n      jump\t// in\n    tag_136:\n        /* \"erc721Flat.sol\":41219:41260  string.concat(tokenId.toString(),\".json\") */\n      add(0x20, mload(0x40))\n      tag_138\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"erc721Flat.sol\":41199:41260  string memory uri = string.concat(tokenId.toString(),\".json\") */\n      swap1\n      pop\n        /* \"erc721Flat.sol\":41271:41297  _setTokenURI(tokenId, uri) */\n      tag_140\n        /* \"erc721Flat.sol\":41284:41291  tokenId */\n      dup3\n        /* \"erc721Flat.sol\":41293:41296  uri */\n      dup3\n        /* \"erc721Flat.sol\":41271:41283  _setTokenURI */\n      tag_141\n        /* \"erc721Flat.sol\":41271:41297  _setTokenURI(tokenId, uri) */\n      jump\t// in\n    tag_140:\n        /* \"erc721Flat.sol\":41308:41330  _safeMint(to, tokenId) */\n      tag_142\n        /* \"erc721Flat.sol\":41318:41320  to */\n      dup4\n        /* \"erc721Flat.sol\":41322:41329  tokenId */\n      dup4\n        /* \"erc721Flat.sol\":41308:41317  _safeMint */\n      tag_143\n        /* \"erc721Flat.sol\":41308:41330  _safeMint(to, tokenId) */\n      jump\t// in\n    tag_142:\n        /* \"erc721Flat.sol\":41096:41338  {... */\n      pop\n      pop\n        /* \"erc721Flat.sol\":40963:40968  false */\n      0x00\n        /* \"erc721Flat.sol\":40945:40960  reentrancyGuard */\n      0x09\n      0x00\n        /* \"erc721Flat.sol\":40945:40968  reentrancyGuard = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"erc721Flat.sol\":41034:41338  function safeMint(address to) external nonReentrant onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"erc721Flat.sol\":28528:28664  function safeTransferFrom(address from, address to, uint256 tokenId) external {... */\n    tag_54:\n        /* \"erc721Flat.sol\":28617:28656  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_145\n        /* \"erc721Flat.sol\":28634:28638  from */\n      dup4\n        /* \"erc721Flat.sol\":28640:28642  to */\n      dup4\n        /* \"erc721Flat.sol\":28644:28651  tokenId */\n      dup4\n        /* \"erc721Flat.sol\":28617:28656  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"erc721Flat.sol\":28617:28633  safeTransferFrom */\n      tag_82\n        /* \"erc721Flat.sol\":28617:28656  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_145:\n        /* \"erc721Flat.sol\":28528:28664  function safeTransferFrom(address from, address to, uint256 tokenId) external {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721Flat.sol\":38173:38493  function burn(uint256 tokenId) external virtual {... */\n    tag_57:\n        /* \"erc721Flat.sol\":38443:38485  _update(address(0), tokenId, _msgSender()) */\n      tag_147\n        /* \"erc721Flat.sol\":38459:38460  0 */\n      0x00\n        /* \"erc721Flat.sol\":38463:38470  tokenId */\n      dup3\n        /* \"erc721Flat.sol\":38472:38484  _msgSender() */\n      tag_148\n        /* \"erc721Flat.sol\":38472:38482  _msgSender */\n      tag_113\n        /* \"erc721Flat.sol\":38472:38484  _msgSender() */\n      jump\t// in\n    tag_148:\n        /* \"erc721Flat.sol\":38443:38450  _update */\n      tag_120\n        /* \"erc721Flat.sol\":38443:38485  _update(address(0), tokenId, _msgSender()) */\n      jump\t// in\n    tag_147:\n      pop\n        /* \"erc721Flat.sol\":38173:38493  function burn(uint256 tokenId) external virtual {... */\n      pop\n      jump\t// out\n        /* \"erc721Flat.sol\":25784:25906  function ownerOf(uint256 tokenId) external view virtual returns (address) {... */\n    tag_60:\n        /* \"erc721Flat.sol\":25849:25856  address */\n      0x00\n        /* \"erc721Flat.sol\":25876:25898  _requireOwned(tokenId) */\n      tag_150\n        /* \"erc721Flat.sol\":25890:25897  tokenId */\n      dup3\n        /* \"erc721Flat.sol\":25876:25889  _requireOwned */\n      tag_107\n        /* \"erc721Flat.sol\":25876:25898  _requireOwned(tokenId) */\n      jump\t// in\n    tag_150:\n        /* \"erc721Flat.sol\":25869:25898  return _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"erc721Flat.sol\":25784:25906  function ownerOf(uint256 tokenId) external view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"erc721Flat.sol\":25507:25722  function balanceOf(address owner) external view virtual returns (uint256) {... */\n    tag_64:\n        /* \"erc721Flat.sol\":25572:25579  uint256 */\n      0x00\n        /* \"erc721Flat.sol\":25613:25614  0 */\n      dup1\n        /* \"erc721Flat.sol\":25596:25615  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721Flat.sol\":25596:25601  owner */\n      dup3\n        /* \"erc721Flat.sol\":25596:25615  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"erc721Flat.sol\":25592:25681  if (owner == address(0)) {... */\n      tag_152\n      jumpi\n        /* \"erc721Flat.sol\":25666:25667  0 */\n      0x00\n        /* \"erc721Flat.sol\":25639:25669  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      0x89c62b6400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721Flat.sol\":25592:25681  if (owner == address(0)) {... */\n    tag_152:\n        /* \"erc721Flat.sol\":25698:25707  _balances */\n      0x03\n        /* \"erc721Flat.sol\":25698:25714  _balances[owner] */\n      0x00\n        /* \"erc721Flat.sol\":25708:25713  owner */\n      dup4\n        /* \"erc721Flat.sol\":25698:25714  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"erc721Flat.sol\":25691:25714  return _balances[owner] */\n      swap1\n      pop\n        /* \"erc721Flat.sol\":25507:25722  function balanceOf(address owner) external view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"erc721Flat.sol\":13123:13228  function renounceOwnership() external virtual onlyOwner {... */\n    tag_68:\n        /* \"erc721Flat.sol\":12334:12347  _checkOwner() */\n      tag_155\n        /* \"erc721Flat.sol\":12334:12345  _checkOwner */\n      tag_130\n        /* \"erc721Flat.sol\":12334:12347  _checkOwner() */\n      jump\t// in\n    tag_155:\n        /* \"erc721Flat.sol\":13190:13220  _transferOwnership(address(0)) */\n      tag_157\n        /* \"erc721Flat.sol\":13217:13218  0 */\n      0x00\n        /* \"erc721Flat.sol\":13190:13208  _transferOwnership */\n      tag_158\n        /* \"erc721Flat.sol\":13190:13220  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_157:\n        /* \"erc721Flat.sol\":13123:13228  function renounceOwnership() external virtual onlyOwner {... */\n      jump\t// out\n        /* \"erc721Flat.sol\":12448:12535  function owner() public view virtual returns (address) {... */\n    tag_70:\n        /* \"erc721Flat.sol\":12494:12501  address */\n      0x00\n        /* \"erc721Flat.sol\":12521:12527  _owner */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721Flat.sol\":12514:12527  return _owner */\n      swap1\n      pop\n        /* \"erc721Flat.sol\":12448:12535  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"erc721Flat.sol\":26135:26232  function symbol() external view virtual returns (string memory) {... */\n    tag_73:\n        /* \"erc721Flat.sol\":26184:26197  string memory */\n      0x60\n        /* \"erc721Flat.sol\":26217:26224  _symbol */\n      0x01\n        /* \"erc721Flat.sol\":26210:26224  return _symbol */\n      dup1\n      sload\n      tag_161\n      swap1\n      tag_100\n      jump\t// in\n    tag_161:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_162\n      swap1\n      tag_100\n      jump\t// in\n    tag_162:\n      dup1\n      iszero\n      tag_163\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_164\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_163)\n    tag_164:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_165:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_165\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_163:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"erc721Flat.sol\":26135:26232  function symbol() external view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"erc721Flat.sol\":27429:27576  function setApprovalForAll(address operator, bool approved)external virtual {... */\n    tag_78:\n        /* \"erc721Flat.sol\":27516:27568  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_167\n        /* \"erc721Flat.sol\":27535:27547  _msgSender() */\n      tag_168\n        /* \"erc721Flat.sol\":27535:27545  _msgSender */\n      tag_113\n        /* \"erc721Flat.sol\":27535:27547  _msgSender() */\n      jump\t// in\n    tag_168:\n        /* \"erc721Flat.sol\":27549:27557  operator */\n      dup4\n        /* \"erc721Flat.sol\":27559:27567  approved */\n      dup4\n        /* \"erc721Flat.sol\":27516:27534  _setApprovalForAll */\n      tag_169\n        /* \"erc721Flat.sol\":27516:27568  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_167:\n        /* \"erc721Flat.sol\":27429:27576  function setApprovalForAll(address operator, bool approved)external virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"erc721Flat.sol\":28735:28946  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_82:\n        /* \"erc721Flat.sol\":28849:28880  transferFrom(from, to, tokenId) */\n      tag_171\n        /* \"erc721Flat.sol\":28862:28866  from */\n      dup5\n        /* \"erc721Flat.sol\":28868:28870  to */\n      dup5\n        /* \"erc721Flat.sol\":28872:28879  tokenId */\n      dup5\n        /* \"erc721Flat.sol\":28849:28861  transferFrom */\n      tag_47\n        /* \"erc721Flat.sol\":28849:28880  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_171:\n        /* \"erc721Flat.sol\":28891:28938  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_172\n        /* \"erc721Flat.sol\":28914:28918  from */\n      dup5\n        /* \"erc721Flat.sol\":28920:28922  to */\n      dup5\n        /* \"erc721Flat.sol\":28924:28931  tokenId */\n      dup5\n        /* \"erc721Flat.sol\":28933:28937  data */\n      dup5\n        /* \"erc721Flat.sol\":28891:28913  _checkOnERC721Received */\n      tag_173\n        /* \"erc721Flat.sol\":28891:28938  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_172:\n        /* \"erc721Flat.sol\":28735:28946  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721Flat.sol\":41418:41614  function tokenURI(uint256 tokenId)... */\n    tag_85:\n        /* \"erc721Flat.sol\":41545:41558  string memory */\n      0x60\n        /* \"erc721Flat.sol\":41583:41606  super.tokenURI(tokenId) */\n      tag_175\n        /* \"erc721Flat.sol\":41598:41605  tokenId */\n      dup3\n        /* \"erc721Flat.sol\":41583:41597  super.tokenURI */\n      tag_176\n        /* \"erc721Flat.sol\":41583:41606  super.tokenURI(tokenId) */\n      jump\t// in\n    tag_175:\n        /* \"erc721Flat.sol\":41576:41606  return super.tokenURI(tokenId) */\n      swap1\n      pop\n        /* \"erc721Flat.sol\":41418:41614  function tokenURI(uint256 tokenId)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"erc721Flat.sol\":27647:27802  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_90:\n        /* \"erc721Flat.sol\":27735:27739  bool */\n      0x00\n        /* \"erc721Flat.sol\":27759:27777  _operatorApprovals */\n      0x05\n        /* \"erc721Flat.sol\":27759:27784  _operatorApprovals[owner] */\n      0x00\n        /* \"erc721Flat.sol\":27778:27783  owner */\n      dup5\n        /* \"erc721Flat.sol\":27759:27784  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"erc721Flat.sol\":27759:27794  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"erc721Flat.sol\":27785:27793  operator */\n      dup4\n        /* \"erc721Flat.sol\":27759:27794  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"erc721Flat.sol\":27752:27794  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"erc721Flat.sol\":27647:27802  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"erc721Flat.sol\":13383:13605  function transferOwnership(address newOwner) external virtual onlyOwner {... */\n    tag_94:\n        /* \"erc721Flat.sol\":12334:12347  _checkOwner() */\n      tag_179\n        /* \"erc721Flat.sol\":12334:12345  _checkOwner */\n      tag_130\n        /* \"erc721Flat.sol\":12334:12347  _checkOwner() */\n      jump\t// in\n    tag_179:\n        /* \"erc721Flat.sol\":13490:13491  0 */\n      0x00\n        /* \"erc721Flat.sol\":13470:13492  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721Flat.sol\":13470:13478  newOwner */\n      dup2\n        /* \"erc721Flat.sol\":13470:13492  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"erc721Flat.sol\":13466:13559  if (newOwner == address(0)) {... */\n      tag_181\n      jumpi\n        /* \"erc721Flat.sol\":13544:13545  0 */\n      0x00\n        /* \"erc721Flat.sol\":13516:13547  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_182\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721Flat.sol\":13466:13559  if (newOwner == address(0)) {... */\n    tag_181:\n        /* \"erc721Flat.sol\":13569:13597  _transferOwnership(newOwner) */\n      tag_183\n        /* \"erc721Flat.sol\":13588:13596  newOwner */\n      dup2\n        /* \"erc721Flat.sol\":13569:13587  _transferOwnership */\n      tag_158\n        /* \"erc721Flat.sol\":13569:13597  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_183:\n        /* \"erc721Flat.sol\":13383:13605  function transferOwnership(address newOwner) external virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"erc721Flat.sol\":39308:39517  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n    tag_97:\n        /* \"erc721Flat.sol\":39410:39414  bool */\n      0x00\n        /* \"erc721Flat.sol\":39123:39133  0x49064906 */\n      0x49064906\n        /* \"erc721Flat.sol\":39116:39134  bytes4(0x49064906) */\n      0xe0\n      shl\n        /* \"erc721Flat.sol\":39434:39469  interfaceId == ERC4906_INTERFACE_ID */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"erc721Flat.sol\":39434:39445  interfaceId */\n      dup3\n        /* \"erc721Flat.sol\":39434:39469  interfaceId == ERC4906_INTERFACE_ID */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"erc721Flat.sol\":39434:39509  interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n      dup1\n      tag_185\n      jumpi\n      pop\n        /* \"erc721Flat.sol\":39473:39509  super.supportsInterface(interfaceId) */\n      tag_186\n        /* \"erc721Flat.sol\":39497:39508  interfaceId */\n      dup3\n        /* \"erc721Flat.sol\":39473:39496  super.supportsInterface */\n      tag_187\n        /* \"erc721Flat.sol\":39473:39509  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_186:\n        /* \"erc721Flat.sol\":39434:39509  interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n    tag_185:\n        /* \"erc721Flat.sol\":39427:39509  return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"erc721Flat.sol\":39308:39517  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"erc721Flat.sol\":36023:36270  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_107:\n        /* \"erc721Flat.sol\":36086:36093  address */\n      0x00\n        /* \"erc721Flat.sol\":36106:36119  address owner */\n      dup1\n        /* \"erc721Flat.sol\":36122:36139  _ownerOf(tokenId) */\n      tag_189\n        /* \"erc721Flat.sol\":36131:36138  tokenId */\n      dup4\n        /* \"erc721Flat.sol\":36122:36130  _ownerOf */\n      tag_190\n        /* \"erc721Flat.sol\":36122:36139  _ownerOf(tokenId) */\n      jump\t// in\n    tag_189:\n        /* \"erc721Flat.sol\":36106:36139  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"erc721Flat.sol\":36171:36172  0 */\n      0x00\n        /* \"erc721Flat.sol\":36154:36173  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721Flat.sol\":36154:36159  owner */\n      dup2\n        /* \"erc721Flat.sol\":36154:36173  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"erc721Flat.sol\":36150:36240  if (owner == address(0)) {... */\n      tag_191\n      jumpi\n        /* \"erc721Flat.sol\":36220:36227  tokenId */\n      dup3\n        /* \"erc721Flat.sol\":36197:36228  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_192\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721Flat.sol\":36150:36240  if (owner == address(0)) {... */\n    tag_191:\n        /* \"erc721Flat.sol\":36257:36262  owner */\n      dup1\n        /* \"erc721Flat.sol\":36250:36262  return owner */\n      swap2\n      pop\n      pop\n        /* \"erc721Flat.sol\":36023:36270  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"erc721Flat.sol\":29708:29837  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_109:\n        /* \"erc721Flat.sol\":29778:29785  address */\n      0x00\n        /* \"erc721Flat.sol\":29805:29820  _tokenApprovals */\n      0x04\n        /* \"erc721Flat.sol\":29805:29829  _tokenApprovals[tokenId] */\n      0x00\n        /* \"erc721Flat.sol\":29821:29828  tokenId */\n      dup4\n        /* \"erc721Flat.sol\":29805:29829  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721Flat.sol\":29798:29829  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"erc721Flat.sol\":29708:29837  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"erc721Flat.sol\":10672:10770  function _msgSender() internal view virtual returns (address) {... */\n    tag_113:\n        /* \"erc721Flat.sol\":10725:10732  address */\n      0x00\n        /* \"erc721Flat.sol\":10752:10762  msg.sender */\n      caller\n        /* \"erc721Flat.sol\":10745:10762  return msg.sender */\n      swap1\n      pop\n        /* \"erc721Flat.sol\":10672:10770  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"erc721Flat.sol\":34255:34377  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_114:\n        /* \"erc721Flat.sol\":34336:34369  _approve(to, tokenId, auth, true) */\n      tag_196\n        /* \"erc721Flat.sol\":34345:34347  to */\n      dup4\n        /* \"erc721Flat.sol\":34349:34356  tokenId */\n      dup4\n        /* \"erc721Flat.sol\":34358:34362  auth */\n      dup4\n        /* \"erc721Flat.sol\":34364:34368  true */\n      0x01\n        /* \"erc721Flat.sol\":34336:34344  _approve */\n      tag_197\n        /* \"erc721Flat.sol\":34336:34369  _approve(to, tokenId, auth, true) */\n      jump\t// in\n    tag_196:\n        /* \"erc721Flat.sol\":34255:34377  function _approve(address to, uint256 tokenId, address auth) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721Flat.sol\":31863:32687  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_120:\n        /* \"erc721Flat.sol\":31949:31956  address */\n      0x00\n        /* \"erc721Flat.sol\":31969:31981  address from */\n      dup1\n        /* \"erc721Flat.sol\":31984:32001  _ownerOf(tokenId) */\n      tag_199\n        /* \"erc721Flat.sol\":31993:32000  tokenId */\n      dup5\n        /* \"erc721Flat.sol\":31984:31992  _ownerOf */\n      tag_190\n        /* \"erc721Flat.sol\":31984:32001  _ownerOf(tokenId) */\n      jump\t// in\n    tag_199:\n        /* \"erc721Flat.sol\":31969:32001  address from = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"erc721Flat.sol\":32080:32081  0 */\n      0x00\n        /* \"erc721Flat.sol\":32064:32082  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721Flat.sol\":32064:32068  auth */\n      dup4\n        /* \"erc721Flat.sol\":32064:32082  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"erc721Flat.sol\":32060:32148  if (auth != address(0)) {... */\n      tag_200\n      jumpi\n        /* \"erc721Flat.sol\":32099:32136  _checkAuthorized(from, auth, tokenId) */\n      tag_201\n        /* \"erc721Flat.sol\":32116:32120  from */\n      dup2\n        /* \"erc721Flat.sol\":32122:32126  auth */\n      dup5\n        /* \"erc721Flat.sol\":32128:32135  tokenId */\n      dup7\n        /* \"erc721Flat.sol\":32099:32115  _checkAuthorized */\n      tag_202\n        /* \"erc721Flat.sol\":32099:32136  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_201:\n        /* \"erc721Flat.sol\":32060:32148  if (auth != address(0)) {... */\n    tag_200:\n        /* \"erc721Flat.sol\":32211:32212  0 */\n      0x00\n        /* \"erc721Flat.sol\":32195:32213  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721Flat.sol\":32195:32199  from */\n      dup2\n        /* \"erc721Flat.sol\":32195:32213  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"erc721Flat.sol\":32191:32454  if (from != address(0)) {... */\n      tag_203\n      jumpi\n        /* \"erc721Flat.sol\":32313:32361  _approve(address(0), tokenId, address(0), false) */\n      tag_204\n        /* \"erc721Flat.sol\":32330:32331  0 */\n      0x00\n        /* \"erc721Flat.sol\":32334:32341  tokenId */\n      dup6\n        /* \"erc721Flat.sol\":32351:32352  0 */\n      0x00\n        /* \"erc721Flat.sol\":32355:32360  false */\n      dup1\n        /* \"erc721Flat.sol\":32313:32321  _approve */\n      tag_197\n        /* \"erc721Flat.sol\":32313:32361  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_204:\n        /* \"erc721Flat.sol\":32426:32427  1 */\n      0x01\n        /* \"erc721Flat.sol\":32407:32416  _balances */\n      0x03\n        /* \"erc721Flat.sol\":32407:32422  _balances[from] */\n      0x00\n        /* \"erc721Flat.sol\":32417:32421  from */\n      dup4\n        /* \"erc721Flat.sol\":32407:32422  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"erc721Flat.sol\":32407:32427  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"erc721Flat.sol\":32191:32454  if (from != address(0)) {... */\n    tag_203:\n        /* \"erc721Flat.sol\":32484:32485  0 */\n      0x00\n        /* \"erc721Flat.sol\":32470:32486  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721Flat.sol\":32470:32472  to */\n      dup6\n        /* \"erc721Flat.sol\":32470:32486  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"erc721Flat.sol\":32466:32577  if (to != address(0)) {... */\n      tag_205\n      jumpi\n        /* \"erc721Flat.sol\":32549:32550  1 */\n      0x01\n        /* \"erc721Flat.sol\":32532:32541  _balances */\n      0x03\n        /* \"erc721Flat.sol\":32532:32545  _balances[to] */\n      0x00\n        /* \"erc721Flat.sol\":32542:32544  to */\n      dup8\n        /* \"erc721Flat.sol\":32532:32545  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"erc721Flat.sol\":32532:32550  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"erc721Flat.sol\":32466:32577  if (to != address(0)) {... */\n    tag_205:\n        /* \"erc721Flat.sol\":32608:32610  to */\n      dup5\n        /* \"erc721Flat.sol\":32589:32596  _owners */\n      0x02\n        /* \"erc721Flat.sol\":32589:32605  _owners[tokenId] */\n      0x00\n        /* \"erc721Flat.sol\":32597:32604  tokenId */\n      dup7\n        /* \"erc721Flat.sol\":32589:32605  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"erc721Flat.sol\":32589:32610  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"erc721Flat.sol\":32647:32654  tokenId */\n      dup4\n        /* \"erc721Flat.sol\":32643:32645  to */\n      dup6\n        /* \"erc721Flat.sol\":32628:32655  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721Flat.sol\":32637:32641  from */\n      dup3\n        /* \"erc721Flat.sol\":32628:32655  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"erc721Flat.sol\":32675:32679  from */\n      dup1\n        /* \"erc721Flat.sol\":32668:32679  return from */\n      swap2\n      pop\n      pop\n        /* \"erc721Flat.sol\":31863:32687  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721Flat.sol\":12613:12779  function _checkOwner() internal view virtual {... */\n    tag_130:\n        /* \"erc721Flat.sol\":12684:12696  _msgSender() */\n      tag_207\n        /* \"erc721Flat.sol\":12684:12694  _msgSender */\n      tag_113\n        /* \"erc721Flat.sol\":12684:12696  _msgSender() */\n      jump\t// in\n    tag_207:\n        /* \"erc721Flat.sol\":12673:12696  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721Flat.sol\":12673:12680  owner() */\n      tag_208\n        /* \"erc721Flat.sol\":12673:12678  owner */\n      tag_70\n        /* \"erc721Flat.sol\":12673:12680  owner() */\n      jump\t// in\n    tag_208:\n        /* \"erc721Flat.sol\":12673:12696  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"erc721Flat.sol\":12669:12772  if (owner() != _msgSender()) {... */\n      tag_209\n      jumpi\n        /* \"erc721Flat.sol\":12747:12759  _msgSender() */\n      tag_210\n        /* \"erc721Flat.sol\":12747:12757  _msgSender */\n      tag_113\n        /* \"erc721Flat.sol\":12747:12759  _msgSender() */\n      jump\t// in\n    tag_210:\n        /* \"erc721Flat.sol\":12720:12760  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_211\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721Flat.sol\":12669:12772  if (owner() != _msgSender()) {... */\n    tag_209:\n        /* \"erc721Flat.sol\":12613:12779  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"erc721Flat.sol\":853:967  function current(Counter storage counter) internal view returns (uint256) {... */\n    tag_133:\n        /* \"erc721Flat.sol\":918:925  uint256 */\n      0x00\n        /* \"erc721Flat.sol\":945:952  counter */\n      dup2\n        /* \"erc721Flat.sol\":945:959  counter._value */\n      0x00\n      add\n      sload\n        /* \"erc721Flat.sol\":938:959  return counter._value */\n      swap1\n      pop\n        /* \"erc721Flat.sol\":853:967  function current(Counter storage counter) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"erc721Flat.sol\":975:1102  function increment(Counter storage counter) internal {... */\n    tag_135:\n        /* \"erc721Flat.sol\":1082:1083  1 */\n      0x01\n        /* \"erc721Flat.sol\":1064:1071  counter */\n      dup2\n        /* \"erc721Flat.sol\":1064:1078  counter._value */\n      0x00\n      add\n      0x00\n        /* \"erc721Flat.sol\":1064:1083  counter._value += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"erc721Flat.sol\":975:1102  function increment(Counter storage counter) internal {... */\n      pop\n      jump\t// out\n        /* \"erc721Flat.sol\":9414:9967  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_137:\n        /* \"erc721Flat.sol\":9470:9483  string memory */\n      0x60\n        /* \"erc721Flat.sol\":9509:9510  0 */\n      0x00\n        /* \"erc721Flat.sol\":9500:9505  value */\n      dup3\n        /* \"erc721Flat.sol\":9500:9510  value == 0 */\n      sub\n        /* \"erc721Flat.sol\":9496:9549  if (value == 0) {... */\n      tag_215\n      jumpi\n        /* \"erc721Flat.sol\":9527:9537  return \"0\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x01\n      dup2\n      mstore\n      0x20\n      add\n      0x3000000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n      jump(tag_214)\n        /* \"erc721Flat.sol\":9496:9549  if (value == 0) {... */\n    tag_215:\n        /* \"erc721Flat.sol\":9569:9581  uint256 temp */\n      0x00\n        /* \"erc721Flat.sol\":9584:9589  value */\n      dup3\n        /* \"erc721Flat.sol\":9569:9589  uint256 temp = value */\n      swap1\n      pop\n        /* \"erc721Flat.sol\":9600:9614  uint256 digits */\n      0x00\n        /* \"erc721Flat.sol\":9625:9703  while (temp != 0) {... */\n    tag_216:\n        /* \"erc721Flat.sol\":9640:9641  0 */\n      0x00\n        /* \"erc721Flat.sol\":9632:9636  temp */\n      dup3\n        /* \"erc721Flat.sol\":9632:9641  temp != 0 */\n      eq\n        /* \"erc721Flat.sol\":9625:9703  while (temp != 0) {... */\n      tag_217\n      jumpi\n        /* \"erc721Flat.sol\":9658:9666  digits++ */\n      dup1\n      dup1\n      tag_218\n      swap1\n      tag_219\n      jump\t// in\n    tag_218:\n      swap2\n      pop\n      pop\n        /* \"erc721Flat.sol\":9689:9691  10 */\n      0x0a\n        /* \"erc721Flat.sol\":9681:9691  temp /= 10 */\n      dup3\n      tag_220\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_220:\n      swap2\n      pop\n        /* \"erc721Flat.sol\":9625:9703  while (temp != 0) {... */\n      jump(tag_216)\n    tag_217:\n        /* \"erc721Flat.sol\":9723:9742  bytes memory buffer */\n      0x00\n        /* \"erc721Flat.sol\":9755:9761  digits */\n      dup2\n        /* \"erc721Flat.sol\":9745:9762  new bytes(digits) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_222\n      jumpi\n      tag_223\n      tag_224\n      jump\t// in\n    tag_223:\n    tag_222:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_225\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_225:\n      pop\n        /* \"erc721Flat.sol\":9723:9762  bytes memory buffer = new bytes(digits) */\n      swap1\n      pop\n        /* \"erc721Flat.sol\":9773:9918  while (value != 0) {... */\n    tag_226:\n        /* \"erc721Flat.sol\":9789:9790  0 */\n      0x00\n        /* \"erc721Flat.sol\":9780:9785  value */\n      dup6\n        /* \"erc721Flat.sol\":9780:9790  value != 0 */\n      eq\n        /* \"erc721Flat.sol\":9773:9918  while (value != 0) {... */\n      tag_227\n      jumpi\n        /* \"erc721Flat.sol\":9817:9818  1 */\n      0x01\n        /* \"erc721Flat.sol\":9807:9818  digits -= 1 */\n      dup3\n      tag_228\n      swap2\n      swap1\n      tag_229\n      jump\t// in\n    tag_228:\n      swap2\n      pop\n        /* \"erc721Flat.sol\":9876:9878  10 */\n      0x0a\n        /* \"erc721Flat.sol\":9868:9873  value */\n      dup6\n        /* \"erc721Flat.sol\":9868:9878  value % 10 */\n      tag_230\n      swap2\n      swap1\n      tag_231\n      jump\t// in\n    tag_230:\n        /* \"erc721Flat.sol\":9863:9865  48 */\n      0x30\n        /* \"erc721Flat.sol\":9863:9878  48 + value % 10 */\n      tag_232\n      swap2\n      swap1\n      tag_233\n      jump\t// in\n    tag_232:\n        /* \"erc721Flat.sol\":9850:9880  bytes1(uint8(48 + value % 10)) */\n      0xf8\n      shl\n        /* \"erc721Flat.sol\":9833:9839  buffer */\n      dup2\n        /* \"erc721Flat.sol\":9840:9846  digits */\n      dup4\n        /* \"erc721Flat.sol\":9833:9847  buffer[digits] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_234\n      jumpi\n      tag_235\n      tag_236\n      jump\t// in\n    tag_235:\n    tag_234:\n      0x20\n      add\n      add\n        /* \"erc721Flat.sol\":9833:9880  buffer[digits] = bytes1(uint8(48 + value % 10)) */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"erc721Flat.sol\":9904:9906  10 */\n      0x0a\n        /* \"erc721Flat.sol\":9895:9906  value /= 10 */\n      dup6\n      tag_237\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_237:\n      swap5\n      pop\n        /* \"erc721Flat.sol\":9773:9918  while (value != 0) {... */\n      jump(tag_226)\n    tag_227:\n        /* \"erc721Flat.sol\":9952:9958  buffer */\n      dup1\n        /* \"erc721Flat.sol\":9938:9959  return string(buffer) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"erc721Flat.sol\":9414:9967  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_214:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"erc721Flat.sol\":40323:40493  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {... */\n    tag_141:\n        /* \"erc721Flat.sol\":40437:40446  _tokenURI */\n      dup1\n        /* \"erc721Flat.sol\":40415:40425  _tokenURIs */\n      0x06\n        /* \"erc721Flat.sol\":40415:40434  _tokenURIs[tokenId] */\n      0x00\n        /* \"erc721Flat.sol\":40426:40433  tokenId */\n      dup5\n        /* \"erc721Flat.sol\":40415:40434  _tokenURIs[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"erc721Flat.sol\":40415:40446  _tokenURIs[tokenId] = _tokenURI */\n      swap1\n      dup2\n      tag_239\n      swap2\n      swap1\n      tag_240\n      jump\t// in\n    tag_239:\n      pop\n        /* \"erc721Flat.sol\":40462:40485  MetadataUpdate(tokenId) */\n      0xf8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7\n        /* \"erc721Flat.sol\":40477:40484  tokenId */\n      dup3\n        /* \"erc721Flat.sol\":40462:40485  MetadataUpdate(tokenId) */\n      mload(0x40)\n      tag_241\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_241:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"erc721Flat.sol\":40323:40493  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"erc721Flat.sol\":33721:33823  function _safeMint(address to, uint256 tokenId) internal {... */\n    tag_143:\n        /* \"erc721Flat.sol\":33789:33815  _safeMint(to, tokenId, \"\") */\n      tag_243\n        /* \"erc721Flat.sol\":33799:33801  to */\n      dup3\n        /* \"erc721Flat.sol\":33803:33810  tokenId */\n      dup3\n        /* \"erc721Flat.sol\":33789:33815  _safeMint(to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"erc721Flat.sol\":33789:33798  _safeMint */\n      tag_244\n        /* \"erc721Flat.sol\":33789:33815  _safeMint(to, tokenId, \"\") */\n      jump\t// in\n    tag_243:\n        /* \"erc721Flat.sol\":33721:33823  function _safeMint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"erc721Flat.sol\":13765:13956  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_158:\n        /* \"erc721Flat.sol\":13839:13855  address oldOwner */\n      0x00\n        /* \"erc721Flat.sol\":13858:13864  _owner */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721Flat.sol\":13839:13864  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"erc721Flat.sol\":13884:13892  newOwner */\n      dup2\n        /* \"erc721Flat.sol\":13875:13881  _owner */\n      0x07\n      0x00\n        /* \"erc721Flat.sol\":13875:13892  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"erc721Flat.sol\":13939:13947  newOwner */\n      dup2\n        /* \"erc721Flat.sol\":13908:13948  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721Flat.sol\":13929:13937  oldOwner */\n      dup2\n        /* \"erc721Flat.sol\":13908:13948  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"erc721Flat.sol\":13828:13956  {... */\n      pop\n        /* \"erc721Flat.sol\":13765:13956  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"erc721Flat.sol\":35462:35780  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_169:\n        /* \"erc721Flat.sol\":35590:35591  0 */\n      0x00\n        /* \"erc721Flat.sol\":35570:35592  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721Flat.sol\":35570:35578  operator */\n      dup3\n        /* \"erc721Flat.sol\":35570:35592  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"erc721Flat.sol\":35566:35659  if (operator == address(0)) {... */\n      tag_247\n      jumpi\n        /* \"erc721Flat.sol\":35638:35646  operator */\n      dup2\n        /* \"erc721Flat.sol\":35616:35647  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      0x5b08ba1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_248\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_248:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721Flat.sol\":35566:35659  if (operator == address(0)) {... */\n    tag_247:\n        /* \"erc721Flat.sol\":35707:35715  approved */\n      dup1\n        /* \"erc721Flat.sol\":35669:35687  _operatorApprovals */\n      0x05\n        /* \"erc721Flat.sol\":35669:35694  _operatorApprovals[owner] */\n      0x00\n        /* \"erc721Flat.sol\":35688:35693  owner */\n      dup6\n        /* \"erc721Flat.sol\":35669:35694  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"erc721Flat.sol\":35669:35704  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"erc721Flat.sol\":35695:35703  operator */\n      dup5\n        /* \"erc721Flat.sol\":35669:35704  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"erc721Flat.sol\":35669:35715  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"erc721Flat.sol\":35753:35761  operator */\n      dup2\n        /* \"erc721Flat.sol\":35731:35772  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721Flat.sol\":35746:35751  owner */\n      dup4\n        /* \"erc721Flat.sol\":35731:35772  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"erc721Flat.sol\":35763:35771  approved */\n      dup4\n        /* \"erc721Flat.sol\":35731:35772  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_249\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_249:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"erc721Flat.sol\":35462:35780  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721Flat.sol\":36820:37628  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_173:\n        /* \"erc721Flat.sol\":36954:36955  0 */\n      0x00\n        /* \"erc721Flat.sol\":36937:36939  to */\n      dup4\n        /* \"erc721Flat.sol\":36937:36951  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"erc721Flat.sol\":36937:36955  to.code.length > 0 */\n      gt\n        /* \"erc721Flat.sol\":36933:37621  if (to.code.length > 0) {... */\n      iszero\n      tag_251\n      jumpi\n        /* \"erc721Flat.sol\":36992:36994  to */\n      dup3\n        /* \"erc721Flat.sol\":36976:37012  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"erc721Flat.sol\":37013:37025  _msgSender() */\n      tag_252\n        /* \"erc721Flat.sol\":37013:37023  _msgSender */\n      tag_113\n        /* \"erc721Flat.sol\":37013:37025  _msgSender() */\n      jump\t// in\n    tag_252:\n        /* \"erc721Flat.sol\":37027:37031  from */\n      dup7\n        /* \"erc721Flat.sol\":37033:37040  tokenId */\n      dup6\n        /* \"erc721Flat.sol\":37042:37046  data */\n      dup6\n        /* \"erc721Flat.sol\":36976:37047  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_253\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_254\n      jump\t// in\n    tag_253:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_255\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_256\n      swap2\n      swap1\n      tag_257\n      jump\t// in\n    tag_256:\n      0x01\n    tag_255:\n        /* \"erc721Flat.sol\":36972:37610  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_258\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_263\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_262)\n    tag_263:\n      0x60\n      swap2\n      pop\n    tag_262:\n      pop\n        /* \"erc721Flat.sol\":37307:37308  0 */\n      0x00\n        /* \"erc721Flat.sol\":37290:37296  reason */\n      dup2\n        /* \"erc721Flat.sol\":37290:37303  reason.length */\n      mload\n        /* \"erc721Flat.sol\":37290:37308  reason.length == 0 */\n      sub\n        /* \"erc721Flat.sol\":37286:37595  if (reason.length == 0) {... */\n      tag_264\n      jumpi\n        /* \"erc721Flat.sol\":37362:37364  to */\n      dup4\n        /* \"erc721Flat.sol\":37340:37365  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_265\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_265:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721Flat.sol\":37286:37595  if (reason.length == 0) {... */\n    tag_264:\n        /* \"erc721Flat.sol\":37239:37610  catch (bytes memory reason) {... */\n      pop\n        /* \"erc721Flat.sol\":36972:37610  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      jump(tag_267)\n    tag_258:\n        /* \"erc721Flat.sol\":37105:37146  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"erc721Flat.sol\":37095:37146  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"erc721Flat.sol\":37095:37101  retval */\n      dup2\n        /* \"erc721Flat.sol\":37095:37146  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"erc721Flat.sol\":37091:37223  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_268\n      jumpi\n        /* \"erc721Flat.sol\":37200:37202  to */\n      dup4\n        /* \"erc721Flat.sol\":37178:37203  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_269\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_269:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721Flat.sol\":37091:37223  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_268:\n        /* \"erc721Flat.sol\":37048:37238  returns (bytes4 retval) {... */\n      pop\n        /* \"erc721Flat.sol\":36972:37610  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_267:\n        /* \"erc721Flat.sol\":36933:37621  if (to.code.length > 0) {... */\n    tag_251:\n        /* \"erc721Flat.sol\":36820:37628  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721Flat.sol\":39588:40197  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_176:\n        /* \"erc721Flat.sol\":39661:39674  string memory */\n      0x60\n        /* \"erc721Flat.sol\":39687:39709  _requireOwned(tokenId) */\n      tag_271\n        /* \"erc721Flat.sol\":39701:39708  tokenId */\n      dup3\n        /* \"erc721Flat.sol\":39687:39700  _requireOwned */\n      tag_107\n        /* \"erc721Flat.sol\":39687:39709  _requireOwned(tokenId) */\n      jump\t// in\n    tag_271:\n      pop\n        /* \"erc721Flat.sol\":39722:39745  string memory _tokenURI */\n      0x00\n        /* \"erc721Flat.sol\":39748:39758  _tokenURIs */\n      0x06\n        /* \"erc721Flat.sol\":39748:39767  _tokenURIs[tokenId] */\n      0x00\n        /* \"erc721Flat.sol\":39759:39766  tokenId */\n      dup5\n        /* \"erc721Flat.sol\":39748:39767  _tokenURIs[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"erc721Flat.sol\":39722:39767  string memory _tokenURI = _tokenURIs[tokenId] */\n      dup1\n      sload\n      tag_272\n      swap1\n      tag_100\n      jump\t// in\n    tag_272:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_273\n      swap1\n      tag_100\n      jump\t// in\n    tag_273:\n      dup1\n      iszero\n      tag_274\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_275\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_274)\n    tag_275:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_276:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_276\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_274:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"erc721Flat.sol\":39778:39796  string memory base */\n      0x00\n        /* \"erc721Flat.sol\":39799:39809  _baseURI() */\n      tag_277\n        /* \"erc721Flat.sol\":39799:39807  _baseURI */\n      tag_278\n        /* \"erc721Flat.sol\":39799:39809  _baseURI() */\n      jump\t// in\n    tag_277:\n        /* \"erc721Flat.sol\":39778:39809  string memory base = _baseURI() */\n      swap1\n      pop\n        /* \"erc721Flat.sol\":39907:39908  0 */\n      0x00\n        /* \"erc721Flat.sol\":39891:39895  base */\n      dup2\n        /* \"erc721Flat.sol\":39885:39903  bytes(base).length */\n      mload\n        /* \"erc721Flat.sol\":39885:39908  bytes(base).length == 0 */\n      sub\n        /* \"erc721Flat.sol\":39881:39953  if (bytes(base).length == 0) {... */\n      tag_279\n      jumpi\n        /* \"erc721Flat.sol\":39932:39941  _tokenURI */\n      dup2\n        /* \"erc721Flat.sol\":39925:39941  return _tokenURI */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_270)\n        /* \"erc721Flat.sol\":39881:39953  if (bytes(base).length == 0) {... */\n    tag_279:\n        /* \"erc721Flat.sol\":40080:40081  0 */\n      0x00\n        /* \"erc721Flat.sol\":40060:40069  _tokenURI */\n      dup3\n        /* \"erc721Flat.sol\":40054:40077  bytes(_tokenURI).length */\n      mload\n        /* \"erc721Flat.sol\":40054:40081  bytes(_tokenURI).length > 0 */\n      gt\n        /* \"erc721Flat.sol\":40050:40147  if (bytes(_tokenURI).length > 0) {... */\n      iszero\n      tag_280\n      jumpi\n        /* \"erc721Flat.sol\":40119:40123  base */\n      dup1\n        /* \"erc721Flat.sol\":40125:40134  _tokenURI */\n      dup3\n        /* \"erc721Flat.sol\":40105:40135  string.concat(base, _tokenURI) */\n      add(0x20, mload(0x40))\n      tag_281\n      swap3\n      swap2\n      swap1\n      tag_282\n      jump\t// in\n    tag_281:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"erc721Flat.sol\":40098:40135  return string.concat(base, _tokenURI) */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_270)\n        /* \"erc721Flat.sol\":40050:40147  if (bytes(_tokenURI).length > 0) {... */\n    tag_280:\n        /* \"erc721Flat.sol\":40166:40189  super.tokenURI(tokenId) */\n      tag_283\n        /* \"erc721Flat.sol\":40181:40188  tokenId */\n      dup5\n        /* \"erc721Flat.sol\":40166:40180  super.tokenURI */\n      tag_284\n        /* \"erc721Flat.sol\":40166:40189  super.tokenURI(tokenId) */\n      jump\t// in\n    tag_283:\n        /* \"erc721Flat.sol\":40159:40189  return super.tokenURI(tokenId) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"erc721Flat.sol\":39588:40197  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_270:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"erc721Flat.sol\":25138:25443  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_187:\n        /* \"erc721Flat.sol\":25240:25244  bool */\n      0x00\n        /* \"erc721Flat.sol\":25292:25317  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"erc721Flat.sol\":25277:25317  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"erc721Flat.sol\":25277:25288  interfaceId */\n      dup3\n        /* \"erc721Flat.sol\":25277:25317  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"erc721Flat.sol\":25277:25382  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_286\n      jumpi\n      pop\n        /* \"erc721Flat.sol\":25349:25382  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"erc721Flat.sol\":25334:25382  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"erc721Flat.sol\":25334:25345  interfaceId */\n      dup3\n        /* \"erc721Flat.sol\":25334:25382  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"erc721Flat.sol\":25277:25382  interfaceId == type(IERC721).interfaceId ||... */\n    tag_286:\n        /* \"erc721Flat.sol\":25277:25435  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_287\n      jumpi\n      pop\n        /* \"erc721Flat.sol\":25399:25435  super.supportsInterface(interfaceId) */\n      tag_288\n        /* \"erc721Flat.sol\":25423:25434  interfaceId */\n      dup3\n        /* \"erc721Flat.sol\":25399:25422  super.supportsInterface */\n      tag_289\n        /* \"erc721Flat.sol\":25399:25435  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_288:\n        /* \"erc721Flat.sol\":25277:25435  interfaceId == type(IERC721).interfaceId ||... */\n    tag_287:\n        /* \"erc721Flat.sol\":25257:25435  return... */\n      swap1\n      pop\n        /* \"erc721Flat.sol\":25138:25443  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"erc721Flat.sol\":29470:29587  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_190:\n        /* \"erc721Flat.sol\":29536:29543  address */\n      0x00\n        /* \"erc721Flat.sol\":29563:29570  _owners */\n      0x02\n        /* \"erc721Flat.sol\":29563:29579  _owners[tokenId] */\n      0x00\n        /* \"erc721Flat.sol\":29571:29578  tokenId */\n      dup4\n        /* \"erc721Flat.sol\":29563:29579  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721Flat.sol\":29556:29579  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"erc721Flat.sol\":29470:29587  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"erc721Flat.sol\":34565:35243  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_197:\n        /* \"erc721Flat.sol\":34727:34736  emitEvent */\n      dup1\n        /* \"erc721Flat.sol\":34727:34758  emitEvent || auth != address(0) */\n      dup1\n      tag_292\n      jumpi\n      pop\n        /* \"erc721Flat.sol\":34756:34757  0 */\n      0x00\n        /* \"erc721Flat.sol\":34740:34758  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721Flat.sol\":34740:34744  auth */\n      dup3\n        /* \"erc721Flat.sol\":34740:34758  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"erc721Flat.sol\":34727:34758  emitEvent || auth != address(0) */\n    tag_292:\n        /* \"erc721Flat.sol\":34723:35194  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_293\n      jumpi\n        /* \"erc721Flat.sol\":34775:34788  address owner */\n      0x00\n        /* \"erc721Flat.sol\":34791:34813  _requireOwned(tokenId) */\n      tag_294\n        /* \"erc721Flat.sol\":34805:34812  tokenId */\n      dup5\n        /* \"erc721Flat.sol\":34791:34804  _requireOwned */\n      tag_107\n        /* \"erc721Flat.sol\":34791:34813  _requireOwned(tokenId) */\n      jump\t// in\n    tag_294:\n        /* \"erc721Flat.sol\":34775:34813  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"erc721Flat.sol\":34960:34961  0 */\n      0x00\n        /* \"erc721Flat.sol\":34944:34962  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721Flat.sol\":34944:34948  auth */\n      dup4\n        /* \"erc721Flat.sol\":34944:34962  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"erc721Flat.sol\":34944:34979  auth != address(0) && owner != auth */\n      dup1\n      iszero\n      tag_295\n      jumpi\n      pop\n        /* \"erc721Flat.sol\":34975:34979  auth */\n      dup3\n        /* \"erc721Flat.sol\":34966:34979  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721Flat.sol\":34966:34971  owner */\n      dup2\n        /* \"erc721Flat.sol\":34966:34979  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"erc721Flat.sol\":34944:34979  auth != address(0) && owner != auth */\n    tag_295:\n        /* \"erc721Flat.sol\":34944:35013  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_296\n      jumpi\n      pop\n        /* \"erc721Flat.sol\":34984:35013  isApprovedForAll(owner, auth) */\n      tag_297\n        /* \"erc721Flat.sol\":35001:35006  owner */\n      dup2\n        /* \"erc721Flat.sol\":35008:35012  auth */\n      dup5\n        /* \"erc721Flat.sol\":34984:35000  isApprovedForAll */\n      tag_90\n        /* \"erc721Flat.sol\":34984:35013  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_297:\n        /* \"erc721Flat.sol\":34983:35013  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"erc721Flat.sol\":34944:35013  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_296:\n        /* \"erc721Flat.sol\":34940:35084  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_298\n      jumpi\n        /* \"erc721Flat.sol\":35063:35067  auth */\n      dup3\n        /* \"erc721Flat.sol\":35041:35068  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      0xa9fbf51f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_299\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_299:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721Flat.sol\":34940:35084  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_298:\n        /* \"erc721Flat.sol\":35104:35113  emitEvent */\n      dup2\n        /* \"erc721Flat.sol\":35100:35183  if (emitEvent) {... */\n      iszero\n      tag_300\n      jumpi\n        /* \"erc721Flat.sol\":35159:35166  tokenId */\n      dup4\n        /* \"erc721Flat.sol\":35155:35157  to */\n      dup6\n        /* \"erc721Flat.sol\":35139:35167  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721Flat.sol\":35148:35153  owner */\n      dup3\n        /* \"erc721Flat.sol\":35139:35167  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"erc721Flat.sol\":35100:35183  if (emitEvent) {... */\n    tag_300:\n        /* \"erc721Flat.sol\":34760:35194  {... */\n      pop\n        /* \"erc721Flat.sol\":34723:35194  if (emitEvent || auth != address(0)) {... */\n    tag_293:\n        /* \"erc721Flat.sol\":35233:35235  to */\n      dup4\n        /* \"erc721Flat.sol\":35206:35221  _tokenApprovals */\n      0x04\n        /* \"erc721Flat.sol\":35206:35230  _tokenApprovals[tokenId] */\n      0x00\n        /* \"erc721Flat.sol\":35222:35229  tokenId */\n      dup6\n        /* \"erc721Flat.sol\":35206:35230  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"erc721Flat.sol\":35206:35235  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"erc721Flat.sol\":34565:35243  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721Flat.sol\":30877:31253  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_202:\n        /* \"erc721Flat.sol\":30990:31028  _isAuthorized(owner, spender, tokenId) */\n      tag_302\n        /* \"erc721Flat.sol\":31004:31009  owner */\n      dup4\n        /* \"erc721Flat.sol\":31011:31018  spender */\n      dup4\n        /* \"erc721Flat.sol\":31020:31027  tokenId */\n      dup4\n        /* \"erc721Flat.sol\":30990:31003  _isAuthorized */\n      tag_303\n        /* \"erc721Flat.sol\":30990:31028  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_302:\n        /* \"erc721Flat.sol\":30985:31246  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_304\n      jumpi\n        /* \"erc721Flat.sol\":31066:31067  0 */\n      0x00\n        /* \"erc721Flat.sol\":31049:31068  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721Flat.sol\":31049:31054  owner */\n      dup4\n        /* \"erc721Flat.sol\":31049:31068  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"erc721Flat.sol\":31045:31235  if (owner == address(0)) {... */\n      tag_305\n      jumpi\n        /* \"erc721Flat.sol\":31119:31126  tokenId */\n      dup1\n        /* \"erc721Flat.sol\":31096:31127  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_306\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_306:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721Flat.sol\":31045:31235  if (owner == address(0)) {... */\n    tag_305:\n        /* \"erc721Flat.sol\":31202:31209  spender */\n      dup2\n        /* \"erc721Flat.sol\":31211:31218  tokenId */\n      dup2\n        /* \"erc721Flat.sol\":31175:31219  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      0x177e802f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_308\n      swap3\n      swap2\n      swap1\n      tag_309\n      jump\t// in\n    tag_308:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721Flat.sol\":30985:31246  if (!_isAuthorized(owner, spender, tokenId)) {... */\n    tag_304:\n        /* \"erc721Flat.sol\":30877:31253  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721Flat.sol\":34050:34235  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\n    tag_244:\n        /* \"erc721Flat.sol\":34145:34163  _mint(to, tokenId) */\n      tag_311\n        /* \"erc721Flat.sol\":34151:34153  to */\n      dup4\n        /* \"erc721Flat.sol\":34155:34162  tokenId */\n      dup4\n        /* \"erc721Flat.sol\":34145:34150  _mint */\n      tag_312\n        /* \"erc721Flat.sol\":34145:34163  _mint(to, tokenId) */\n      jump\t// in\n    tag_311:\n        /* \"erc721Flat.sol\":34174:34227  _checkOnERC721Received(address(0), to, tokenId, data) */\n      tag_313\n        /* \"erc721Flat.sol\":34205:34206  0 */\n      0x00\n        /* \"erc721Flat.sol\":34209:34211  to */\n      dup5\n        /* \"erc721Flat.sol\":34213:34220  tokenId */\n      dup5\n        /* \"erc721Flat.sol\":34222:34226  data */\n      dup5\n        /* \"erc721Flat.sol\":34174:34196  _checkOnERC721Received */\n      tag_173\n        /* \"erc721Flat.sol\":34174:34227  _checkOnERC721Received(address(0), to, tokenId, data) */\n      jump\t// in\n    tag_313:\n        /* \"erc721Flat.sol\":34050:34235  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721Flat.sol\":26812:26952  function _baseURI() internal pure returns (string memory) {... */\n    tag_278:\n        /* \"erc721Flat.sol\":26855:26868  string memory */\n      0x60\n        /* \"erc721Flat.sol\":26881:26944  return \"ipfs://Qmac89sZTSGvKkyYa2vrxdRakPREaGFJSNJRRWetzTLQTM/\" */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x36\n      dup2\n      mstore\n      0x20\n      add\n      data_1250311f865916c0c48ec18be7711c5b67f23674d6e827435103b8b03cf0ba32\n      0x36\n      swap2\n      codecopy\n      swap1\n      pop\n        /* \"erc721Flat.sol\":26812:26952  function _baseURI() internal pure returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"erc721Flat.sol\":26303:26563  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_284:\n        /* \"erc721Flat.sol\":26367:26380  string memory */\n      0x60\n        /* \"erc721Flat.sol\":26393:26415  _requireOwned(tokenId) */\n      tag_316\n        /* \"erc721Flat.sol\":26407:26414  tokenId */\n      dup3\n        /* \"erc721Flat.sol\":26393:26406  _requireOwned */\n      tag_107\n        /* \"erc721Flat.sol\":26393:26415  _requireOwned(tokenId) */\n      jump\t// in\n    tag_316:\n      pop\n        /* \"erc721Flat.sol\":26428:26449  string memory baseURI */\n      0x00\n        /* \"erc721Flat.sol\":26452:26462  _baseURI() */\n      tag_317\n        /* \"erc721Flat.sol\":26452:26460  _baseURI */\n      tag_278\n        /* \"erc721Flat.sol\":26452:26462  _baseURI() */\n      jump\t// in\n    tag_317:\n        /* \"erc721Flat.sol\":26428:26462  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"erc721Flat.sol\":26504:26505  0 */\n      0x00\n        /* \"erc721Flat.sol\":26486:26493  baseURI */\n      dup2\n        /* \"erc721Flat.sol\":26480:26501  bytes(baseURI).length */\n      mload\n        /* \"erc721Flat.sol\":26480:26505  bytes(baseURI).length > 0 */\n      gt\n        /* \"erc721Flat.sol\":26480:26555  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      tag_318\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_319)\n    tag_318:\n        /* \"erc721Flat.sol\":26522:26529  baseURI */\n      dup1\n        /* \"erc721Flat.sol\":26531:26549  tokenId.toString() */\n      tag_320\n        /* \"erc721Flat.sol\":26531:26538  tokenId */\n      dup5\n        /* \"erc721Flat.sol\":26531:26547  tokenId.toString */\n      tag_137\n        /* \"erc721Flat.sol\":26531:26549  tokenId.toString() */\n      jump\t// in\n    tag_320:\n        /* \"erc721Flat.sol\":26508:26550  string.concat(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_321\n      swap3\n      swap2\n      swap1\n      tag_282\n      jump\t// in\n    tag_321:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"erc721Flat.sol\":26480:26555  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n    tag_319:\n        /* \"erc721Flat.sol\":26473:26555  return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      swap2\n      pop\n      pop\n        /* \"erc721Flat.sol\":26303:26563  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"erc721Flat.sol\":16903:17051  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_289:\n        /* \"erc721Flat.sol\":16979:16983  bool */\n      0x00\n        /* \"erc721Flat.sol\":17018:17043  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"erc721Flat.sol\":17003:17043  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"erc721Flat.sol\":17003:17014  interfaceId */\n      dup3\n        /* \"erc721Flat.sol\":17003:17043  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"erc721Flat.sol\":16996:17043  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"erc721Flat.sol\":16903:17051  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"erc721Flat.sol\":30157:30433  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_303:\n        /* \"erc721Flat.sol\":30260:30264  bool */\n      0x00\n        /* \"erc721Flat.sol\":30316:30317  0 */\n      dup1\n        /* \"erc721Flat.sol\":30297:30318  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721Flat.sol\":30297:30304  spender */\n      dup4\n        /* \"erc721Flat.sol\":30297:30318  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"erc721Flat.sol\":30297:30425  spender != address(0) &&... */\n      dup1\n      iszero\n      tag_324\n      jumpi\n      pop\n        /* \"erc721Flat.sol\":30345:30352  spender */\n      dup3\n        /* \"erc721Flat.sol\":30336:30352  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721Flat.sol\":30336:30341  owner */\n      dup5\n        /* \"erc721Flat.sol\":30336:30352  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"erc721Flat.sol\":30336:30388  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_325\n      jumpi\n      pop\n        /* \"erc721Flat.sol\":30356:30388  isApprovedForAll(owner, spender) */\n      tag_326\n        /* \"erc721Flat.sol\":30373:30378  owner */\n      dup5\n        /* \"erc721Flat.sol\":30380:30387  spender */\n      dup5\n        /* \"erc721Flat.sol\":30356:30372  isApprovedForAll */\n      tag_90\n        /* \"erc721Flat.sol\":30356:30388  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_326:\n        /* \"erc721Flat.sol\":30336:30388  owner == spender || isApprovedForAll(owner, spender) */\n    tag_325:\n        /* \"erc721Flat.sol\":30336:30424  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_327\n      jumpi\n      pop\n        /* \"erc721Flat.sol\":30417:30424  spender */\n      dup3\n        /* \"erc721Flat.sol\":30392:30424  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721Flat.sol\":30392:30413  _getApproved(tokenId) */\n      tag_328\n        /* \"erc721Flat.sol\":30405:30412  tokenId */\n      dup4\n        /* \"erc721Flat.sol\":30392:30404  _getApproved */\n      tag_109\n        /* \"erc721Flat.sol\":30392:30413  _getApproved(tokenId) */\n      jump\t// in\n    tag_328:\n        /* \"erc721Flat.sol\":30392:30424  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"erc721Flat.sol\":30336:30424  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n    tag_327:\n        /* \"erc721Flat.sol\":30297:30425  spender != address(0) &&... */\n    tag_324:\n        /* \"erc721Flat.sol\":30277:30425  return... */\n      swap1\n      pop\n        /* \"erc721Flat.sol\":30157:30433  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721Flat.sol\":33023:33358  function _mint(address to, uint256 tokenId) internal {... */\n    tag_312:\n        /* \"erc721Flat.sol\":33105:33106  0 */\n      0x00\n        /* \"erc721Flat.sol\":33091:33107  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721Flat.sol\":33091:33093  to */\n      dup3\n        /* \"erc721Flat.sol\":33091:33107  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"erc721Flat.sol\":33087:33176  if (to == address(0)) {... */\n      tag_330\n      jumpi\n        /* \"erc721Flat.sol\":33161:33162  0 */\n      0x00\n        /* \"erc721Flat.sol\":33131:33164  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_331\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_331:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721Flat.sol\":33087:33176  if (to == address(0)) {... */\n    tag_330:\n        /* \"erc721Flat.sol\":33186:33207  address previousOwner */\n      0x00\n        /* \"erc721Flat.sol\":33210:33242  _update(to, tokenId, address(0)) */\n      tag_332\n        /* \"erc721Flat.sol\":33218:33220  to */\n      dup4\n        /* \"erc721Flat.sol\":33222:33229  tokenId */\n      dup4\n        /* \"erc721Flat.sol\":33239:33240  0 */\n      0x00\n        /* \"erc721Flat.sol\":33210:33217  _update */\n      tag_120\n        /* \"erc721Flat.sol\":33210:33242  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_332:\n        /* \"erc721Flat.sol\":33186:33242  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n        /* \"erc721Flat.sol\":33282:33283  0 */\n      0x00\n        /* \"erc721Flat.sol\":33257:33284  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721Flat.sol\":33257:33270  previousOwner */\n      dup2\n        /* \"erc721Flat.sol\":33257:33284  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"erc721Flat.sol\":33253:33351  if (previousOwner != address(0)) {... */\n      tag_333\n      jumpi\n        /* \"erc721Flat.sol\":33336:33337  0 */\n      0x00\n        /* \"erc721Flat.sol\":33308:33339  ERC721InvalidSender(address(0)) */\n      mload(0x40)\n      0x73c6ac6e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_334\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_334:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721Flat.sol\":33253:33351  if (previousOwner != address(0)) {... */\n    tag_333:\n        /* \"erc721Flat.sol\":33076:33358  {... */\n      pop\n        /* \"erc721Flat.sol\":33023:33358  function _mint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_335:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_336:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_337:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_338:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_339:\n        /* \"#utility.yul\":561:584   */\n      tag_400\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_338\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_401\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_401:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_340:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_403\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_339\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_26:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_405\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_406\n      tag_336\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":833:952   */\n    tag_405:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_407\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_340\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_341:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_342:\n        /* \"#utility.yul\":1268:1289   */\n      tag_410\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_341\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_29:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_412\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_342\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_343:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_344:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2044   */\n    tag_345:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1889:2002   */\n    tag_416:\n        /* \"#utility.yul\":1903:1909   */\n      dup4\n        /* \"#utility.yul\":1900:1901   */\n      dup2\n        /* \"#utility.yul\":1897:1910   */\n      lt\n        /* \"#utility.yul\":1889:2002   */\n      iszero\n      tag_418\n      jumpi\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1983:1986   */\n      dup3\n        /* \"#utility.yul\":1979:1990   */\n      add\n        /* \"#utility.yul\":1973:1991   */\n      mload\n        /* \"#utility.yul\":1969:1970   */\n      dup2\n        /* \"#utility.yul\":1964:1967   */\n      dup5\n        /* \"#utility.yul\":1960:1971   */\n      add\n        /* \"#utility.yul\":1953:1992   */\n      mstore\n        /* \"#utility.yul\":1925:1927   */\n      0x20\n        /* \"#utility.yul\":1922:1923   */\n      dup2\n        /* \"#utility.yul\":1918:1928   */\n      add\n        /* \"#utility.yul\":1913:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2002   */\n      jump(tag_416)\n    tag_418:\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2027:2033   */\n      dup5\n        /* \"#utility.yul\":2022:2025   */\n      dup5\n        /* \"#utility.yul\":2018:2034   */\n      add\n        /* \"#utility.yul\":2011:2038   */\n      mstore\n        /* \"#utility.yul\":1860:2044   */\n      pop\n        /* \"#utility.yul\":1798:2044   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2050:2152   */\n    tag_346:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2142:2144   */\n      0x1f\n        /* \"#utility.yul\":2138:2145   */\n      not\n        /* \"#utility.yul\":2133:2135   */\n      0x1f\n        /* \"#utility.yul\":2126:2131   */\n      dup4\n        /* \"#utility.yul\":2122:2136   */\n      add\n        /* \"#utility.yul\":2118:2146   */\n      and\n        /* \"#utility.yul\":2108:2146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2050:2152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2158:2535   */\n    tag_347:\n        /* \"#utility.yul\":2246:2249   */\n      0x00\n        /* \"#utility.yul\":2274:2313   */\n      tag_421\n        /* \"#utility.yul\":2307:2312   */\n      dup3\n        /* \"#utility.yul\":2274:2313   */\n      tag_343\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":2329:2400   */\n      tag_422\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2388:2391   */\n      dup6\n        /* \"#utility.yul\":2329:2400   */\n      tag_344\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":2322:2400   */\n      swap4\n      pop\n        /* \"#utility.yul\":2409:2474   */\n      tag_423\n        /* \"#utility.yul\":2467:2473   */\n      dup2\n        /* \"#utility.yul\":2462:2465   */\n      dup6\n        /* \"#utility.yul\":2455:2459   */\n      0x20\n        /* \"#utility.yul\":2448:2453   */\n      dup7\n        /* \"#utility.yul\":2444:2460   */\n      add\n        /* \"#utility.yul\":2409:2474   */\n      tag_345\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":2499:2528   */\n      tag_424\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2499:2528   */\n      tag_346\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":2494:2497   */\n      dup5\n        /* \"#utility.yul\":2490:2529   */\n      add\n        /* \"#utility.yul\":2483:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2535   */\n      pop\n        /* \"#utility.yul\":2158:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2854   */\n    tag_33:\n        /* \"#utility.yul\":2654:2658   */\n      0x00\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"#utility.yul\":2669:2695   */\n      swap1\n      pop\n        /* \"#utility.yul\":2741:2750   */\n      dup2\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2731:2751   */\n      sub\n        /* \"#utility.yul\":2727:2728   */\n      0x00\n        /* \"#utility.yul\":2716:2725   */\n      dup4\n        /* \"#utility.yul\":2712:2729   */\n      add\n        /* \"#utility.yul\":2705:2752   */\n      mstore\n        /* \"#utility.yul\":2769:2847   */\n      tag_426\n        /* \"#utility.yul\":2842:2846   */\n      dup2\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2769:2847   */\n      tag_347\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":2761:2847   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2937   */\n    tag_348:\n        /* \"#utility.yul\":2897:2904   */\n      0x00\n        /* \"#utility.yul\":2926:2931   */\n      dup2\n        /* \"#utility.yul\":2915:2931   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:2937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2943:3065   */\n    tag_349:\n        /* \"#utility.yul\":3016:3040   */\n      tag_429\n        /* \"#utility.yul\":3034:3039   */\n      dup2\n        /* \"#utility.yul\":3016:3040   */\n      tag_348\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":3009:3014   */\n      dup2\n        /* \"#utility.yul\":3006:3041   */\n      eq\n        /* \"#utility.yul\":2996:3059   */\n      tag_430\n      jumpi\n        /* \"#utility.yul\":3055:3056   */\n      0x00\n        /* \"#utility.yul\":3052:3053   */\n      dup1\n        /* \"#utility.yul\":3045:3057   */\n      revert\n        /* \"#utility.yul\":2996:3059   */\n    tag_430:\n        /* \"#utility.yul\":2943:3065   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3071:3210   */\n    tag_350:\n        /* \"#utility.yul\":3117:3122   */\n      0x00\n        /* \"#utility.yul\":3155:3161   */\n      dup2\n        /* \"#utility.yul\":3142:3162   */\n      calldataload\n        /* \"#utility.yul\":3133:3162   */\n      swap1\n      pop\n        /* \"#utility.yul\":3171:3204   */\n      tag_432\n        /* \"#utility.yul\":3198:3203   */\n      dup2\n        /* \"#utility.yul\":3171:3204   */\n      tag_349\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":3071:3210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3216:3545   */\n    tag_36:\n        /* \"#utility.yul\":3275:3281   */\n      0x00\n        /* \"#utility.yul\":3324:3326   */\n      0x20\n        /* \"#utility.yul\":3312:3321   */\n      dup3\n        /* \"#utility.yul\":3303:3310   */\n      dup5\n        /* \"#utility.yul\":3299:3322   */\n      sub\n        /* \"#utility.yul\":3295:3327   */\n      slt\n        /* \"#utility.yul\":3292:3411   */\n      iszero\n      tag_434\n      jumpi\n        /* \"#utility.yul\":3330:3409   */\n      tag_435\n      tag_336\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":3292:3411   */\n    tag_434:\n        /* \"#utility.yul\":3450:3451   */\n      0x00\n        /* \"#utility.yul\":3475:3528   */\n      tag_436\n        /* \"#utility.yul\":3520:3527   */\n      dup5\n        /* \"#utility.yul\":3511:3517   */\n      dup3\n        /* \"#utility.yul\":3500:3509   */\n      dup6\n        /* \"#utility.yul\":3496:3518   */\n      add\n        /* \"#utility.yul\":3475:3528   */\n      tag_350\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":3465:3528   */\n      swap2\n      pop\n        /* \"#utility.yul\":3421:3538   */\n      pop\n        /* \"#utility.yul\":3216:3545   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3551:3677   */\n    tag_351:\n        /* \"#utility.yul\":3588:3595   */\n      0x00\n        /* \"#utility.yul\":3628:3670   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3621:3626   */\n      dup3\n        /* \"#utility.yul\":3617:3671   */\n      and\n        /* \"#utility.yul\":3606:3671   */\n      swap1\n      pop\n        /* \"#utility.yul\":3551:3677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3683:3779   */\n    tag_352:\n        /* \"#utility.yul\":3720:3727   */\n      0x00\n        /* \"#utility.yul\":3749:3773   */\n      tag_439\n        /* \"#utility.yul\":3767:3772   */\n      dup3\n        /* \"#utility.yul\":3749:3773   */\n      tag_351\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":3738:3773   */\n      swap1\n      pop\n        /* \"#utility.yul\":3683:3779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3785:3903   */\n    tag_353:\n        /* \"#utility.yul\":3872:3896   */\n      tag_441\n        /* \"#utility.yul\":3890:3895   */\n      dup2\n        /* \"#utility.yul\":3872:3896   */\n      tag_352\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":3867:3870   */\n      dup3\n        /* \"#utility.yul\":3860:3897   */\n      mstore\n        /* \"#utility.yul\":3785:3903   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3909:4131   */\n    tag_39:\n        /* \"#utility.yul\":4002:4006   */\n      0x00\n        /* \"#utility.yul\":4040:4042   */\n      0x20\n        /* \"#utility.yul\":4029:4038   */\n      dup3\n        /* \"#utility.yul\":4025:4043   */\n      add\n        /* \"#utility.yul\":4017:4043   */\n      swap1\n      pop\n        /* \"#utility.yul\":4053:4124   */\n      tag_443\n        /* \"#utility.yul\":4121:4122   */\n      0x00\n        /* \"#utility.yul\":4110:4119   */\n      dup4\n        /* \"#utility.yul\":4106:4123   */\n      add\n        /* \"#utility.yul\":4097:4103   */\n      dup5\n        /* \"#utility.yul\":4053:4124   */\n      tag_353\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":3909:4131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4137:4259   */\n    tag_354:\n        /* \"#utility.yul\":4210:4234   */\n      tag_445\n        /* \"#utility.yul\":4228:4233   */\n      dup2\n        /* \"#utility.yul\":4210:4234   */\n      tag_352\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":4203:4208   */\n      dup2\n        /* \"#utility.yul\":4200:4235   */\n      eq\n        /* \"#utility.yul\":4190:4253   */\n      tag_446\n      jumpi\n        /* \"#utility.yul\":4249:4250   */\n      0x00\n        /* \"#utility.yul\":4246:4247   */\n      dup1\n        /* \"#utility.yul\":4239:4251   */\n      revert\n        /* \"#utility.yul\":4190:4253   */\n    tag_446:\n        /* \"#utility.yul\":4137:4259   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4265:4404   */\n    tag_355:\n        /* \"#utility.yul\":4311:4316   */\n      0x00\n        /* \"#utility.yul\":4349:4355   */\n      dup2\n        /* \"#utility.yul\":4336:4356   */\n      calldataload\n        /* \"#utility.yul\":4327:4356   */\n      swap1\n      pop\n        /* \"#utility.yul\":4365:4398   */\n      tag_448\n        /* \"#utility.yul\":4392:4397   */\n      dup2\n        /* \"#utility.yul\":4365:4398   */\n      tag_354\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":4265:4404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4410:4884   */\n    tag_42:\n        /* \"#utility.yul\":4478:4484   */\n      0x00\n        /* \"#utility.yul\":4486:4492   */\n      dup1\n        /* \"#utility.yul\":4535:4537   */\n      0x40\n        /* \"#utility.yul\":4523:4532   */\n      dup4\n        /* \"#utility.yul\":4514:4521   */\n      dup6\n        /* \"#utility.yul\":4510:4533   */\n      sub\n        /* \"#utility.yul\":4506:4538   */\n      slt\n        /* \"#utility.yul\":4503:4622   */\n      iszero\n      tag_450\n      jumpi\n        /* \"#utility.yul\":4541:4620   */\n      tag_451\n      tag_336\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":4503:4622   */\n    tag_450:\n        /* \"#utility.yul\":4661:4662   */\n      0x00\n        /* \"#utility.yul\":4686:4739   */\n      tag_452\n        /* \"#utility.yul\":4731:4738   */\n      dup6\n        /* \"#utility.yul\":4722:4728   */\n      dup3\n        /* \"#utility.yul\":4711:4720   */\n      dup7\n        /* \"#utility.yul\":4707:4729   */\n      add\n        /* \"#utility.yul\":4686:4739   */\n      tag_355\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":4676:4739   */\n      swap3\n      pop\n        /* \"#utility.yul\":4632:4749   */\n      pop\n        /* \"#utility.yul\":4788:4790   */\n      0x20\n        /* \"#utility.yul\":4814:4867   */\n      tag_453\n        /* \"#utility.yul\":4859:4866   */\n      dup6\n        /* \"#utility.yul\":4850:4856   */\n      dup3\n        /* \"#utility.yul\":4839:4848   */\n      dup7\n        /* \"#utility.yul\":4835:4857   */\n      add\n        /* \"#utility.yul\":4814:4867   */\n      tag_350\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":4804:4867   */\n      swap2\n      pop\n        /* \"#utility.yul\":4759:4877   */\n      pop\n        /* \"#utility.yul\":4410:4884   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4890:5509   */\n    tag_46:\n        /* \"#utility.yul\":4967:4973   */\n      0x00\n        /* \"#utility.yul\":4975:4981   */\n      dup1\n        /* \"#utility.yul\":4983:4989   */\n      0x00\n        /* \"#utility.yul\":5032:5034   */\n      0x60\n        /* \"#utility.yul\":5020:5029   */\n      dup5\n        /* \"#utility.yul\":5011:5018   */\n      dup7\n        /* \"#utility.yul\":5007:5030   */\n      sub\n        /* \"#utility.yul\":5003:5035   */\n      slt\n        /* \"#utility.yul\":5000:5119   */\n      iszero\n      tag_455\n      jumpi\n        /* \"#utility.yul\":5038:5117   */\n      tag_456\n      tag_336\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":5000:5119   */\n    tag_455:\n        /* \"#utility.yul\":5158:5159   */\n      0x00\n        /* \"#utility.yul\":5183:5236   */\n      tag_457\n        /* \"#utility.yul\":5228:5235   */\n      dup7\n        /* \"#utility.yul\":5219:5225   */\n      dup3\n        /* \"#utility.yul\":5208:5217   */\n      dup8\n        /* \"#utility.yul\":5204:5226   */\n      add\n        /* \"#utility.yul\":5183:5236   */\n      tag_355\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":5173:5236   */\n      swap4\n      pop\n        /* \"#utility.yul\":5129:5246   */\n      pop\n        /* \"#utility.yul\":5285:5287   */\n      0x20\n        /* \"#utility.yul\":5311:5364   */\n      tag_458\n        /* \"#utility.yul\":5356:5363   */\n      dup7\n        /* \"#utility.yul\":5347:5353   */\n      dup3\n        /* \"#utility.yul\":5336:5345   */\n      dup8\n        /* \"#utility.yul\":5332:5354   */\n      add\n        /* \"#utility.yul\":5311:5364   */\n      tag_355\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":5301:5364   */\n      swap3\n      pop\n        /* \"#utility.yul\":5256:5374   */\n      pop\n        /* \"#utility.yul\":5413:5415   */\n      0x40\n        /* \"#utility.yul\":5439:5492   */\n      tag_459\n        /* \"#utility.yul\":5484:5491   */\n      dup7\n        /* \"#utility.yul\":5475:5481   */\n      dup3\n        /* \"#utility.yul\":5464:5473   */\n      dup8\n        /* \"#utility.yul\":5460:5482   */\n      add\n        /* \"#utility.yul\":5439:5492   */\n      tag_350\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":5429:5492   */\n      swap2\n      pop\n        /* \"#utility.yul\":5384:5502   */\n      pop\n        /* \"#utility.yul\":4890:5509   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5515:5844   */\n    tag_50:\n        /* \"#utility.yul\":5574:5580   */\n      0x00\n        /* \"#utility.yul\":5623:5625   */\n      0x20\n        /* \"#utility.yul\":5611:5620   */\n      dup3\n        /* \"#utility.yul\":5602:5609   */\n      dup5\n        /* \"#utility.yul\":5598:5621   */\n      sub\n        /* \"#utility.yul\":5594:5626   */\n      slt\n        /* \"#utility.yul\":5591:5710   */\n      iszero\n      tag_461\n      jumpi\n        /* \"#utility.yul\":5629:5708   */\n      tag_462\n      tag_336\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":5591:5710   */\n    tag_461:\n        /* \"#utility.yul\":5749:5750   */\n      0x00\n        /* \"#utility.yul\":5774:5827   */\n      tag_463\n        /* \"#utility.yul\":5819:5826   */\n      dup5\n        /* \"#utility.yul\":5810:5816   */\n      dup3\n        /* \"#utility.yul\":5799:5808   */\n      dup6\n        /* \"#utility.yul\":5795:5817   */\n      add\n        /* \"#utility.yul\":5774:5827   */\n      tag_355\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":5764:5827   */\n      swap2\n      pop\n        /* \"#utility.yul\":5720:5837   */\n      pop\n        /* \"#utility.yul\":5515:5844   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5850:5968   */\n    tag_356:\n        /* \"#utility.yul\":5937:5961   */\n      tag_465\n        /* \"#utility.yul\":5955:5960   */\n      dup2\n        /* \"#utility.yul\":5937:5961   */\n      tag_348\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":5932:5935   */\n      dup3\n        /* \"#utility.yul\":5925:5962   */\n      mstore\n        /* \"#utility.yul\":5850:5968   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5974:6196   */\n    tag_66:\n        /* \"#utility.yul\":6067:6071   */\n      0x00\n        /* \"#utility.yul\":6105:6107   */\n      0x20\n        /* \"#utility.yul\":6094:6103   */\n      dup3\n        /* \"#utility.yul\":6090:6108   */\n      add\n        /* \"#utility.yul\":6082:6108   */\n      swap1\n      pop\n        /* \"#utility.yul\":6118:6189   */\n      tag_467\n        /* \"#utility.yul\":6186:6187   */\n      0x00\n        /* \"#utility.yul\":6175:6184   */\n      dup4\n        /* \"#utility.yul\":6171:6188   */\n      add\n        /* \"#utility.yul\":6162:6168   */\n      dup5\n        /* \"#utility.yul\":6118:6189   */\n      tag_356\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":5974:6196   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6202:6318   */\n    tag_357:\n        /* \"#utility.yul\":6272:6293   */\n      tag_469\n        /* \"#utility.yul\":6287:6292   */\n      dup2\n        /* \"#utility.yul\":6272:6293   */\n      tag_341\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":6265:6270   */\n      dup2\n        /* \"#utility.yul\":6262:6294   */\n      eq\n        /* \"#utility.yul\":6252:6312   */\n      tag_470\n      jumpi\n        /* \"#utility.yul\":6308:6309   */\n      0x00\n        /* \"#utility.yul\":6305:6306   */\n      dup1\n        /* \"#utility.yul\":6298:6310   */\n      revert\n        /* \"#utility.yul\":6252:6312   */\n    tag_470:\n        /* \"#utility.yul\":6202:6318   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6324:6457   */\n    tag_358:\n        /* \"#utility.yul\":6367:6372   */\n      0x00\n        /* \"#utility.yul\":6405:6411   */\n      dup2\n        /* \"#utility.yul\":6392:6412   */\n      calldataload\n        /* \"#utility.yul\":6383:6412   */\n      swap1\n      pop\n        /* \"#utility.yul\":6421:6451   */\n      tag_472\n        /* \"#utility.yul\":6445:6450   */\n      dup2\n        /* \"#utility.yul\":6421:6451   */\n      tag_357\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":6324:6457   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6463:6931   */\n    tag_77:\n        /* \"#utility.yul\":6528:6534   */\n      0x00\n        /* \"#utility.yul\":6536:6542   */\n      dup1\n        /* \"#utility.yul\":6585:6587   */\n      0x40\n        /* \"#utility.yul\":6573:6582   */\n      dup4\n        /* \"#utility.yul\":6564:6571   */\n      dup6\n        /* \"#utility.yul\":6560:6583   */\n      sub\n        /* \"#utility.yul\":6556:6588   */\n      slt\n        /* \"#utility.yul\":6553:6672   */\n      iszero\n      tag_474\n      jumpi\n        /* \"#utility.yul\":6591:6670   */\n      tag_475\n      tag_336\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":6553:6672   */\n    tag_474:\n        /* \"#utility.yul\":6711:6712   */\n      0x00\n        /* \"#utility.yul\":6736:6789   */\n      tag_476\n        /* \"#utility.yul\":6781:6788   */\n      dup6\n        /* \"#utility.yul\":6772:6778   */\n      dup3\n        /* \"#utility.yul\":6761:6770   */\n      dup7\n        /* \"#utility.yul\":6757:6779   */\n      add\n        /* \"#utility.yul\":6736:6789   */\n      tag_355\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":6726:6789   */\n      swap3\n      pop\n        /* \"#utility.yul\":6682:6799   */\n      pop\n        /* \"#utility.yul\":6838:6840   */\n      0x20\n        /* \"#utility.yul\":6864:6914   */\n      tag_477\n        /* \"#utility.yul\":6906:6913   */\n      dup6\n        /* \"#utility.yul\":6897:6903   */\n      dup3\n        /* \"#utility.yul\":6886:6895   */\n      dup7\n        /* \"#utility.yul\":6882:6904   */\n      add\n        /* \"#utility.yul\":6864:6914   */\n      tag_358\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":6854:6914   */\n      swap2\n      pop\n        /* \"#utility.yul\":6809:6924   */\n      pop\n        /* \"#utility.yul\":6463:6931   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6937:7054   */\n    tag_359:\n        /* \"#utility.yul\":7046:7047   */\n      0x00\n        /* \"#utility.yul\":7043:7044   */\n      dup1\n        /* \"#utility.yul\":7036:7048   */\n      revert\n        /* \"#utility.yul\":7060:7177   */\n    tag_360:\n        /* \"#utility.yul\":7169:7170   */\n      0x00\n        /* \"#utility.yul\":7166:7167   */\n      dup1\n        /* \"#utility.yul\":7159:7171   */\n      revert\n        /* \"#utility.yul\":7183:7363   */\n    tag_224:\n        /* \"#utility.yul\":7231:7308   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7228:7229   */\n      0x00\n        /* \"#utility.yul\":7221:7309   */\n      mstore\n        /* \"#utility.yul\":7328:7332   */\n      0x41\n        /* \"#utility.yul\":7325:7326   */\n      0x04\n        /* \"#utility.yul\":7318:7333   */\n      mstore\n        /* \"#utility.yul\":7352:7356   */\n      0x24\n        /* \"#utility.yul\":7349:7350   */\n      0x00\n        /* \"#utility.yul\":7342:7357   */\n      revert\n        /* \"#utility.yul\":7369:7650   */\n    tag_361:\n        /* \"#utility.yul\":7452:7479   */\n      tag_482\n        /* \"#utility.yul\":7474:7478   */\n      dup3\n        /* \"#utility.yul\":7452:7479   */\n      tag_346\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":7444:7450   */\n      dup2\n        /* \"#utility.yul\":7440:7480   */\n      add\n        /* \"#utility.yul\":7582:7588   */\n      dup2\n        /* \"#utility.yul\":7570:7580   */\n      dup2\n        /* \"#utility.yul\":7567:7589   */\n      lt\n        /* \"#utility.yul\":7546:7564   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7534:7544   */\n      dup3\n        /* \"#utility.yul\":7531:7565   */\n      gt\n        /* \"#utility.yul\":7528:7590   */\n      or\n        /* \"#utility.yul\":7525:7613   */\n      iszero\n      tag_483\n      jumpi\n        /* \"#utility.yul\":7593:7611   */\n      tag_484\n      tag_224\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":7525:7613   */\n    tag_483:\n        /* \"#utility.yul\":7633:7643   */\n      dup1\n        /* \"#utility.yul\":7629:7631   */\n      0x40\n        /* \"#utility.yul\":7622:7644   */\n      mstore\n        /* \"#utility.yul\":7412:7650   */\n      pop\n        /* \"#utility.yul\":7369:7650   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7656:7785   */\n    tag_362:\n        /* \"#utility.yul\":7690:7696   */\n      0x00\n        /* \"#utility.yul\":7717:7737   */\n      tag_486\n      tag_335\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":7707:7737   */\n      swap1\n      pop\n        /* \"#utility.yul\":7746:7779   */\n      tag_487\n        /* \"#utility.yul\":7774:7778   */\n      dup3\n        /* \"#utility.yul\":7766:7772   */\n      dup3\n        /* \"#utility.yul\":7746:7779   */\n      tag_361\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":7656:7785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7791:8098   */\n    tag_363:\n        /* \"#utility.yul\":7852:7856   */\n      0x00\n        /* \"#utility.yul\":7942:7960   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7934:7940   */\n      dup3\n        /* \"#utility.yul\":7931:7961   */\n      gt\n        /* \"#utility.yul\":7928:7984   */\n      iszero\n      tag_489\n      jumpi\n        /* \"#utility.yul\":7964:7982   */\n      tag_490\n      tag_224\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":7928:7984   */\n    tag_489:\n        /* \"#utility.yul\":8002:8031   */\n      tag_491\n        /* \"#utility.yul\":8024:8030   */\n      dup3\n        /* \"#utility.yul\":8002:8031   */\n      tag_346\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":7994:8031   */\n      swap1\n      pop\n        /* \"#utility.yul\":8086:8090   */\n      0x20\n        /* \"#utility.yul\":8080:8084   */\n      dup2\n        /* \"#utility.yul\":8076:8091   */\n      add\n        /* \"#utility.yul\":8068:8091   */\n      swap1\n      pop\n        /* \"#utility.yul\":7791:8098   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8104:8250   */\n    tag_364:\n        /* \"#utility.yul\":8201:8207   */\n      dup3\n        /* \"#utility.yul\":8196:8199   */\n      dup2\n        /* \"#utility.yul\":8191:8194   */\n      dup4\n        /* \"#utility.yul\":8178:8208   */\n      calldatacopy\n        /* \"#utility.yul\":8242:8243   */\n      0x00\n        /* \"#utility.yul\":8233:8239   */\n      dup4\n        /* \"#utility.yul\":8228:8231   */\n      dup4\n        /* \"#utility.yul\":8224:8240   */\n      add\n        /* \"#utility.yul\":8217:8244   */\n      mstore\n        /* \"#utility.yul\":8104:8250   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8256:8679   */\n    tag_365:\n        /* \"#utility.yul\":8333:8338   */\n      0x00\n        /* \"#utility.yul\":8358:8423   */\n      tag_494\n        /* \"#utility.yul\":8374:8422   */\n      tag_495\n        /* \"#utility.yul\":8415:8421   */\n      dup5\n        /* \"#utility.yul\":8374:8422   */\n      tag_363\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":8358:8423   */\n      tag_362\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":8349:8423   */\n      swap1\n      pop\n        /* \"#utility.yul\":8446:8452   */\n      dup3\n        /* \"#utility.yul\":8439:8444   */\n      dup2\n        /* \"#utility.yul\":8432:8453   */\n      mstore\n        /* \"#utility.yul\":8484:8488   */\n      0x20\n        /* \"#utility.yul\":8477:8482   */\n      dup2\n        /* \"#utility.yul\":8473:8489   */\n      add\n        /* \"#utility.yul\":8522:8525   */\n      dup5\n        /* \"#utility.yul\":8513:8519   */\n      dup5\n        /* \"#utility.yul\":8508:8511   */\n      dup5\n        /* \"#utility.yul\":8504:8520   */\n      add\n        /* \"#utility.yul\":8501:8526   */\n      gt\n        /* \"#utility.yul\":8498:8610   */\n      iszero\n      tag_496\n      jumpi\n        /* \"#utility.yul\":8529:8608   */\n      tag_497\n      tag_360\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":8498:8610   */\n    tag_496:\n        /* \"#utility.yul\":8619:8673   */\n      tag_498\n        /* \"#utility.yul\":8666:8672   */\n      dup5\n        /* \"#utility.yul\":8661:8664   */\n      dup3\n        /* \"#utility.yul\":8656:8659   */\n      dup6\n        /* \"#utility.yul\":8619:8673   */\n      tag_364\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":8339:8679   */\n      pop\n        /* \"#utility.yul\":8256:8679   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8698:9036   */\n    tag_366:\n        /* \"#utility.yul\":8753:8758   */\n      0x00\n        /* \"#utility.yul\":8802:8805   */\n      dup3\n        /* \"#utility.yul\":8795:8799   */\n      0x1f\n        /* \"#utility.yul\":8787:8793   */\n      dup4\n        /* \"#utility.yul\":8783:8800   */\n      add\n        /* \"#utility.yul\":8779:8806   */\n      slt\n        /* \"#utility.yul\":8769:8891   */\n      tag_500\n      jumpi\n        /* \"#utility.yul\":8810:8889   */\n      tag_501\n      tag_359\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":8769:8891   */\n    tag_500:\n        /* \"#utility.yul\":8927:8933   */\n      dup2\n        /* \"#utility.yul\":8914:8934   */\n      calldataload\n        /* \"#utility.yul\":8952:9030   */\n      tag_502\n        /* \"#utility.yul\":9026:9029   */\n      dup5\n        /* \"#utility.yul\":9018:9024   */\n      dup3\n        /* \"#utility.yul\":9011:9015   */\n      0x20\n        /* \"#utility.yul\":9003:9009   */\n      dup7\n        /* \"#utility.yul\":8999:9016   */\n      add\n        /* \"#utility.yul\":8952:9030   */\n      tag_365\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":8943:9030   */\n      swap2\n      pop\n        /* \"#utility.yul\":8759:9036   */\n      pop\n        /* \"#utility.yul\":8698:9036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9042:9985   */\n    tag_81:\n        /* \"#utility.yul\":9137:9143   */\n      0x00\n        /* \"#utility.yul\":9145:9151   */\n      dup1\n        /* \"#utility.yul\":9153:9159   */\n      0x00\n        /* \"#utility.yul\":9161:9167   */\n      dup1\n        /* \"#utility.yul\":9210:9213   */\n      0x80\n        /* \"#utility.yul\":9198:9207   */\n      dup6\n        /* \"#utility.yul\":9189:9196   */\n      dup8\n        /* \"#utility.yul\":9185:9208   */\n      sub\n        /* \"#utility.yul\":9181:9214   */\n      slt\n        /* \"#utility.yul\":9178:9298   */\n      iszero\n      tag_504\n      jumpi\n        /* \"#utility.yul\":9217:9296   */\n      tag_505\n      tag_336\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":9178:9298   */\n    tag_504:\n        /* \"#utility.yul\":9337:9338   */\n      0x00\n        /* \"#utility.yul\":9362:9415   */\n      tag_506\n        /* \"#utility.yul\":9407:9414   */\n      dup8\n        /* \"#utility.yul\":9398:9404   */\n      dup3\n        /* \"#utility.yul\":9387:9396   */\n      dup9\n        /* \"#utility.yul\":9383:9405   */\n      add\n        /* \"#utility.yul\":9362:9415   */\n      tag_355\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":9352:9415   */\n      swap5\n      pop\n        /* \"#utility.yul\":9308:9425   */\n      pop\n        /* \"#utility.yul\":9464:9466   */\n      0x20\n        /* \"#utility.yul\":9490:9543   */\n      tag_507\n        /* \"#utility.yul\":9535:9542   */\n      dup8\n        /* \"#utility.yul\":9526:9532   */\n      dup3\n        /* \"#utility.yul\":9515:9524   */\n      dup9\n        /* \"#utility.yul\":9511:9533   */\n      add\n        /* \"#utility.yul\":9490:9543   */\n      tag_355\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":9480:9543   */\n      swap4\n      pop\n        /* \"#utility.yul\":9435:9553   */\n      pop\n        /* \"#utility.yul\":9592:9594   */\n      0x40\n        /* \"#utility.yul\":9618:9671   */\n      tag_508\n        /* \"#utility.yul\":9663:9670   */\n      dup8\n        /* \"#utility.yul\":9654:9660   */\n      dup3\n        /* \"#utility.yul\":9643:9652   */\n      dup9\n        /* \"#utility.yul\":9639:9661   */\n      add\n        /* \"#utility.yul\":9618:9671   */\n      tag_350\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":9608:9671   */\n      swap3\n      pop\n        /* \"#utility.yul\":9563:9681   */\n      pop\n        /* \"#utility.yul\":9748:9750   */\n      0x60\n        /* \"#utility.yul\":9737:9746   */\n      dup6\n        /* \"#utility.yul\":9733:9751   */\n      add\n        /* \"#utility.yul\":9720:9752   */\n      calldataload\n        /* \"#utility.yul\":9779:9797   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9771:9777   */\n      dup2\n        /* \"#utility.yul\":9768:9798   */\n      gt\n        /* \"#utility.yul\":9765:9882   */\n      iszero\n      tag_509\n      jumpi\n        /* \"#utility.yul\":9801:9880   */\n      tag_510\n      tag_337\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":9765:9882   */\n    tag_509:\n        /* \"#utility.yul\":9906:9968   */\n      tag_511\n        /* \"#utility.yul\":9960:9967   */\n      dup8\n        /* \"#utility.yul\":9951:9957   */\n      dup3\n        /* \"#utility.yul\":9940:9949   */\n      dup9\n        /* \"#utility.yul\":9936:9958   */\n      add\n        /* \"#utility.yul\":9906:9968   */\n      tag_366\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":9896:9968   */\n      swap2\n      pop\n        /* \"#utility.yul\":9691:9978   */\n      pop\n        /* \"#utility.yul\":9042:9985   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9991:10465   */\n    tag_89:\n        /* \"#utility.yul\":10059:10065   */\n      0x00\n        /* \"#utility.yul\":10067:10073   */\n      dup1\n        /* \"#utility.yul\":10116:10118   */\n      0x40\n        /* \"#utility.yul\":10104:10113   */\n      dup4\n        /* \"#utility.yul\":10095:10102   */\n      dup6\n        /* \"#utility.yul\":10091:10114   */\n      sub\n        /* \"#utility.yul\":10087:10119   */\n      slt\n        /* \"#utility.yul\":10084:10203   */\n      iszero\n      tag_513\n      jumpi\n        /* \"#utility.yul\":10122:10201   */\n      tag_514\n      tag_336\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":10084:10203   */\n    tag_513:\n        /* \"#utility.yul\":10242:10243   */\n      0x00\n        /* \"#utility.yul\":10267:10320   */\n      tag_515\n        /* \"#utility.yul\":10312:10319   */\n      dup6\n        /* \"#utility.yul\":10303:10309   */\n      dup3\n        /* \"#utility.yul\":10292:10301   */\n      dup7\n        /* \"#utility.yul\":10288:10310   */\n      add\n        /* \"#utility.yul\":10267:10320   */\n      tag_355\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":10257:10320   */\n      swap3\n      pop\n        /* \"#utility.yul\":10213:10330   */\n      pop\n        /* \"#utility.yul\":10369:10371   */\n      0x20\n        /* \"#utility.yul\":10395:10448   */\n      tag_516\n        /* \"#utility.yul\":10440:10447   */\n      dup6\n        /* \"#utility.yul\":10431:10437   */\n      dup3\n        /* \"#utility.yul\":10420:10429   */\n      dup7\n        /* \"#utility.yul\":10416:10438   */\n      add\n        /* \"#utility.yul\":10395:10448   */\n      tag_355\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":10385:10448   */\n      swap2\n      pop\n        /* \"#utility.yul\":10340:10458   */\n      pop\n        /* \"#utility.yul\":9991:10465   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10471:10651   */\n    tag_367:\n        /* \"#utility.yul\":10519:10596   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10516:10517   */\n      0x00\n        /* \"#utility.yul\":10509:10597   */\n      mstore\n        /* \"#utility.yul\":10616:10620   */\n      0x22\n        /* \"#utility.yul\":10613:10614   */\n      0x04\n        /* \"#utility.yul\":10606:10621   */\n      mstore\n        /* \"#utility.yul\":10640:10644   */\n      0x24\n        /* \"#utility.yul\":10637:10638   */\n      0x00\n        /* \"#utility.yul\":10630:10645   */\n      revert\n        /* \"#utility.yul\":10657:10977   */\n    tag_100:\n        /* \"#utility.yul\":10701:10707   */\n      0x00\n        /* \"#utility.yul\":10738:10739   */\n      0x02\n        /* \"#utility.yul\":10732:10736   */\n      dup3\n        /* \"#utility.yul\":10728:10740   */\n      div\n        /* \"#utility.yul\":10718:10740   */\n      swap1\n      pop\n        /* \"#utility.yul\":10785:10786   */\n      0x01\n        /* \"#utility.yul\":10779:10783   */\n      dup3\n        /* \"#utility.yul\":10775:10787   */\n      and\n        /* \"#utility.yul\":10806:10824   */\n      dup1\n        /* \"#utility.yul\":10796:10877   */\n      tag_519\n      jumpi\n        /* \"#utility.yul\":10862:10866   */\n      0x7f\n        /* \"#utility.yul\":10854:10860   */\n      dup3\n        /* \"#utility.yul\":10850:10867   */\n      and\n        /* \"#utility.yul\":10840:10867   */\n      swap2\n      pop\n        /* \"#utility.yul\":10796:10877   */\n    tag_519:\n        /* \"#utility.yul\":10924:10926   */\n      0x20\n        /* \"#utility.yul\":10916:10922   */\n      dup3\n        /* \"#utility.yul\":10913:10927   */\n      lt\n        /* \"#utility.yul\":10893:10911   */\n      dup2\n        /* \"#utility.yul\":10890:10928   */\n      sub\n        /* \"#utility.yul\":10887:10971   */\n      tag_520\n      jumpi\n        /* \"#utility.yul\":10943:10961   */\n      tag_521\n      tag_367\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":10887:10971   */\n    tag_520:\n        /* \"#utility.yul\":10708:10977   */\n      pop\n        /* \"#utility.yul\":10657:10977   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10983:11425   */\n    tag_123:\n        /* \"#utility.yul\":11132:11136   */\n      0x00\n        /* \"#utility.yul\":11170:11172   */\n      0x60\n        /* \"#utility.yul\":11159:11168   */\n      dup3\n        /* \"#utility.yul\":11155:11173   */\n      add\n        /* \"#utility.yul\":11147:11173   */\n      swap1\n      pop\n        /* \"#utility.yul\":11183:11254   */\n      tag_523\n        /* \"#utility.yul\":11251:11252   */\n      0x00\n        /* \"#utility.yul\":11240:11249   */\n      dup4\n        /* \"#utility.yul\":11236:11253   */\n      add\n        /* \"#utility.yul\":11227:11233   */\n      dup7\n        /* \"#utility.yul\":11183:11254   */\n      tag_353\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":11264:11336   */\n      tag_524\n        /* \"#utility.yul\":11332:11334   */\n      0x20\n        /* \"#utility.yul\":11321:11330   */\n      dup4\n        /* \"#utility.yul\":11317:11335   */\n      add\n        /* \"#utility.yul\":11308:11314   */\n      dup6\n        /* \"#utility.yul\":11264:11336   */\n      tag_356\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":11346:11418   */\n      tag_525\n        /* \"#utility.yul\":11414:11416   */\n      0x40\n        /* \"#utility.yul\":11403:11412   */\n      dup4\n        /* \"#utility.yul\":11399:11417   */\n      add\n        /* \"#utility.yul\":11390:11396   */\n      dup5\n        /* \"#utility.yul\":11346:11418   */\n      tag_353\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":10983:11425   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11431:11604   */\n    tag_368:\n        /* \"#utility.yul\":11571:11596   */\n      0x5265656e7472616e742063616c6c206465746563746564000000000000000000\n        /* \"#utility.yul\":11567:11568   */\n      0x00\n        /* \"#utility.yul\":11559:11565   */\n      dup3\n        /* \"#utility.yul\":11555:11569   */\n      add\n        /* \"#utility.yul\":11548:11597   */\n      mstore\n        /* \"#utility.yul\":11431:11604   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11610:11976   */\n    tag_369:\n        /* \"#utility.yul\":11752:11755   */\n      0x00\n        /* \"#utility.yul\":11773:11840   */\n      tag_528\n        /* \"#utility.yul\":11837:11839   */\n      0x17\n        /* \"#utility.yul\":11832:11835   */\n      dup4\n        /* \"#utility.yul\":11773:11840   */\n      tag_344\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":11766:11840   */\n      swap2\n      pop\n        /* \"#utility.yul\":11849:11942   */\n      tag_529\n        /* \"#utility.yul\":11938:11941   */\n      dup3\n        /* \"#utility.yul\":11849:11942   */\n      tag_368\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":11967:11969   */\n      0x20\n        /* \"#utility.yul\":11962:11965   */\n      dup3\n        /* \"#utility.yul\":11958:11970   */\n      add\n        /* \"#utility.yul\":11951:11970   */\n      swap1\n      pop\n        /* \"#utility.yul\":11610:11976   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11982:12401   */\n    tag_127:\n        /* \"#utility.yul\":12148:12152   */\n      0x00\n        /* \"#utility.yul\":12186:12188   */\n      0x20\n        /* \"#utility.yul\":12175:12184   */\n      dup3\n        /* \"#utility.yul\":12171:12189   */\n      add\n        /* \"#utility.yul\":12163:12189   */\n      swap1\n      pop\n        /* \"#utility.yul\":12235:12244   */\n      dup2\n        /* \"#utility.yul\":12229:12233   */\n      dup2\n        /* \"#utility.yul\":12225:12245   */\n      sub\n        /* \"#utility.yul\":12221:12222   */\n      0x00\n        /* \"#utility.yul\":12210:12219   */\n      dup4\n        /* \"#utility.yul\":12206:12223   */\n      add\n        /* \"#utility.yul\":12199:12246   */\n      mstore\n        /* \"#utility.yul\":12263:12394   */\n      tag_531\n        /* \"#utility.yul\":12389:12393   */\n      dup2\n        /* \"#utility.yul\":12263:12394   */\n      tag_369\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":12255:12394   */\n      swap1\n      pop\n        /* \"#utility.yul\":11982:12401   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12407:12555   */\n    tag_370:\n        /* \"#utility.yul\":12509:12520   */\n      0x00\n        /* \"#utility.yul\":12546:12549   */\n      dup2\n        /* \"#utility.yul\":12531:12549   */\n      swap1\n      pop\n        /* \"#utility.yul\":12407:12555   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12561:12951   */\n    tag_371:\n        /* \"#utility.yul\":12667:12670   */\n      0x00\n        /* \"#utility.yul\":12695:12734   */\n      tag_534\n        /* \"#utility.yul\":12728:12733   */\n      dup3\n        /* \"#utility.yul\":12695:12734   */\n      tag_343\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":12750:12839   */\n      tag_535\n        /* \"#utility.yul\":12832:12838   */\n      dup2\n        /* \"#utility.yul\":12827:12830   */\n      dup6\n        /* \"#utility.yul\":12750:12839   */\n      tag_370\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":12743:12839   */\n      swap4\n      pop\n        /* \"#utility.yul\":12848:12913   */\n      tag_536\n        /* \"#utility.yul\":12906:12912   */\n      dup2\n        /* \"#utility.yul\":12901:12904   */\n      dup6\n        /* \"#utility.yul\":12894:12898   */\n      0x20\n        /* \"#utility.yul\":12887:12892   */\n      dup7\n        /* \"#utility.yul\":12883:12899   */\n      add\n        /* \"#utility.yul\":12848:12913   */\n      tag_345\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":12938:12944   */\n      dup1\n        /* \"#utility.yul\":12933:12936   */\n      dup5\n        /* \"#utility.yul\":12929:12945   */\n      add\n        /* \"#utility.yul\":12922:12945   */\n      swap2\n      pop\n        /* \"#utility.yul\":12671:12951   */\n      pop\n        /* \"#utility.yul\":12561:12951   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12957:13139   */\n    tag_372:\n        /* \"#utility.yul\":13125:13132   */\n      0x2e6a736f6e000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13120:13123   */\n      dup2\n        /* \"#utility.yul\":13113:13133   */\n      mstore\n        /* \"#utility.yul\":12957:13139   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13145:13684   */\n    tag_139:\n        /* \"#utility.yul\":13367:13370   */\n      0x00\n        /* \"#utility.yul\":13389:13484   */\n      tag_539\n        /* \"#utility.yul\":13480:13483   */\n      dup3\n        /* \"#utility.yul\":13471:13477   */\n      dup5\n        /* \"#utility.yul\":13389:13484   */\n      tag_371\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":13382:13484   */\n      swap2\n      pop\n        /* \"#utility.yul\":13494:13631   */\n      tag_540\n        /* \"#utility.yul\":13627:13630   */\n      dup3\n        /* \"#utility.yul\":13494:13631   */\n      tag_372\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":13656:13657   */\n      0x05\n        /* \"#utility.yul\":13651:13654   */\n      dup3\n        /* \"#utility.yul\":13647:13658   */\n      add\n        /* \"#utility.yul\":13640:13658   */\n      swap2\n      pop\n        /* \"#utility.yul\":13675:13678   */\n      dup2\n        /* \"#utility.yul\":13668:13678   */\n      swap1\n      pop\n        /* \"#utility.yul\":13145:13684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13690:13870   */\n    tag_373:\n        /* \"#utility.yul\":13738:13815   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13735:13736   */\n      0x00\n        /* \"#utility.yul\":13728:13816   */\n      mstore\n        /* \"#utility.yul\":13835:13839   */\n      0x11\n        /* \"#utility.yul\":13832:13833   */\n      0x04\n        /* \"#utility.yul\":13825:13840   */\n      mstore\n        /* \"#utility.yul\":13859:13863   */\n      0x24\n        /* \"#utility.yul\":13856:13857   */\n      0x00\n        /* \"#utility.yul\":13849:13864   */\n      revert\n        /* \"#utility.yul\":13876:14109   */\n    tag_219:\n        /* \"#utility.yul\":13915:13918   */\n      0x00\n        /* \"#utility.yul\":13938:13962   */\n      tag_543\n        /* \"#utility.yul\":13956:13961   */\n      dup3\n        /* \"#utility.yul\":13938:13962   */\n      tag_348\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":13929:13962   */\n      swap2\n      pop\n        /* \"#utility.yul\":13984:14050   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":13977:13982   */\n      dup3\n        /* \"#utility.yul\":13974:14051   */\n      sub\n        /* \"#utility.yul\":13971:14074   */\n      tag_544\n      jumpi\n        /* \"#utility.yul\":14054:14072   */\n      tag_545\n      tag_373\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":13971:14074   */\n    tag_544:\n        /* \"#utility.yul\":14101:14102   */\n      0x01\n        /* \"#utility.yul\":14094:14099   */\n      dup3\n        /* \"#utility.yul\":14090:14103   */\n      add\n        /* \"#utility.yul\":14083:14103   */\n      swap1\n      pop\n        /* \"#utility.yul\":13876:14109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14115:14295   */\n    tag_374:\n        /* \"#utility.yul\":14163:14240   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14160:14161   */\n      0x00\n        /* \"#utility.yul\":14153:14241   */\n      mstore\n        /* \"#utility.yul\":14260:14264   */\n      0x12\n        /* \"#utility.yul\":14257:14258   */\n      0x04\n        /* \"#utility.yul\":14250:14265   */\n      mstore\n        /* \"#utility.yul\":14284:14288   */\n      0x24\n        /* \"#utility.yul\":14281:14282   */\n      0x00\n        /* \"#utility.yul\":14274:14289   */\n      revert\n        /* \"#utility.yul\":14301:14486   */\n    tag_221:\n        /* \"#utility.yul\":14341:14342   */\n      0x00\n        /* \"#utility.yul\":14358:14378   */\n      tag_548\n        /* \"#utility.yul\":14376:14377   */\n      dup3\n        /* \"#utility.yul\":14358:14378   */\n      tag_348\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":14353:14378   */\n      swap2\n      pop\n        /* \"#utility.yul\":14392:14412   */\n      tag_549\n        /* \"#utility.yul\":14410:14411   */\n      dup4\n        /* \"#utility.yul\":14392:14412   */\n      tag_348\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":14387:14412   */\n      swap3\n      pop\n        /* \"#utility.yul\":14431:14432   */\n      dup3\n        /* \"#utility.yul\":14421:14456   */\n      tag_550\n      jumpi\n        /* \"#utility.yul\":14436:14454   */\n      tag_551\n      tag_374\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":14421:14456   */\n    tag_550:\n        /* \"#utility.yul\":14478:14479   */\n      dup3\n        /* \"#utility.yul\":14475:14476   */\n      dup3\n        /* \"#utility.yul\":14471:14480   */\n      div\n        /* \"#utility.yul\":14466:14480   */\n      swap1\n      pop\n        /* \"#utility.yul\":14301:14486   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14492:14686   */\n    tag_229:\n        /* \"#utility.yul\":14532:14536   */\n      0x00\n        /* \"#utility.yul\":14552:14572   */\n      tag_553\n        /* \"#utility.yul\":14570:14571   */\n      dup3\n        /* \"#utility.yul\":14552:14572   */\n      tag_348\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":14547:14572   */\n      swap2\n      pop\n        /* \"#utility.yul\":14586:14606   */\n      tag_554\n        /* \"#utility.yul\":14604:14605   */\n      dup4\n        /* \"#utility.yul\":14586:14606   */\n      tag_348\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":14581:14606   */\n      swap3\n      pop\n        /* \"#utility.yul\":14630:14631   */\n      dup3\n        /* \"#utility.yul\":14627:14628   */\n      dup3\n        /* \"#utility.yul\":14623:14632   */\n      sub\n        /* \"#utility.yul\":14615:14632   */\n      swap1\n      pop\n        /* \"#utility.yul\":14654:14655   */\n      dup2\n        /* \"#utility.yul\":14648:14652   */\n      dup2\n        /* \"#utility.yul\":14645:14656   */\n      gt\n        /* \"#utility.yul\":14642:14679   */\n      iszero\n      tag_555\n      jumpi\n        /* \"#utility.yul\":14659:14677   */\n      tag_556\n      tag_373\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":14642:14679   */\n    tag_555:\n        /* \"#utility.yul\":14492:14686   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14692:14868   */\n    tag_231:\n        /* \"#utility.yul\":14724:14725   */\n      0x00\n        /* \"#utility.yul\":14741:14761   */\n      tag_558\n        /* \"#utility.yul\":14759:14760   */\n      dup3\n        /* \"#utility.yul\":14741:14761   */\n      tag_348\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":14736:14761   */\n      swap2\n      pop\n        /* \"#utility.yul\":14775:14795   */\n      tag_559\n        /* \"#utility.yul\":14793:14794   */\n      dup4\n        /* \"#utility.yul\":14775:14795   */\n      tag_348\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":14770:14795   */\n      swap3\n      pop\n        /* \"#utility.yul\":14814:14815   */\n      dup3\n        /* \"#utility.yul\":14804:14839   */\n      tag_560\n      jumpi\n        /* \"#utility.yul\":14819:14837   */\n      tag_561\n      tag_374\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":14804:14839   */\n    tag_560:\n        /* \"#utility.yul\":14860:14861   */\n      dup3\n        /* \"#utility.yul\":14857:14858   */\n      dup3\n        /* \"#utility.yul\":14853:14862   */\n      mod\n        /* \"#utility.yul\":14848:14862   */\n      swap1\n      pop\n        /* \"#utility.yul\":14692:14868   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14874:15065   */\n    tag_233:\n        /* \"#utility.yul\":14914:14917   */\n      0x00\n        /* \"#utility.yul\":14933:14953   */\n      tag_563\n        /* \"#utility.yul\":14951:14952   */\n      dup3\n        /* \"#utility.yul\":14933:14953   */\n      tag_348\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":14928:14953   */\n      swap2\n      pop\n        /* \"#utility.yul\":14967:14987   */\n      tag_564\n        /* \"#utility.yul\":14985:14986   */\n      dup4\n        /* \"#utility.yul\":14967:14987   */\n      tag_348\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":14962:14987   */\n      swap3\n      pop\n        /* \"#utility.yul\":15010:15011   */\n      dup3\n        /* \"#utility.yul\":15007:15008   */\n      dup3\n        /* \"#utility.yul\":15003:15012   */\n      add\n        /* \"#utility.yul\":14996:15012   */\n      swap1\n      pop\n        /* \"#utility.yul\":15031:15034   */\n      dup1\n        /* \"#utility.yul\":15028:15029   */\n      dup3\n        /* \"#utility.yul\":15025:15035   */\n      gt\n        /* \"#utility.yul\":15022:15058   */\n      iszero\n      tag_565\n      jumpi\n        /* \"#utility.yul\":15038:15056   */\n      tag_566\n      tag_373\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":15022:15058   */\n    tag_565:\n        /* \"#utility.yul\":14874:15065   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15071:15251   */\n    tag_236:\n        /* \"#utility.yul\":15119:15196   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15116:15117   */\n      0x00\n        /* \"#utility.yul\":15109:15197   */\n      mstore\n        /* \"#utility.yul\":15216:15220   */\n      0x32\n        /* \"#utility.yul\":15213:15214   */\n      0x04\n        /* \"#utility.yul\":15206:15221   */\n      mstore\n        /* \"#utility.yul\":15240:15244   */\n      0x24\n        /* \"#utility.yul\":15237:15238   */\n      0x00\n        /* \"#utility.yul\":15230:15245   */\n      revert\n        /* \"#utility.yul\":15257:15398   */\n    tag_375:\n        /* \"#utility.yul\":15306:15310   */\n      0x00\n        /* \"#utility.yul\":15329:15332   */\n      dup2\n        /* \"#utility.yul\":15321:15332   */\n      swap1\n      pop\n        /* \"#utility.yul\":15352:15355   */\n      dup2\n        /* \"#utility.yul\":15349:15350   */\n      0x00\n        /* \"#utility.yul\":15342:15356   */\n      mstore\n        /* \"#utility.yul\":15386:15390   */\n      0x20\n        /* \"#utility.yul\":15383:15384   */\n      0x00\n        /* \"#utility.yul\":15373:15391   */\n      keccak256\n        /* \"#utility.yul\":15365:15391   */\n      swap1\n      pop\n        /* \"#utility.yul\":15257:15398   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15404:15497   */\n    tag_376:\n        /* \"#utility.yul\":15441:15447   */\n      0x00\n        /* \"#utility.yul\":15488:15490   */\n      0x20\n        /* \"#utility.yul\":15483:15485   */\n      0x1f\n        /* \"#utility.yul\":15476:15481   */\n      dup4\n        /* \"#utility.yul\":15472:15486   */\n      add\n        /* \"#utility.yul\":15468:15491   */\n      div\n        /* \"#utility.yul\":15458:15491   */\n      swap1\n      pop\n        /* \"#utility.yul\":15404:15497   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15503:15610   */\n    tag_377:\n        /* \"#utility.yul\":15547:15555   */\n      0x00\n        /* \"#utility.yul\":15597:15602   */\n      dup3\n        /* \"#utility.yul\":15591:15595   */\n      dup3\n        /* \"#utility.yul\":15587:15603   */\n      shl\n        /* \"#utility.yul\":15566:15603   */\n      swap1\n      pop\n        /* \"#utility.yul\":15503:15610   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15616:16009   */\n    tag_378:\n        /* \"#utility.yul\":15685:15691   */\n      0x00\n        /* \"#utility.yul\":15735:15736   */\n      0x08\n        /* \"#utility.yul\":15723:15733   */\n      dup4\n        /* \"#utility.yul\":15719:15737   */\n      mul\n        /* \"#utility.yul\":15758:15855   */\n      tag_572\n        /* \"#utility.yul\":15788:15854   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":15777:15786   */\n      dup3\n        /* \"#utility.yul\":15758:15855   */\n      tag_377\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":15876:15915   */\n      tag_573\n        /* \"#utility.yul\":15906:15914   */\n      dup7\n        /* \"#utility.yul\":15895:15904   */\n      dup4\n        /* \"#utility.yul\":15876:15915   */\n      tag_377\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":15864:15915   */\n      swap6\n      pop\n        /* \"#utility.yul\":15948:15952   */\n      dup1\n        /* \"#utility.yul\":15944:15953   */\n      not\n        /* \"#utility.yul\":15937:15942   */\n      dup5\n        /* \"#utility.yul\":15933:15954   */\n      and\n        /* \"#utility.yul\":15924:15954   */\n      swap4\n      pop\n        /* \"#utility.yul\":15997:16001   */\n      dup1\n        /* \"#utility.yul\":15987:15995   */\n      dup7\n        /* \"#utility.yul\":15983:16002   */\n      and\n        /* \"#utility.yul\":15976:15981   */\n      dup5\n        /* \"#utility.yul\":15973:16003   */\n      or\n        /* \"#utility.yul\":15963:16003   */\n      swap3\n      pop\n        /* \"#utility.yul\":15692:16009   */\n      pop\n      pop\n        /* \"#utility.yul\":15616:16009   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16015:16075   */\n    tag_379:\n        /* \"#utility.yul\":16043:16046   */\n      0x00\n        /* \"#utility.yul\":16064:16069   */\n      dup2\n        /* \"#utility.yul\":16057:16069   */\n      swap1\n      pop\n        /* \"#utility.yul\":16015:16075   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16081:16223   */\n    tag_380:\n        /* \"#utility.yul\":16131:16140   */\n      0x00\n        /* \"#utility.yul\":16164:16217   */\n      tag_576\n        /* \"#utility.yul\":16182:16216   */\n      tag_577\n        /* \"#utility.yul\":16191:16215   */\n      tag_578\n        /* \"#utility.yul\":16209:16214   */\n      dup5\n        /* \"#utility.yul\":16191:16215   */\n      tag_348\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":16182:16216   */\n      tag_379\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":16164:16217   */\n      tag_348\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":16151:16217   */\n      swap1\n      pop\n        /* \"#utility.yul\":16081:16223   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16229:16304   */\n    tag_381:\n        /* \"#utility.yul\":16272:16275   */\n      0x00\n        /* \"#utility.yul\":16293:16298   */\n      dup2\n        /* \"#utility.yul\":16286:16298   */\n      swap1\n      pop\n        /* \"#utility.yul\":16229:16304   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16310:16579   */\n    tag_382:\n        /* \"#utility.yul\":16420:16459   */\n      tag_581\n        /* \"#utility.yul\":16451:16458   */\n      dup4\n        /* \"#utility.yul\":16420:16459   */\n      tag_380\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":16481:16572   */\n      tag_582\n        /* \"#utility.yul\":16530:16571   */\n      tag_583\n        /* \"#utility.yul\":16554:16570   */\n      dup3\n        /* \"#utility.yul\":16530:16571   */\n      tag_381\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":16522:16528   */\n      dup5\n        /* \"#utility.yul\":16515:16519   */\n      dup5\n        /* \"#utility.yul\":16509:16520   */\n      sload\n        /* \"#utility.yul\":16481:16572   */\n      tag_378\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":16475:16479   */\n      dup3\n        /* \"#utility.yul\":16468:16573   */\n      sstore\n        /* \"#utility.yul\":16386:16579   */\n      pop\n        /* \"#utility.yul\":16310:16579   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16585:16658   */\n    tag_383:\n        /* \"#utility.yul\":16630:16633   */\n      0x00\n        /* \"#utility.yul\":16585:16658   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":16664:16853   */\n    tag_384:\n        /* \"#utility.yul\":16741:16773   */\n      tag_586\n      tag_383\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":16782:16847   */\n      tag_587\n        /* \"#utility.yul\":16840:16846   */\n      dup2\n        /* \"#utility.yul\":16832:16838   */\n      dup5\n        /* \"#utility.yul\":16826:16830   */\n      dup5\n        /* \"#utility.yul\":16782:16847   */\n      tag_382\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":16717:16853   */\n      pop\n        /* \"#utility.yul\":16664:16853   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16859:17045   */\n    tag_385:\n        /* \"#utility.yul\":16919:17039   */\n    tag_589:\n        /* \"#utility.yul\":16936:16939   */\n      dup2\n        /* \"#utility.yul\":16929:16934   */\n      dup2\n        /* \"#utility.yul\":16926:16940   */\n      lt\n        /* \"#utility.yul\":16919:17039   */\n      iszero\n      tag_591\n      jumpi\n        /* \"#utility.yul\":16990:17029   */\n      tag_592\n        /* \"#utility.yul\":17027:17028   */\n      0x00\n        /* \"#utility.yul\":17020:17025   */\n      dup3\n        /* \"#utility.yul\":16990:17029   */\n      tag_384\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":16963:16964   */\n      0x01\n        /* \"#utility.yul\":16956:16961   */\n      dup2\n        /* \"#utility.yul\":16952:16965   */\n      add\n        /* \"#utility.yul\":16943:16965   */\n      swap1\n      pop\n        /* \"#utility.yul\":16919:17039   */\n      jump(tag_589)\n    tag_591:\n        /* \"#utility.yul\":16859:17045   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17051:17594   */\n    tag_386:\n        /* \"#utility.yul\":17152:17154   */\n      0x1f\n        /* \"#utility.yul\":17147:17150   */\n      dup3\n        /* \"#utility.yul\":17144:17155   */\n      gt\n        /* \"#utility.yul\":17141:17587   */\n      iszero\n      tag_594\n      jumpi\n        /* \"#utility.yul\":17186:17224   */\n      tag_595\n        /* \"#utility.yul\":17218:17223   */\n      dup2\n        /* \"#utility.yul\":17186:17224   */\n      tag_375\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":17270:17299   */\n      tag_596\n        /* \"#utility.yul\":17288:17298   */\n      dup5\n        /* \"#utility.yul\":17270:17299   */\n      tag_376\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":17260:17268   */\n      dup2\n        /* \"#utility.yul\":17256:17300   */\n      add\n        /* \"#utility.yul\":17453:17455   */\n      0x20\n        /* \"#utility.yul\":17441:17451   */\n      dup6\n        /* \"#utility.yul\":17438:17456   */\n      lt\n        /* \"#utility.yul\":17435:17484   */\n      iszero\n      tag_597\n      jumpi\n        /* \"#utility.yul\":17474:17482   */\n      dup2\n        /* \"#utility.yul\":17459:17482   */\n      swap1\n      pop\n        /* \"#utility.yul\":17435:17484   */\n    tag_597:\n        /* \"#utility.yul\":17497:17577   */\n      tag_598\n        /* \"#utility.yul\":17553:17575   */\n      tag_599\n        /* \"#utility.yul\":17571:17574   */\n      dup6\n        /* \"#utility.yul\":17553:17575   */\n      tag_376\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":17543:17551   */\n      dup4\n        /* \"#utility.yul\":17539:17576   */\n      add\n        /* \"#utility.yul\":17526:17537   */\n      dup3\n        /* \"#utility.yul\":17497:17577   */\n      tag_385\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":17156:17587   */\n      pop\n      pop\n        /* \"#utility.yul\":17141:17587   */\n    tag_594:\n        /* \"#utility.yul\":17051:17594   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17600:17717   */\n    tag_387:\n        /* \"#utility.yul\":17654:17662   */\n      0x00\n        /* \"#utility.yul\":17704:17709   */\n      dup3\n        /* \"#utility.yul\":17698:17702   */\n      dup3\n        /* \"#utility.yul\":17694:17710   */\n      shr\n        /* \"#utility.yul\":17673:17710   */\n      swap1\n      pop\n        /* \"#utility.yul\":17600:17717   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17723:17892   */\n    tag_388:\n        /* \"#utility.yul\":17767:17773   */\n      0x00\n        /* \"#utility.yul\":17800:17851   */\n      tag_602\n        /* \"#utility.yul\":17848:17849   */\n      0x00\n        /* \"#utility.yul\":17844:17850   */\n      not\n        /* \"#utility.yul\":17836:17841   */\n      dup5\n        /* \"#utility.yul\":17833:17834   */\n      0x08\n        /* \"#utility.yul\":17829:17842   */\n      mul\n        /* \"#utility.yul\":17800:17851   */\n      tag_387\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":17796:17852   */\n      not\n        /* \"#utility.yul\":17881:17885   */\n      dup1\n        /* \"#utility.yul\":17875:17879   */\n      dup4\n        /* \"#utility.yul\":17871:17886   */\n      and\n        /* \"#utility.yul\":17861:17886   */\n      swap2\n      pop\n        /* \"#utility.yul\":17774:17892   */\n      pop\n        /* \"#utility.yul\":17723:17892   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17897:18192   */\n    tag_389:\n        /* \"#utility.yul\":17973:17977   */\n      0x00\n        /* \"#utility.yul\":18119:18148   */\n      tag_604\n        /* \"#utility.yul\":18144:18147   */\n      dup4\n        /* \"#utility.yul\":18138:18142   */\n      dup4\n        /* \"#utility.yul\":18119:18148   */\n      tag_388\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":18111:18148   */\n      swap2\n      pop\n        /* \"#utility.yul\":18181:18184   */\n      dup3\n        /* \"#utility.yul\":18178:18179   */\n      0x02\n        /* \"#utility.yul\":18174:18185   */\n      mul\n        /* \"#utility.yul\":18168:18172   */\n      dup3\n        /* \"#utility.yul\":18165:18186   */\n      or\n        /* \"#utility.yul\":18157:18186   */\n      swap1\n      pop\n        /* \"#utility.yul\":17897:18192   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18197:19592   */\n    tag_240:\n        /* \"#utility.yul\":18314:18351   */\n      tag_606\n        /* \"#utility.yul\":18347:18350   */\n      dup3\n        /* \"#utility.yul\":18314:18351   */\n      tag_343\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":18416:18434   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":18408:18414   */\n      dup2\n        /* \"#utility.yul\":18405:18435   */\n      gt\n        /* \"#utility.yul\":18402:18458   */\n      iszero\n      tag_607\n      jumpi\n        /* \"#utility.yul\":18438:18456   */\n      tag_608\n      tag_224\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":18402:18458   */\n    tag_607:\n        /* \"#utility.yul\":18482:18520   */\n      tag_609\n        /* \"#utility.yul\":18514:18518   */\n      dup3\n        /* \"#utility.yul\":18508:18519   */\n      sload\n        /* \"#utility.yul\":18482:18520   */\n      tag_100\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":18567:18634   */\n      tag_610\n        /* \"#utility.yul\":18627:18633   */\n      dup3\n        /* \"#utility.yul\":18619:18625   */\n      dup3\n        /* \"#utility.yul\":18613:18617   */\n      dup6\n        /* \"#utility.yul\":18567:18634   */\n      tag_386\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":18661:18662   */\n      0x00\n        /* \"#utility.yul\":18685:18689   */\n      0x20\n        /* \"#utility.yul\":18672:18689   */\n      swap1\n      pop\n        /* \"#utility.yul\":18717:18719   */\n      0x1f\n        /* \"#utility.yul\":18709:18715   */\n      dup4\n        /* \"#utility.yul\":18706:18720   */\n      gt\n        /* \"#utility.yul\":18734:18735   */\n      0x01\n        /* \"#utility.yul\":18729:19347   */\n      dup2\n      eq\n      tag_612\n      jumpi\n        /* \"#utility.yul\":19391:19392   */\n      0x00\n        /* \"#utility.yul\":19408:19414   */\n      dup5\n        /* \"#utility.yul\":19405:19482   */\n      iszero\n      tag_613\n      jumpi\n        /* \"#utility.yul\":19457:19466   */\n      dup3\n        /* \"#utility.yul\":19452:19455   */\n      dup8\n        /* \"#utility.yul\":19448:19467   */\n      add\n        /* \"#utility.yul\":19442:19468   */\n      mload\n        /* \"#utility.yul\":19433:19468   */\n      swap1\n      pop\n        /* \"#utility.yul\":19405:19482   */\n    tag_613:\n        /* \"#utility.yul\":19508:19575   */\n      tag_614\n        /* \"#utility.yul\":19568:19574   */\n      dup6\n        /* \"#utility.yul\":19561:19566   */\n      dup3\n        /* \"#utility.yul\":19508:19575   */\n      tag_389\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":19502:19506   */\n      dup7\n        /* \"#utility.yul\":19495:19576   */\n      sstore\n        /* \"#utility.yul\":19364:19586   */\n      pop\n        /* \"#utility.yul\":18699:19586   */\n      jump(tag_611)\n        /* \"#utility.yul\":18729:19347   */\n    tag_612:\n        /* \"#utility.yul\":18781:18785   */\n      0x1f\n        /* \"#utility.yul\":18777:18786   */\n      not\n        /* \"#utility.yul\":18769:18775   */\n      dup5\n        /* \"#utility.yul\":18765:18787   */\n      and\n        /* \"#utility.yul\":18815:18852   */\n      tag_615\n        /* \"#utility.yul\":18847:18851   */\n      dup7\n        /* \"#utility.yul\":18815:18852   */\n      tag_375\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":18874:18875   */\n      0x00\n        /* \"#utility.yul\":18888:19096   */\n    tag_616:\n        /* \"#utility.yul\":18902:18909   */\n      dup3\n        /* \"#utility.yul\":18899:18900   */\n      dup2\n        /* \"#utility.yul\":18896:18910   */\n      lt\n        /* \"#utility.yul\":18888:19096   */\n      iszero\n      tag_618\n      jumpi\n        /* \"#utility.yul\":18981:18990   */\n      dup5\n        /* \"#utility.yul\":18976:18979   */\n      dup10\n        /* \"#utility.yul\":18972:18991   */\n      add\n        /* \"#utility.yul\":18966:18992   */\n      mload\n        /* \"#utility.yul\":18958:18964   */\n      dup3\n        /* \"#utility.yul\":18951:18993   */\n      sstore\n        /* \"#utility.yul\":19032:19033   */\n      0x01\n        /* \"#utility.yul\":19024:19030   */\n      dup3\n        /* \"#utility.yul\":19020:19034   */\n      add\n        /* \"#utility.yul\":19010:19034   */\n      swap2\n      pop\n        /* \"#utility.yul\":19079:19081   */\n      0x20\n        /* \"#utility.yul\":19068:19077   */\n      dup6\n        /* \"#utility.yul\":19064:19082   */\n      add\n        /* \"#utility.yul\":19051:19082   */\n      swap5\n      pop\n        /* \"#utility.yul\":18925:18929   */\n      0x20\n        /* \"#utility.yul\":18922:18923   */\n      dup2\n        /* \"#utility.yul\":18918:18930   */\n      add\n        /* \"#utility.yul\":18913:18930   */\n      swap1\n      pop\n        /* \"#utility.yul\":18888:19096   */\n      jump(tag_616)\n    tag_618:\n        /* \"#utility.yul\":19124:19130   */\n      dup7\n        /* \"#utility.yul\":19115:19122   */\n      dup4\n        /* \"#utility.yul\":19112:19131   */\n      lt\n        /* \"#utility.yul\":19109:19288   */\n      iszero\n      tag_619\n      jumpi\n        /* \"#utility.yul\":19182:19191   */\n      dup5\n        /* \"#utility.yul\":19177:19180   */\n      dup10\n        /* \"#utility.yul\":19173:19192   */\n      add\n        /* \"#utility.yul\":19167:19193   */\n      mload\n        /* \"#utility.yul\":19225:19273   */\n      tag_620\n        /* \"#utility.yul\":19267:19271   */\n      0x1f\n        /* \"#utility.yul\":19259:19265   */\n      dup10\n        /* \"#utility.yul\":19255:19272   */\n      and\n        /* \"#utility.yul\":19244:19253   */\n      dup3\n        /* \"#utility.yul\":19225:19273   */\n      tag_388\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":19217:19223   */\n      dup4\n        /* \"#utility.yul\":19210:19274   */\n      sstore\n        /* \"#utility.yul\":19132:19288   */\n      pop\n        /* \"#utility.yul\":19109:19288   */\n    tag_619:\n        /* \"#utility.yul\":19334:19335   */\n      0x01\n        /* \"#utility.yul\":19330:19331   */\n      0x02\n        /* \"#utility.yul\":19322:19328   */\n      dup9\n        /* \"#utility.yul\":19318:19332   */\n      mul\n        /* \"#utility.yul\":19314:19336   */\n      add\n        /* \"#utility.yul\":19308:19312   */\n      dup9\n        /* \"#utility.yul\":19301:19337   */\n      sstore\n        /* \"#utility.yul\":18736:19347   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":18699:19586   */\n    tag_611:\n      pop\n        /* \"#utility.yul\":18289:19592   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":18197:19592   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19598:19696   */\n    tag_390:\n        /* \"#utility.yul\":19649:19655   */\n      0x00\n        /* \"#utility.yul\":19683:19688   */\n      dup2\n        /* \"#utility.yul\":19677:19689   */\n      mload\n        /* \"#utility.yul\":19667:19689   */\n      swap1\n      pop\n        /* \"#utility.yul\":19598:19696   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19702:19870   */\n    tag_391:\n        /* \"#utility.yul\":19785:19796   */\n      0x00\n        /* \"#utility.yul\":19819:19825   */\n      dup3\n        /* \"#utility.yul\":19814:19817   */\n      dup3\n        /* \"#utility.yul\":19807:19826   */\n      mstore\n        /* \"#utility.yul\":19859:19863   */\n      0x20\n        /* \"#utility.yul\":19854:19857   */\n      dup3\n        /* \"#utility.yul\":19850:19864   */\n      add\n        /* \"#utility.yul\":19835:19864   */\n      swap1\n      pop\n        /* \"#utility.yul\":19702:19870   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19876:20249   */\n    tag_392:\n        /* \"#utility.yul\":19962:19965   */\n      0x00\n        /* \"#utility.yul\":19990:20028   */\n      tag_624\n        /* \"#utility.yul\":20022:20027   */\n      dup3\n        /* \"#utility.yul\":19990:20028   */\n      tag_390\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":20044:20114   */\n      tag_625\n        /* \"#utility.yul\":20107:20113   */\n      dup2\n        /* \"#utility.yul\":20102:20105   */\n      dup6\n        /* \"#utility.yul\":20044:20114   */\n      tag_391\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":20037:20114   */\n      swap4\n      pop\n        /* \"#utility.yul\":20123:20188   */\n      tag_626\n        /* \"#utility.yul\":20181:20187   */\n      dup2\n        /* \"#utility.yul\":20176:20179   */\n      dup6\n        /* \"#utility.yul\":20169:20173   */\n      0x20\n        /* \"#utility.yul\":20162:20167   */\n      dup7\n        /* \"#utility.yul\":20158:20174   */\n      add\n        /* \"#utility.yul\":20123:20188   */\n      tag_345\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":20213:20242   */\n      tag_627\n        /* \"#utility.yul\":20235:20241   */\n      dup2\n        /* \"#utility.yul\":20213:20242   */\n      tag_346\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":20208:20211   */\n      dup5\n        /* \"#utility.yul\":20204:20243   */\n      add\n        /* \"#utility.yul\":20197:20243   */\n      swap2\n      pop\n        /* \"#utility.yul\":19966:20249   */\n      pop\n        /* \"#utility.yul\":19876:20249   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20255:20895   */\n    tag_254:\n        /* \"#utility.yul\":20450:20454   */\n      0x00\n        /* \"#utility.yul\":20488:20491   */\n      0x80\n        /* \"#utility.yul\":20477:20486   */\n      dup3\n        /* \"#utility.yul\":20473:20492   */\n      add\n        /* \"#utility.yul\":20465:20492   */\n      swap1\n      pop\n        /* \"#utility.yul\":20502:20573   */\n      tag_629\n        /* \"#utility.yul\":20570:20571   */\n      0x00\n        /* \"#utility.yul\":20559:20568   */\n      dup4\n        /* \"#utility.yul\":20555:20572   */\n      add\n        /* \"#utility.yul\":20546:20552   */\n      dup8\n        /* \"#utility.yul\":20502:20573   */\n      tag_353\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":20583:20655   */\n      tag_630\n        /* \"#utility.yul\":20651:20653   */\n      0x20\n        /* \"#utility.yul\":20640:20649   */\n      dup4\n        /* \"#utility.yul\":20636:20654   */\n      add\n        /* \"#utility.yul\":20627:20633   */\n      dup7\n        /* \"#utility.yul\":20583:20655   */\n      tag_353\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":20665:20737   */\n      tag_631\n        /* \"#utility.yul\":20733:20735   */\n      0x40\n        /* \"#utility.yul\":20722:20731   */\n      dup4\n        /* \"#utility.yul\":20718:20736   */\n      add\n        /* \"#utility.yul\":20709:20715   */\n      dup6\n        /* \"#utility.yul\":20665:20737   */\n      tag_356\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":20784:20793   */\n      dup2\n        /* \"#utility.yul\":20778:20782   */\n      dup2\n        /* \"#utility.yul\":20774:20794   */\n      sub\n        /* \"#utility.yul\":20769:20771   */\n      0x60\n        /* \"#utility.yul\":20758:20767   */\n      dup4\n        /* \"#utility.yul\":20754:20772   */\n      add\n        /* \"#utility.yul\":20747:20795   */\n      mstore\n        /* \"#utility.yul\":20812:20888   */\n      tag_632\n        /* \"#utility.yul\":20883:20887   */\n      dup2\n        /* \"#utility.yul\":20874:20880   */\n      dup5\n        /* \"#utility.yul\":20812:20888   */\n      tag_392\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":20804:20888   */\n      swap1\n      pop\n        /* \"#utility.yul\":20255:20895   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20901:21042   */\n    tag_393:\n        /* \"#utility.yul\":20957:20962   */\n      0x00\n        /* \"#utility.yul\":20988:20994   */\n      dup2\n        /* \"#utility.yul\":20982:20995   */\n      mload\n        /* \"#utility.yul\":20973:20995   */\n      swap1\n      pop\n        /* \"#utility.yul\":21004:21036   */\n      tag_634\n        /* \"#utility.yul\":21030:21035   */\n      dup2\n        /* \"#utility.yul\":21004:21036   */\n      tag_339\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":20901:21042   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21048:21397   */\n    tag_257:\n        /* \"#utility.yul\":21117:21123   */\n      0x00\n        /* \"#utility.yul\":21166:21168   */\n      0x20\n        /* \"#utility.yul\":21154:21163   */\n      dup3\n        /* \"#utility.yul\":21145:21152   */\n      dup5\n        /* \"#utility.yul\":21141:21164   */\n      sub\n        /* \"#utility.yul\":21137:21169   */\n      slt\n        /* \"#utility.yul\":21134:21253   */\n      iszero\n      tag_636\n      jumpi\n        /* \"#utility.yul\":21172:21251   */\n      tag_637\n      tag_336\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":21134:21253   */\n    tag_636:\n        /* \"#utility.yul\":21292:21293   */\n      0x00\n        /* \"#utility.yul\":21317:21380   */\n      tag_638\n        /* \"#utility.yul\":21372:21379   */\n      dup5\n        /* \"#utility.yul\":21363:21369   */\n      dup3\n        /* \"#utility.yul\":21352:21361   */\n      dup6\n        /* \"#utility.yul\":21348:21370   */\n      add\n        /* \"#utility.yul\":21317:21380   */\n      tag_393\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":21307:21380   */\n      swap2\n      pop\n        /* \"#utility.yul\":21263:21390   */\n      pop\n        /* \"#utility.yul\":21048:21397   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21403:21838   */\n    tag_282:\n        /* \"#utility.yul\":21583:21586   */\n      0x00\n        /* \"#utility.yul\":21605:21700   */\n      tag_640\n        /* \"#utility.yul\":21696:21699   */\n      dup3\n        /* \"#utility.yul\":21687:21693   */\n      dup6\n        /* \"#utility.yul\":21605:21700   */\n      tag_371\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":21598:21700   */\n      swap2\n      pop\n        /* \"#utility.yul\":21717:21812   */\n      tag_641\n        /* \"#utility.yul\":21808:21811   */\n      dup3\n        /* \"#utility.yul\":21799:21805   */\n      dup5\n        /* \"#utility.yul\":21717:21812   */\n      tag_371\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":21710:21812   */\n      swap2\n      pop\n        /* \"#utility.yul\":21829:21832   */\n      dup2\n        /* \"#utility.yul\":21822:21832   */\n      swap1\n      pop\n        /* \"#utility.yul\":21403:21838   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21844:22176   */\n    tag_309:\n        /* \"#utility.yul\":21965:21969   */\n      0x00\n        /* \"#utility.yul\":22003:22005   */\n      0x40\n        /* \"#utility.yul\":21992:22001   */\n      dup3\n        /* \"#utility.yul\":21988:22006   */\n      add\n        /* \"#utility.yul\":21980:22006   */\n      swap1\n      pop\n        /* \"#utility.yul\":22016:22087   */\n      tag_643\n        /* \"#utility.yul\":22084:22085   */\n      0x00\n        /* \"#utility.yul\":22073:22082   */\n      dup4\n        /* \"#utility.yul\":22069:22086   */\n      add\n        /* \"#utility.yul\":22060:22066   */\n      dup6\n        /* \"#utility.yul\":22016:22087   */\n      tag_353\n      jump\t// in\n    tag_643:\n        /* \"#utility.yul\":22097:22169   */\n      tag_644\n        /* \"#utility.yul\":22165:22167   */\n      0x20\n        /* \"#utility.yul\":22154:22163   */\n      dup4\n        /* \"#utility.yul\":22150:22168   */\n      add\n        /* \"#utility.yul\":22141:22147   */\n      dup5\n        /* \"#utility.yul\":22097:22169   */\n      tag_356\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":21844:22176   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_1250311f865916c0c48ec18be7711c5b67f23674d6e827435103b8b03cf0ba32 697066733a2f2f516d61633839735a545347764b6b795961327672786452616b5052456147464a534e4a52525765747a544c51544d2f\n\n    auxdata: 0xa2646970667358221220a4156b5470f38791730aa3a95aad0cc004e94be98e5bdcc2d49c088af2d49e4b64736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1660": {
									"entryPoint": null,
									"id": 1660,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_326": {
									"entryPoint": null,
									"id": 326,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_686": {
									"entryPoint": null,
									"id": 686,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_422": {
									"entryPoint": 302,
									"id": 422,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1387,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1404,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 649,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 497,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 958,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1368,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1337,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 779,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 920,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 797,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1109,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 667,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 597,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1080,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 788,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1050,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 552,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 507,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 836,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 682,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1038,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 892,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 694,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 845,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 888,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5817:1",
										"nodeType": "YulBlock",
										"src": "0:5817:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:1",
													"nodeType": "YulBlock",
													"src": "66:40:1",
													"statements": [
														{
															"nativeSrc": "77:22:1",
															"nodeType": "YulAssignment",
															"src": "77:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:1"
																},
																"nativeSrc": "87:12:1",
																"nodeType": "YulFunctionCall",
																"src": "87:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:1",
														"nodeType": "YulTypedName",
														"src": "49:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:1",
														"nodeType": "YulTypedName",
														"src": "59:6:1",
														"type": ""
													}
												],
												"src": "7:99:1"
											},
											{
												"body": {
													"nativeSrc": "140:152:1",
													"nodeType": "YulBlock",
													"src": "140:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:1",
																		"nodeType": "YulLiteral",
																		"src": "157:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:1",
																		"nodeType": "YulLiteral",
																		"src": "160:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:1"
																},
																"nativeSrc": "150:88:1",
																"nodeType": "YulFunctionCall",
																"src": "150:88:1"
															},
															"nativeSrc": "150:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:1",
																		"nodeType": "YulLiteral",
																		"src": "254:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:1",
																		"nodeType": "YulLiteral",
																		"src": "257:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:1"
																},
																"nativeSrc": "247:15:1",
																"nodeType": "YulFunctionCall",
																"src": "247:15:1"
															},
															"nativeSrc": "247:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:1",
																		"nodeType": "YulLiteral",
																		"src": "278:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:1",
																		"nodeType": "YulLiteral",
																		"src": "281:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:1"
																},
																"nativeSrc": "271:15:1",
																"nodeType": "YulFunctionCall",
																"src": "271:15:1"
															},
															"nativeSrc": "271:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:1"
											},
											{
												"body": {
													"nativeSrc": "326:152:1",
													"nodeType": "YulBlock",
													"src": "326:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:1",
																		"nodeType": "YulLiteral",
																		"src": "343:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:1",
																		"nodeType": "YulLiteral",
																		"src": "346:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:1"
																},
																"nativeSrc": "336:88:1",
																"nodeType": "YulFunctionCall",
																"src": "336:88:1"
															},
															"nativeSrc": "336:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:1",
																		"nodeType": "YulLiteral",
																		"src": "440:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:1",
																		"nodeType": "YulLiteral",
																		"src": "443:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:1"
																},
																"nativeSrc": "433:15:1",
																"nodeType": "YulFunctionCall",
																"src": "433:15:1"
															},
															"nativeSrc": "433:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:1",
																		"nodeType": "YulLiteral",
																		"src": "464:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:1",
																		"nodeType": "YulLiteral",
																		"src": "467:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:1"
																},
																"nativeSrc": "457:15:1",
																"nodeType": "YulFunctionCall",
																"src": "457:15:1"
															},
															"nativeSrc": "457:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:1"
											},
											{
												"body": {
													"nativeSrc": "535:269:1",
													"nodeType": "YulBlock",
													"src": "535:269:1",
													"statements": [
														{
															"nativeSrc": "545:22:1",
															"nodeType": "YulAssignment",
															"src": "545:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:1",
																		"nodeType": "YulLiteral",
																		"src": "565:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:1"
																},
																"nativeSrc": "555:12:1",
																"nodeType": "YulFunctionCall",
																"src": "555:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:1"
																}
															]
														},
														{
															"nativeSrc": "576:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:1",
																		"nodeType": "YulLiteral",
																		"src": "612:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:1"
																},
																"nativeSrc": "602:12:1",
																"nodeType": "YulFunctionCall",
																"src": "602:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:1",
																	"nodeType": "YulTypedName",
																	"src": "580:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:1",
																"nodeType": "YulBlock",
																"src": "653:51:1",
																"statements": [
																	{
																		"nativeSrc": "667:27:1",
																		"nodeType": "YulAssignment",
																		"src": "667:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:1",
																					"nodeType": "YulLiteral",
																					"src": "689:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:1"
																			},
																			"nativeSrc": "677:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:1"
																},
																"nativeSrc": "626:26:1",
																"nodeType": "YulFunctionCall",
																"src": "626:26:1"
															},
															"nativeSrc": "623:81:1",
															"nodeType": "YulIf",
															"src": "623:81:1"
														},
														{
															"body": {
																"nativeSrc": "756:42:1",
																"nodeType": "YulBlock",
																"src": "756:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:1"
																			},
																			"nativeSrc": "770:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:1"
																		},
																		"nativeSrc": "770:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:1",
																				"nodeType": "YulLiteral",
																				"src": "751:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:1"
																		},
																		"nativeSrc": "740:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:1"
																},
																"nativeSrc": "717:38:1",
																"nodeType": "YulFunctionCall",
																"src": "717:38:1"
															},
															"nativeSrc": "714:84:1",
															"nodeType": "YulIf",
															"src": "714:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:1",
														"nodeType": "YulTypedName",
														"src": "519:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:1",
														"nodeType": "YulTypedName",
														"src": "528:6:1",
														"type": ""
													}
												],
												"src": "484:320:1"
											},
											{
												"body": {
													"nativeSrc": "864:87:1",
													"nodeType": "YulBlock",
													"src": "864:87:1",
													"statements": [
														{
															"nativeSrc": "874:11:1",
															"nodeType": "YulAssignment",
															"src": "874:11:1",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:1",
																"nodeType": "YulIdentifier",
																"src": "882:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:1",
																		"nodeType": "YulLiteral",
																		"src": "902:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:1"
																},
																"nativeSrc": "895:14:1",
																"nodeType": "YulFunctionCall",
																"src": "895:14:1"
															},
															"nativeSrc": "895:14:1",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:1"
														},
														{
															"nativeSrc": "918:26:1",
															"nodeType": "YulAssignment",
															"src": "918:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:1",
																		"nodeType": "YulLiteral",
																		"src": "936:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:1",
																		"nodeType": "YulLiteral",
																		"src": "939:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:1"
																},
																"nativeSrc": "926:18:1",
																"nodeType": "YulFunctionCall",
																"src": "926:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:1",
														"nodeType": "YulTypedName",
														"src": "851:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:1",
														"nodeType": "YulTypedName",
														"src": "859:4:1",
														"type": ""
													}
												],
												"src": "810:141:1"
											},
											{
												"body": {
													"nativeSrc": "1001:49:1",
													"nodeType": "YulBlock",
													"src": "1001:49:1",
													"statements": [
														{
															"nativeSrc": "1011:33:1",
															"nodeType": "YulAssignment",
															"src": "1011:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:1"
																		},
																		"nativeSrc": "1025:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:1"
																},
																"nativeSrc": "1021:23:1",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:1"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:1",
														"nodeType": "YulTypedName",
														"src": "984:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:1",
														"nodeType": "YulTypedName",
														"src": "994:6:1",
														"type": ""
													}
												],
												"src": "957:93:1"
											},
											{
												"body": {
													"nativeSrc": "1109:54:1",
													"nodeType": "YulBlock",
													"src": "1109:54:1",
													"statements": [
														{
															"nativeSrc": "1119:37:1",
															"nodeType": "YulAssignment",
															"src": "1119:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:1"
																},
																"nativeSrc": "1140:16:1",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:1"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:1",
														"nodeType": "YulTypedName",
														"src": "1084:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:1",
														"nodeType": "YulTypedName",
														"src": "1090:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:1",
														"nodeType": "YulTypedName",
														"src": "1100:8:1",
														"type": ""
													}
												],
												"src": "1056:107:1"
											},
											{
												"body": {
													"nativeSrc": "1245:317:1",
													"nodeType": "YulBlock",
													"src": "1245:317:1",
													"statements": [
														{
															"nativeSrc": "1255:35:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:1",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:1",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:1"
																},
																"nativeSrc": "1272:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:1"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:1",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:1",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:1"
																},
																"nativeSrc": "1311:97:1",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:1",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:1",
															"nodeType": "YulAssignment",
															"src": "1417:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:1"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:1"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:1"
																},
																"nativeSrc": "1429:39:1",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:1"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:1"
																}
															]
														},
														{
															"nativeSrc": "1477:30:1",
															"nodeType": "YulAssignment",
															"src": "1477:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:1"
																		},
																		"nativeSrc": "1497:9:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:1"
																},
																"nativeSrc": "1486:21:1",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:1"
																}
															]
														},
														{
															"nativeSrc": "1516:40:1",
															"nodeType": "YulAssignment",
															"src": "1516:40:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:1"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:1"
																		},
																		"nativeSrc": "1536:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:1"
																},
																"nativeSrc": "1526:30:1",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:1"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:1",
														"nodeType": "YulTypedName",
														"src": "1206:5:1",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:1",
														"nodeType": "YulTypedName",
														"src": "1213:10:1",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:1",
														"nodeType": "YulTypedName",
														"src": "1225:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:1",
														"nodeType": "YulTypedName",
														"src": "1238:6:1",
														"type": ""
													}
												],
												"src": "1169:393:1"
											},
											{
												"body": {
													"nativeSrc": "1613:32:1",
													"nodeType": "YulBlock",
													"src": "1613:32:1",
													"statements": [
														{
															"nativeSrc": "1623:16:1",
															"nodeType": "YulAssignment",
															"src": "1623:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:1",
																"nodeType": "YulIdentifier",
																"src": "1634:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:1",
														"nodeType": "YulTypedName",
														"src": "1595:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:1",
														"nodeType": "YulTypedName",
														"src": "1605:7:1",
														"type": ""
													}
												],
												"src": "1568:77:1"
											},
											{
												"body": {
													"nativeSrc": "1683:28:1",
													"nodeType": "YulBlock",
													"src": "1683:28:1",
													"statements": [
														{
															"nativeSrc": "1693:12:1",
															"nodeType": "YulAssignment",
															"src": "1693:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:1",
																"nodeType": "YulIdentifier",
																"src": "1700:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:1"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:1",
														"nodeType": "YulTypedName",
														"src": "1669:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:1",
														"nodeType": "YulTypedName",
														"src": "1679:3:1",
														"type": ""
													}
												],
												"src": "1651:60:1"
											},
											{
												"body": {
													"nativeSrc": "1777:82:1",
													"nodeType": "YulBlock",
													"src": "1777:82:1",
													"statements": [
														{
															"nativeSrc": "1787:66:1",
															"nodeType": "YulAssignment",
															"src": "1787:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:1"
																				},
																				"nativeSrc": "1827:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:1"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:1",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:1"
																		},
																		"nativeSrc": "1818:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:1"
																},
																"nativeSrc": "1800:53:1",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:1",
														"nodeType": "YulTypedName",
														"src": "1757:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:1",
														"nodeType": "YulTypedName",
														"src": "1767:9:1",
														"type": ""
													}
												],
												"src": "1717:142:1"
											},
											{
												"body": {
													"nativeSrc": "1912:28:1",
													"nodeType": "YulBlock",
													"src": "1912:28:1",
													"statements": [
														{
															"nativeSrc": "1922:12:1",
															"nodeType": "YulAssignment",
															"src": "1922:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:1",
																"nodeType": "YulIdentifier",
																"src": "1929:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:1"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:1",
														"nodeType": "YulTypedName",
														"src": "1898:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:1",
														"nodeType": "YulTypedName",
														"src": "1908:3:1",
														"type": ""
													}
												],
												"src": "1865:75:1"
											},
											{
												"body": {
													"nativeSrc": "2022:193:1",
													"nodeType": "YulBlock",
													"src": "2022:193:1",
													"statements": [
														{
															"nativeSrc": "2032:63:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:1",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:1"
																},
																"nativeSrc": "2056:39:1",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:1"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:1",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:1"
																				},
																				"nativeSrc": "2145:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:1"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:1",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:1"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:1",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:1"
																				},
																				"nativeSrc": "2166:41:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:1"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:1",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:1"
																		},
																		"nativeSrc": "2117:91:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:1"
																},
																"nativeSrc": "2104:105:1",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:1"
															},
															"nativeSrc": "2104:105:1",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:1"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:1",
														"nodeType": "YulTypedName",
														"src": "1999:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:1",
														"nodeType": "YulTypedName",
														"src": "2005:6:1",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:1",
														"nodeType": "YulTypedName",
														"src": "2013:7:1",
														"type": ""
													}
												],
												"src": "1946:269:1"
											},
											{
												"body": {
													"nativeSrc": "2270:24:1",
													"nodeType": "YulBlock",
													"src": "2270:24:1",
													"statements": [
														{
															"nativeSrc": "2280:8:1",
															"nodeType": "YulAssignment",
															"src": "2280:8:1",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:1",
																"nodeType": "YulLiteral",
																"src": "2287:1:1",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:1"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:1",
														"nodeType": "YulTypedName",
														"src": "2266:3:1",
														"type": ""
													}
												],
												"src": "2221:73:1"
											},
											{
												"body": {
													"nativeSrc": "2353:136:1",
													"nodeType": "YulBlock",
													"src": "2353:136:1",
													"statements": [
														{
															"nativeSrc": "2363:46:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:1"
																},
																"nativeSrc": "2377:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:1"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:1",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:1"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:1"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:1"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:1"
																},
																"nativeSrc": "2418:65:1",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:1"
															},
															"nativeSrc": "2418:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:1"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:1",
														"nodeType": "YulTypedName",
														"src": "2339:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:1",
														"nodeType": "YulTypedName",
														"src": "2345:6:1",
														"type": ""
													}
												],
												"src": "2300:189:1"
											},
											{
												"body": {
													"nativeSrc": "2545:136:1",
													"nodeType": "YulBlock",
													"src": "2545:136:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:1",
																"nodeType": "YulBlock",
																"src": "2612:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:1",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:1"
																			},
																			"nativeSrc": "2626:39:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:1"
																		},
																		"nativeSrc": "2626:39:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:1"
																},
																"nativeSrc": "2562:14:1",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:1"
															},
															"nativeSrc": "2555:120:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:1",
																"nodeType": "YulBlock",
																"src": "2577:26:1",
																"statements": [
																	{
																		"nativeSrc": "2579:22:1",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:1"
																			},
																			"nativeSrc": "2588:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:1"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:1",
																"nodeType": "YulBlock",
																"src": "2559:2:1",
																"statements": []
															},
															"src": "2555:120:1"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:1",
														"nodeType": "YulTypedName",
														"src": "2533:5:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:1",
														"nodeType": "YulTypedName",
														"src": "2540:3:1",
														"type": ""
													}
												],
												"src": "2495:186:1"
											},
											{
												"body": {
													"nativeSrc": "2766:464:1",
													"nodeType": "YulBlock",
													"src": "2766:464:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:1",
																"nodeType": "YulBlock",
																"src": "2792:431:1",
																"statements": [
																	{
																		"nativeSrc": "2806:54:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:1"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:1",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:1"
																			},
																			"nativeSrc": "2822:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:1"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:1",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:1",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:1"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:1",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:1"
																					},
																					"nativeSrc": "2906:29:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:1"
																			},
																			"nativeSrc": "2892:44:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:1",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:1",
																			"nodeType": "YulBlock",
																			"src": "3093:27:1",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:1",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:1",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:1",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:1",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:1",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:1"
																			},
																			"nativeSrc": "3074:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:1"
																		},
																		"nativeSrc": "3071:49:1",
																		"nodeType": "YulIf",
																		"src": "3071:49:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:1",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:1"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:1",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:1"
																							},
																							"nativeSrc": "3189:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:1"
																					},
																					"nativeSrc": "3175:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:1"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:1",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:1"
																			},
																			"nativeSrc": "3133:80:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:1"
																		},
																		"nativeSrc": "3133:80:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:1"
																},
																"nativeSrc": "2780:11:1",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:1"
															},
															"nativeSrc": "2777:446:1",
															"nodeType": "YulIf",
															"src": "2777:446:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:1",
														"nodeType": "YulTypedName",
														"src": "2742:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:1",
														"nodeType": "YulTypedName",
														"src": "2749:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:1",
														"nodeType": "YulTypedName",
														"src": "2754:10:1",
														"type": ""
													}
												],
												"src": "2687:543:1"
											},
											{
												"body": {
													"nativeSrc": "3299:54:1",
													"nodeType": "YulBlock",
													"src": "3299:54:1",
													"statements": [
														{
															"nativeSrc": "3309:37:1",
															"nodeType": "YulAssignment",
															"src": "3309:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:1"
																},
																"nativeSrc": "3330:16:1",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:1"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:1",
														"nodeType": "YulTypedName",
														"src": "3274:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:1",
														"nodeType": "YulTypedName",
														"src": "3280:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:1",
														"nodeType": "YulTypedName",
														"src": "3290:8:1",
														"type": ""
													}
												],
												"src": "3236:117:1"
											},
											{
												"body": {
													"nativeSrc": "3410:118:1",
													"nodeType": "YulBlock",
													"src": "3410:118:1",
													"statements": [
														{
															"nativeSrc": "3420:68:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:1",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:1",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:1"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:1"
																				},
																				"nativeSrc": "3465:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:1",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:1"
																				},
																				"nativeSrc": "3480:6:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:1"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:1",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:1"
																		},
																		"nativeSrc": "3436:51:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:1"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:1"
																},
																"nativeSrc": "3432:56:1",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:1",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:1",
															"nodeType": "YulAssignment",
															"src": "3497:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:1"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:1"
																},
																"nativeSrc": "3507:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:1"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:1",
														"nodeType": "YulTypedName",
														"src": "3387:4:1",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:1",
														"nodeType": "YulTypedName",
														"src": "3393:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:1",
														"nodeType": "YulTypedName",
														"src": "3403:6:1",
														"type": ""
													}
												],
												"src": "3359:169:1"
											},
											{
												"body": {
													"nativeSrc": "3614:214:1",
													"nodeType": "YulBlock",
													"src": "3614:214:1",
													"statements": [
														{
															"nativeSrc": "3747:37:1",
															"nodeType": "YulAssignment",
															"src": "3747:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:1"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:1"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:1"
																},
																"nativeSrc": "3755:29:1",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:1"
																}
															]
														},
														{
															"nativeSrc": "3793:29:1",
															"nodeType": "YulAssignment",
															"src": "3793:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:1",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:1"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:1"
																		},
																		"nativeSrc": "3810:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:1"
																},
																"nativeSrc": "3801:21:1",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:1",
														"nodeType": "YulTypedName",
														"src": "3595:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:1",
														"nodeType": "YulTypedName",
														"src": "3601:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:1",
														"nodeType": "YulTypedName",
														"src": "3609:4:1",
														"type": ""
													}
												],
												"src": "3533:295:1"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:1",
													"nodeType": "YulBlock",
													"src": "3925:1303:1",
													"statements": [
														{
															"nativeSrc": "3936:51:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:1"
																},
																"nativeSrc": "3950:37:1",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:1",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:1",
																"nodeType": "YulBlock",
																"src": "4072:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:1"
																			},
																			"nativeSrc": "4074:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:1"
																		},
																		"nativeSrc": "4074:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:1",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:1"
																},
																"nativeSrc": "4041:30:1",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:1"
															},
															"nativeSrc": "4038:56:1",
															"nodeType": "YulIf",
															"src": "4038:56:1"
														},
														{
															"nativeSrc": "4104:52:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:1"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:1"
																		},
																		"nativeSrc": "4144:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:1"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:1"
																},
																"nativeSrc": "4118:38:1",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:1"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:1",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:1"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:1"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:1",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:1"
																},
																"nativeSrc": "4203:67:1",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:1"
															},
															"nativeSrc": "4203:67:1",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:1"
														},
														{
															"nativeSrc": "4280:18:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:1",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:1",
																"nodeType": "YulLiteral",
																"src": "4297:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:1",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:1",
															"nodeType": "YulAssignment",
															"src": "4308:17:1",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:1",
																"nodeType": "YulLiteral",
																"src": "4321:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:1",
																		"nodeType": "YulBlock",
																		"src": "4372:611:1",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:1",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:1",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:1"
																							},
																							"nativeSrc": "4413:9:1",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:1"
																					},
																					"nativeSrc": "4401:22:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:1",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:1",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:1"
																					},
																					"nativeSrc": "4451:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:1",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:1",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:1",
																					"nodeType": "YulBlock",
																					"src": "4569:163:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:1",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:1"
																												},
																												"nativeSrc": "4608:19:1",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:1"
																										},
																										"nativeSrc": "4602:26:1",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:1"
																								},
																								"nativeSrc": "4587:42:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:1"
																							},
																							"nativeSrc": "4587:42:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:1"
																						},
																						{
																							"nativeSrc": "4646:24:1",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:1",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:1"
																								},
																								"nativeSrc": "4656:14:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:1"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:1",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:1",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:1",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:1",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:1"
																								},
																								"nativeSrc": "4700:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:1"
																					},
																					"nativeSrc": "4532:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:1"
																				},
																				"nativeSrc": "4524:208:1",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:1",
																					"nodeType": "YulBlock",
																					"src": "4547:21:1",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:1",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:1",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:1"
																								},
																								"nativeSrc": "4554:12:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:1",
																					"nodeType": "YulBlock",
																					"src": "4528:3:1",
																					"statements": []
																				},
																				"src": "4524:208:1"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:1",
																					"nodeType": "YulBlock",
																					"src": "4768:156:1",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:1",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:1"
																										},
																										"nativeSrc": "4809:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:1"
																								},
																								"nativeSrc": "4803:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:1",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:1",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:1"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:1",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:1",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:1"
																												},
																												"nativeSrc": "4891:17:1",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:1"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:1",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:1"
																										},
																										"nativeSrc": "4861:48:1",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:1"
																								},
																								"nativeSrc": "4846:64:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:1"
																							},
																							"nativeSrc": "4846:64:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:1"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:1"
																					},
																					"nativeSrc": "4748:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:1"
																				},
																				"nativeSrc": "4745:179:1",
																				"nodeType": "YulIf",
																				"src": "4745:179:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:1"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:1",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:1",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:1"
																									},
																									"nativeSrc": "4954:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:1",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:1"
																							},
																							"nativeSrc": "4950:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:1"
																					},
																					"nativeSrc": "4937:36:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:1"
																				},
																				"nativeSrc": "4937:36:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:1"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:1",
																	"nodeType": "YulCase",
																	"src": "4365:618:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:1",
																		"nodeType": "YulBlock",
																		"src": "5000:222:1",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:1",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:1",
																					"nodeType": "YulBlock",
																					"src": "5051:67:1",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:1",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:1"
																										},
																										"nativeSrc": "5084:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:1"
																								},
																								"nativeSrc": "5078:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:1"
																				},
																				"nativeSrc": "5041:77:1",
																				"nodeType": "YulIf",
																				"src": "5041:77:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:1"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:1",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:1"
																							},
																							"nativeSrc": "5144:67:1",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:1"
																					},
																					"nativeSrc": "5131:81:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:1"
																				},
																				"nativeSrc": "5131:81:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:1"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:1",
																	"nodeType": "YulCase",
																	"src": "4992:230:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:1"
																},
																"nativeSrc": "4342:14:1",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:1"
															},
															"nativeSrc": "4335:887:1",
															"nodeType": "YulSwitch",
															"src": "4335:887:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:1",
														"nodeType": "YulTypedName",
														"src": "3914:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:1",
														"nodeType": "YulTypedName",
														"src": "3920:3:1",
														"type": ""
													}
												],
												"src": "3833:1395:1"
											},
											{
												"body": {
													"nativeSrc": "5279:81:1",
													"nodeType": "YulBlock",
													"src": "5279:81:1",
													"statements": [
														{
															"nativeSrc": "5289:65:1",
															"nodeType": "YulAssignment",
															"src": "5289:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5304:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "5304:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5311:42:1",
																		"nodeType": "YulLiteral",
																		"src": "5311:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5300:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5300:3:1"
																},
																"nativeSrc": "5300:54:1",
																"nodeType": "YulFunctionCall",
																"src": "5300:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5289:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "5289:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "5234:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5261:5:1",
														"nodeType": "YulTypedName",
														"src": "5261:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5271:7:1",
														"nodeType": "YulTypedName",
														"src": "5271:7:1",
														"type": ""
													}
												],
												"src": "5234:126:1"
											},
											{
												"body": {
													"nativeSrc": "5411:51:1",
													"nodeType": "YulBlock",
													"src": "5411:51:1",
													"statements": [
														{
															"nativeSrc": "5421:35:1",
															"nodeType": "YulAssignment",
															"src": "5421:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5450:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "5450:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5432:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "5432:17:1"
																},
																"nativeSrc": "5432:24:1",
																"nodeType": "YulFunctionCall",
																"src": "5432:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5421:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "5421:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "5366:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5393:5:1",
														"nodeType": "YulTypedName",
														"src": "5393:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5403:7:1",
														"nodeType": "YulTypedName",
														"src": "5403:7:1",
														"type": ""
													}
												],
												"src": "5366:96:1"
											},
											{
												"body": {
													"nativeSrc": "5533:53:1",
													"nodeType": "YulBlock",
													"src": "5533:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5550:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5550:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5573:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "5573:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5555:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "5555:17:1"
																		},
																		"nativeSrc": "5555:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5555:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5543:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5543:6:1"
																},
																"nativeSrc": "5543:37:1",
																"nodeType": "YulFunctionCall",
																"src": "5543:37:1"
															},
															"nativeSrc": "5543:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "5543:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5468:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5521:5:1",
														"nodeType": "YulTypedName",
														"src": "5521:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5528:3:1",
														"nodeType": "YulTypedName",
														"src": "5528:3:1",
														"type": ""
													}
												],
												"src": "5468:118:1"
											},
											{
												"body": {
													"nativeSrc": "5690:124:1",
													"nodeType": "YulBlock",
													"src": "5690:124:1",
													"statements": [
														{
															"nativeSrc": "5700:26:1",
															"nodeType": "YulAssignment",
															"src": "5700:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5712:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5712:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5723:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5723:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5708:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5708:3:1"
																},
																"nativeSrc": "5708:18:1",
																"nodeType": "YulFunctionCall",
																"src": "5708:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5700:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5700:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5780:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5780:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5793:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5793:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5804:1:1",
																				"nodeType": "YulLiteral",
																				"src": "5804:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5789:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5789:3:1"
																		},
																		"nativeSrc": "5789:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5789:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5736:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "5736:43:1"
																},
																"nativeSrc": "5736:71:1",
																"nodeType": "YulFunctionCall",
																"src": "5736:71:1"
															},
															"nativeSrc": "5736:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "5736:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5592:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5662:9:1",
														"nodeType": "YulTypedName",
														"src": "5662:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5674:6:1",
														"nodeType": "YulTypedName",
														"src": "5674:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5685:4:1",
														"nodeType": "YulTypedName",
														"src": "5685:4:1",
														"type": ""
													}
												],
												"src": "5592:222:1"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b50336040518060400160405280600481526020017f65373231000000000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f3732310000000000000000000000000000000000000000000000000000000000815250815f90816200008e919062000455565b508060019081620000a0919062000455565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160362000116575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016200010d91906200057c565b60405180910390fd5b62000127816200012e60201b60201c565b5062000597565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200026d57607f821691505b60208210810362000283576200028262000228565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620002e77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620002aa565b620002f38683620002aa565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6200033d6200033762000331846200030b565b62000314565b6200030b565b9050919050565b5f819050919050565b62000358836200031d565b62000370620003678262000344565b848454620002b6565b825550505050565b5f90565b6200038662000378565b620003938184846200034d565b505050565b5b81811015620003ba57620003ae5f826200037c565b60018101905062000399565b5050565b601f8211156200040957620003d38162000289565b620003de846200029b565b81016020851015620003ee578190505b62000406620003fd856200029b565b83018262000398565b50505b505050565b5f82821c905092915050565b5f6200042b5f19846008026200040e565b1980831691505092915050565b5f6200044583836200041a565b9150826002028217905092915050565b6200046082620001f1565b67ffffffffffffffff8111156200047c576200047b620001fb565b5b62000488825462000255565b62000495828285620003be565b5f60209050601f831160018114620004cb575f8415620004b6578287015190505b620004c2858262000438565b86555062000531565b601f198416620004db8662000289565b5f5b828110156200050457848901518255600182019150602085019450602081019050620004dd565b8683101562000524578489015162000520601f8916826200041a565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620005648262000539565b9050919050565b620005768162000558565b82525050565b5f602082019050620005915f8301846200056b565b92915050565b6126db80620005a55f395ff3fe608060405234801561000f575f80fd5b5060043610610114575f3560e01c806370a08231116100a0578063a22cb4651161006f578063a22cb465146102c8578063b88d4fde146102e4578063c87b56dd14610300578063e985e9c514610330578063f2fde38b1461036057610114565b806370a0823114610252578063715018a6146102825780638da5cb5b1461028c57806395d89b41146102aa57610114565b806323b872dd116100e757806323b872dd146101b257806340d097c3146101ce57806342842e0e146101ea57806342966c68146102065780636352211e1461022257610114565b806301ffc9a71461011857806306fdde0314610148578063081812fc14610166578063095ea7b314610196575b5f80fd5b610132600480360381019061012d9190611ab0565b61037c565b60405161013f9190611af5565b60405180910390f35b61015061038d565b60405161015d9190611b98565b60405180910390f35b610180600480360381019061017b9190611beb565b61041c565b60405161018d9190611c55565b60405180910390f35b6101b060048036038101906101ab9190611c98565b610437565b005b6101cc60048036038101906101c79190611cd6565b61044d565b005b6101e860048036038101906101e39190611d26565b61054c565b005b61020460048036038101906101ff9190611cd6565b610631565b005b610220600480360381019061021b9190611beb565b610650565b005b61023c60048036038101906102379190611beb565b610666565b6040516102499190611c55565b60405180910390f35b61026c60048036038101906102679190611d26565b610677565b6040516102799190611d60565b60405180910390f35b61028a61072d565b005b610294610740565b6040516102a19190611c55565b60405180910390f35b6102b2610768565b6040516102bf9190611b98565b60405180910390f35b6102e260048036038101906102dd9190611da3565b6107f8565b005b6102fe60048036038101906102f99190611f0d565b61080e565b005b61031a60048036038101906103159190611beb565b61082b565b6040516103279190611b98565b60405180910390f35b61034a60048036038101906103459190611f8d565b61083d565b6040516103579190611af5565b60405180910390f35b61037a60048036038101906103759190611d26565b6108cb565b005b5f6103868261094f565b9050919050565b60605f805461039b90611ff8565b80601f01602080910402602001604051908101604052809291908181526020018280546103c790611ff8565b80156104125780601f106103e957610100808354040283529160200191610412565b820191905f5260205f20905b8154815290600101906020018083116103f557829003601f168201915b5050505050905090565b5f610426826109af565b5061043082610a35565b9050919050565b6104498282610444610a6e565b610a75565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036104bd575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016104b49190611c55565b60405180910390fd5b5f6104d083836104cb610a6e565b610a87565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610546578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161053d93929190612028565b60405180910390fd5b50505050565b60095f9054906101000a900460ff161561059b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610592906120a7565b60405180910390fd5b600160095f6101000a81548160ff0219169083151502179055506105bd610c92565b5f6105c86008610d19565b90506105d46008610d25565b5f6105de82610d39565b6040516020016105ee9190612125565b60405160208183030381529060405290506106098282610e92565b6106138383610eec565b50505f60095f6101000a81548160ff02191690831515021790555050565b61064b83838360405180602001604052805f81525061080e565b505050565b6106625f8261065d610a6e565b610a87565b5050565b5f610670826109af565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106e8575f6040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016106df9190611c55565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610735610c92565b61073e5f610f09565b565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606001805461077790611ff8565b80601f01602080910402602001604051908101604052809291908181526020018280546107a390611ff8565b80156107ee5780601f106107c5576101008083540402835291602001916107ee565b820191905f5260205f20905b8154815290600101906020018083116107d157829003601f168201915b5050505050905090565b61080a610803610a6e565b8383610fcc565b5050565b61081984848461044d565b61082584848484611135565b50505050565b6060610836826112e6565b9050919050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b6108d3610c92565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610943575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161093a9190611c55565b60405180910390fd5b61094c81610f09565b50565b5f634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806109a857506109a7826113f1565b5b9050919050565b5f806109ba836114d2565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a2c57826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610a239190611d60565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610a82838383600161150b565b505050565b5f80610a92846114d2565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610ad357610ad28184866116ca565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610b5e57610b125f855f8061150b565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610bdd57600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b610c9a610a6e565b73ffffffffffffffffffffffffffffffffffffffff16610cb8610740565b73ffffffffffffffffffffffffffffffffffffffff1614610d1757610cdb610a6e565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610d0e9190611c55565b60405180910390fd5b565b5f815f01549050919050565b6001815f015f828254019250508190555050565b60605f8203610d7f576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050610e8d565b5f8290505f5b5f8214610dae578080610d9790612177565b915050600a82610da791906121eb565b9150610d85565b5f8167ffffffffffffffff811115610dc957610dc8611de9565b5b6040519080825280601f01601f191660200182016040528015610dfb5781602001600182028036833780820191505090505b5090505b5f8514610e8657600182610e13919061221b565b9150600a85610e22919061224e565b6030610e2e919061227e565b60f81b818381518110610e4457610e436122b1565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a905350600a85610e7f91906121eb565b9450610dff565b8093505050505b919050565b8060065f8481526020019081526020015f209081610eb0919061247b565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce782604051610ee09190611d60565b60405180910390a15050565b610f05828260405180602001604052805f81525061178d565b5050565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361103c57816040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016110339190611c55565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516111289190611af5565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b11156112e0578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02611178610a6e565b8685856040518563ffffffff1660e01b815260040161119a949392919061259c565b6020604051808303815f875af19250505080156111d557506040513d601f19601f820116820180604052508101906111d291906125fa565b60015b611254573d805f8114611203576040519150601f19603f3d011682016040523d82523d5f602084013e611208565b606091505b505f81510361124e57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016112459190611c55565b60405180910390fd5b506112df565b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146112dd57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016112d49190611c55565b60405180910390fd5b505b5b50505050565b60606112f1826109af565b505f60065f8481526020019081526020015f20805461130f90611ff8565b80601f016020809104026020016040519081016040528092919081815260200182805461133b90611ff8565b80156113865780601f1061135d57610100808354040283529160200191611386565b820191905f5260205f20905b81548152906001019060200180831161136957829003601f168201915b505050505090505f6113966117a8565b90505f8151036113aa5781925050506113ec565b5f825111156113de5780826040516020016113c6929190612625565b604051602081830303815290604052925050506113ec565b6113e7846117c8565b925050505b919050565b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806114bb57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806114cb57506114ca8261182e565b5b9050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061154357505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611675575f611552846109af565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156115bc57508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156115cf57506115cd818461083d565b155b1561161157826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016116089190611c55565b60405180910390fd5b811561167357838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6116d5838383611897565b611788575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361174957806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016117409190611d60565b60405180910390fd5b81816040517f177e802f00000000000000000000000000000000000000000000000000000000815260040161177f929190612648565b60405180910390fd5b505050565b6117978383611957565b6117a35f848484611135565b505050565b606060405180606001604052806036815260200161267060369139905090565b60606117d3826109af565b505f6117dd6117a8565b90505f8151116117fb5760405180602001604052805f815250611826565b8061180584610d39565b604051602001611816929190612625565b6040516020818303038152906040525b915050919050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561194e57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061190f575061190e848461083d565b5b8061194d57508273ffffffffffffffffffffffffffffffffffffffff1661193583610a35565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036119c7575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016119be9190611c55565b60405180910390fd5b5f6119d383835f610a87565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611a45575f6040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401611a3c9190611c55565b60405180910390fd5b505050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611a8f81611a5b565b8114611a99575f80fd5b50565b5f81359050611aaa81611a86565b92915050565b5f60208284031215611ac557611ac4611a53565b5b5f611ad284828501611a9c565b91505092915050565b5f8115159050919050565b611aef81611adb565b82525050565b5f602082019050611b085f830184611ae6565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611b45578082015181840152602081019050611b2a565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611b6a82611b0e565b611b748185611b18565b9350611b84818560208601611b28565b611b8d81611b50565b840191505092915050565b5f6020820190508181035f830152611bb08184611b60565b905092915050565b5f819050919050565b611bca81611bb8565b8114611bd4575f80fd5b50565b5f81359050611be581611bc1565b92915050565b5f60208284031215611c0057611bff611a53565b5b5f611c0d84828501611bd7565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611c3f82611c16565b9050919050565b611c4f81611c35565b82525050565b5f602082019050611c685f830184611c46565b92915050565b611c7781611c35565b8114611c81575f80fd5b50565b5f81359050611c9281611c6e565b92915050565b5f8060408385031215611cae57611cad611a53565b5b5f611cbb85828601611c84565b9250506020611ccc85828601611bd7565b9150509250929050565b5f805f60608486031215611ced57611cec611a53565b5b5f611cfa86828701611c84565b9350506020611d0b86828701611c84565b9250506040611d1c86828701611bd7565b9150509250925092565b5f60208284031215611d3b57611d3a611a53565b5b5f611d4884828501611c84565b91505092915050565b611d5a81611bb8565b82525050565b5f602082019050611d735f830184611d51565b92915050565b611d8281611adb565b8114611d8c575f80fd5b50565b5f81359050611d9d81611d79565b92915050565b5f8060408385031215611db957611db8611a53565b5b5f611dc685828601611c84565b9250506020611dd785828601611d8f565b9150509250929050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611e1f82611b50565b810181811067ffffffffffffffff82111715611e3e57611e3d611de9565b5b80604052505050565b5f611e50611a4a565b9050611e5c8282611e16565b919050565b5f67ffffffffffffffff821115611e7b57611e7a611de9565b5b611e8482611b50565b9050602081019050919050565b828183375f83830152505050565b5f611eb1611eac84611e61565b611e47565b905082815260208101848484011115611ecd57611ecc611de5565b5b611ed8848285611e91565b509392505050565b5f82601f830112611ef457611ef3611de1565b5b8135611f04848260208601611e9f565b91505092915050565b5f805f8060808587031215611f2557611f24611a53565b5b5f611f3287828801611c84565b9450506020611f4387828801611c84565b9350506040611f5487828801611bd7565b925050606085013567ffffffffffffffff811115611f7557611f74611a57565b5b611f8187828801611ee0565b91505092959194509250565b5f8060408385031215611fa357611fa2611a53565b5b5f611fb085828601611c84565b9250506020611fc185828601611c84565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061200f57607f821691505b60208210810361202257612021611fcb565b5b50919050565b5f60608201905061203b5f830186611c46565b6120486020830185611d51565b6120556040830184611c46565b949350505050565b7f5265656e7472616e742063616c6c2064657465637465640000000000000000005f82015250565b5f612091601783611b18565b915061209c8261205d565b602082019050919050565b5f6020820190508181035f8301526120be81612085565b9050919050565b5f81905092915050565b5f6120d982611b0e565b6120e381856120c5565b93506120f3818560208601611b28565b80840191505092915050565b7f2e6a736f6e000000000000000000000000000000000000000000000000000000815250565b5f61213082846120cf565b915061213b826120ff565b60058201915081905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61218182611bb8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036121b3576121b261214a565b5b600182019050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6121f582611bb8565b915061220083611bb8565b9250826122105761220f6121be565b5b828204905092915050565b5f61222582611bb8565b915061223083611bb8565b92508282039050818111156122485761224761214a565b5b92915050565b5f61225882611bb8565b915061226383611bb8565b925082612273576122726121be565b5b828206905092915050565b5f61228882611bb8565b915061229383611bb8565b92508282019050808211156122ab576122aa61214a565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261233a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826122ff565b61234486836122ff565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61237f61237a61237584611bb8565b61235c565b611bb8565b9050919050565b5f819050919050565b61239883612365565b6123ac6123a482612386565b84845461230b565b825550505050565b5f90565b6123c06123b4565b6123cb81848461238f565b505050565b5b818110156123ee576123e35f826123b8565b6001810190506123d1565b5050565b601f82111561243357612404816122de565b61240d846122f0565b8101602085101561241c578190505b612430612428856122f0565b8301826123d0565b50505b505050565b5f82821c905092915050565b5f6124535f1984600802612438565b1980831691505092915050565b5f61246b8383612444565b9150826002028217905092915050565b61248482611b0e565b67ffffffffffffffff81111561249d5761249c611de9565b5b6124a78254611ff8565b6124b28282856123f2565b5f60209050601f8311600181146124e3575f84156124d1578287015190505b6124db8582612460565b865550612542565b601f1984166124f1866122de565b5f5b82811015612518578489015182556001820191506020850194506020810190506124f3565b868310156125355784890151612531601f891682612444565b8355505b6001600288020188555050505b505050505050565b5f81519050919050565b5f82825260208201905092915050565b5f61256e8261254a565b6125788185612554565b9350612588818560208601611b28565b61259181611b50565b840191505092915050565b5f6080820190506125af5f830187611c46565b6125bc6020830186611c46565b6125c96040830185611d51565b81810360608301526125db8184612564565b905095945050505050565b5f815190506125f481611a86565b92915050565b5f6020828403121561260f5761260e611a53565b5b5f61261c848285016125e6565b91505092915050565b5f61263082856120cf565b915061263c82846120cf565b91508190509392505050565b5f60408201905061265b5f830185611c46565b6126686020830184611d51565b939250505056fe697066733a2f2f516d61633839735a545347764b6b795961327672786452616b5052456147464a534e4a52525765747a544c51544d2fa2646970667358221220a4156b5470f38791730aa3a95aad0cc004e94be98e5bdcc2d49c088af2d49e4b64736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6537323100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3732310000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH0 SWAP1 DUP2 PUSH3 0x8E SWAP2 SWAP1 PUSH3 0x455 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0xA0 SWAP2 SWAP1 PUSH3 0x455 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x116 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x10D SWAP2 SWAP1 PUSH3 0x57C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x127 DUP2 PUSH3 0x12E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x597 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x26D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x283 JUMPI PUSH3 0x282 PUSH3 0x228 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x2E7 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x2AA JUMP JUMPDEST PUSH3 0x2F3 DUP7 DUP4 PUSH3 0x2AA JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x33D PUSH3 0x337 PUSH3 0x331 DUP5 PUSH3 0x30B JUMP JUMPDEST PUSH3 0x314 JUMP JUMPDEST PUSH3 0x30B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x358 DUP4 PUSH3 0x31D JUMP JUMPDEST PUSH3 0x370 PUSH3 0x367 DUP3 PUSH3 0x344 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x2B6 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x386 PUSH3 0x378 JUMP JUMPDEST PUSH3 0x393 DUP2 DUP5 DUP5 PUSH3 0x34D JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x3BA JUMPI PUSH3 0x3AE PUSH0 DUP3 PUSH3 0x37C JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x399 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x409 JUMPI PUSH3 0x3D3 DUP2 PUSH3 0x289 JUMP JUMPDEST PUSH3 0x3DE DUP5 PUSH3 0x29B JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x3EE JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x406 PUSH3 0x3FD DUP6 PUSH3 0x29B JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x398 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x42B PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x40E JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x445 DUP4 DUP4 PUSH3 0x41A JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x460 DUP3 PUSH3 0x1F1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x47C JUMPI PUSH3 0x47B PUSH3 0x1FB JUMP JUMPDEST JUMPDEST PUSH3 0x488 DUP3 SLOAD PUSH3 0x255 JUMP JUMPDEST PUSH3 0x495 DUP3 DUP3 DUP6 PUSH3 0x3BE JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x4CB JUMPI PUSH0 DUP5 ISZERO PUSH3 0x4B6 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x4C2 DUP6 DUP3 PUSH3 0x438 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x531 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x4DB DUP7 PUSH3 0x289 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x504 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x4DD JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x524 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x520 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x41A JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x564 DUP3 PUSH3 0x539 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x576 DUP2 PUSH3 0x558 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x591 PUSH0 DUP4 ADD DUP5 PUSH3 0x56B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x26DB DUP1 PUSH3 0x5A5 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x360 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2AA JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x40D097C3 EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x222 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x196 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x132 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x1AB0 JUMP JUMPDEST PUSH2 0x37C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x1AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH2 0x38D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x1B98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x1BEB JUMP JUMPDEST PUSH2 0x41C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x1C55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x1C98 JUMP JUMPDEST PUSH2 0x437 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x1CD6 JUMP JUMPDEST PUSH2 0x44D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x1D26 JUMP JUMPDEST PUSH2 0x54C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x204 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x1CD6 JUMP JUMPDEST PUSH2 0x631 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x220 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x1BEB JUMP JUMPDEST PUSH2 0x650 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x1BEB JUMP JUMPDEST PUSH2 0x666 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x1C55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x1D26 JUMP JUMPDEST PUSH2 0x677 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x1D60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28A PUSH2 0x72D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x294 PUSH2 0x740 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x1C55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B2 PUSH2 0x768 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BF SWAP2 SWAP1 PUSH2 0x1B98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DD SWAP2 SWAP1 PUSH2 0x1DA3 JUMP JUMPDEST PUSH2 0x7F8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x1F0D JUMP JUMPDEST PUSH2 0x80E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x315 SWAP2 SWAP1 PUSH2 0x1BEB JUMP JUMPDEST PUSH2 0x82B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x327 SWAP2 SWAP1 PUSH2 0x1B98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x345 SWAP2 SWAP1 PUSH2 0x1F8D JUMP JUMPDEST PUSH2 0x83D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x357 SWAP2 SWAP1 PUSH2 0x1AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x375 SWAP2 SWAP1 PUSH2 0x1D26 JUMP JUMPDEST PUSH2 0x8CB JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH2 0x386 DUP3 PUSH2 0x94F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x39B SWAP1 PUSH2 0x1FF8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3C7 SWAP1 PUSH2 0x1FF8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x412 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3E9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x412 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3F5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x426 DUP3 PUSH2 0x9AF JUMP JUMPDEST POP PUSH2 0x430 DUP3 PUSH2 0xA35 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x449 DUP3 DUP3 PUSH2 0x444 PUSH2 0xA6E JUMP JUMPDEST PUSH2 0xA75 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4BD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B4 SWAP2 SWAP1 PUSH2 0x1C55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x4D0 DUP4 DUP4 PUSH2 0x4CB PUSH2 0xA6E JUMP JUMPDEST PUSH2 0xA87 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x546 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x53D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2028 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x59B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x592 SWAP1 PUSH2 0x20A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x5BD PUSH2 0xC92 JUMP JUMPDEST PUSH0 PUSH2 0x5C8 PUSH1 0x8 PUSH2 0xD19 JUMP JUMPDEST SWAP1 POP PUSH2 0x5D4 PUSH1 0x8 PUSH2 0xD25 JUMP JUMPDEST PUSH0 PUSH2 0x5DE DUP3 PUSH2 0xD39 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5EE SWAP2 SWAP1 PUSH2 0x2125 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x609 DUP3 DUP3 PUSH2 0xE92 JUMP JUMPDEST PUSH2 0x613 DUP4 DUP4 PUSH2 0xEEC JUMP JUMPDEST POP POP PUSH0 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x64B DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x80E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x662 PUSH0 DUP3 PUSH2 0x65D PUSH2 0xA6E JUMP JUMPDEST PUSH2 0xA87 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x670 DUP3 PUSH2 0x9AF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6E8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP2 SWAP1 PUSH2 0x1C55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x735 PUSH2 0xC92 JUMP JUMPDEST PUSH2 0x73E PUSH0 PUSH2 0xF09 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x777 SWAP1 PUSH2 0x1FF8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7A3 SWAP1 PUSH2 0x1FF8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7EE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7C5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7EE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7D1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x80A PUSH2 0x803 PUSH2 0xA6E JUMP JUMPDEST DUP4 DUP4 PUSH2 0xFCC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x819 DUP5 DUP5 DUP5 PUSH2 0x44D JUMP JUMPDEST PUSH2 0x825 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1135 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x836 DUP3 PUSH2 0x12E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8D3 PUSH2 0xC92 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x943 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x93A SWAP2 SWAP1 PUSH2 0x1C55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x94C DUP2 PUSH2 0xF09 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x9A8 JUMPI POP PUSH2 0x9A7 DUP3 PUSH2 0x13F1 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x9BA DUP4 PUSH2 0x14D2 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2C JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA23 SWAP2 SWAP1 PUSH2 0x1D60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA82 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x150B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xA92 DUP5 PUSH2 0x14D2 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAD3 JUMPI PUSH2 0xAD2 DUP2 DUP5 DUP7 PUSH2 0x16CA JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB5E JUMPI PUSH2 0xB12 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x150B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBDD JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xC9A PUSH2 0xA6E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCB8 PUSH2 0x740 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD17 JUMPI PUSH2 0xCDB PUSH2 0xA6E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD0E SWAP2 SWAP1 PUSH2 0x1C55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP3 SUB PUSH2 0xD7F JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0xE8D JUMP JUMPDEST PUSH0 DUP3 SWAP1 POP PUSH0 JUMPDEST PUSH0 DUP3 EQ PUSH2 0xDAE JUMPI DUP1 DUP1 PUSH2 0xD97 SWAP1 PUSH2 0x2177 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0xDA7 SWAP2 SWAP1 PUSH2 0x21EB JUMP JUMPDEST SWAP2 POP PUSH2 0xD85 JUMP JUMPDEST PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDC9 JUMPI PUSH2 0xDC8 PUSH2 0x1DE9 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xDFB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH0 DUP6 EQ PUSH2 0xE86 JUMPI PUSH1 0x1 DUP3 PUSH2 0xE13 SWAP2 SWAP1 PUSH2 0x221B JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0xE22 SWAP2 SWAP1 PUSH2 0x224E JUMP JUMPDEST PUSH1 0x30 PUSH2 0xE2E SWAP2 SWAP1 PUSH2 0x227E JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xE44 JUMPI PUSH2 0xE43 PUSH2 0x22B1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0xE7F SWAP2 SWAP1 PUSH2 0x21EB JUMP JUMPDEST SWAP5 POP PUSH2 0xDFF JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0xEB0 SWAP2 SWAP1 PUSH2 0x247B JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0xEE0 SWAP2 SWAP1 PUSH2 0x1D60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0xF05 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x178D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x103C JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1033 SWAP2 SWAP1 PUSH2 0x1C55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1128 SWAP2 SWAP1 PUSH2 0x1AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x12E0 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1178 PUSH2 0xA6E JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x119A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x259C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x11D5 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11D2 SWAP2 SWAP1 PUSH2 0x25FA JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1254 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1203 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1208 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x124E JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1245 SWAP2 SWAP1 PUSH2 0x1C55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x12DF JUMP JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x12DD JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12D4 SWAP2 SWAP1 PUSH2 0x1C55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x12F1 DUP3 PUSH2 0x9AF JUMP JUMPDEST POP PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0x130F SWAP1 PUSH2 0x1FF8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x133B SWAP1 PUSH2 0x1FF8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1386 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x135D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1386 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1369 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 PUSH2 0x1396 PUSH2 0x17A8 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD SUB PUSH2 0x13AA JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x13EC JUMP JUMPDEST PUSH0 DUP3 MLOAD GT ISZERO PUSH2 0x13DE JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x13C6 SWAP3 SWAP2 SWAP1 PUSH2 0x2625 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x13EC JUMP JUMPDEST PUSH2 0x13E7 DUP5 PUSH2 0x17C8 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x14BB JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x14CB JUMPI POP PUSH2 0x14CA DUP3 PUSH2 0x182E JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1543 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1675 JUMPI PUSH0 PUSH2 0x1552 DUP5 PUSH2 0x9AF JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x15BC JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x15CF JUMPI POP PUSH2 0x15CD DUP2 DUP5 PUSH2 0x83D JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1611 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1608 SWAP2 SWAP1 PUSH2 0x1C55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1673 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x16D5 DUP4 DUP4 DUP4 PUSH2 0x1897 JUMP JUMPDEST PUSH2 0x1788 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1749 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1740 SWAP2 SWAP1 PUSH2 0x1D60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x177F SWAP3 SWAP2 SWAP1 PUSH2 0x2648 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1797 DUP4 DUP4 PUSH2 0x1957 JUMP JUMPDEST PUSH2 0x17A3 PUSH0 DUP5 DUP5 DUP5 PUSH2 0x1135 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2670 PUSH1 0x36 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x17D3 DUP3 PUSH2 0x9AF JUMP JUMPDEST POP PUSH0 PUSH2 0x17DD PUSH2 0x17A8 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x17FB JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1826 JUMP JUMPDEST DUP1 PUSH2 0x1805 DUP5 PUSH2 0xD39 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1816 SWAP3 SWAP2 SWAP1 PUSH2 0x2625 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x194E JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x190F JUMPI POP PUSH2 0x190E DUP5 DUP5 PUSH2 0x83D JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x194D JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1935 DUP4 PUSH2 0xA35 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19C7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19BE SWAP2 SWAP1 PUSH2 0x1C55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x19D3 DUP4 DUP4 PUSH0 PUSH2 0xA87 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A45 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A3C SWAP2 SWAP1 PUSH2 0x1C55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A8F DUP2 PUSH2 0x1A5B JUMP JUMPDEST DUP2 EQ PUSH2 0x1A99 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AAA DUP2 PUSH2 0x1A86 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AC5 JUMPI PUSH2 0x1AC4 PUSH2 0x1A53 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AD2 DUP5 DUP3 DUP6 ADD PUSH2 0x1A9C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AEF DUP2 PUSH2 0x1ADB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B08 PUSH0 DUP4 ADD DUP5 PUSH2 0x1AE6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B45 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1B2A JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B6A DUP3 PUSH2 0x1B0E JUMP JUMPDEST PUSH2 0x1B74 DUP2 DUP6 PUSH2 0x1B18 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B84 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B28 JUMP JUMPDEST PUSH2 0x1B8D DUP2 PUSH2 0x1B50 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BB0 DUP2 DUP5 PUSH2 0x1B60 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BCA DUP2 PUSH2 0x1BB8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BD4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BE5 DUP2 PUSH2 0x1BC1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C00 JUMPI PUSH2 0x1BFF PUSH2 0x1A53 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C0D DUP5 DUP3 DUP6 ADD PUSH2 0x1BD7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C3F DUP3 PUSH2 0x1C16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C4F DUP2 PUSH2 0x1C35 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C68 PUSH0 DUP4 ADD DUP5 PUSH2 0x1C46 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C77 DUP2 PUSH2 0x1C35 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C81 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C92 DUP2 PUSH2 0x1C6E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CAE JUMPI PUSH2 0x1CAD PUSH2 0x1A53 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CBB DUP6 DUP3 DUP7 ADD PUSH2 0x1C84 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CCC DUP6 DUP3 DUP7 ADD PUSH2 0x1BD7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1CED JUMPI PUSH2 0x1CEC PUSH2 0x1A53 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CFA DUP7 DUP3 DUP8 ADD PUSH2 0x1C84 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1D0B DUP7 DUP3 DUP8 ADD PUSH2 0x1C84 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1D1C DUP7 DUP3 DUP8 ADD PUSH2 0x1BD7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D3B JUMPI PUSH2 0x1D3A PUSH2 0x1A53 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D48 DUP5 DUP3 DUP6 ADD PUSH2 0x1C84 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D5A DUP2 PUSH2 0x1BB8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D73 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D51 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D82 DUP2 PUSH2 0x1ADB JUMP JUMPDEST DUP2 EQ PUSH2 0x1D8C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D9D DUP2 PUSH2 0x1D79 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DB9 JUMPI PUSH2 0x1DB8 PUSH2 0x1A53 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DC6 DUP6 DUP3 DUP7 ADD PUSH2 0x1C84 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DD7 DUP6 DUP3 DUP7 ADD PUSH2 0x1D8F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1E1F DUP3 PUSH2 0x1B50 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1E3E JUMPI PUSH2 0x1E3D PUSH2 0x1DE9 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E50 PUSH2 0x1A4A JUMP JUMPDEST SWAP1 POP PUSH2 0x1E5C DUP3 DUP3 PUSH2 0x1E16 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1E7B JUMPI PUSH2 0x1E7A PUSH2 0x1DE9 JUMP JUMPDEST JUMPDEST PUSH2 0x1E84 DUP3 PUSH2 0x1B50 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1EB1 PUSH2 0x1EAC DUP5 PUSH2 0x1E61 JUMP JUMPDEST PUSH2 0x1E47 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1ECD JUMPI PUSH2 0x1ECC PUSH2 0x1DE5 JUMP JUMPDEST JUMPDEST PUSH2 0x1ED8 DUP5 DUP3 DUP6 PUSH2 0x1E91 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1EF4 JUMPI PUSH2 0x1EF3 PUSH2 0x1DE1 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1F04 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1E9F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1F25 JUMPI PUSH2 0x1F24 PUSH2 0x1A53 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F32 DUP8 DUP3 DUP9 ADD PUSH2 0x1C84 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1F43 DUP8 DUP3 DUP9 ADD PUSH2 0x1C84 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1F54 DUP8 DUP3 DUP9 ADD PUSH2 0x1BD7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F75 JUMPI PUSH2 0x1F74 PUSH2 0x1A57 JUMP JUMPDEST JUMPDEST PUSH2 0x1F81 DUP8 DUP3 DUP9 ADD PUSH2 0x1EE0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FA3 JUMPI PUSH2 0x1FA2 PUSH2 0x1A53 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FB0 DUP6 DUP3 DUP7 ADD PUSH2 0x1C84 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1FC1 DUP6 DUP3 DUP7 ADD PUSH2 0x1C84 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x200F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2022 JUMPI PUSH2 0x2021 PUSH2 0x1FCB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x203B PUSH0 DUP4 ADD DUP7 PUSH2 0x1C46 JUMP JUMPDEST PUSH2 0x2048 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1D51 JUMP JUMPDEST PUSH2 0x2055 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1C46 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E742063616C6C206465746563746564000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2091 PUSH1 0x17 DUP4 PUSH2 0x1B18 JUMP JUMPDEST SWAP2 POP PUSH2 0x209C DUP3 PUSH2 0x205D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20BE DUP2 PUSH2 0x2085 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20D9 DUP3 PUSH2 0x1B0E JUMP JUMPDEST PUSH2 0x20E3 DUP2 DUP6 PUSH2 0x20C5 JUMP JUMPDEST SWAP4 POP PUSH2 0x20F3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B28 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x2E6A736F6E000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2130 DUP3 DUP5 PUSH2 0x20CF JUMP JUMPDEST SWAP2 POP PUSH2 0x213B DUP3 PUSH2 0x20FF JUMP JUMPDEST PUSH1 0x5 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2181 DUP3 PUSH2 0x1BB8 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x21B3 JUMPI PUSH2 0x21B2 PUSH2 0x214A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x21F5 DUP3 PUSH2 0x1BB8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2200 DUP4 PUSH2 0x1BB8 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2210 JUMPI PUSH2 0x220F PUSH2 0x21BE JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2225 DUP3 PUSH2 0x1BB8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2230 DUP4 PUSH2 0x1BB8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2248 JUMPI PUSH2 0x2247 PUSH2 0x214A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2258 DUP3 PUSH2 0x1BB8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2263 DUP4 PUSH2 0x1BB8 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2273 JUMPI PUSH2 0x2272 PUSH2 0x21BE JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2288 DUP3 PUSH2 0x1BB8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2293 DUP4 PUSH2 0x1BB8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x22AB JUMPI PUSH2 0x22AA PUSH2 0x214A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x233A PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x22FF JUMP JUMPDEST PUSH2 0x2344 DUP7 DUP4 PUSH2 0x22FF JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x237F PUSH2 0x237A PUSH2 0x2375 DUP5 PUSH2 0x1BB8 JUMP JUMPDEST PUSH2 0x235C JUMP JUMPDEST PUSH2 0x1BB8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2398 DUP4 PUSH2 0x2365 JUMP JUMPDEST PUSH2 0x23AC PUSH2 0x23A4 DUP3 PUSH2 0x2386 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x230B JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x23C0 PUSH2 0x23B4 JUMP JUMPDEST PUSH2 0x23CB DUP2 DUP5 DUP5 PUSH2 0x238F JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x23EE JUMPI PUSH2 0x23E3 PUSH0 DUP3 PUSH2 0x23B8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x23D1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2433 JUMPI PUSH2 0x2404 DUP2 PUSH2 0x22DE JUMP JUMPDEST PUSH2 0x240D DUP5 PUSH2 0x22F0 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x241C JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2430 PUSH2 0x2428 DUP6 PUSH2 0x22F0 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x23D0 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2453 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2438 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x246B DUP4 DUP4 PUSH2 0x2444 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2484 DUP3 PUSH2 0x1B0E JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x249D JUMPI PUSH2 0x249C PUSH2 0x1DE9 JUMP JUMPDEST JUMPDEST PUSH2 0x24A7 DUP3 SLOAD PUSH2 0x1FF8 JUMP JUMPDEST PUSH2 0x24B2 DUP3 DUP3 DUP6 PUSH2 0x23F2 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x24E3 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x24D1 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x24DB DUP6 DUP3 PUSH2 0x2460 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2542 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x24F1 DUP7 PUSH2 0x22DE JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2518 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x24F3 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2535 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2531 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2444 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x256E DUP3 PUSH2 0x254A JUMP JUMPDEST PUSH2 0x2578 DUP2 DUP6 PUSH2 0x2554 JUMP JUMPDEST SWAP4 POP PUSH2 0x2588 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B28 JUMP JUMPDEST PUSH2 0x2591 DUP2 PUSH2 0x1B50 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x25AF PUSH0 DUP4 ADD DUP8 PUSH2 0x1C46 JUMP JUMPDEST PUSH2 0x25BC PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1C46 JUMP JUMPDEST PUSH2 0x25C9 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1D51 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x25DB DUP2 DUP5 PUSH2 0x2564 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x25F4 DUP2 PUSH2 0x1A86 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x260F JUMPI PUSH2 0x260E PUSH2 0x1A53 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x261C DUP5 DUP3 DUP6 ADD PUSH2 0x25E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2630 DUP3 DUP6 PUSH2 0x20CF JUMP JUMPDEST SWAP2 POP PUSH2 0x263C DUP3 DUP5 PUSH2 0x20CF JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x265B PUSH0 DUP4 ADD DUP6 PUSH2 0x1C46 JUMP JUMPDEST PUSH2 0x2668 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D51 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID PUSH10 0x7066733A2F2F516D6163 CODESIZE CODECOPY PUSH20 0x5A545347764B6B795961327672786452616B5052 GASLIMIT PUSH2 0x4746 0x4A MSTORE8 0x4E 0x4A MSTORE MSTORE JUMPI PUSH6 0x747A544C5154 0x4D 0x2F LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG4 ISZERO PUSH12 0x5470F38791730AA3A95AAD0C 0xC0 DIV 0xE9 0x4B 0xE9 DUP15 JUMPDEST 0xDC 0xC2 0xD4 SWAP13 ADDMOD DUP11 CALLCODE 0xD4 SWAP15 0x4B PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "40556:1281:0:-:0;;;40982:38;;;;;;;;;;40627:10;24950:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25025:5;25017;:13;;;;;;:::i;:::-;;25051:7;25041;:17;;;;;;:::i;:::-;;24950:116;;12090:1;12066:26;;:12;:26;;;12062:97;;12144:1;12116:31;;;;;;;;;;;:::i;:::-;;;;;;;;12062:97;12169:32;12188:12;12169:18;;;:32;;:::i;:::-;12017:192;40556:1281;;13765:191;13839:16;13858:6;;;;;;;;;;;13839:25;;13884:8;13875:6;;:17;;;;;;;;;;;;;;;;;;13939:8;13908:40;;13929:8;13908:40;;;;;;;;;;;;13828:128;13765:191;:::o;7:99:1:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:126::-;5271:7;5311:42;5304:5;5300:54;5289:65;;5234:126;;;:::o;5366:96::-;5403:7;5432:24;5450:5;5432:24;:::i;:::-;5421:35;;5366:96;;;:::o;5468:118::-;5555:24;5573:5;5555:24;:::i;:::-;5550:3;5543:37;5468:118;;:::o;5592:222::-;5685:4;5723:2;5712:9;5708:18;5700:26;;5736:71;5804:1;5793:9;5789:17;5780:6;5736:71;:::i;:::-;5592:222;;;;:::o;40556:1281:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1274": {
									"entryPoint": 2677,
									"id": 1274,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1340": {
									"entryPoint": 5387,
									"id": 1340,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_821": {
									"entryPoint": 6056,
									"id": 821,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkAuthorized_1076": {
									"entryPoint": 5834,
									"id": 1076,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1469": {
									"entryPoint": 4405,
									"id": 1469,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_360": {
									"entryPoint": 3218,
									"id": 360,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getApproved_1003": {
									"entryPoint": 2613,
									"id": 1003,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_1039": {
									"entryPoint": 6295,
									"id": 1039,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_1216": {
									"entryPoint": 6487,
									"id": 1216,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_277": {
									"entryPoint": 2670,
									"id": 277,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_990": {
									"entryPoint": 5330,
									"id": 990,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireOwned_1406": {
									"entryPoint": 2479,
									"id": 1406,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_safeMint_1231": {
									"entryPoint": 3820,
									"id": 1231,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_safeMint_1257": {
									"entryPoint": 6029,
									"id": 1257,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1377": {
									"entryPoint": 4044,
									"id": 1377,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setTokenURI_1610": {
									"entryPoint": 3730,
									"id": 1610,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_422": {
									"entryPoint": 3849,
									"id": 422,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_1166": {
									"entryPoint": 2695,
									"id": 1166,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@approve_837": {
									"entryPoint": 1079,
									"id": 837,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_745": {
									"entryPoint": 1655,
									"id": 745,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_1493": {
									"entryPoint": 1616,
									"id": 1493,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@current_17": {
									"entryPoint": 3353,
									"id": 17,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_854": {
									"entryPoint": 1052,
									"id": 854,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@increment_31": {
									"entryPoint": 3365,
									"id": 31,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isApprovedForAll_887": {
									"entryPoint": 2109,
									"id": 887,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_767": {
									"entryPoint": 909,
									"id": 767,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_758": {
									"entryPoint": 1638,
									"id": 758,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_343": {
									"entryPoint": 1856,
									"id": 343,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_374": {
									"entryPoint": 1837,
									"id": 374,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeMint_1702": {
									"entryPoint": 1356,
									"id": 1702,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@safeTransferFrom_951": {
									"entryPoint": 1585,
									"id": 951,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_977": {
									"entryPoint": 2062,
									"id": 977,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_870": {
									"entryPoint": 2040,
									"id": 870,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1534": {
									"entryPoint": 2383,
									"id": 1534,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1734": {
									"entryPoint": 892,
									"id": 1734,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_472": {
									"entryPoint": 6190,
									"id": 472,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_717": {
									"entryPoint": 5105,
									"id": 717,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_776": {
									"entryPoint": 1896,
									"id": 776,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_265": {
									"entryPoint": 3385,
									"id": 265,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_1591": {
									"entryPoint": 4838,
									"id": 1591,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_1718": {
									"entryPoint": 2091,
									"id": 1718,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_812": {
									"entryPoint": 6088,
									"id": 812,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_933": {
									"entryPoint": 1101,
									"id": 933,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_402": {
									"entryPoint": 2251,
									"id": 402,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 7839,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 7300,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 7567,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 6812,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 9702,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 7904,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7127,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 8077,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7382,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 7949,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 7587,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7320,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6832,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 9722,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7147,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7238,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6886,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9572,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8399,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_48aa738ac532b148333561b892fe987b033109920314b49ab0b9845e80f27229_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8325,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972_to_t_bytes5_nonPadded_inplace_fromStack": {
									"entryPoint": 8447,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7505,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 9765,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972__to_t_string_memory_ptr_t_bytes5__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8485,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7253,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 9628,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9800,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 8232,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6901,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7064,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_48aa738ac532b148333561b892fe987b033109920314b49ab0b9845e80f27229__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8359,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7520,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 7751,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 6730,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 7777,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 8926,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 9546,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6926,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9556,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6936,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8389,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8830,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8683,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8731,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 9202,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 7221,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6875,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 6747,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7190,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7096,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 9168,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 9061,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 9339,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 7825,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6952,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 8944,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 8184,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 9312,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 7702,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 9052,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 8567,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 9284,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 8782,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8522,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8638,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 8139,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 8881,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7657,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 9094,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 7649,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 7653,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 6743,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6739,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6992,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 8959,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 9272,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 9144,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_48aa738ac532b148333561b892fe987b033109920314b49ab0b9845e80f27229": {
									"entryPoint": 8285,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 8971,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 9103,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7278,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7545,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 6790,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7105,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 9140,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:22179:1",
										"nodeType": "YulBlock",
										"src": "0:22179:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "378:105:1",
													"nodeType": "YulBlock",
													"src": "378:105:1",
													"statements": [
														{
															"nativeSrc": "388:89:1",
															"nodeType": "YulAssignment",
															"src": "388:89:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:1",
																		"nodeType": "YulLiteral",
																		"src": "410:66:1",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:1"
																},
																"nativeSrc": "399:78:1",
																"nodeType": "YulFunctionCall",
																"src": "399:78:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:1",
														"nodeType": "YulTypedName",
														"src": "360:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:1",
														"nodeType": "YulTypedName",
														"src": "370:7:1",
														"type": ""
													}
												],
												"src": "334:149:1"
											},
											{
												"body": {
													"nativeSrc": "531:78:1",
													"nodeType": "YulBlock",
													"src": "531:78:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:1",
																"nodeType": "YulBlock",
																"src": "587:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:1",
																					"nodeType": "YulLiteral",
																					"src": "596:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:1",
																					"nodeType": "YulLiteral",
																					"src": "599:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:1"
																			},
																			"nativeSrc": "589:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:1"
																		},
																		"nativeSrc": "589:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:1",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:1"
																				},
																				"nativeSrc": "561:23:1",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:1"
																		},
																		"nativeSrc": "551:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:1"
																},
																"nativeSrc": "544:42:1",
																"nodeType": "YulFunctionCall",
																"src": "544:42:1"
															},
															"nativeSrc": "541:62:1",
															"nodeType": "YulIf",
															"src": "541:62:1"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:1",
														"nodeType": "YulTypedName",
														"src": "524:5:1",
														"type": ""
													}
												],
												"src": "489:120:1"
											},
											{
												"body": {
													"nativeSrc": "666:86:1",
													"nodeType": "YulBlock",
													"src": "666:86:1",
													"statements": [
														{
															"nativeSrc": "676:29:1",
															"nodeType": "YulAssignment",
															"src": "676:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:1"
																},
																"nativeSrc": "685:20:1",
																"nodeType": "YulFunctionCall",
																"src": "685:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:1"
																},
																"nativeSrc": "714:32:1",
																"nodeType": "YulFunctionCall",
																"src": "714:32:1"
															},
															"nativeSrc": "714:32:1",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:1"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:1",
														"nodeType": "YulTypedName",
														"src": "644:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:1",
														"nodeType": "YulTypedName",
														"src": "652:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:1",
														"nodeType": "YulTypedName",
														"src": "660:5:1",
														"type": ""
													}
												],
												"src": "615:137:1"
											},
											{
												"body": {
													"nativeSrc": "823:262:1",
													"nodeType": "YulBlock",
													"src": "823:262:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:1",
																"nodeType": "YulBlock",
																"src": "869:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:1"
																			},
																			"nativeSrc": "871:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:1"
																		},
																		"nativeSrc": "871:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:1"
																		},
																		"nativeSrc": "840:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:1",
																		"nodeType": "YulLiteral",
																		"src": "865:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:1"
																},
																"nativeSrc": "836:32:1",
																"nodeType": "YulFunctionCall",
																"src": "836:32:1"
															},
															"nativeSrc": "833:119:1",
															"nodeType": "YulIf",
															"src": "833:119:1"
														},
														{
															"nativeSrc": "962:116:1",
															"nodeType": "YulBlock",
															"src": "962:116:1",
															"statements": [
																{
																	"nativeSrc": "977:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:1",
																		"nodeType": "YulLiteral",
																		"src": "991:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:1",
																			"nodeType": "YulTypedName",
																			"src": "981:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:1",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:1"
																				},
																				"nativeSrc": "1036:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:1",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:1"
																		},
																		"nativeSrc": "1016:52:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:1",
														"nodeType": "YulTypedName",
														"src": "793:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:1",
														"nodeType": "YulTypedName",
														"src": "804:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:1",
														"nodeType": "YulTypedName",
														"src": "816:6:1",
														"type": ""
													}
												],
												"src": "758:327:1"
											},
											{
												"body": {
													"nativeSrc": "1133:48:1",
													"nodeType": "YulBlock",
													"src": "1133:48:1",
													"statements": [
														{
															"nativeSrc": "1143:32:1",
															"nodeType": "YulAssignment",
															"src": "1143:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:1"
																		},
																		"nativeSrc": "1161:13:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:1"
																},
																"nativeSrc": "1154:21:1",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:1",
														"nodeType": "YulTypedName",
														"src": "1115:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:1",
														"nodeType": "YulTypedName",
														"src": "1125:7:1",
														"type": ""
													}
												],
												"src": "1091:90:1"
											},
											{
												"body": {
													"nativeSrc": "1246:50:1",
													"nodeType": "YulBlock",
													"src": "1246:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:1",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:1"
																		},
																		"nativeSrc": "1268:21:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:1"
																},
																"nativeSrc": "1256:34:1",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:1"
															},
															"nativeSrc": "1256:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:1",
														"nodeType": "YulTypedName",
														"src": "1234:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:1",
														"nodeType": "YulTypedName",
														"src": "1241:3:1",
														"type": ""
													}
												],
												"src": "1187:109:1"
											},
											{
												"body": {
													"nativeSrc": "1394:118:1",
													"nodeType": "YulBlock",
													"src": "1394:118:1",
													"statements": [
														{
															"nativeSrc": "1404:26:1",
															"nodeType": "YulAssignment",
															"src": "1404:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:1"
																},
																"nativeSrc": "1412:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:1"
																		},
																		"nativeSrc": "1487:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:1",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:1"
																},
																"nativeSrc": "1440:65:1",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:1"
															},
															"nativeSrc": "1440:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:1",
														"nodeType": "YulTypedName",
														"src": "1366:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:1",
														"nodeType": "YulTypedName",
														"src": "1378:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:1",
														"nodeType": "YulTypedName",
														"src": "1389:4:1",
														"type": ""
													}
												],
												"src": "1302:210:1"
											},
											{
												"body": {
													"nativeSrc": "1577:40:1",
													"nodeType": "YulBlock",
													"src": "1577:40:1",
													"statements": [
														{
															"nativeSrc": "1588:22:1",
															"nodeType": "YulAssignment",
															"src": "1588:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:1"
																},
																"nativeSrc": "1598:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:1",
														"nodeType": "YulTypedName",
														"src": "1560:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:1",
														"nodeType": "YulTypedName",
														"src": "1570:6:1",
														"type": ""
													}
												],
												"src": "1518:99:1"
											},
											{
												"body": {
													"nativeSrc": "1719:73:1",
													"nodeType": "YulBlock",
													"src": "1719:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:1"
																},
																"nativeSrc": "1729:19:1",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:1"
															},
															"nativeSrc": "1729:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:1"
														},
														{
															"nativeSrc": "1757:29:1",
															"nodeType": "YulAssignment",
															"src": "1757:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:1"
																},
																"nativeSrc": "1772:14:1",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:1",
														"nodeType": "YulTypedName",
														"src": "1691:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:1",
														"nodeType": "YulTypedName",
														"src": "1696:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:1",
														"nodeType": "YulTypedName",
														"src": "1707:11:1",
														"type": ""
													}
												],
												"src": "1623:169:1"
											},
											{
												"body": {
													"nativeSrc": "1860:184:1",
													"nodeType": "YulBlock",
													"src": "1860:184:1",
													"statements": [
														{
															"nativeSrc": "1870:10:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1870:10:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1879:1:1",
																"nodeType": "YulLiteral",
																"src": "1879:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1874:1:1",
																	"nodeType": "YulTypedName",
																	"src": "1874:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1939:63:1",
																"nodeType": "YulBlock",
																"src": "1939:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "1964:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1964:3:1"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "1969:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "1969:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1960:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "1960:3:1"
																					},
																					"nativeSrc": "1960:11:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1960:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "1983:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1983:3:1"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1988:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "1988:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1979:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "1979:3:1"
																							},
																							"nativeSrc": "1979:11:1",
																							"nodeType": "YulFunctionCall",
																							"src": "1979:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1973:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1973:5:1"
																					},
																					"nativeSrc": "1973:18:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1973:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1953:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:1"
																			},
																			"nativeSrc": "1953:39:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1953:39:1"
																		},
																		"nativeSrc": "1953:39:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1900:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "1900:1:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1903:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1903:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1897:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:1"
																},
																"nativeSrc": "1897:13:1",
																"nodeType": "YulFunctionCall",
																"src": "1897:13:1"
															},
															"nativeSrc": "1889:113:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1911:19:1",
																"nodeType": "YulBlock",
																"src": "1911:19:1",
																"statements": [
																	{
																		"nativeSrc": "1913:15:1",
																		"nodeType": "YulAssignment",
																		"src": "1913:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1922:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "1922:1:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1925:2:1",
																					"nodeType": "YulLiteral",
																					"src": "1925:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1918:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1918:3:1"
																			},
																			"nativeSrc": "1918:10:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1918:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1913:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "1913:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1893:3:1",
																"nodeType": "YulBlock",
																"src": "1893:3:1",
																"statements": []
															},
															"src": "1889:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2022:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2022:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2027:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2018:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:1"
																		},
																		"nativeSrc": "2018:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2018:16:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2036:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2036:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2011:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:1"
																},
																"nativeSrc": "2011:27:1",
																"nodeType": "YulFunctionCall",
																"src": "2011:27:1"
															},
															"nativeSrc": "2011:27:1",
															"nodeType": "YulExpressionStatement",
															"src": "2011:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:246:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:1",
														"nodeType": "YulTypedName",
														"src": "1842:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:1",
														"nodeType": "YulTypedName",
														"src": "1847:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:1",
														"nodeType": "YulTypedName",
														"src": "1852:6:1",
														"type": ""
													}
												],
												"src": "1798:246:1"
											},
											{
												"body": {
													"nativeSrc": "2098:54:1",
													"nodeType": "YulBlock",
													"src": "2098:54:1",
													"statements": [
														{
															"nativeSrc": "2108:38:1",
															"nodeType": "YulAssignment",
															"src": "2108:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2126:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2126:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2133:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2122:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:1"
																		},
																		"nativeSrc": "2122:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2142:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2138:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:1"
																		},
																		"nativeSrc": "2138:7:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2138:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2118:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:1"
																},
																"nativeSrc": "2118:28:1",
																"nodeType": "YulFunctionCall",
																"src": "2118:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2108:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2050:102:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2081:5:1",
														"nodeType": "YulTypedName",
														"src": "2081:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2091:6:1",
														"nodeType": "YulTypedName",
														"src": "2091:6:1",
														"type": ""
													}
												],
												"src": "2050:102:1"
											},
											{
												"body": {
													"nativeSrc": "2250:285:1",
													"nodeType": "YulBlock",
													"src": "2250:285:1",
													"statements": [
														{
															"nativeSrc": "2260:53:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2260:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2307:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2274:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "2274:32:1"
																},
																"nativeSrc": "2274:39:1",
																"nodeType": "YulFunctionCall",
																"src": "2274:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2264:6:1",
																	"nodeType": "YulTypedName",
																	"src": "2264:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2322:78:1",
															"nodeType": "YulAssignment",
															"src": "2322:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2388:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2393:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2329:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "2329:58:1"
																},
																"nativeSrc": "2329:71:1",
																"nodeType": "YulFunctionCall",
																"src": "2329:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2322:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2448:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2448:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2455:4:1",
																				"nodeType": "YulLiteral",
																				"src": "2455:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2444:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:1"
																		},
																		"nativeSrc": "2444:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2444:16:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2462:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2462:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2467:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2409:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "2409:34:1"
																},
																"nativeSrc": "2409:65:1",
																"nodeType": "YulFunctionCall",
																"src": "2409:65:1"
															},
															"nativeSrc": "2409:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "2409:65:1"
														},
														{
															"nativeSrc": "2483:46:1",
															"nodeType": "YulAssignment",
															"src": "2483:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2494:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2521:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2521:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2499:21:1",
																			"nodeType": "YulIdentifier",
																			"src": "2499:21:1"
																		},
																		"nativeSrc": "2499:29:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2499:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2490:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:1"
																},
																"nativeSrc": "2490:39:1",
																"nodeType": "YulFunctionCall",
																"src": "2490:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2483:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2158:377:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2231:5:1",
														"nodeType": "YulTypedName",
														"src": "2231:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2238:3:1",
														"nodeType": "YulTypedName",
														"src": "2238:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2246:3:1",
														"nodeType": "YulTypedName",
														"src": "2246:3:1",
														"type": ""
													}
												],
												"src": "2158:377:1"
											},
											{
												"body": {
													"nativeSrc": "2659:195:1",
													"nodeType": "YulBlock",
													"src": "2659:195:1",
													"statements": [
														{
															"nativeSrc": "2669:26:1",
															"nodeType": "YulAssignment",
															"src": "2669:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2681:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2692:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2692:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2677:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2677:3:1"
																},
																"nativeSrc": "2677:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2677:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2669:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2716:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2727:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2727:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2712:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:1"
																		},
																		"nativeSrc": "2712:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2712:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2735:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "2735:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2741:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2731:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:1"
																		},
																		"nativeSrc": "2731:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2705:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:1"
																},
																"nativeSrc": "2705:47:1",
																"nodeType": "YulFunctionCall",
																"src": "2705:47:1"
															},
															"nativeSrc": "2705:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "2705:47:1"
														},
														{
															"nativeSrc": "2761:86:1",
															"nodeType": "YulAssignment",
															"src": "2761:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2833:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2842:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2842:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2769:63:1",
																	"nodeType": "YulIdentifier",
																	"src": "2769:63:1"
																},
																"nativeSrc": "2769:78:1",
																"nodeType": "YulFunctionCall",
																"src": "2769:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2761:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2761:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2541:313:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2631:9:1",
														"nodeType": "YulTypedName",
														"src": "2631:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2643:6:1",
														"nodeType": "YulTypedName",
														"src": "2643:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2654:4:1",
														"nodeType": "YulTypedName",
														"src": "2654:4:1",
														"type": ""
													}
												],
												"src": "2541:313:1"
											},
											{
												"body": {
													"nativeSrc": "2905:32:1",
													"nodeType": "YulBlock",
													"src": "2905:32:1",
													"statements": [
														{
															"nativeSrc": "2915:16:1",
															"nodeType": "YulAssignment",
															"src": "2915:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "2926:5:1",
																"nodeType": "YulIdentifier",
																"src": "2926:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2915:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "2915:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2860:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2887:5:1",
														"nodeType": "YulTypedName",
														"src": "2887:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2897:7:1",
														"nodeType": "YulTypedName",
														"src": "2897:7:1",
														"type": ""
													}
												],
												"src": "2860:77:1"
											},
											{
												"body": {
													"nativeSrc": "2986:79:1",
													"nodeType": "YulBlock",
													"src": "2986:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3043:16:1",
																"nodeType": "YulBlock",
																"src": "3043:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3052:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3052:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3055:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3055:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3045:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3045:6:1"
																			},
																			"nativeSrc": "3045:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3045:12:1"
																		},
																		"nativeSrc": "3045:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3045:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3009:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3009:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3034:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "3034:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3016:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "3016:17:1"
																				},
																				"nativeSrc": "3016:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3016:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3006:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "3006:2:1"
																		},
																		"nativeSrc": "3006:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3006:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2999:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2999:6:1"
																},
																"nativeSrc": "2999:43:1",
																"nodeType": "YulFunctionCall",
																"src": "2999:43:1"
															},
															"nativeSrc": "2996:63:1",
															"nodeType": "YulIf",
															"src": "2996:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2943:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2979:5:1",
														"nodeType": "YulTypedName",
														"src": "2979:5:1",
														"type": ""
													}
												],
												"src": "2943:122:1"
											},
											{
												"body": {
													"nativeSrc": "3123:87:1",
													"nodeType": "YulBlock",
													"src": "3123:87:1",
													"statements": [
														{
															"nativeSrc": "3133:29:1",
															"nodeType": "YulAssignment",
															"src": "3133:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3155:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3155:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3142:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "3142:12:1"
																},
																"nativeSrc": "3142:20:1",
																"nodeType": "YulFunctionCall",
																"src": "3142:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3133:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "3133:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3198:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3198:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3171:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "3171:26:1"
																},
																"nativeSrc": "3171:33:1",
																"nodeType": "YulFunctionCall",
																"src": "3171:33:1"
															},
															"nativeSrc": "3171:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "3171:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3071:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3101:6:1",
														"nodeType": "YulTypedName",
														"src": "3101:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3109:3:1",
														"nodeType": "YulTypedName",
														"src": "3109:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3117:5:1",
														"nodeType": "YulTypedName",
														"src": "3117:5:1",
														"type": ""
													}
												],
												"src": "3071:139:1"
											},
											{
												"body": {
													"nativeSrc": "3282:263:1",
													"nodeType": "YulBlock",
													"src": "3282:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3328:83:1",
																"nodeType": "YulBlock",
																"src": "3328:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3330:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "3330:77:1"
																			},
																			"nativeSrc": "3330:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3330:79:1"
																		},
																		"nativeSrc": "3330:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3330:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3303:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3303:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3299:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:1"
																		},
																		"nativeSrc": "3299:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3299:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3324:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3324:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3295:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3295:3:1"
																},
																"nativeSrc": "3295:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3295:32:1"
															},
															"nativeSrc": "3292:119:1",
															"nodeType": "YulIf",
															"src": "3292:119:1"
														},
														{
															"nativeSrc": "3421:117:1",
															"nodeType": "YulBlock",
															"src": "3421:117:1",
															"statements": [
																{
																	"nativeSrc": "3436:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3436:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3450:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3450:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3440:6:1",
																			"nodeType": "YulTypedName",
																			"src": "3440:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3465:63:1",
																	"nodeType": "YulAssignment",
																	"src": "3465:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3500:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "3500:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3511:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3511:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3496:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3496:3:1"
																				},
																				"nativeSrc": "3496:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3496:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3520:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3520:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3475:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "3475:20:1"
																		},
																		"nativeSrc": "3475:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3475:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3465:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "3465:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3216:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3252:9:1",
														"nodeType": "YulTypedName",
														"src": "3252:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3263:7:1",
														"nodeType": "YulTypedName",
														"src": "3263:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3275:6:1",
														"nodeType": "YulTypedName",
														"src": "3275:6:1",
														"type": ""
													}
												],
												"src": "3216:329:1"
											},
											{
												"body": {
													"nativeSrc": "3596:81:1",
													"nodeType": "YulBlock",
													"src": "3596:81:1",
													"statements": [
														{
															"nativeSrc": "3606:65:1",
															"nodeType": "YulAssignment",
															"src": "3606:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3621:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3621:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3628:42:1",
																		"nodeType": "YulLiteral",
																		"src": "3628:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3617:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3617:3:1"
																},
																"nativeSrc": "3617:54:1",
																"nodeType": "YulFunctionCall",
																"src": "3617:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3606:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "3606:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3551:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3578:5:1",
														"nodeType": "YulTypedName",
														"src": "3578:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3588:7:1",
														"nodeType": "YulTypedName",
														"src": "3588:7:1",
														"type": ""
													}
												],
												"src": "3551:126:1"
											},
											{
												"body": {
													"nativeSrc": "3728:51:1",
													"nodeType": "YulBlock",
													"src": "3728:51:1",
													"statements": [
														{
															"nativeSrc": "3738:35:1",
															"nodeType": "YulAssignment",
															"src": "3738:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3767:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3767:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3749:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "3749:17:1"
																},
																"nativeSrc": "3749:24:1",
																"nodeType": "YulFunctionCall",
																"src": "3749:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3738:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "3738:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3683:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3710:5:1",
														"nodeType": "YulTypedName",
														"src": "3710:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3720:7:1",
														"nodeType": "YulTypedName",
														"src": "3720:7:1",
														"type": ""
													}
												],
												"src": "3683:96:1"
											},
											{
												"body": {
													"nativeSrc": "3850:53:1",
													"nodeType": "YulBlock",
													"src": "3850:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3867:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3867:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3890:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3890:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3872:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "3872:17:1"
																		},
																		"nativeSrc": "3872:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3872:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3860:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3860:6:1"
																},
																"nativeSrc": "3860:37:1",
																"nodeType": "YulFunctionCall",
																"src": "3860:37:1"
															},
															"nativeSrc": "3860:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "3860:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3785:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3838:5:1",
														"nodeType": "YulTypedName",
														"src": "3838:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3845:3:1",
														"nodeType": "YulTypedName",
														"src": "3845:3:1",
														"type": ""
													}
												],
												"src": "3785:118:1"
											},
											{
												"body": {
													"nativeSrc": "4007:124:1",
													"nodeType": "YulBlock",
													"src": "4007:124:1",
													"statements": [
														{
															"nativeSrc": "4017:26:1",
															"nodeType": "YulAssignment",
															"src": "4017:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4029:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4029:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4040:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4040:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4025:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4025:3:1"
																},
																"nativeSrc": "4025:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4025:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4017:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4017:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4097:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4097:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4110:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4110:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4121:1:1",
																				"nodeType": "YulLiteral",
																				"src": "4121:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4106:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4106:3:1"
																		},
																		"nativeSrc": "4106:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4106:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4053:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "4053:43:1"
																},
																"nativeSrc": "4053:71:1",
																"nodeType": "YulFunctionCall",
																"src": "4053:71:1"
															},
															"nativeSrc": "4053:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "4053:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3909:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3979:9:1",
														"nodeType": "YulTypedName",
														"src": "3979:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3991:6:1",
														"nodeType": "YulTypedName",
														"src": "3991:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4002:4:1",
														"nodeType": "YulTypedName",
														"src": "4002:4:1",
														"type": ""
													}
												],
												"src": "3909:222:1"
											},
											{
												"body": {
													"nativeSrc": "4180:79:1",
													"nodeType": "YulBlock",
													"src": "4180:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "4237:16:1",
																"nodeType": "YulBlock",
																"src": "4237:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4246:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4246:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4249:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4249:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4239:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4239:6:1"
																			},
																			"nativeSrc": "4239:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4239:12:1"
																		},
																		"nativeSrc": "4239:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4239:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4203:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "4203:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4228:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "4228:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4210:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "4210:17:1"
																				},
																				"nativeSrc": "4210:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4210:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4200:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "4200:2:1"
																		},
																		"nativeSrc": "4200:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4200:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4193:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4193:6:1"
																},
																"nativeSrc": "4193:43:1",
																"nodeType": "YulFunctionCall",
																"src": "4193:43:1"
															},
															"nativeSrc": "4190:63:1",
															"nodeType": "YulIf",
															"src": "4190:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4137:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4173:5:1",
														"nodeType": "YulTypedName",
														"src": "4173:5:1",
														"type": ""
													}
												],
												"src": "4137:122:1"
											},
											{
												"body": {
													"nativeSrc": "4317:87:1",
													"nodeType": "YulBlock",
													"src": "4317:87:1",
													"statements": [
														{
															"nativeSrc": "4327:29:1",
															"nodeType": "YulAssignment",
															"src": "4327:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4349:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4349:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4336:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "4336:12:1"
																},
																"nativeSrc": "4336:20:1",
																"nodeType": "YulFunctionCall",
																"src": "4336:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4327:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "4327:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4392:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4392:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4365:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "4365:26:1"
																},
																"nativeSrc": "4365:33:1",
																"nodeType": "YulFunctionCall",
																"src": "4365:33:1"
															},
															"nativeSrc": "4365:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "4365:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4265:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4295:6:1",
														"nodeType": "YulTypedName",
														"src": "4295:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4303:3:1",
														"nodeType": "YulTypedName",
														"src": "4303:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4311:5:1",
														"nodeType": "YulTypedName",
														"src": "4311:5:1",
														"type": ""
													}
												],
												"src": "4265:139:1"
											},
											{
												"body": {
													"nativeSrc": "4493:391:1",
													"nodeType": "YulBlock",
													"src": "4493:391:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "4539:83:1",
																"nodeType": "YulBlock",
																"src": "4539:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4541:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "4541:77:1"
																			},
																			"nativeSrc": "4541:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4541:79:1"
																		},
																		"nativeSrc": "4541:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4541:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4514:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4514:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4523:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4523:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4510:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4510:3:1"
																		},
																		"nativeSrc": "4510:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4510:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4535:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4535:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4506:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4506:3:1"
																},
																"nativeSrc": "4506:32:1",
																"nodeType": "YulFunctionCall",
																"src": "4506:32:1"
															},
															"nativeSrc": "4503:119:1",
															"nodeType": "YulIf",
															"src": "4503:119:1"
														},
														{
															"nativeSrc": "4632:117:1",
															"nodeType": "YulBlock",
															"src": "4632:117:1",
															"statements": [
																{
																	"nativeSrc": "4647:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4647:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4661:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4661:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4651:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4651:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4676:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4676:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4711:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4711:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4722:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4722:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4707:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4707:3:1"
																				},
																				"nativeSrc": "4707:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4707:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4731:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4731:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4686:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4686:20:1"
																		},
																		"nativeSrc": "4686:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4686:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4676:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4676:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4759:118:1",
															"nodeType": "YulBlock",
															"src": "4759:118:1",
															"statements": [
																{
																	"nativeSrc": "4774:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4774:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4788:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4788:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4778:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4778:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4804:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4804:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4839:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4839:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4850:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4850:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4835:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4835:3:1"
																				},
																				"nativeSrc": "4835:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4835:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4859:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4859:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4814:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4814:20:1"
																		},
																		"nativeSrc": "4814:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4814:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4804:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4804:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4410:474:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4455:9:1",
														"nodeType": "YulTypedName",
														"src": "4455:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4466:7:1",
														"nodeType": "YulTypedName",
														"src": "4466:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4478:6:1",
														"nodeType": "YulTypedName",
														"src": "4478:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4486:6:1",
														"nodeType": "YulTypedName",
														"src": "4486:6:1",
														"type": ""
													}
												],
												"src": "4410:474:1"
											},
											{
												"body": {
													"nativeSrc": "4990:519:1",
													"nodeType": "YulBlock",
													"src": "4990:519:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "5036:83:1",
																"nodeType": "YulBlock",
																"src": "5036:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5038:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "5038:77:1"
																			},
																			"nativeSrc": "5038:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5038:79:1"
																		},
																		"nativeSrc": "5038:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5038:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5011:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5011:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5020:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5020:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5007:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5007:3:1"
																		},
																		"nativeSrc": "5007:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5007:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5032:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5032:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5003:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5003:3:1"
																},
																"nativeSrc": "5003:32:1",
																"nodeType": "YulFunctionCall",
																"src": "5003:32:1"
															},
															"nativeSrc": "5000:119:1",
															"nodeType": "YulIf",
															"src": "5000:119:1"
														},
														{
															"nativeSrc": "5129:117:1",
															"nodeType": "YulBlock",
															"src": "5129:117:1",
															"statements": [
																{
																	"nativeSrc": "5144:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5144:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5158:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5158:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5148:6:1",
																			"nodeType": "YulTypedName",
																			"src": "5148:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5173:63:1",
																	"nodeType": "YulAssignment",
																	"src": "5173:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5208:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5208:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5219:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5219:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5204:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5204:3:1"
																				},
																				"nativeSrc": "5204:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5204:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5228:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5228:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5183:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "5183:20:1"
																		},
																		"nativeSrc": "5183:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5183:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5173:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5173:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5256:118:1",
															"nodeType": "YulBlock",
															"src": "5256:118:1",
															"statements": [
																{
																	"nativeSrc": "5271:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5271:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5285:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5285:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5275:6:1",
																			"nodeType": "YulTypedName",
																			"src": "5275:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5301:63:1",
																	"nodeType": "YulAssignment",
																	"src": "5301:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5336:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5336:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5347:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5347:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5332:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5332:3:1"
																				},
																				"nativeSrc": "5332:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5332:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5356:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5356:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5311:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "5311:20:1"
																		},
																		"nativeSrc": "5311:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5311:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5301:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5301:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5384:118:1",
															"nodeType": "YulBlock",
															"src": "5384:118:1",
															"statements": [
																{
																	"nativeSrc": "5399:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5399:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5413:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5413:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5403:6:1",
																			"nodeType": "YulTypedName",
																			"src": "5403:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5429:63:1",
																	"nodeType": "YulAssignment",
																	"src": "5429:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5464:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5464:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5475:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5475:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5460:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5460:3:1"
																				},
																				"nativeSrc": "5460:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5460:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5484:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5484:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5439:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "5439:20:1"
																		},
																		"nativeSrc": "5439:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5439:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5429:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5429:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4890:619:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4944:9:1",
														"nodeType": "YulTypedName",
														"src": "4944:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4955:7:1",
														"nodeType": "YulTypedName",
														"src": "4955:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4967:6:1",
														"nodeType": "YulTypedName",
														"src": "4967:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4975:6:1",
														"nodeType": "YulTypedName",
														"src": "4975:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4983:6:1",
														"nodeType": "YulTypedName",
														"src": "4983:6:1",
														"type": ""
													}
												],
												"src": "4890:619:1"
											},
											{
												"body": {
													"nativeSrc": "5581:263:1",
													"nodeType": "YulBlock",
													"src": "5581:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "5627:83:1",
																"nodeType": "YulBlock",
																"src": "5627:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5629:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "5629:77:1"
																			},
																			"nativeSrc": "5629:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5629:79:1"
																		},
																		"nativeSrc": "5629:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5629:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5602:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5602:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5611:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5611:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5598:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5598:3:1"
																		},
																		"nativeSrc": "5598:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5598:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5623:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5623:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5594:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5594:3:1"
																},
																"nativeSrc": "5594:32:1",
																"nodeType": "YulFunctionCall",
																"src": "5594:32:1"
															},
															"nativeSrc": "5591:119:1",
															"nodeType": "YulIf",
															"src": "5591:119:1"
														},
														{
															"nativeSrc": "5720:117:1",
															"nodeType": "YulBlock",
															"src": "5720:117:1",
															"statements": [
																{
																	"nativeSrc": "5735:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5735:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5749:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5749:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5739:6:1",
																			"nodeType": "YulTypedName",
																			"src": "5739:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5764:63:1",
																	"nodeType": "YulAssignment",
																	"src": "5764:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5799:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5799:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5810:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5810:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5795:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5795:3:1"
																				},
																				"nativeSrc": "5795:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5795:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5819:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5819:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5774:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "5774:20:1"
																		},
																		"nativeSrc": "5774:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5774:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5764:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5764:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5515:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5551:9:1",
														"nodeType": "YulTypedName",
														"src": "5551:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5562:7:1",
														"nodeType": "YulTypedName",
														"src": "5562:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5574:6:1",
														"nodeType": "YulTypedName",
														"src": "5574:6:1",
														"type": ""
													}
												],
												"src": "5515:329:1"
											},
											{
												"body": {
													"nativeSrc": "5915:53:1",
													"nodeType": "YulBlock",
													"src": "5915:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5932:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5932:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5955:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "5955:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "5937:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "5937:17:1"
																		},
																		"nativeSrc": "5937:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5937:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5925:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5925:6:1"
																},
																"nativeSrc": "5925:37:1",
																"nodeType": "YulFunctionCall",
																"src": "5925:37:1"
															},
															"nativeSrc": "5925:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "5925:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "5850:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5903:5:1",
														"nodeType": "YulTypedName",
														"src": "5903:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5910:3:1",
														"nodeType": "YulTypedName",
														"src": "5910:3:1",
														"type": ""
													}
												],
												"src": "5850:118:1"
											},
											{
												"body": {
													"nativeSrc": "6072:124:1",
													"nodeType": "YulBlock",
													"src": "6072:124:1",
													"statements": [
														{
															"nativeSrc": "6082:26:1",
															"nodeType": "YulAssignment",
															"src": "6082:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6094:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6094:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6105:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6105:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6090:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6090:3:1"
																},
																"nativeSrc": "6090:18:1",
																"nodeType": "YulFunctionCall",
																"src": "6090:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6082:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6082:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6162:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6162:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6175:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6175:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6186:1:1",
																				"nodeType": "YulLiteral",
																				"src": "6186:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6171:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6171:3:1"
																		},
																		"nativeSrc": "6171:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6171:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6118:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "6118:43:1"
																},
																"nativeSrc": "6118:71:1",
																"nodeType": "YulFunctionCall",
																"src": "6118:71:1"
															},
															"nativeSrc": "6118:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "6118:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5974:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6044:9:1",
														"nodeType": "YulTypedName",
														"src": "6044:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6056:6:1",
														"nodeType": "YulTypedName",
														"src": "6056:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6067:4:1",
														"nodeType": "YulTypedName",
														"src": "6067:4:1",
														"type": ""
													}
												],
												"src": "5974:222:1"
											},
											{
												"body": {
													"nativeSrc": "6242:76:1",
													"nodeType": "YulBlock",
													"src": "6242:76:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "6296:16:1",
																"nodeType": "YulBlock",
																"src": "6296:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6305:1:1",
																					"nodeType": "YulLiteral",
																					"src": "6305:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6308:1:1",
																					"nodeType": "YulLiteral",
																					"src": "6308:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6298:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6298:6:1"
																			},
																			"nativeSrc": "6298:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6298:12:1"
																		},
																		"nativeSrc": "6298:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "6298:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6265:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "6265:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6287:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "6287:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "6272:14:1",
																					"nodeType": "YulIdentifier",
																					"src": "6272:14:1"
																				},
																				"nativeSrc": "6272:21:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6272:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6262:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "6262:2:1"
																		},
																		"nativeSrc": "6262:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6262:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6255:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6255:6:1"
																},
																"nativeSrc": "6255:40:1",
																"nodeType": "YulFunctionCall",
																"src": "6255:40:1"
															},
															"nativeSrc": "6252:60:1",
															"nodeType": "YulIf",
															"src": "6252:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "6202:116:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6235:5:1",
														"nodeType": "YulTypedName",
														"src": "6235:5:1",
														"type": ""
													}
												],
												"src": "6202:116:1"
											},
											{
												"body": {
													"nativeSrc": "6373:84:1",
													"nodeType": "YulBlock",
													"src": "6373:84:1",
													"statements": [
														{
															"nativeSrc": "6383:29:1",
															"nodeType": "YulAssignment",
															"src": "6383:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6405:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6405:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6392:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "6392:12:1"
																},
																"nativeSrc": "6392:20:1",
																"nodeType": "YulFunctionCall",
																"src": "6392:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6383:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "6383:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6445:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "6445:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "6421:23:1",
																	"nodeType": "YulIdentifier",
																	"src": "6421:23:1"
																},
																"nativeSrc": "6421:30:1",
																"nodeType": "YulFunctionCall",
																"src": "6421:30:1"
															},
															"nativeSrc": "6421:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "6421:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "6324:133:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6351:6:1",
														"nodeType": "YulTypedName",
														"src": "6351:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6359:3:1",
														"nodeType": "YulTypedName",
														"src": "6359:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6367:5:1",
														"nodeType": "YulTypedName",
														"src": "6367:5:1",
														"type": ""
													}
												],
												"src": "6324:133:1"
											},
											{
												"body": {
													"nativeSrc": "6543:388:1",
													"nodeType": "YulBlock",
													"src": "6543:388:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "6589:83:1",
																"nodeType": "YulBlock",
																"src": "6589:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6591:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "6591:77:1"
																			},
																			"nativeSrc": "6591:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6591:79:1"
																		},
																		"nativeSrc": "6591:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "6591:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6564:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "6564:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6573:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6573:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6560:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6560:3:1"
																		},
																		"nativeSrc": "6560:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6560:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6585:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6585:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6556:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6556:3:1"
																},
																"nativeSrc": "6556:32:1",
																"nodeType": "YulFunctionCall",
																"src": "6556:32:1"
															},
															"nativeSrc": "6553:119:1",
															"nodeType": "YulIf",
															"src": "6553:119:1"
														},
														{
															"nativeSrc": "6682:117:1",
															"nodeType": "YulBlock",
															"src": "6682:117:1",
															"statements": [
																{
																	"nativeSrc": "6697:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6697:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6711:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6711:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6701:6:1",
																			"nodeType": "YulTypedName",
																			"src": "6701:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6726:63:1",
																	"nodeType": "YulAssignment",
																	"src": "6726:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6761:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "6761:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6772:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "6772:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6757:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6757:3:1"
																				},
																				"nativeSrc": "6757:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6757:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6781:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "6781:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6736:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "6736:20:1"
																		},
																		"nativeSrc": "6736:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6736:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6726:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "6726:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6809:115:1",
															"nodeType": "YulBlock",
															"src": "6809:115:1",
															"statements": [
																{
																	"nativeSrc": "6824:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6824:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6838:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6838:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6828:6:1",
																			"nodeType": "YulTypedName",
																			"src": "6828:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6854:60:1",
																	"nodeType": "YulAssignment",
																	"src": "6854:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6886:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "6886:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6897:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "6897:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6882:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6882:3:1"
																				},
																				"nativeSrc": "6882:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6882:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6906:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "6906:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "6864:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "6864:17:1"
																		},
																		"nativeSrc": "6864:50:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6864:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6854:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "6854:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "6463:468:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6505:9:1",
														"nodeType": "YulTypedName",
														"src": "6505:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6516:7:1",
														"nodeType": "YulTypedName",
														"src": "6516:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6528:6:1",
														"nodeType": "YulTypedName",
														"src": "6528:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6536:6:1",
														"nodeType": "YulTypedName",
														"src": "6536:6:1",
														"type": ""
													}
												],
												"src": "6463:468:1"
											},
											{
												"body": {
													"nativeSrc": "7026:28:1",
													"nodeType": "YulBlock",
													"src": "7026:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7043:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7043:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7046:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7046:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7036:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7036:6:1"
																},
																"nativeSrc": "7036:12:1",
																"nodeType": "YulFunctionCall",
																"src": "7036:12:1"
															},
															"nativeSrc": "7036:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "7036:12:1"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "6937:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "6937:117:1"
											},
											{
												"body": {
													"nativeSrc": "7149:28:1",
													"nodeType": "YulBlock",
													"src": "7149:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7166:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7166:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7169:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7169:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7159:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7159:6:1"
																},
																"nativeSrc": "7159:12:1",
																"nodeType": "YulFunctionCall",
																"src": "7159:12:1"
															},
															"nativeSrc": "7159:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "7159:12:1"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "7060:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "7060:117:1"
											},
											{
												"body": {
													"nativeSrc": "7211:152:1",
													"nodeType": "YulBlock",
													"src": "7211:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7228:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7228:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7231:77:1",
																		"nodeType": "YulLiteral",
																		"src": "7231:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7221:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7221:6:1"
																},
																"nativeSrc": "7221:88:1",
																"nodeType": "YulFunctionCall",
																"src": "7221:88:1"
															},
															"nativeSrc": "7221:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "7221:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7325:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7325:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7328:4:1",
																		"nodeType": "YulLiteral",
																		"src": "7328:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7318:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7318:6:1"
																},
																"nativeSrc": "7318:15:1",
																"nodeType": "YulFunctionCall",
																"src": "7318:15:1"
															},
															"nativeSrc": "7318:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "7318:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7349:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7349:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7352:4:1",
																		"nodeType": "YulLiteral",
																		"src": "7352:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7342:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7342:6:1"
																},
																"nativeSrc": "7342:15:1",
																"nodeType": "YulFunctionCall",
																"src": "7342:15:1"
															},
															"nativeSrc": "7342:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "7342:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "7183:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "7183:180:1"
											},
											{
												"body": {
													"nativeSrc": "7412:238:1",
													"nodeType": "YulBlock",
													"src": "7412:238:1",
													"statements": [
														{
															"nativeSrc": "7422:58:1",
															"nodeType": "YulVariableDeclaration",
															"src": "7422:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7444:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7444:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "7474:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "7474:4:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "7452:21:1",
																			"nodeType": "YulIdentifier",
																			"src": "7452:21:1"
																		},
																		"nativeSrc": "7452:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7452:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7440:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7440:3:1"
																},
																"nativeSrc": "7440:40:1",
																"nodeType": "YulFunctionCall",
																"src": "7440:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "7426:10:1",
																	"nodeType": "YulTypedName",
																	"src": "7426:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7591:22:1",
																"nodeType": "YulBlock",
																"src": "7591:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7593:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "7593:16:1"
																			},
																			"nativeSrc": "7593:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7593:18:1"
																		},
																		"nativeSrc": "7593:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "7593:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7534:10:1",
																				"nodeType": "YulIdentifier",
																				"src": "7534:10:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7546:18:1",
																				"nodeType": "YulLiteral",
																				"src": "7546:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7531:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "7531:2:1"
																		},
																		"nativeSrc": "7531:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7531:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7570:10:1",
																				"nodeType": "YulIdentifier",
																				"src": "7570:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "7582:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "7582:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7567:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "7567:2:1"
																		},
																		"nativeSrc": "7567:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7567:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7528:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "7528:2:1"
																},
																"nativeSrc": "7528:62:1",
																"nodeType": "YulFunctionCall",
																"src": "7528:62:1"
															},
															"nativeSrc": "7525:88:1",
															"nodeType": "YulIf",
															"src": "7525:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7629:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7629:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "7633:10:1",
																		"nodeType": "YulIdentifier",
																		"src": "7633:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7622:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7622:6:1"
																},
																"nativeSrc": "7622:22:1",
																"nodeType": "YulFunctionCall",
																"src": "7622:22:1"
															},
															"nativeSrc": "7622:22:1",
															"nodeType": "YulExpressionStatement",
															"src": "7622:22:1"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "7369:281:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7398:6:1",
														"nodeType": "YulTypedName",
														"src": "7398:6:1",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "7406:4:1",
														"nodeType": "YulTypedName",
														"src": "7406:4:1",
														"type": ""
													}
												],
												"src": "7369:281:1"
											},
											{
												"body": {
													"nativeSrc": "7697:88:1",
													"nodeType": "YulBlock",
													"src": "7697:88:1",
													"statements": [
														{
															"nativeSrc": "7707:30:1",
															"nodeType": "YulAssignment",
															"src": "7707:30:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "7717:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "7717:18:1"
																},
																"nativeSrc": "7717:20:1",
																"nodeType": "YulFunctionCall",
																"src": "7717:20:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "7707:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7707:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7766:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7766:6:1"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "7774:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "7774:4:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "7746:19:1",
																	"nodeType": "YulIdentifier",
																	"src": "7746:19:1"
																},
																"nativeSrc": "7746:33:1",
																"nodeType": "YulFunctionCall",
																"src": "7746:33:1"
															},
															"nativeSrc": "7746:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "7746:33:1"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "7656:129:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "7681:4:1",
														"nodeType": "YulTypedName",
														"src": "7681:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "7690:6:1",
														"nodeType": "YulTypedName",
														"src": "7690:6:1",
														"type": ""
													}
												],
												"src": "7656:129:1"
											},
											{
												"body": {
													"nativeSrc": "7857:241:1",
													"nodeType": "YulBlock",
													"src": "7857:241:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "7962:22:1",
																"nodeType": "YulBlock",
																"src": "7962:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7964:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "7964:16:1"
																			},
																			"nativeSrc": "7964:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7964:18:1"
																		},
																		"nativeSrc": "7964:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "7964:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7934:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7934:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7942:18:1",
																		"nodeType": "YulLiteral",
																		"src": "7942:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7931:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "7931:2:1"
																},
																"nativeSrc": "7931:30:1",
																"nodeType": "YulFunctionCall",
																"src": "7931:30:1"
															},
															"nativeSrc": "7928:56:1",
															"nodeType": "YulIf",
															"src": "7928:56:1"
														},
														{
															"nativeSrc": "7994:37:1",
															"nodeType": "YulAssignment",
															"src": "7994:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8024:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8024:6:1"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "8002:21:1",
																	"nodeType": "YulIdentifier",
																	"src": "8002:21:1"
																},
																"nativeSrc": "8002:29:1",
																"nodeType": "YulFunctionCall",
																"src": "8002:29:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7994:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7994:4:1"
																}
															]
														},
														{
															"nativeSrc": "8068:23:1",
															"nodeType": "YulAssignment",
															"src": "8068:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "8080:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "8080:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8086:4:1",
																		"nodeType": "YulLiteral",
																		"src": "8086:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8076:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8076:3:1"
																},
																"nativeSrc": "8076:15:1",
																"nodeType": "YulFunctionCall",
																"src": "8076:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8068:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8068:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "7791:307:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "7841:6:1",
														"nodeType": "YulTypedName",
														"src": "7841:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "7852:4:1",
														"nodeType": "YulTypedName",
														"src": "7852:4:1",
														"type": ""
													}
												],
												"src": "7791:307:1"
											},
											{
												"body": {
													"nativeSrc": "8168:82:1",
													"nodeType": "YulBlock",
													"src": "8168:82:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "8191:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8191:3:1"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "8196:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8196:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8201:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8201:6:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "8178:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "8178:12:1"
																},
																"nativeSrc": "8178:30:1",
																"nodeType": "YulFunctionCall",
																"src": "8178:30:1"
															},
															"nativeSrc": "8178:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "8178:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "8228:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "8228:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8233:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8233:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8224:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8224:3:1"
																		},
																		"nativeSrc": "8224:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8224:16:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8242:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8242:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8217:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8217:6:1"
																},
																"nativeSrc": "8217:27:1",
																"nodeType": "YulFunctionCall",
																"src": "8217:27:1"
															},
															"nativeSrc": "8217:27:1",
															"nodeType": "YulExpressionStatement",
															"src": "8217:27:1"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "8104:146:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8150:3:1",
														"nodeType": "YulTypedName",
														"src": "8150:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "8155:3:1",
														"nodeType": "YulTypedName",
														"src": "8155:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8160:6:1",
														"nodeType": "YulTypedName",
														"src": "8160:6:1",
														"type": ""
													}
												],
												"src": "8104:146:1"
											},
											{
												"body": {
													"nativeSrc": "8339:340:1",
													"nodeType": "YulBlock",
													"src": "8339:340:1",
													"statements": [
														{
															"nativeSrc": "8349:74:1",
															"nodeType": "YulAssignment",
															"src": "8349:74:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8415:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8415:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "8374:40:1",
																			"nodeType": "YulIdentifier",
																			"src": "8374:40:1"
																		},
																		"nativeSrc": "8374:48:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8374:48:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "8358:15:1",
																	"nodeType": "YulIdentifier",
																	"src": "8358:15:1"
																},
																"nativeSrc": "8358:65:1",
																"nodeType": "YulFunctionCall",
																"src": "8358:65:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8349:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "8349:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8439:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "8439:5:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8446:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8446:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8432:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8432:6:1"
																},
																"nativeSrc": "8432:21:1",
																"nodeType": "YulFunctionCall",
																"src": "8432:21:1"
															},
															"nativeSrc": "8432:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "8432:21:1"
														},
														{
															"nativeSrc": "8462:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "8462:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8477:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "8477:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8484:4:1",
																		"nodeType": "YulLiteral",
																		"src": "8484:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8473:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8473:3:1"
																},
																"nativeSrc": "8473:16:1",
																"nodeType": "YulFunctionCall",
																"src": "8473:16:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "8466:3:1",
																	"nodeType": "YulTypedName",
																	"src": "8466:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8527:83:1",
																"nodeType": "YulBlock",
																"src": "8527:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "8529:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "8529:77:1"
																			},
																			"nativeSrc": "8529:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8529:79:1"
																		},
																		"nativeSrc": "8529:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8529:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "8508:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "8508:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8513:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8513:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8504:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8504:3:1"
																		},
																		"nativeSrc": "8504:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8504:16:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8522:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8522:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8501:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "8501:2:1"
																},
																"nativeSrc": "8501:25:1",
																"nodeType": "YulFunctionCall",
																"src": "8501:25:1"
															},
															"nativeSrc": "8498:112:1",
															"nodeType": "YulIf",
															"src": "8498:112:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8656:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8656:3:1"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "8661:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8661:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8666:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8666:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "8619:36:1",
																	"nodeType": "YulIdentifier",
																	"src": "8619:36:1"
																},
																"nativeSrc": "8619:54:1",
																"nodeType": "YulFunctionCall",
																"src": "8619:54:1"
															},
															"nativeSrc": "8619:54:1",
															"nodeType": "YulExpressionStatement",
															"src": "8619:54:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "8256:423:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8312:3:1",
														"nodeType": "YulTypedName",
														"src": "8312:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8317:6:1",
														"nodeType": "YulTypedName",
														"src": "8317:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8325:3:1",
														"nodeType": "YulTypedName",
														"src": "8325:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8333:5:1",
														"nodeType": "YulTypedName",
														"src": "8333:5:1",
														"type": ""
													}
												],
												"src": "8256:423:1"
											},
											{
												"body": {
													"nativeSrc": "8759:277:1",
													"nodeType": "YulBlock",
													"src": "8759:277:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "8808:83:1",
																"nodeType": "YulBlock",
																"src": "8808:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "8810:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "8810:77:1"
																			},
																			"nativeSrc": "8810:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8810:79:1"
																		},
																		"nativeSrc": "8810:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8810:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "8787:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "8787:6:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8795:4:1",
																						"nodeType": "YulLiteral",
																						"src": "8795:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8783:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "8783:3:1"
																				},
																				"nativeSrc": "8783:17:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8783:17:1"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "8802:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "8802:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "8779:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8779:3:1"
																		},
																		"nativeSrc": "8779:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8779:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8772:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8772:6:1"
																},
																"nativeSrc": "8772:35:1",
																"nodeType": "YulFunctionCall",
																"src": "8772:35:1"
															},
															"nativeSrc": "8769:122:1",
															"nodeType": "YulIf",
															"src": "8769:122:1"
														},
														{
															"nativeSrc": "8900:34:1",
															"nodeType": "YulVariableDeclaration",
															"src": "8900:34:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8927:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8927:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8914:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "8914:12:1"
																},
																"nativeSrc": "8914:20:1",
																"nodeType": "YulFunctionCall",
																"src": "8914:20:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8904:6:1",
																	"nodeType": "YulTypedName",
																	"src": "8904:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8943:87:1",
															"nodeType": "YulAssignment",
															"src": "8943:87:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9003:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "9003:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9011:4:1",
																				"nodeType": "YulLiteral",
																				"src": "9011:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8999:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8999:3:1"
																		},
																		"nativeSrc": "8999:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8999:17:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9018:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9018:6:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9026:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "9026:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "8952:46:1",
																	"nodeType": "YulIdentifier",
																	"src": "8952:46:1"
																},
																"nativeSrc": "8952:78:1",
																"nodeType": "YulFunctionCall",
																"src": "8952:78:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8943:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "8943:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "8698:338:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8737:6:1",
														"nodeType": "YulTypedName",
														"src": "8737:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8745:3:1",
														"nodeType": "YulTypedName",
														"src": "8745:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8753:5:1",
														"nodeType": "YulTypedName",
														"src": "8753:5:1",
														"type": ""
													}
												],
												"src": "8698:338:1"
											},
											{
												"body": {
													"nativeSrc": "9168:817:1",
													"nodeType": "YulBlock",
													"src": "9168:817:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "9215:83:1",
																"nodeType": "YulBlock",
																"src": "9215:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9217:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "9217:77:1"
																			},
																			"nativeSrc": "9217:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "9217:79:1"
																		},
																		"nativeSrc": "9217:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "9217:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9189:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "9189:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9198:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9198:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9185:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9185:3:1"
																		},
																		"nativeSrc": "9185:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9185:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9210:3:1",
																		"nodeType": "YulLiteral",
																		"src": "9210:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9181:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9181:3:1"
																},
																"nativeSrc": "9181:33:1",
																"nodeType": "YulFunctionCall",
																"src": "9181:33:1"
															},
															"nativeSrc": "9178:120:1",
															"nodeType": "YulIf",
															"src": "9178:120:1"
														},
														{
															"nativeSrc": "9308:117:1",
															"nodeType": "YulBlock",
															"src": "9308:117:1",
															"statements": [
																{
																	"nativeSrc": "9323:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9323:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9337:1:1",
																		"nodeType": "YulLiteral",
																		"src": "9337:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9327:6:1",
																			"nodeType": "YulTypedName",
																			"src": "9327:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9352:63:1",
																	"nodeType": "YulAssignment",
																	"src": "9352:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9387:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "9387:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9398:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "9398:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9383:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "9383:3:1"
																				},
																				"nativeSrc": "9383:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "9383:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9407:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "9407:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9362:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "9362:20:1"
																		},
																		"nativeSrc": "9362:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9362:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9352:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "9352:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9435:118:1",
															"nodeType": "YulBlock",
															"src": "9435:118:1",
															"statements": [
																{
																	"nativeSrc": "9450:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9450:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9464:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9464:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9454:6:1",
																			"nodeType": "YulTypedName",
																			"src": "9454:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9480:63:1",
																	"nodeType": "YulAssignment",
																	"src": "9480:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9515:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "9515:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9526:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "9526:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9511:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "9511:3:1"
																				},
																				"nativeSrc": "9511:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "9511:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9535:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "9535:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9490:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "9490:20:1"
																		},
																		"nativeSrc": "9490:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9490:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9480:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "9480:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9563:118:1",
															"nodeType": "YulBlock",
															"src": "9563:118:1",
															"statements": [
																{
																	"nativeSrc": "9578:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9578:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9592:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9592:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9582:6:1",
																			"nodeType": "YulTypedName",
																			"src": "9582:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9608:63:1",
																	"nodeType": "YulAssignment",
																	"src": "9608:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9643:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "9643:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9654:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "9654:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9639:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "9639:3:1"
																				},
																				"nativeSrc": "9639:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "9639:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9663:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "9663:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9618:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "9618:20:1"
																		},
																		"nativeSrc": "9618:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9618:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "9608:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "9608:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9691:287:1",
															"nodeType": "YulBlock",
															"src": "9691:287:1",
															"statements": [
																{
																	"nativeSrc": "9706:46:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9706:46:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9737:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "9737:9:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9748:2:1",
																						"nodeType": "YulLiteral",
																						"src": "9748:2:1",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9733:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "9733:3:1"
																				},
																				"nativeSrc": "9733:18:1",
																				"nodeType": "YulFunctionCall",
																				"src": "9733:18:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9720:12:1",
																			"nodeType": "YulIdentifier",
																			"src": "9720:12:1"
																		},
																		"nativeSrc": "9720:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9720:32:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9710:6:1",
																			"nodeType": "YulTypedName",
																			"src": "9710:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "9799:83:1",
																		"nodeType": "YulBlock",
																		"src": "9799:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "9801:77:1",
																						"nodeType": "YulIdentifier",
																						"src": "9801:77:1"
																					},
																					"nativeSrc": "9801:79:1",
																					"nodeType": "YulFunctionCall",
																					"src": "9801:79:1"
																				},
																				"nativeSrc": "9801:79:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "9801:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9771:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "9771:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9779:18:1",
																				"nodeType": "YulLiteral",
																				"src": "9779:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9768:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "9768:2:1"
																		},
																		"nativeSrc": "9768:30:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9768:30:1"
																	},
																	"nativeSrc": "9765:117:1",
																	"nodeType": "YulIf",
																	"src": "9765:117:1"
																},
																{
																	"nativeSrc": "9896:72:1",
																	"nodeType": "YulAssignment",
																	"src": "9896:72:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9940:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "9940:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9951:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "9951:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9936:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "9936:3:1"
																				},
																				"nativeSrc": "9936:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "9936:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9960:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "9960:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "9906:29:1",
																			"nodeType": "YulIdentifier",
																			"src": "9906:29:1"
																		},
																		"nativeSrc": "9906:62:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9906:62:1"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "9896:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "9896:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "9042:943:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9114:9:1",
														"nodeType": "YulTypedName",
														"src": "9114:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9125:7:1",
														"nodeType": "YulTypedName",
														"src": "9125:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9137:6:1",
														"nodeType": "YulTypedName",
														"src": "9137:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9145:6:1",
														"nodeType": "YulTypedName",
														"src": "9145:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9153:6:1",
														"nodeType": "YulTypedName",
														"src": "9153:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9161:6:1",
														"nodeType": "YulTypedName",
														"src": "9161:6:1",
														"type": ""
													}
												],
												"src": "9042:943:1"
											},
											{
												"body": {
													"nativeSrc": "10074:391:1",
													"nodeType": "YulBlock",
													"src": "10074:391:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "10120:83:1",
																"nodeType": "YulBlock",
																"src": "10120:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10122:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "10122:77:1"
																			},
																			"nativeSrc": "10122:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "10122:79:1"
																		},
																		"nativeSrc": "10122:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "10122:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10095:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "10095:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10104:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10104:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10091:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10091:3:1"
																		},
																		"nativeSrc": "10091:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10091:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10116:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10116:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10087:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10087:3:1"
																},
																"nativeSrc": "10087:32:1",
																"nodeType": "YulFunctionCall",
																"src": "10087:32:1"
															},
															"nativeSrc": "10084:119:1",
															"nodeType": "YulIf",
															"src": "10084:119:1"
														},
														{
															"nativeSrc": "10213:117:1",
															"nodeType": "YulBlock",
															"src": "10213:117:1",
															"statements": [
																{
																	"nativeSrc": "10228:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10228:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10242:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10242:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10232:6:1",
																			"nodeType": "YulTypedName",
																			"src": "10232:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10257:63:1",
																	"nodeType": "YulAssignment",
																	"src": "10257:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10292:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "10292:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10303:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "10303:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10288:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "10288:3:1"
																				},
																				"nativeSrc": "10288:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10288:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10312:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "10312:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10267:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "10267:20:1"
																		},
																		"nativeSrc": "10267:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10267:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10257:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "10257:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10340:118:1",
															"nodeType": "YulBlock",
															"src": "10340:118:1",
															"statements": [
																{
																	"nativeSrc": "10355:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10355:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10369:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10369:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10359:6:1",
																			"nodeType": "YulTypedName",
																			"src": "10359:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10385:63:1",
																	"nodeType": "YulAssignment",
																	"src": "10385:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10420:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "10420:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10431:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "10431:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10416:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "10416:3:1"
																				},
																				"nativeSrc": "10416:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10416:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10440:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "10440:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10395:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "10395:20:1"
																		},
																		"nativeSrc": "10395:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10395:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10385:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "10385:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "9991:474:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10036:9:1",
														"nodeType": "YulTypedName",
														"src": "10036:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10047:7:1",
														"nodeType": "YulTypedName",
														"src": "10047:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10059:6:1",
														"nodeType": "YulTypedName",
														"src": "10059:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10067:6:1",
														"nodeType": "YulTypedName",
														"src": "10067:6:1",
														"type": ""
													}
												],
												"src": "9991:474:1"
											},
											{
												"body": {
													"nativeSrc": "10499:152:1",
													"nodeType": "YulBlock",
													"src": "10499:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10516:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10516:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10519:77:1",
																		"nodeType": "YulLiteral",
																		"src": "10519:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10509:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10509:6:1"
																},
																"nativeSrc": "10509:88:1",
																"nodeType": "YulFunctionCall",
																"src": "10509:88:1"
															},
															"nativeSrc": "10509:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "10509:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10613:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10613:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10616:4:1",
																		"nodeType": "YulLiteral",
																		"src": "10616:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10606:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10606:6:1"
																},
																"nativeSrc": "10606:15:1",
																"nodeType": "YulFunctionCall",
																"src": "10606:15:1"
															},
															"nativeSrc": "10606:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "10606:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10637:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10637:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10640:4:1",
																		"nodeType": "YulLiteral",
																		"src": "10640:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10630:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10630:6:1"
																},
																"nativeSrc": "10630:15:1",
																"nodeType": "YulFunctionCall",
																"src": "10630:15:1"
															},
															"nativeSrc": "10630:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "10630:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "10471:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "10471:180:1"
											},
											{
												"body": {
													"nativeSrc": "10708:269:1",
													"nodeType": "YulBlock",
													"src": "10708:269:1",
													"statements": [
														{
															"nativeSrc": "10718:22:1",
															"nodeType": "YulAssignment",
															"src": "10718:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10732:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "10732:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10738:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10738:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10728:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10728:3:1"
																},
																"nativeSrc": "10728:12:1",
																"nodeType": "YulFunctionCall",
																"src": "10728:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "10718:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10718:6:1"
																}
															]
														},
														{
															"nativeSrc": "10749:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "10749:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10779:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "10779:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10785:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10785:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10775:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10775:3:1"
																},
																"nativeSrc": "10775:12:1",
																"nodeType": "YulFunctionCall",
																"src": "10775:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "10753:18:1",
																	"nodeType": "YulTypedName",
																	"src": "10753:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10826:51:1",
																"nodeType": "YulBlock",
																"src": "10826:51:1",
																"statements": [
																	{
																		"nativeSrc": "10840:27:1",
																		"nodeType": "YulAssignment",
																		"src": "10840:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "10854:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "10854:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10862:4:1",
																					"nodeType": "YulLiteral",
																					"src": "10862:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "10850:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "10850:3:1"
																			},
																			"nativeSrc": "10850:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "10850:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "10840:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "10840:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10806:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "10806:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10799:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10799:6:1"
																},
																"nativeSrc": "10799:26:1",
																"nodeType": "YulFunctionCall",
																"src": "10799:26:1"
															},
															"nativeSrc": "10796:81:1",
															"nodeType": "YulIf",
															"src": "10796:81:1"
														},
														{
															"body": {
																"nativeSrc": "10929:42:1",
																"nodeType": "YulBlock",
																"src": "10929:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "10943:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "10943:16:1"
																			},
																			"nativeSrc": "10943:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "10943:18:1"
																		},
																		"nativeSrc": "10943:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "10943:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10893:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "10893:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10916:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "10916:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10924:2:1",
																				"nodeType": "YulLiteral",
																				"src": "10924:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "10913:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "10913:2:1"
																		},
																		"nativeSrc": "10913:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10913:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "10890:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "10890:2:1"
																},
																"nativeSrc": "10890:38:1",
																"nodeType": "YulFunctionCall",
																"src": "10890:38:1"
															},
															"nativeSrc": "10887:84:1",
															"nodeType": "YulIf",
															"src": "10887:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "10657:320:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "10692:4:1",
														"nodeType": "YulTypedName",
														"src": "10692:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "10701:6:1",
														"nodeType": "YulTypedName",
														"src": "10701:6:1",
														"type": ""
													}
												],
												"src": "10657:320:1"
											},
											{
												"body": {
													"nativeSrc": "11137:288:1",
													"nodeType": "YulBlock",
													"src": "11137:288:1",
													"statements": [
														{
															"nativeSrc": "11147:26:1",
															"nodeType": "YulAssignment",
															"src": "11147:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11159:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "11159:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11170:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11170:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11155:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11155:3:1"
																},
																"nativeSrc": "11155:18:1",
																"nodeType": "YulFunctionCall",
																"src": "11155:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11147:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "11147:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11227:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11227:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11240:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11240:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11251:1:1",
																				"nodeType": "YulLiteral",
																				"src": "11251:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11236:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11236:3:1"
																		},
																		"nativeSrc": "11236:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11236:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11183:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "11183:43:1"
																},
																"nativeSrc": "11183:71:1",
																"nodeType": "YulFunctionCall",
																"src": "11183:71:1"
															},
															"nativeSrc": "11183:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "11183:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11308:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11308:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11321:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11321:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11332:2:1",
																				"nodeType": "YulLiteral",
																				"src": "11332:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11317:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11317:3:1"
																		},
																		"nativeSrc": "11317:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11317:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11264:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "11264:43:1"
																},
																"nativeSrc": "11264:72:1",
																"nodeType": "YulFunctionCall",
																"src": "11264:72:1"
															},
															"nativeSrc": "11264:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "11264:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11390:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11390:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11403:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11403:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11414:2:1",
																				"nodeType": "YulLiteral",
																				"src": "11414:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11399:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11399:3:1"
																		},
																		"nativeSrc": "11399:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11399:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11346:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "11346:43:1"
																},
																"nativeSrc": "11346:72:1",
																"nodeType": "YulFunctionCall",
																"src": "11346:72:1"
															},
															"nativeSrc": "11346:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "11346:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "10983:442:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11093:9:1",
														"nodeType": "YulTypedName",
														"src": "11093:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11105:6:1",
														"nodeType": "YulTypedName",
														"src": "11105:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11113:6:1",
														"nodeType": "YulTypedName",
														"src": "11113:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11121:6:1",
														"nodeType": "YulTypedName",
														"src": "11121:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11132:4:1",
														"nodeType": "YulTypedName",
														"src": "11132:4:1",
														"type": ""
													}
												],
												"src": "10983:442:1"
											},
											{
												"body": {
													"nativeSrc": "11537:67:1",
													"nodeType": "YulBlock",
													"src": "11537:67:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11559:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "11559:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11567:1:1",
																				"nodeType": "YulLiteral",
																				"src": "11567:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11555:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11555:3:1"
																		},
																		"nativeSrc": "11555:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11555:14:1"
																	},
																	{
																		"hexValue": "5265656e7472616e742063616c6c206465746563746564",
																		"kind": "string",
																		"nativeSrc": "11571:25:1",
																		"nodeType": "YulLiteral",
																		"src": "11571:25:1",
																		"type": "",
																		"value": "Reentrant call detected"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11548:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11548:6:1"
																},
																"nativeSrc": "11548:49:1",
																"nodeType": "YulFunctionCall",
																"src": "11548:49:1"
															},
															"nativeSrc": "11548:49:1",
															"nodeType": "YulExpressionStatement",
															"src": "11548:49:1"
														}
													]
												},
												"name": "store_literal_in_memory_48aa738ac532b148333561b892fe987b033109920314b49ab0b9845e80f27229",
												"nativeSrc": "11431:173:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11529:6:1",
														"nodeType": "YulTypedName",
														"src": "11529:6:1",
														"type": ""
													}
												],
												"src": "11431:173:1"
											},
											{
												"body": {
													"nativeSrc": "11756:220:1",
													"nodeType": "YulBlock",
													"src": "11756:220:1",
													"statements": [
														{
															"nativeSrc": "11766:74:1",
															"nodeType": "YulAssignment",
															"src": "11766:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11832:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "11832:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11837:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11837:2:1",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11773:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "11773:58:1"
																},
																"nativeSrc": "11773:67:1",
																"nodeType": "YulFunctionCall",
																"src": "11773:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11766:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11766:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11938:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "11938:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_48aa738ac532b148333561b892fe987b033109920314b49ab0b9845e80f27229",
																	"nativeSrc": "11849:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "11849:88:1"
																},
																"nativeSrc": "11849:93:1",
																"nodeType": "YulFunctionCall",
																"src": "11849:93:1"
															},
															"nativeSrc": "11849:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "11849:93:1"
														},
														{
															"nativeSrc": "11951:19:1",
															"nodeType": "YulAssignment",
															"src": "11951:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11962:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "11962:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11967:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11967:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11958:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11958:3:1"
																},
																"nativeSrc": "11958:12:1",
																"nodeType": "YulFunctionCall",
																"src": "11958:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11951:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11951:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_48aa738ac532b148333561b892fe987b033109920314b49ab0b9845e80f27229_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11610:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11744:3:1",
														"nodeType": "YulTypedName",
														"src": "11744:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11752:3:1",
														"nodeType": "YulTypedName",
														"src": "11752:3:1",
														"type": ""
													}
												],
												"src": "11610:366:1"
											},
											{
												"body": {
													"nativeSrc": "12153:248:1",
													"nodeType": "YulBlock",
													"src": "12153:248:1",
													"statements": [
														{
															"nativeSrc": "12163:26:1",
															"nodeType": "YulAssignment",
															"src": "12163:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12175:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "12175:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12186:2:1",
																		"nodeType": "YulLiteral",
																		"src": "12186:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12171:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12171:3:1"
																},
																"nativeSrc": "12171:18:1",
																"nodeType": "YulFunctionCall",
																"src": "12171:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12163:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "12163:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12210:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12210:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12221:1:1",
																				"nodeType": "YulLiteral",
																				"src": "12221:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12206:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12206:3:1"
																		},
																		"nativeSrc": "12206:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12206:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12229:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "12229:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12235:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12235:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12225:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12225:3:1"
																		},
																		"nativeSrc": "12225:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12225:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12199:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12199:6:1"
																},
																"nativeSrc": "12199:47:1",
																"nodeType": "YulFunctionCall",
																"src": "12199:47:1"
															},
															"nativeSrc": "12199:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "12199:47:1"
														},
														{
															"nativeSrc": "12255:139:1",
															"nodeType": "YulAssignment",
															"src": "12255:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12389:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "12389:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_48aa738ac532b148333561b892fe987b033109920314b49ab0b9845e80f27229_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12263:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "12263:124:1"
																},
																"nativeSrc": "12263:131:1",
																"nodeType": "YulFunctionCall",
																"src": "12263:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12255:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "12255:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_48aa738ac532b148333561b892fe987b033109920314b49ab0b9845e80f27229__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11982:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12133:9:1",
														"nodeType": "YulTypedName",
														"src": "12133:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12148:4:1",
														"nodeType": "YulTypedName",
														"src": "12148:4:1",
														"type": ""
													}
												],
												"src": "11982:419:1"
											},
											{
												"body": {
													"nativeSrc": "12521:34:1",
													"nodeType": "YulBlock",
													"src": "12521:34:1",
													"statements": [
														{
															"nativeSrc": "12531:18:1",
															"nodeType": "YulAssignment",
															"src": "12531:18:1",
															"value": {
																"name": "pos",
																"nativeSrc": "12546:3:1",
																"nodeType": "YulIdentifier",
																"src": "12546:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "12531:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "12531:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "12407:148:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12493:3:1",
														"nodeType": "YulTypedName",
														"src": "12493:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12498:6:1",
														"nodeType": "YulTypedName",
														"src": "12498:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "12509:11:1",
														"nodeType": "YulTypedName",
														"src": "12509:11:1",
														"type": ""
													}
												],
												"src": "12407:148:1"
											},
											{
												"body": {
													"nativeSrc": "12671:280:1",
													"nodeType": "YulBlock",
													"src": "12671:280:1",
													"statements": [
														{
															"nativeSrc": "12681:53:1",
															"nodeType": "YulVariableDeclaration",
															"src": "12681:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12728:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "12728:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "12695:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "12695:32:1"
																},
																"nativeSrc": "12695:39:1",
																"nodeType": "YulFunctionCall",
																"src": "12695:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "12685:6:1",
																	"nodeType": "YulTypedName",
																	"src": "12685:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12743:96:1",
															"nodeType": "YulAssignment",
															"src": "12743:96:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12827:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "12827:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12832:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12832:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "12750:76:1",
																	"nodeType": "YulIdentifier",
																	"src": "12750:76:1"
																},
																"nativeSrc": "12750:89:1",
																"nodeType": "YulFunctionCall",
																"src": "12750:89:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12743:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12743:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12887:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "12887:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12894:4:1",
																				"nodeType": "YulLiteral",
																				"src": "12894:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12883:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12883:3:1"
																		},
																		"nativeSrc": "12883:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12883:16:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "12901:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "12901:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12906:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12906:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "12848:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "12848:34:1"
																},
																"nativeSrc": "12848:65:1",
																"nodeType": "YulFunctionCall",
																"src": "12848:65:1"
															},
															"nativeSrc": "12848:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "12848:65:1"
														},
														{
															"nativeSrc": "12922:23:1",
															"nodeType": "YulAssignment",
															"src": "12922:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12933:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "12933:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12938:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12938:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12929:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12929:3:1"
																},
																"nativeSrc": "12929:16:1",
																"nodeType": "YulFunctionCall",
																"src": "12929:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12922:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12922:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "12561:390:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12652:5:1",
														"nodeType": "YulTypedName",
														"src": "12652:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12659:3:1",
														"nodeType": "YulTypedName",
														"src": "12659:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12667:3:1",
														"nodeType": "YulTypedName",
														"src": "12667:3:1",
														"type": ""
													}
												],
												"src": "12561:390:1"
											},
											{
												"body": {
													"nativeSrc": "13103:36:1",
													"nodeType": "YulBlock",
													"src": "13103:36:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13120:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "13120:3:1"
																	},
																	{
																		"hexValue": "2e6a736f6e",
																		"kind": "string",
																		"nativeSrc": "13125:7:1",
																		"nodeType": "YulLiteral",
																		"src": "13125:7:1",
																		"type": "",
																		"value": ".json"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13113:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "13113:6:1"
																},
																"nativeSrc": "13113:20:1",
																"nodeType": "YulFunctionCall",
																"src": "13113:20:1"
															},
															"nativeSrc": "13113:20:1",
															"nodeType": "YulExpressionStatement",
															"src": "13113:20:1"
														}
													]
												},
												"name": "abi_encode_t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972_to_t_bytes5_nonPadded_inplace_fromStack",
												"nativeSrc": "12957:182:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13098:3:1",
														"nodeType": "YulTypedName",
														"src": "13098:3:1",
														"type": ""
													}
												],
												"src": "12957:182:1"
											},
											{
												"body": {
													"nativeSrc": "13371:313:1",
													"nodeType": "YulBlock",
													"src": "13371:313:1",
													"statements": [
														{
															"nativeSrc": "13382:102:1",
															"nodeType": "YulAssignment",
															"src": "13382:102:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13471:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13471:6:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "13480:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "13480:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "13389:81:1",
																	"nodeType": "YulIdentifier",
																	"src": "13389:81:1"
																},
																"nativeSrc": "13389:95:1",
																"nodeType": "YulFunctionCall",
																"src": "13389:95:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13382:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13382:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13627:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "13627:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972_to_t_bytes5_nonPadded_inplace_fromStack",
																	"nativeSrc": "13494:131:1",
																	"nodeType": "YulIdentifier",
																	"src": "13494:131:1"
																},
																"nativeSrc": "13494:137:1",
																"nodeType": "YulFunctionCall",
																"src": "13494:137:1"
															},
															"nativeSrc": "13494:137:1",
															"nodeType": "YulExpressionStatement",
															"src": "13494:137:1"
														},
														{
															"nativeSrc": "13640:18:1",
															"nodeType": "YulAssignment",
															"src": "13640:18:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13651:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "13651:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13656:1:1",
																		"nodeType": "YulLiteral",
																		"src": "13656:1:1",
																		"type": "",
																		"value": "5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13647:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13647:3:1"
																},
																"nativeSrc": "13647:11:1",
																"nodeType": "YulFunctionCall",
																"src": "13647:11:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13640:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13640:3:1"
																}
															]
														},
														{
															"nativeSrc": "13668:10:1",
															"nodeType": "YulAssignment",
															"src": "13668:10:1",
															"value": {
																"name": "pos",
																"nativeSrc": "13675:3:1",
																"nodeType": "YulIdentifier",
																"src": "13675:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13668:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13668:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972__to_t_string_memory_ptr_t_bytes5__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "13145:539:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13350:3:1",
														"nodeType": "YulTypedName",
														"src": "13350:3:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13356:6:1",
														"nodeType": "YulTypedName",
														"src": "13356:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13367:3:1",
														"nodeType": "YulTypedName",
														"src": "13367:3:1",
														"type": ""
													}
												],
												"src": "13145:539:1"
											},
											{
												"body": {
													"nativeSrc": "13718:152:1",
													"nodeType": "YulBlock",
													"src": "13718:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13735:1:1",
																		"nodeType": "YulLiteral",
																		"src": "13735:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13738:77:1",
																		"nodeType": "YulLiteral",
																		"src": "13738:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13728:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "13728:6:1"
																},
																"nativeSrc": "13728:88:1",
																"nodeType": "YulFunctionCall",
																"src": "13728:88:1"
															},
															"nativeSrc": "13728:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "13728:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13832:1:1",
																		"nodeType": "YulLiteral",
																		"src": "13832:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13835:4:1",
																		"nodeType": "YulLiteral",
																		"src": "13835:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13825:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "13825:6:1"
																},
																"nativeSrc": "13825:15:1",
																"nodeType": "YulFunctionCall",
																"src": "13825:15:1"
															},
															"nativeSrc": "13825:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "13825:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13856:1:1",
																		"nodeType": "YulLiteral",
																		"src": "13856:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13859:4:1",
																		"nodeType": "YulLiteral",
																		"src": "13859:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13849:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "13849:6:1"
																},
																"nativeSrc": "13849:15:1",
																"nodeType": "YulFunctionCall",
																"src": "13849:15:1"
															},
															"nativeSrc": "13849:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "13849:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "13690:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "13690:180:1"
											},
											{
												"body": {
													"nativeSrc": "13919:190:1",
													"nodeType": "YulBlock",
													"src": "13919:190:1",
													"statements": [
														{
															"nativeSrc": "13929:33:1",
															"nodeType": "YulAssignment",
															"src": "13929:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13956:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "13956:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13938:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "13938:17:1"
																},
																"nativeSrc": "13938:24:1",
																"nodeType": "YulFunctionCall",
																"src": "13938:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "13929:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "13929:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14052:22:1",
																"nodeType": "YulBlock",
																"src": "14052:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14054:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "14054:16:1"
																			},
																			"nativeSrc": "14054:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "14054:18:1"
																		},
																		"nativeSrc": "14054:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "14054:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13977:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "13977:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13984:66:1",
																		"nodeType": "YulLiteral",
																		"src": "13984:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "13974:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "13974:2:1"
																},
																"nativeSrc": "13974:77:1",
																"nodeType": "YulFunctionCall",
																"src": "13974:77:1"
															},
															"nativeSrc": "13971:103:1",
															"nodeType": "YulIf",
															"src": "13971:103:1"
														},
														{
															"nativeSrc": "14083:20:1",
															"nodeType": "YulAssignment",
															"src": "14083:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14094:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "14094:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14101:1:1",
																		"nodeType": "YulLiteral",
																		"src": "14101:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14090:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "14090:3:1"
																},
																"nativeSrc": "14090:13:1",
																"nodeType": "YulFunctionCall",
																"src": "14090:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "14083:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "14083:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "13876:233:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13905:5:1",
														"nodeType": "YulTypedName",
														"src": "13905:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "13915:3:1",
														"nodeType": "YulTypedName",
														"src": "13915:3:1",
														"type": ""
													}
												],
												"src": "13876:233:1"
											},
											{
												"body": {
													"nativeSrc": "14143:152:1",
													"nodeType": "YulBlock",
													"src": "14143:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14160:1:1",
																		"nodeType": "YulLiteral",
																		"src": "14160:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14163:77:1",
																		"nodeType": "YulLiteral",
																		"src": "14163:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14153:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "14153:6:1"
																},
																"nativeSrc": "14153:88:1",
																"nodeType": "YulFunctionCall",
																"src": "14153:88:1"
															},
															"nativeSrc": "14153:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "14153:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14257:1:1",
																		"nodeType": "YulLiteral",
																		"src": "14257:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14260:4:1",
																		"nodeType": "YulLiteral",
																		"src": "14260:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14250:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "14250:6:1"
																},
																"nativeSrc": "14250:15:1",
																"nodeType": "YulFunctionCall",
																"src": "14250:15:1"
															},
															"nativeSrc": "14250:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "14250:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14281:1:1",
																		"nodeType": "YulLiteral",
																		"src": "14281:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14284:4:1",
																		"nodeType": "YulLiteral",
																		"src": "14284:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14274:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "14274:6:1"
																},
																"nativeSrc": "14274:15:1",
																"nodeType": "YulFunctionCall",
																"src": "14274:15:1"
															},
															"nativeSrc": "14274:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "14274:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "14115:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "14115:180:1"
											},
											{
												"body": {
													"nativeSrc": "14343:143:1",
													"nodeType": "YulBlock",
													"src": "14343:143:1",
													"statements": [
														{
															"nativeSrc": "14353:25:1",
															"nodeType": "YulAssignment",
															"src": "14353:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14376:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "14376:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14358:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "14358:17:1"
																},
																"nativeSrc": "14358:20:1",
																"nodeType": "YulFunctionCall",
																"src": "14358:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14353:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "14353:1:1"
																}
															]
														},
														{
															"nativeSrc": "14387:25:1",
															"nodeType": "YulAssignment",
															"src": "14387:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14410:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "14410:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14392:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "14392:17:1"
																},
																"nativeSrc": "14392:20:1",
																"nodeType": "YulFunctionCall",
																"src": "14392:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14387:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "14387:1:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14434:22:1",
																"nodeType": "YulBlock",
																"src": "14434:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "14436:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "14436:16:1"
																			},
																			"nativeSrc": "14436:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "14436:18:1"
																		},
																		"nativeSrc": "14436:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "14436:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14431:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "14431:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14424:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "14424:6:1"
																},
																"nativeSrc": "14424:9:1",
																"nodeType": "YulFunctionCall",
																"src": "14424:9:1"
															},
															"nativeSrc": "14421:35:1",
															"nodeType": "YulIf",
															"src": "14421:35:1"
														},
														{
															"nativeSrc": "14466:14:1",
															"nodeType": "YulAssignment",
															"src": "14466:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14475:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "14475:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14478:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "14478:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "14471:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "14471:3:1"
																},
																"nativeSrc": "14471:9:1",
																"nodeType": "YulFunctionCall",
																"src": "14471:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "14466:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "14466:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "14301:185:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14332:1:1",
														"nodeType": "YulTypedName",
														"src": "14332:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14335:1:1",
														"nodeType": "YulTypedName",
														"src": "14335:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "14341:1:1",
														"nodeType": "YulTypedName",
														"src": "14341:1:1",
														"type": ""
													}
												],
												"src": "14301:185:1"
											},
											{
												"body": {
													"nativeSrc": "14537:149:1",
													"nodeType": "YulBlock",
													"src": "14537:149:1",
													"statements": [
														{
															"nativeSrc": "14547:25:1",
															"nodeType": "YulAssignment",
															"src": "14547:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14570:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "14570:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14552:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "14552:17:1"
																},
																"nativeSrc": "14552:20:1",
																"nodeType": "YulFunctionCall",
																"src": "14552:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14547:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "14547:1:1"
																}
															]
														},
														{
															"nativeSrc": "14581:25:1",
															"nodeType": "YulAssignment",
															"src": "14581:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14604:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "14604:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14586:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "14586:17:1"
																},
																"nativeSrc": "14586:20:1",
																"nodeType": "YulFunctionCall",
																"src": "14586:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14581:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "14581:1:1"
																}
															]
														},
														{
															"nativeSrc": "14615:17:1",
															"nodeType": "YulAssignment",
															"src": "14615:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14627:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "14627:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14630:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "14630:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "14623:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "14623:3:1"
																},
																"nativeSrc": "14623:9:1",
																"nodeType": "YulFunctionCall",
																"src": "14623:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "14615:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "14615:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14657:22:1",
																"nodeType": "YulBlock",
																"src": "14657:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14659:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "14659:16:1"
																			},
																			"nativeSrc": "14659:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "14659:18:1"
																		},
																		"nativeSrc": "14659:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "14659:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "14648:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "14648:4:1"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "14654:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "14654:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14645:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "14645:2:1"
																},
																"nativeSrc": "14645:11:1",
																"nodeType": "YulFunctionCall",
																"src": "14645:11:1"
															},
															"nativeSrc": "14642:37:1",
															"nodeType": "YulIf",
															"src": "14642:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "14492:194:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14523:1:1",
														"nodeType": "YulTypedName",
														"src": "14523:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14526:1:1",
														"nodeType": "YulTypedName",
														"src": "14526:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "14532:4:1",
														"nodeType": "YulTypedName",
														"src": "14532:4:1",
														"type": ""
													}
												],
												"src": "14492:194:1"
											},
											{
												"body": {
													"nativeSrc": "14726:142:1",
													"nodeType": "YulBlock",
													"src": "14726:142:1",
													"statements": [
														{
															"nativeSrc": "14736:25:1",
															"nodeType": "YulAssignment",
															"src": "14736:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14759:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "14759:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14741:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "14741:17:1"
																},
																"nativeSrc": "14741:20:1",
																"nodeType": "YulFunctionCall",
																"src": "14741:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14736:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "14736:1:1"
																}
															]
														},
														{
															"nativeSrc": "14770:25:1",
															"nodeType": "YulAssignment",
															"src": "14770:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14793:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "14793:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14775:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "14775:17:1"
																},
																"nativeSrc": "14775:20:1",
																"nodeType": "YulFunctionCall",
																"src": "14775:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14770:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "14770:1:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14817:22:1",
																"nodeType": "YulBlock",
																"src": "14817:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "14819:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "14819:16:1"
																			},
																			"nativeSrc": "14819:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "14819:18:1"
																		},
																		"nativeSrc": "14819:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "14819:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14814:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "14814:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14807:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "14807:6:1"
																},
																"nativeSrc": "14807:9:1",
																"nodeType": "YulFunctionCall",
																"src": "14807:9:1"
															},
															"nativeSrc": "14804:35:1",
															"nodeType": "YulIf",
															"src": "14804:35:1"
														},
														{
															"nativeSrc": "14848:14:1",
															"nodeType": "YulAssignment",
															"src": "14848:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14857:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "14857:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14860:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "14860:1:1"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nativeSrc": "14853:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "14853:3:1"
																},
																"nativeSrc": "14853:9:1",
																"nodeType": "YulFunctionCall",
																"src": "14853:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "14848:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "14848:1:1"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nativeSrc": "14692:176:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14715:1:1",
														"nodeType": "YulTypedName",
														"src": "14715:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14718:1:1",
														"nodeType": "YulTypedName",
														"src": "14718:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "14724:1:1",
														"nodeType": "YulTypedName",
														"src": "14724:1:1",
														"type": ""
													}
												],
												"src": "14692:176:1"
											},
											{
												"body": {
													"nativeSrc": "14918:147:1",
													"nodeType": "YulBlock",
													"src": "14918:147:1",
													"statements": [
														{
															"nativeSrc": "14928:25:1",
															"nodeType": "YulAssignment",
															"src": "14928:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14951:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "14951:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14933:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "14933:17:1"
																},
																"nativeSrc": "14933:20:1",
																"nodeType": "YulFunctionCall",
																"src": "14933:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14928:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "14928:1:1"
																}
															]
														},
														{
															"nativeSrc": "14962:25:1",
															"nodeType": "YulAssignment",
															"src": "14962:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14985:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "14985:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14967:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "14967:17:1"
																},
																"nativeSrc": "14967:20:1",
																"nodeType": "YulFunctionCall",
																"src": "14967:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14962:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "14962:1:1"
																}
															]
														},
														{
															"nativeSrc": "14996:16:1",
															"nodeType": "YulAssignment",
															"src": "14996:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15007:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "15007:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15010:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "15010:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15003:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "15003:3:1"
																},
																"nativeSrc": "15003:9:1",
																"nodeType": "YulFunctionCall",
																"src": "15003:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "14996:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "14996:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15036:22:1",
																"nodeType": "YulBlock",
																"src": "15036:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15038:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "15038:16:1"
																			},
																			"nativeSrc": "15038:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "15038:18:1"
																		},
																		"nativeSrc": "15038:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "15038:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15028:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "15028:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "15031:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "15031:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15025:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "15025:2:1"
																},
																"nativeSrc": "15025:10:1",
																"nodeType": "YulFunctionCall",
																"src": "15025:10:1"
															},
															"nativeSrc": "15022:36:1",
															"nodeType": "YulIf",
															"src": "15022:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "14874:191:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14905:1:1",
														"nodeType": "YulTypedName",
														"src": "14905:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14908:1:1",
														"nodeType": "YulTypedName",
														"src": "14908:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "14914:3:1",
														"nodeType": "YulTypedName",
														"src": "14914:3:1",
														"type": ""
													}
												],
												"src": "14874:191:1"
											},
											{
												"body": {
													"nativeSrc": "15099:152:1",
													"nodeType": "YulBlock",
													"src": "15099:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15116:1:1",
																		"nodeType": "YulLiteral",
																		"src": "15116:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15119:77:1",
																		"nodeType": "YulLiteral",
																		"src": "15119:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15109:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15109:6:1"
																},
																"nativeSrc": "15109:88:1",
																"nodeType": "YulFunctionCall",
																"src": "15109:88:1"
															},
															"nativeSrc": "15109:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "15109:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15213:1:1",
																		"nodeType": "YulLiteral",
																		"src": "15213:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15216:4:1",
																		"nodeType": "YulLiteral",
																		"src": "15216:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15206:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15206:6:1"
																},
																"nativeSrc": "15206:15:1",
																"nodeType": "YulFunctionCall",
																"src": "15206:15:1"
															},
															"nativeSrc": "15206:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "15206:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15237:1:1",
																		"nodeType": "YulLiteral",
																		"src": "15237:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15240:4:1",
																		"nodeType": "YulLiteral",
																		"src": "15240:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "15230:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15230:6:1"
																},
																"nativeSrc": "15230:15:1",
																"nodeType": "YulFunctionCall",
																"src": "15230:15:1"
															},
															"nativeSrc": "15230:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "15230:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "15071:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "15071:180:1"
											},
											{
												"body": {
													"nativeSrc": "15311:87:1",
													"nodeType": "YulBlock",
													"src": "15311:87:1",
													"statements": [
														{
															"nativeSrc": "15321:11:1",
															"nodeType": "YulAssignment",
															"src": "15321:11:1",
															"value": {
																"name": "ptr",
																"nativeSrc": "15329:3:1",
																"nodeType": "YulIdentifier",
																"src": "15329:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "15321:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "15321:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15349:1:1",
																		"nodeType": "YulLiteral",
																		"src": "15349:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "15352:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "15352:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15342:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15342:6:1"
																},
																"nativeSrc": "15342:14:1",
																"nodeType": "YulFunctionCall",
																"src": "15342:14:1"
															},
															"nativeSrc": "15342:14:1",
															"nodeType": "YulExpressionStatement",
															"src": "15342:14:1"
														},
														{
															"nativeSrc": "15365:26:1",
															"nodeType": "YulAssignment",
															"src": "15365:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15383:1:1",
																		"nodeType": "YulLiteral",
																		"src": "15383:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15386:4:1",
																		"nodeType": "YulLiteral",
																		"src": "15386:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "15373:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "15373:9:1"
																},
																"nativeSrc": "15373:18:1",
																"nodeType": "YulFunctionCall",
																"src": "15373:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "15365:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "15365:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "15257:141:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "15298:3:1",
														"nodeType": "YulTypedName",
														"src": "15298:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "15306:4:1",
														"nodeType": "YulTypedName",
														"src": "15306:4:1",
														"type": ""
													}
												],
												"src": "15257:141:1"
											},
											{
												"body": {
													"nativeSrc": "15448:49:1",
													"nodeType": "YulBlock",
													"src": "15448:49:1",
													"statements": [
														{
															"nativeSrc": "15458:33:1",
															"nodeType": "YulAssignment",
															"src": "15458:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15476:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "15476:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15483:2:1",
																				"nodeType": "YulLiteral",
																				"src": "15483:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15472:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "15472:3:1"
																		},
																		"nativeSrc": "15472:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "15472:14:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15488:2:1",
																		"nodeType": "YulLiteral",
																		"src": "15488:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "15468:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "15468:3:1"
																},
																"nativeSrc": "15468:23:1",
																"nodeType": "YulFunctionCall",
																"src": "15468:23:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "15458:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15458:6:1"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "15404:93:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15431:5:1",
														"nodeType": "YulTypedName",
														"src": "15431:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "15441:6:1",
														"nodeType": "YulTypedName",
														"src": "15441:6:1",
														"type": ""
													}
												],
												"src": "15404:93:1"
											},
											{
												"body": {
													"nativeSrc": "15556:54:1",
													"nodeType": "YulBlock",
													"src": "15556:54:1",
													"statements": [
														{
															"nativeSrc": "15566:37:1",
															"nodeType": "YulAssignment",
															"src": "15566:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "15591:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "15591:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "15597:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "15597:5:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "15587:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "15587:3:1"
																},
																"nativeSrc": "15587:16:1",
																"nodeType": "YulFunctionCall",
																"src": "15587:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "15566:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "15566:8:1"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "15503:107:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "15531:4:1",
														"nodeType": "YulTypedName",
														"src": "15531:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "15537:5:1",
														"nodeType": "YulTypedName",
														"src": "15537:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "15547:8:1",
														"nodeType": "YulTypedName",
														"src": "15547:8:1",
														"type": ""
													}
												],
												"src": "15503:107:1"
											},
											{
												"body": {
													"nativeSrc": "15692:317:1",
													"nodeType": "YulBlock",
													"src": "15692:317:1",
													"statements": [
														{
															"nativeSrc": "15702:35:1",
															"nodeType": "YulVariableDeclaration",
															"src": "15702:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "15723:10:1",
																		"nodeType": "YulIdentifier",
																		"src": "15723:10:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15735:1:1",
																		"nodeType": "YulLiteral",
																		"src": "15735:1:1",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "15719:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "15719:3:1"
																},
																"nativeSrc": "15719:18:1",
																"nodeType": "YulFunctionCall",
																"src": "15719:18:1"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "15706:9:1",
																	"nodeType": "YulTypedName",
																	"src": "15706:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "15746:109:1",
															"nodeType": "YulVariableDeclaration",
															"src": "15746:109:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "15777:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "15777:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15788:66:1",
																		"nodeType": "YulLiteral",
																		"src": "15788:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "15758:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "15758:18:1"
																},
																"nativeSrc": "15758:97:1",
																"nodeType": "YulFunctionCall",
																"src": "15758:97:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "15750:4:1",
																	"nodeType": "YulTypedName",
																	"src": "15750:4:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "15864:51:1",
															"nodeType": "YulAssignment",
															"src": "15864:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "15895:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "15895:9:1"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "15906:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "15906:8:1"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "15876:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "15876:18:1"
																},
																"nativeSrc": "15876:39:1",
																"nodeType": "YulFunctionCall",
																"src": "15876:39:1"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "15864:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "15864:8:1"
																}
															]
														},
														{
															"nativeSrc": "15924:30:1",
															"nodeType": "YulAssignment",
															"src": "15924:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15937:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "15937:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "15948:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "15948:4:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "15944:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "15944:3:1"
																		},
																		"nativeSrc": "15944:9:1",
																		"nodeType": "YulFunctionCall",
																		"src": "15944:9:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "15933:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "15933:3:1"
																},
																"nativeSrc": "15933:21:1",
																"nodeType": "YulFunctionCall",
																"src": "15933:21:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "15924:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "15924:5:1"
																}
															]
														},
														{
															"nativeSrc": "15963:40:1",
															"nodeType": "YulAssignment",
															"src": "15963:40:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15976:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "15976:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "15987:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "15987:8:1"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "15997:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "15997:4:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "15983:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "15983:3:1"
																		},
																		"nativeSrc": "15983:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "15983:19:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "15973:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "15973:2:1"
																},
																"nativeSrc": "15973:30:1",
																"nodeType": "YulFunctionCall",
																"src": "15973:30:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "15963:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15963:6:1"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "15616:393:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15653:5:1",
														"nodeType": "YulTypedName",
														"src": "15653:5:1",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "15660:10:1",
														"nodeType": "YulTypedName",
														"src": "15660:10:1",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "15672:8:1",
														"nodeType": "YulTypedName",
														"src": "15672:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "15685:6:1",
														"nodeType": "YulTypedName",
														"src": "15685:6:1",
														"type": ""
													}
												],
												"src": "15616:393:1"
											},
											{
												"body": {
													"nativeSrc": "16047:28:1",
													"nodeType": "YulBlock",
													"src": "16047:28:1",
													"statements": [
														{
															"nativeSrc": "16057:12:1",
															"nodeType": "YulAssignment",
															"src": "16057:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "16064:5:1",
																"nodeType": "YulIdentifier",
																"src": "16064:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "16057:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "16057:3:1"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "16015:60:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16033:5:1",
														"nodeType": "YulTypedName",
														"src": "16033:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "16043:3:1",
														"nodeType": "YulTypedName",
														"src": "16043:3:1",
														"type": ""
													}
												],
												"src": "16015:60:1"
											},
											{
												"body": {
													"nativeSrc": "16141:82:1",
													"nodeType": "YulBlock",
													"src": "16141:82:1",
													"statements": [
														{
															"nativeSrc": "16151:66:1",
															"nodeType": "YulAssignment",
															"src": "16151:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "16209:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "16209:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "16191:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "16191:17:1"
																				},
																				"nativeSrc": "16191:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "16191:24:1"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "16182:8:1",
																			"nodeType": "YulIdentifier",
																			"src": "16182:8:1"
																		},
																		"nativeSrc": "16182:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16182:34:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16164:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "16164:17:1"
																},
																"nativeSrc": "16164:53:1",
																"nodeType": "YulFunctionCall",
																"src": "16164:53:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "16151:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "16151:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "16081:142:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16121:5:1",
														"nodeType": "YulTypedName",
														"src": "16121:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "16131:9:1",
														"nodeType": "YulTypedName",
														"src": "16131:9:1",
														"type": ""
													}
												],
												"src": "16081:142:1"
											},
											{
												"body": {
													"nativeSrc": "16276:28:1",
													"nodeType": "YulBlock",
													"src": "16276:28:1",
													"statements": [
														{
															"nativeSrc": "16286:12:1",
															"nodeType": "YulAssignment",
															"src": "16286:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "16293:5:1",
																"nodeType": "YulIdentifier",
																"src": "16293:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "16286:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "16286:3:1"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "16229:75:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16262:5:1",
														"nodeType": "YulTypedName",
														"src": "16262:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "16272:3:1",
														"nodeType": "YulTypedName",
														"src": "16272:3:1",
														"type": ""
													}
												],
												"src": "16229:75:1"
											},
											{
												"body": {
													"nativeSrc": "16386:193:1",
													"nodeType": "YulBlock",
													"src": "16386:193:1",
													"statements": [
														{
															"nativeSrc": "16396:63:1",
															"nodeType": "YulVariableDeclaration",
															"src": "16396:63:1",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "16451:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "16451:7:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "16420:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "16420:30:1"
																},
																"nativeSrc": "16420:39:1",
																"nodeType": "YulFunctionCall",
																"src": "16420:39:1"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "16400:16:1",
																	"nodeType": "YulTypedName",
																	"src": "16400:16:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "16475:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "16475:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "16515:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "16515:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "16509:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "16509:5:1"
																				},
																				"nativeSrc": "16509:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "16509:11:1"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "16522:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "16522:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "16554:16:1",
																						"nodeType": "YulIdentifier",
																						"src": "16554:16:1"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "16530:23:1",
																					"nodeType": "YulIdentifier",
																					"src": "16530:23:1"
																				},
																				"nativeSrc": "16530:41:1",
																				"nodeType": "YulFunctionCall",
																				"src": "16530:41:1"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "16481:27:1",
																			"nodeType": "YulIdentifier",
																			"src": "16481:27:1"
																		},
																		"nativeSrc": "16481:91:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16481:91:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "16468:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16468:6:1"
																},
																"nativeSrc": "16468:105:1",
																"nodeType": "YulFunctionCall",
																"src": "16468:105:1"
															},
															"nativeSrc": "16468:105:1",
															"nodeType": "YulExpressionStatement",
															"src": "16468:105:1"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "16310:269:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "16363:4:1",
														"nodeType": "YulTypedName",
														"src": "16363:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "16369:6:1",
														"nodeType": "YulTypedName",
														"src": "16369:6:1",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "16377:7:1",
														"nodeType": "YulTypedName",
														"src": "16377:7:1",
														"type": ""
													}
												],
												"src": "16310:269:1"
											},
											{
												"body": {
													"nativeSrc": "16634:24:1",
													"nodeType": "YulBlock",
													"src": "16634:24:1",
													"statements": [
														{
															"nativeSrc": "16644:8:1",
															"nodeType": "YulAssignment",
															"src": "16644:8:1",
															"value": {
																"kind": "number",
																"nativeSrc": "16651:1:1",
																"nodeType": "YulLiteral",
																"src": "16651:1:1",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "16644:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "16644:3:1"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "16585:73:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "16630:3:1",
														"nodeType": "YulTypedName",
														"src": "16630:3:1",
														"type": ""
													}
												],
												"src": "16585:73:1"
											},
											{
												"body": {
													"nativeSrc": "16717:136:1",
													"nodeType": "YulBlock",
													"src": "16717:136:1",
													"statements": [
														{
															"nativeSrc": "16727:46:1",
															"nodeType": "YulVariableDeclaration",
															"src": "16727:46:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "16741:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "16741:30:1"
																},
																"nativeSrc": "16741:32:1",
																"nodeType": "YulFunctionCall",
																"src": "16741:32:1"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "16731:6:1",
																	"nodeType": "YulTypedName",
																	"src": "16731:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "16826:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "16826:4:1"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "16832:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "16832:6:1"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "16840:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "16840:6:1"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "16782:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "16782:43:1"
																},
																"nativeSrc": "16782:65:1",
																"nodeType": "YulFunctionCall",
																"src": "16782:65:1"
															},
															"nativeSrc": "16782:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "16782:65:1"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "16664:189:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "16703:4:1",
														"nodeType": "YulTypedName",
														"src": "16703:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "16709:6:1",
														"nodeType": "YulTypedName",
														"src": "16709:6:1",
														"type": ""
													}
												],
												"src": "16664:189:1"
											},
											{
												"body": {
													"nativeSrc": "16909:136:1",
													"nodeType": "YulBlock",
													"src": "16909:136:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "16976:63:1",
																"nodeType": "YulBlock",
																"src": "16976:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "17020:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "17020:5:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17027:1:1",
																					"nodeType": "YulLiteral",
																					"src": "17027:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "16990:29:1",
																				"nodeType": "YulIdentifier",
																				"src": "16990:29:1"
																			},
																			"nativeSrc": "16990:39:1",
																			"nodeType": "YulFunctionCall",
																			"src": "16990:39:1"
																		},
																		"nativeSrc": "16990:39:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "16990:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "16929:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "16929:5:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "16936:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "16936:3:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "16926:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "16926:2:1"
																},
																"nativeSrc": "16926:14:1",
																"nodeType": "YulFunctionCall",
																"src": "16926:14:1"
															},
															"nativeSrc": "16919:120:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "16941:26:1",
																"nodeType": "YulBlock",
																"src": "16941:26:1",
																"statements": [
																	{
																		"nativeSrc": "16943:22:1",
																		"nodeType": "YulAssignment",
																		"src": "16943:22:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "16956:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "16956:5:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16963:1:1",
																					"nodeType": "YulLiteral",
																					"src": "16963:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "16952:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "16952:3:1"
																			},
																			"nativeSrc": "16952:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "16952:13:1"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "16943:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "16943:5:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "16923:2:1",
																"nodeType": "YulBlock",
																"src": "16923:2:1",
																"statements": []
															},
															"src": "16919:120:1"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "16859:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "16897:5:1",
														"nodeType": "YulTypedName",
														"src": "16897:5:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "16904:3:1",
														"nodeType": "YulTypedName",
														"src": "16904:3:1",
														"type": ""
													}
												],
												"src": "16859:186:1"
											},
											{
												"body": {
													"nativeSrc": "17130:464:1",
													"nodeType": "YulBlock",
													"src": "17130:464:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "17156:431:1",
																"nodeType": "YulBlock",
																"src": "17156:431:1",
																"statements": [
																	{
																		"nativeSrc": "17170:54:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "17170:54:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "17218:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "17218:5:1"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "17186:31:1",
																				"nodeType": "YulIdentifier",
																				"src": "17186:31:1"
																			},
																			"nativeSrc": "17186:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "17186:38:1"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "17174:8:1",
																				"nodeType": "YulTypedName",
																				"src": "17174:8:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "17237:63:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "17237:63:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "17260:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "17260:8:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "17288:10:1",
																							"nodeType": "YulIdentifier",
																							"src": "17288:10:1"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "17270:17:1",
																						"nodeType": "YulIdentifier",
																						"src": "17270:17:1"
																					},
																					"nativeSrc": "17270:29:1",
																					"nodeType": "YulFunctionCall",
																					"src": "17270:29:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "17256:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "17256:3:1"
																			},
																			"nativeSrc": "17256:44:1",
																			"nodeType": "YulFunctionCall",
																			"src": "17256:44:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "17241:11:1",
																				"nodeType": "YulTypedName",
																				"src": "17241:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "17457:27:1",
																			"nodeType": "YulBlock",
																			"src": "17457:27:1",
																			"statements": [
																				{
																					"nativeSrc": "17459:23:1",
																					"nodeType": "YulAssignment",
																					"src": "17459:23:1",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "17474:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "17474:8:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "17459:11:1",
																							"nodeType": "YulIdentifier",
																							"src": "17459:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "17441:10:1",
																					"nodeType": "YulIdentifier",
																					"src": "17441:10:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17453:2:1",
																					"nodeType": "YulLiteral",
																					"src": "17453:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "17438:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "17438:2:1"
																			},
																			"nativeSrc": "17438:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "17438:18:1"
																		},
																		"nativeSrc": "17435:49:1",
																		"nodeType": "YulIf",
																		"src": "17435:49:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "17526:11:1",
																					"nodeType": "YulIdentifier",
																					"src": "17526:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "17543:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "17543:8:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "17571:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "17571:3:1"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "17553:17:1",
																								"nodeType": "YulIdentifier",
																								"src": "17553:17:1"
																							},
																							"nativeSrc": "17553:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "17553:22:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "17539:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "17539:3:1"
																					},
																					"nativeSrc": "17539:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "17539:37:1"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "17497:28:1",
																				"nodeType": "YulIdentifier",
																				"src": "17497:28:1"
																			},
																			"nativeSrc": "17497:80:1",
																			"nodeType": "YulFunctionCall",
																			"src": "17497:80:1"
																		},
																		"nativeSrc": "17497:80:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "17497:80:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "17147:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "17147:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17152:2:1",
																		"nodeType": "YulLiteral",
																		"src": "17152:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17144:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "17144:2:1"
																},
																"nativeSrc": "17144:11:1",
																"nodeType": "YulFunctionCall",
																"src": "17144:11:1"
															},
															"nativeSrc": "17141:446:1",
															"nodeType": "YulIf",
															"src": "17141:446:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "17051:543:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "17106:5:1",
														"nodeType": "YulTypedName",
														"src": "17106:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "17113:3:1",
														"nodeType": "YulTypedName",
														"src": "17113:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "17118:10:1",
														"nodeType": "YulTypedName",
														"src": "17118:10:1",
														"type": ""
													}
												],
												"src": "17051:543:1"
											},
											{
												"body": {
													"nativeSrc": "17663:54:1",
													"nodeType": "YulBlock",
													"src": "17663:54:1",
													"statements": [
														{
															"nativeSrc": "17673:37:1",
															"nodeType": "YulAssignment",
															"src": "17673:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "17698:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "17698:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "17704:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "17704:5:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "17694:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "17694:3:1"
																},
																"nativeSrc": "17694:16:1",
																"nodeType": "YulFunctionCall",
																"src": "17694:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "17673:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "17673:8:1"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "17600:117:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "17638:4:1",
														"nodeType": "YulTypedName",
														"src": "17638:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "17644:5:1",
														"nodeType": "YulTypedName",
														"src": "17644:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "17654:8:1",
														"nodeType": "YulTypedName",
														"src": "17654:8:1",
														"type": ""
													}
												],
												"src": "17600:117:1"
											},
											{
												"body": {
													"nativeSrc": "17774:118:1",
													"nodeType": "YulBlock",
													"src": "17774:118:1",
													"statements": [
														{
															"nativeSrc": "17784:68:1",
															"nodeType": "YulVariableDeclaration",
															"src": "17784:68:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "17833:1:1",
																						"nodeType": "YulLiteral",
																						"src": "17833:1:1",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "17836:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "17836:5:1"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "17829:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "17829:3:1"
																				},
																				"nativeSrc": "17829:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "17829:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "17848:1:1",
																						"nodeType": "YulLiteral",
																						"src": "17848:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "17844:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "17844:3:1"
																				},
																				"nativeSrc": "17844:6:1",
																				"nodeType": "YulFunctionCall",
																				"src": "17844:6:1"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "17800:28:1",
																			"nodeType": "YulIdentifier",
																			"src": "17800:28:1"
																		},
																		"nativeSrc": "17800:51:1",
																		"nodeType": "YulFunctionCall",
																		"src": "17800:51:1"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "17796:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "17796:3:1"
																},
																"nativeSrc": "17796:56:1",
																"nodeType": "YulFunctionCall",
																"src": "17796:56:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "17788:4:1",
																	"nodeType": "YulTypedName",
																	"src": "17788:4:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "17861:25:1",
															"nodeType": "YulAssignment",
															"src": "17861:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "17875:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "17875:4:1"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "17881:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "17881:4:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "17871:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "17871:3:1"
																},
																"nativeSrc": "17871:15:1",
																"nodeType": "YulFunctionCall",
																"src": "17871:15:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "17861:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "17861:6:1"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "17723:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "17751:4:1",
														"nodeType": "YulTypedName",
														"src": "17751:4:1",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "17757:5:1",
														"nodeType": "YulTypedName",
														"src": "17757:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "17767:6:1",
														"nodeType": "YulTypedName",
														"src": "17767:6:1",
														"type": ""
													}
												],
												"src": "17723:169:1"
											},
											{
												"body": {
													"nativeSrc": "17978:214:1",
													"nodeType": "YulBlock",
													"src": "17978:214:1",
													"statements": [
														{
															"nativeSrc": "18111:37:1",
															"nodeType": "YulAssignment",
															"src": "18111:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "18138:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "18138:4:1"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "18144:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "18144:3:1"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "18119:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "18119:18:1"
																},
																"nativeSrc": "18119:29:1",
																"nodeType": "YulFunctionCall",
																"src": "18119:29:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "18111:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "18111:4:1"
																}
															]
														},
														{
															"nativeSrc": "18157:29:1",
															"nodeType": "YulAssignment",
															"src": "18157:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "18168:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "18168:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "18178:1:1",
																				"nodeType": "YulLiteral",
																				"src": "18178:1:1",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "18181:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "18181:3:1"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "18174:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "18174:3:1"
																		},
																		"nativeSrc": "18174:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "18174:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "18165:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "18165:2:1"
																},
																"nativeSrc": "18165:21:1",
																"nodeType": "YulFunctionCall",
																"src": "18165:21:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "18157:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "18157:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "17897:295:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "17959:4:1",
														"nodeType": "YulTypedName",
														"src": "17959:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "17965:3:1",
														"nodeType": "YulTypedName",
														"src": "17965:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "17973:4:1",
														"nodeType": "YulTypedName",
														"src": "17973:4:1",
														"type": ""
													}
												],
												"src": "17897:295:1"
											},
											{
												"body": {
													"nativeSrc": "18289:1303:1",
													"nodeType": "YulBlock",
													"src": "18289:1303:1",
													"statements": [
														{
															"nativeSrc": "18300:51:1",
															"nodeType": "YulVariableDeclaration",
															"src": "18300:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "18347:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "18347:3:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "18314:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "18314:32:1"
																},
																"nativeSrc": "18314:37:1",
																"nodeType": "YulFunctionCall",
																"src": "18314:37:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "18304:6:1",
																	"nodeType": "YulTypedName",
																	"src": "18304:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18436:22:1",
																"nodeType": "YulBlock",
																"src": "18436:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "18438:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "18438:16:1"
																			},
																			"nativeSrc": "18438:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "18438:18:1"
																		},
																		"nativeSrc": "18438:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "18438:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "18408:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "18408:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18416:18:1",
																		"nodeType": "YulLiteral",
																		"src": "18416:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "18405:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "18405:2:1"
																},
																"nativeSrc": "18405:30:1",
																"nodeType": "YulFunctionCall",
																"src": "18405:30:1"
															},
															"nativeSrc": "18402:56:1",
															"nodeType": "YulIf",
															"src": "18402:56:1"
														},
														{
															"nativeSrc": "18468:52:1",
															"nodeType": "YulVariableDeclaration",
															"src": "18468:52:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "18514:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "18514:4:1"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "18508:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "18508:5:1"
																		},
																		"nativeSrc": "18508:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "18508:11:1"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "18482:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "18482:25:1"
																},
																"nativeSrc": "18482:38:1",
																"nodeType": "YulFunctionCall",
																"src": "18482:38:1"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "18472:6:1",
																	"nodeType": "YulTypedName",
																	"src": "18472:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "18613:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "18613:4:1"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "18619:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "18619:6:1"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "18627:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "18627:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "18567:45:1",
																	"nodeType": "YulIdentifier",
																	"src": "18567:45:1"
																},
																"nativeSrc": "18567:67:1",
																"nodeType": "YulFunctionCall",
																"src": "18567:67:1"
															},
															"nativeSrc": "18567:67:1",
															"nodeType": "YulExpressionStatement",
															"src": "18567:67:1"
														},
														{
															"nativeSrc": "18644:18:1",
															"nodeType": "YulVariableDeclaration",
															"src": "18644:18:1",
															"value": {
																"kind": "number",
																"nativeSrc": "18661:1:1",
																"nodeType": "YulLiteral",
																"src": "18661:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "18648:9:1",
																	"nodeType": "YulTypedName",
																	"src": "18648:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "18672:17:1",
															"nodeType": "YulAssignment",
															"src": "18672:17:1",
															"value": {
																"kind": "number",
																"nativeSrc": "18685:4:1",
																"nodeType": "YulLiteral",
																"src": "18685:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "18672:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "18672:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "18736:611:1",
																		"nodeType": "YulBlock",
																		"src": "18736:611:1",
																		"statements": [
																			{
																				"nativeSrc": "18750:37:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "18750:37:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "18769:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "18769:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "18781:4:1",
																									"nodeType": "YulLiteral",
																									"src": "18781:4:1",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "18777:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "18777:3:1"
																							},
																							"nativeSrc": "18777:9:1",
																							"nodeType": "YulFunctionCall",
																							"src": "18777:9:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "18765:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "18765:3:1"
																					},
																					"nativeSrc": "18765:22:1",
																					"nodeType": "YulFunctionCall",
																					"src": "18765:22:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "18754:7:1",
																						"nodeType": "YulTypedName",
																						"src": "18754:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "18801:51:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "18801:51:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "18847:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "18847:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "18815:31:1",
																						"nodeType": "YulIdentifier",
																						"src": "18815:31:1"
																					},
																					"nativeSrc": "18815:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "18815:37:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "18805:6:1",
																						"nodeType": "YulTypedName",
																						"src": "18805:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "18865:10:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "18865:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "18874:1:1",
																					"nodeType": "YulLiteral",
																					"src": "18874:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "18869:1:1",
																						"nodeType": "YulTypedName",
																						"src": "18869:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "18933:163:1",
																					"nodeType": "YulBlock",
																					"src": "18933:163:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "18958:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "18958:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "18976:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "18976:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "18981:9:1",
																														"nodeType": "YulIdentifier",
																														"src": "18981:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "18972:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "18972:3:1"
																												},
																												"nativeSrc": "18972:19:1",
																												"nodeType": "YulFunctionCall",
																												"src": "18972:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "18966:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "18966:5:1"
																										},
																										"nativeSrc": "18966:26:1",
																										"nodeType": "YulFunctionCall",
																										"src": "18966:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "18951:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "18951:6:1"
																								},
																								"nativeSrc": "18951:42:1",
																								"nodeType": "YulFunctionCall",
																								"src": "18951:42:1"
																							},
																							"nativeSrc": "18951:42:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "18951:42:1"
																						},
																						{
																							"nativeSrc": "19010:24:1",
																							"nodeType": "YulAssignment",
																							"src": "19010:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "19024:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "19024:6:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "19032:1:1",
																										"nodeType": "YulLiteral",
																										"src": "19032:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "19020:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "19020:3:1"
																								},
																								"nativeSrc": "19020:14:1",
																								"nodeType": "YulFunctionCall",
																								"src": "19020:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "19010:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "19010:6:1"
																								}
																							]
																						},
																						{
																							"nativeSrc": "19051:31:1",
																							"nodeType": "YulAssignment",
																							"src": "19051:31:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "19068:9:1",
																										"nodeType": "YulIdentifier",
																										"src": "19068:9:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "19079:2:1",
																										"nodeType": "YulLiteral",
																										"src": "19079:2:1",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "19064:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "19064:3:1"
																								},
																								"nativeSrc": "19064:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "19064:18:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "19051:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "19051:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "18899:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "18899:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "18902:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "18902:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "18896:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "18896:2:1"
																					},
																					"nativeSrc": "18896:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "18896:14:1"
																				},
																				"nativeSrc": "18888:208:1",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "18911:21:1",
																					"nodeType": "YulBlock",
																					"src": "18911:21:1",
																					"statements": [
																						{
																							"nativeSrc": "18913:17:1",
																							"nodeType": "YulAssignment",
																							"src": "18913:17:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "18922:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "18922:1:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "18925:4:1",
																										"nodeType": "YulLiteral",
																										"src": "18925:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "18918:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "18918:3:1"
																								},
																								"nativeSrc": "18918:12:1",
																								"nodeType": "YulFunctionCall",
																								"src": "18918:12:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "18913:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "18913:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "18892:3:1",
																					"nodeType": "YulBlock",
																					"src": "18892:3:1",
																					"statements": []
																				},
																				"src": "18888:208:1"
																			},
																			{
																				"body": {
																					"nativeSrc": "19132:156:1",
																					"nodeType": "YulBlock",
																					"src": "19132:156:1",
																					"statements": [
																						{
																							"nativeSrc": "19150:43:1",
																							"nodeType": "YulVariableDeclaration",
																							"src": "19150:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "19177:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "19177:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "19182:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "19182:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "19173:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "19173:3:1"
																										},
																										"nativeSrc": "19173:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "19173:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "19167:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "19167:5:1"
																								},
																								"nativeSrc": "19167:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "19167:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "19154:9:1",
																									"nodeType": "YulTypedName",
																									"src": "19154:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "19217:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "19217:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "19244:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "19244:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "19259:6:1",
																														"nodeType": "YulIdentifier",
																														"src": "19259:6:1"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "19267:4:1",
																														"nodeType": "YulLiteral",
																														"src": "19267:4:1",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "19255:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "19255:3:1"
																												},
																												"nativeSrc": "19255:17:1",
																												"nodeType": "YulFunctionCall",
																												"src": "19255:17:1"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "19225:18:1",
																											"nodeType": "YulIdentifier",
																											"src": "19225:18:1"
																										},
																										"nativeSrc": "19225:48:1",
																										"nodeType": "YulFunctionCall",
																										"src": "19225:48:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "19210:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "19210:6:1"
																								},
																								"nativeSrc": "19210:64:1",
																								"nodeType": "YulFunctionCall",
																								"src": "19210:64:1"
																							},
																							"nativeSrc": "19210:64:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "19210:64:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "19115:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "19115:7:1"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "19124:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "19124:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "19112:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "19112:2:1"
																					},
																					"nativeSrc": "19112:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "19112:19:1"
																				},
																				"nativeSrc": "19109:179:1",
																				"nodeType": "YulIf",
																				"src": "19109:179:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "19308:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "19308:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "19322:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "19322:6:1"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "19330:1:1",
																											"nodeType": "YulLiteral",
																											"src": "19330:1:1",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "19318:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "19318:3:1"
																									},
																									"nativeSrc": "19318:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "19318:14:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "19334:1:1",
																									"nodeType": "YulLiteral",
																									"src": "19334:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "19314:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "19314:3:1"
																							},
																							"nativeSrc": "19314:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "19314:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "19301:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "19301:6:1"
																					},
																					"nativeSrc": "19301:36:1",
																					"nodeType": "YulFunctionCall",
																					"src": "19301:36:1"
																				},
																				"nativeSrc": "19301:36:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "19301:36:1"
																			}
																		]
																	},
																	"nativeSrc": "18729:618:1",
																	"nodeType": "YulCase",
																	"src": "18729:618:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "18734:1:1",
																		"nodeType": "YulLiteral",
																		"src": "18734:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "19364:222:1",
																		"nodeType": "YulBlock",
																		"src": "19364:222:1",
																		"statements": [
																			{
																				"nativeSrc": "19378:14:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "19378:14:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "19391:1:1",
																					"nodeType": "YulLiteral",
																					"src": "19391:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "19382:5:1",
																						"nodeType": "YulTypedName",
																						"src": "19382:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "19415:67:1",
																					"nodeType": "YulBlock",
																					"src": "19415:67:1",
																					"statements": [
																						{
																							"nativeSrc": "19433:35:1",
																							"nodeType": "YulAssignment",
																							"src": "19433:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "19452:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "19452:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "19457:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "19457:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "19448:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "19448:3:1"
																										},
																										"nativeSrc": "19448:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "19448:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "19442:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "19442:5:1"
																								},
																								"nativeSrc": "19442:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "19442:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "19433:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "19433:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "19408:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "19408:6:1"
																				},
																				"nativeSrc": "19405:77:1",
																				"nodeType": "YulIf",
																				"src": "19405:77:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "19502:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "19502:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "19561:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "19561:5:1"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "19568:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "19568:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "19508:52:1",
																								"nodeType": "YulIdentifier",
																								"src": "19508:52:1"
																							},
																							"nativeSrc": "19508:67:1",
																							"nodeType": "YulFunctionCall",
																							"src": "19508:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "19495:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "19495:6:1"
																					},
																					"nativeSrc": "19495:81:1",
																					"nodeType": "YulFunctionCall",
																					"src": "19495:81:1"
																				},
																				"nativeSrc": "19495:81:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "19495:81:1"
																			}
																		]
																	},
																	"nativeSrc": "19356:230:1",
																	"nodeType": "YulCase",
																	"src": "19356:230:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "18709:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "18709:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18717:2:1",
																		"nodeType": "YulLiteral",
																		"src": "18717:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "18706:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "18706:2:1"
																},
																"nativeSrc": "18706:14:1",
																"nodeType": "YulFunctionCall",
																"src": "18706:14:1"
															},
															"nativeSrc": "18699:887:1",
															"nodeType": "YulSwitch",
															"src": "18699:887:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "18197:1395:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "18278:4:1",
														"nodeType": "YulTypedName",
														"src": "18278:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "18284:3:1",
														"nodeType": "YulTypedName",
														"src": "18284:3:1",
														"type": ""
													}
												],
												"src": "18197:1395:1"
											},
											{
												"body": {
													"nativeSrc": "19656:40:1",
													"nodeType": "YulBlock",
													"src": "19656:40:1",
													"statements": [
														{
															"nativeSrc": "19667:22:1",
															"nodeType": "YulAssignment",
															"src": "19667:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19683:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "19683:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "19677:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "19677:5:1"
																},
																"nativeSrc": "19677:12:1",
																"nodeType": "YulFunctionCall",
																"src": "19677:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "19667:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "19667:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "19598:98:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19639:5:1",
														"nodeType": "YulTypedName",
														"src": "19639:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "19649:6:1",
														"nodeType": "YulTypedName",
														"src": "19649:6:1",
														"type": ""
													}
												],
												"src": "19598:98:1"
											},
											{
												"body": {
													"nativeSrc": "19797:73:1",
													"nodeType": "YulBlock",
													"src": "19797:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19814:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "19814:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19819:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "19819:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19807:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "19807:6:1"
																},
																"nativeSrc": "19807:19:1",
																"nodeType": "YulFunctionCall",
																"src": "19807:19:1"
															},
															"nativeSrc": "19807:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "19807:19:1"
														},
														{
															"nativeSrc": "19835:29:1",
															"nodeType": "YulAssignment",
															"src": "19835:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19854:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "19854:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19859:4:1",
																		"nodeType": "YulLiteral",
																		"src": "19859:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19850:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "19850:3:1"
																},
																"nativeSrc": "19850:14:1",
																"nodeType": "YulFunctionCall",
																"src": "19850:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "19835:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "19835:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "19702:168:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19769:3:1",
														"nodeType": "YulTypedName",
														"src": "19769:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "19774:6:1",
														"nodeType": "YulTypedName",
														"src": "19774:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "19785:11:1",
														"nodeType": "YulTypedName",
														"src": "19785:11:1",
														"type": ""
													}
												],
												"src": "19702:168:1"
											},
											{
												"body": {
													"nativeSrc": "19966:283:1",
													"nodeType": "YulBlock",
													"src": "19966:283:1",
													"statements": [
														{
															"nativeSrc": "19976:52:1",
															"nodeType": "YulVariableDeclaration",
															"src": "19976:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20022:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "20022:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "19990:31:1",
																	"nodeType": "YulIdentifier",
																	"src": "19990:31:1"
																},
																"nativeSrc": "19990:38:1",
																"nodeType": "YulFunctionCall",
																"src": "19990:38:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "19980:6:1",
																	"nodeType": "YulTypedName",
																	"src": "19980:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "20037:77:1",
															"nodeType": "YulAssignment",
															"src": "20037:77:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20102:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "20102:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "20107:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "20107:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "20044:57:1",
																	"nodeType": "YulIdentifier",
																	"src": "20044:57:1"
																},
																"nativeSrc": "20044:70:1",
																"nodeType": "YulFunctionCall",
																"src": "20044:70:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20037:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "20037:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "20162:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "20162:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20169:4:1",
																				"nodeType": "YulLiteral",
																				"src": "20169:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20158:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "20158:3:1"
																		},
																		"nativeSrc": "20158:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "20158:16:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "20176:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "20176:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "20181:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "20181:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "20123:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "20123:34:1"
																},
																"nativeSrc": "20123:65:1",
																"nodeType": "YulFunctionCall",
																"src": "20123:65:1"
															},
															"nativeSrc": "20123:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "20123:65:1"
														},
														{
															"nativeSrc": "20197:46:1",
															"nodeType": "YulAssignment",
															"src": "20197:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20208:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "20208:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "20235:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "20235:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "20213:21:1",
																			"nodeType": "YulIdentifier",
																			"src": "20213:21:1"
																		},
																		"nativeSrc": "20213:29:1",
																		"nodeType": "YulFunctionCall",
																		"src": "20213:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20204:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "20204:3:1"
																},
																"nativeSrc": "20204:39:1",
																"nodeType": "YulFunctionCall",
																"src": "20204:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20197:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "20197:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "19876:373:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19947:5:1",
														"nodeType": "YulTypedName",
														"src": "19947:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "19954:3:1",
														"nodeType": "YulTypedName",
														"src": "19954:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19962:3:1",
														"nodeType": "YulTypedName",
														"src": "19962:3:1",
														"type": ""
													}
												],
												"src": "19876:373:1"
											},
											{
												"body": {
													"nativeSrc": "20455:440:1",
													"nodeType": "YulBlock",
													"src": "20455:440:1",
													"statements": [
														{
															"nativeSrc": "20465:27:1",
															"nodeType": "YulAssignment",
															"src": "20465:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20477:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "20477:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20488:3:1",
																		"nodeType": "YulLiteral",
																		"src": "20488:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20473:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "20473:3:1"
																},
																"nativeSrc": "20473:19:1",
																"nodeType": "YulFunctionCall",
																"src": "20473:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20465:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "20465:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20546:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "20546:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20559:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "20559:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20570:1:1",
																				"nodeType": "YulLiteral",
																				"src": "20570:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20555:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "20555:3:1"
																		},
																		"nativeSrc": "20555:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "20555:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20502:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "20502:43:1"
																},
																"nativeSrc": "20502:71:1",
																"nodeType": "YulFunctionCall",
																"src": "20502:71:1"
															},
															"nativeSrc": "20502:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "20502:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20627:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "20627:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20640:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "20640:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20651:2:1",
																				"nodeType": "YulLiteral",
																				"src": "20651:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20636:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "20636:3:1"
																		},
																		"nativeSrc": "20636:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "20636:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20583:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "20583:43:1"
																},
																"nativeSrc": "20583:72:1",
																"nodeType": "YulFunctionCall",
																"src": "20583:72:1"
															},
															"nativeSrc": "20583:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "20583:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "20709:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "20709:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20722:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "20722:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20733:2:1",
																				"nodeType": "YulLiteral",
																				"src": "20733:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20718:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "20718:3:1"
																		},
																		"nativeSrc": "20718:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "20718:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20665:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "20665:43:1"
																},
																"nativeSrc": "20665:72:1",
																"nodeType": "YulFunctionCall",
																"src": "20665:72:1"
															},
															"nativeSrc": "20665:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "20665:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20758:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "20758:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20769:2:1",
																				"nodeType": "YulLiteral",
																				"src": "20769:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20754:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "20754:3:1"
																		},
																		"nativeSrc": "20754:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "20754:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20778:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "20778:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20784:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "20784:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20774:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "20774:3:1"
																		},
																		"nativeSrc": "20774:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "20774:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20747:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "20747:6:1"
																},
																"nativeSrc": "20747:48:1",
																"nodeType": "YulFunctionCall",
																"src": "20747:48:1"
															},
															"nativeSrc": "20747:48:1",
															"nodeType": "YulExpressionStatement",
															"src": "20747:48:1"
														},
														{
															"nativeSrc": "20804:84:1",
															"nodeType": "YulAssignment",
															"src": "20804:84:1",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "20874:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "20874:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "20883:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "20883:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "20812:61:1",
																	"nodeType": "YulIdentifier",
																	"src": "20812:61:1"
																},
																"nativeSrc": "20812:76:1",
																"nodeType": "YulFunctionCall",
																"src": "20812:76:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20804:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "20804:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "20255:640:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20403:9:1",
														"nodeType": "YulTypedName",
														"src": "20403:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "20415:6:1",
														"nodeType": "YulTypedName",
														"src": "20415:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "20423:6:1",
														"nodeType": "YulTypedName",
														"src": "20423:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20431:6:1",
														"nodeType": "YulTypedName",
														"src": "20431:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20439:6:1",
														"nodeType": "YulTypedName",
														"src": "20439:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20450:4:1",
														"nodeType": "YulTypedName",
														"src": "20450:4:1",
														"type": ""
													}
												],
												"src": "20255:640:1"
											},
											{
												"body": {
													"nativeSrc": "20963:79:1",
													"nodeType": "YulBlock",
													"src": "20963:79:1",
													"statements": [
														{
															"nativeSrc": "20973:22:1",
															"nodeType": "YulAssignment",
															"src": "20973:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "20988:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "20988:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "20982:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "20982:5:1"
																},
																"nativeSrc": "20982:13:1",
																"nodeType": "YulFunctionCall",
																"src": "20982:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "20973:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "20973:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21030:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "21030:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "21004:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "21004:25:1"
																},
																"nativeSrc": "21004:32:1",
																"nodeType": "YulFunctionCall",
																"src": "21004:32:1"
															},
															"nativeSrc": "21004:32:1",
															"nodeType": "YulExpressionStatement",
															"src": "21004:32:1"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "20901:141:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "20941:6:1",
														"nodeType": "YulTypedName",
														"src": "20941:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "20949:3:1",
														"nodeType": "YulTypedName",
														"src": "20949:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "20957:5:1",
														"nodeType": "YulTypedName",
														"src": "20957:5:1",
														"type": ""
													}
												],
												"src": "20901:141:1"
											},
											{
												"body": {
													"nativeSrc": "21124:273:1",
													"nodeType": "YulBlock",
													"src": "21124:273:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "21170:83:1",
																"nodeType": "YulBlock",
																"src": "21170:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "21172:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "21172:77:1"
																			},
																			"nativeSrc": "21172:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "21172:79:1"
																		},
																		"nativeSrc": "21172:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "21172:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "21145:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "21145:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21154:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "21154:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21141:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "21141:3:1"
																		},
																		"nativeSrc": "21141:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "21141:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21166:2:1",
																		"nodeType": "YulLiteral",
																		"src": "21166:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "21137:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "21137:3:1"
																},
																"nativeSrc": "21137:32:1",
																"nodeType": "YulFunctionCall",
																"src": "21137:32:1"
															},
															"nativeSrc": "21134:119:1",
															"nodeType": "YulIf",
															"src": "21134:119:1"
														},
														{
															"nativeSrc": "21263:127:1",
															"nodeType": "YulBlock",
															"src": "21263:127:1",
															"statements": [
																{
																	"nativeSrc": "21278:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "21278:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "21292:1:1",
																		"nodeType": "YulLiteral",
																		"src": "21292:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "21282:6:1",
																			"nodeType": "YulTypedName",
																			"src": "21282:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "21307:73:1",
																	"nodeType": "YulAssignment",
																	"src": "21307:73:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "21352:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "21352:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "21363:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "21363:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "21348:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "21348:3:1"
																				},
																				"nativeSrc": "21348:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "21348:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "21372:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "21372:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "21317:30:1",
																			"nodeType": "YulIdentifier",
																			"src": "21317:30:1"
																		},
																		"nativeSrc": "21317:63:1",
																		"nodeType": "YulFunctionCall",
																		"src": "21317:63:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "21307:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "21307:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "21048:349:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21094:9:1",
														"nodeType": "YulTypedName",
														"src": "21094:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "21105:7:1",
														"nodeType": "YulTypedName",
														"src": "21105:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "21117:6:1",
														"nodeType": "YulTypedName",
														"src": "21117:6:1",
														"type": ""
													}
												],
												"src": "21048:349:1"
											},
											{
												"body": {
													"nativeSrc": "21587:251:1",
													"nodeType": "YulBlock",
													"src": "21587:251:1",
													"statements": [
														{
															"nativeSrc": "21598:102:1",
															"nodeType": "YulAssignment",
															"src": "21598:102:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21687:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "21687:6:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "21696:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "21696:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "21605:81:1",
																	"nodeType": "YulIdentifier",
																	"src": "21605:81:1"
																},
																"nativeSrc": "21605:95:1",
																"nodeType": "YulFunctionCall",
																"src": "21605:95:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21598:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "21598:3:1"
																}
															]
														},
														{
															"nativeSrc": "21710:102:1",
															"nodeType": "YulAssignment",
															"src": "21710:102:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "21799:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "21799:6:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "21808:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "21808:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "21717:81:1",
																	"nodeType": "YulIdentifier",
																	"src": "21717:81:1"
																},
																"nativeSrc": "21717:95:1",
																"nodeType": "YulFunctionCall",
																"src": "21717:95:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21710:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "21710:3:1"
																}
															]
														},
														{
															"nativeSrc": "21822:10:1",
															"nodeType": "YulAssignment",
															"src": "21822:10:1",
															"value": {
																"name": "pos",
																"nativeSrc": "21829:3:1",
																"nodeType": "YulIdentifier",
																"src": "21829:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21822:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "21822:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "21403:435:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21558:3:1",
														"nodeType": "YulTypedName",
														"src": "21558:3:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21564:6:1",
														"nodeType": "YulTypedName",
														"src": "21564:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21572:6:1",
														"nodeType": "YulTypedName",
														"src": "21572:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21583:3:1",
														"nodeType": "YulTypedName",
														"src": "21583:3:1",
														"type": ""
													}
												],
												"src": "21403:435:1"
											},
											{
												"body": {
													"nativeSrc": "21970:206:1",
													"nodeType": "YulBlock",
													"src": "21970:206:1",
													"statements": [
														{
															"nativeSrc": "21980:26:1",
															"nodeType": "YulAssignment",
															"src": "21980:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21992:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "21992:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22003:2:1",
																		"nodeType": "YulLiteral",
																		"src": "22003:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21988:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "21988:3:1"
																},
																"nativeSrc": "21988:18:1",
																"nodeType": "YulFunctionCall",
																"src": "21988:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21980:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "21980:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "22060:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "22060:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22073:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "22073:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22084:1:1",
																				"nodeType": "YulLiteral",
																				"src": "22084:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22069:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "22069:3:1"
																		},
																		"nativeSrc": "22069:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "22069:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "22016:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "22016:43:1"
																},
																"nativeSrc": "22016:71:1",
																"nodeType": "YulFunctionCall",
																"src": "22016:71:1"
															},
															"nativeSrc": "22016:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "22016:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "22141:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "22141:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22154:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "22154:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22165:2:1",
																				"nodeType": "YulLiteral",
																				"src": "22165:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22150:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "22150:3:1"
																		},
																		"nativeSrc": "22150:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "22150:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "22097:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "22097:43:1"
																},
																"nativeSrc": "22097:72:1",
																"nodeType": "YulFunctionCall",
																"src": "22097:72:1"
															},
															"nativeSrc": "22097:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "22097:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "21844:332:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21934:9:1",
														"nodeType": "YulTypedName",
														"src": "21934:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21946:6:1",
														"nodeType": "YulTypedName",
														"src": "21946:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21954:6:1",
														"nodeType": "YulTypedName",
														"src": "21954:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21965:4:1",
														"nodeType": "YulTypedName",
														"src": "21965:4:1",
														"type": ""
													}
												],
												"src": "21844:332:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_48aa738ac532b148333561b892fe987b033109920314b49ab0b9845e80f27229(memPtr) {\n\n        mstore(add(memPtr, 0), \"Reentrant call detected\")\n\n    }\n\n    function abi_encode_t_stringliteral_48aa738ac532b148333561b892fe987b033109920314b49ab0b9845e80f27229_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_48aa738ac532b148333561b892fe987b033109920314b49ab0b9845e80f27229(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_48aa738ac532b148333561b892fe987b033109920314b49ab0b9845e80f27229__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_48aa738ac532b148333561b892fe987b033109920314b49ab0b9845e80f27229_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972_to_t_bytes5_nonPadded_inplace_fromStack(pos) {\n        mstore(pos, \".json\")\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972__to_t_string_memory_ptr_t_bytes5__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        abi_encode_t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972_to_t_bytes5_nonPadded_inplace_fromStack( pos)\n        pos := add(pos, 5)\n\n        end := pos\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610114575f3560e01c806370a08231116100a0578063a22cb4651161006f578063a22cb465146102c8578063b88d4fde146102e4578063c87b56dd14610300578063e985e9c514610330578063f2fde38b1461036057610114565b806370a0823114610252578063715018a6146102825780638da5cb5b1461028c57806395d89b41146102aa57610114565b806323b872dd116100e757806323b872dd146101b257806340d097c3146101ce57806342842e0e146101ea57806342966c68146102065780636352211e1461022257610114565b806301ffc9a71461011857806306fdde0314610148578063081812fc14610166578063095ea7b314610196575b5f80fd5b610132600480360381019061012d9190611ab0565b61037c565b60405161013f9190611af5565b60405180910390f35b61015061038d565b60405161015d9190611b98565b60405180910390f35b610180600480360381019061017b9190611beb565b61041c565b60405161018d9190611c55565b60405180910390f35b6101b060048036038101906101ab9190611c98565b610437565b005b6101cc60048036038101906101c79190611cd6565b61044d565b005b6101e860048036038101906101e39190611d26565b61054c565b005b61020460048036038101906101ff9190611cd6565b610631565b005b610220600480360381019061021b9190611beb565b610650565b005b61023c60048036038101906102379190611beb565b610666565b6040516102499190611c55565b60405180910390f35b61026c60048036038101906102679190611d26565b610677565b6040516102799190611d60565b60405180910390f35b61028a61072d565b005b610294610740565b6040516102a19190611c55565b60405180910390f35b6102b2610768565b6040516102bf9190611b98565b60405180910390f35b6102e260048036038101906102dd9190611da3565b6107f8565b005b6102fe60048036038101906102f99190611f0d565b61080e565b005b61031a60048036038101906103159190611beb565b61082b565b6040516103279190611b98565b60405180910390f35b61034a60048036038101906103459190611f8d565b61083d565b6040516103579190611af5565b60405180910390f35b61037a60048036038101906103759190611d26565b6108cb565b005b5f6103868261094f565b9050919050565b60605f805461039b90611ff8565b80601f01602080910402602001604051908101604052809291908181526020018280546103c790611ff8565b80156104125780601f106103e957610100808354040283529160200191610412565b820191905f5260205f20905b8154815290600101906020018083116103f557829003601f168201915b5050505050905090565b5f610426826109af565b5061043082610a35565b9050919050565b6104498282610444610a6e565b610a75565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036104bd575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016104b49190611c55565b60405180910390fd5b5f6104d083836104cb610a6e565b610a87565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610546578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161053d93929190612028565b60405180910390fd5b50505050565b60095f9054906101000a900460ff161561059b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610592906120a7565b60405180910390fd5b600160095f6101000a81548160ff0219169083151502179055506105bd610c92565b5f6105c86008610d19565b90506105d46008610d25565b5f6105de82610d39565b6040516020016105ee9190612125565b60405160208183030381529060405290506106098282610e92565b6106138383610eec565b50505f60095f6101000a81548160ff02191690831515021790555050565b61064b83838360405180602001604052805f81525061080e565b505050565b6106625f8261065d610a6e565b610a87565b5050565b5f610670826109af565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106e8575f6040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016106df9190611c55565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610735610c92565b61073e5f610f09565b565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606001805461077790611ff8565b80601f01602080910402602001604051908101604052809291908181526020018280546107a390611ff8565b80156107ee5780601f106107c5576101008083540402835291602001916107ee565b820191905f5260205f20905b8154815290600101906020018083116107d157829003601f168201915b5050505050905090565b61080a610803610a6e565b8383610fcc565b5050565b61081984848461044d565b61082584848484611135565b50505050565b6060610836826112e6565b9050919050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b6108d3610c92565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610943575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161093a9190611c55565b60405180910390fd5b61094c81610f09565b50565b5f634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806109a857506109a7826113f1565b5b9050919050565b5f806109ba836114d2565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a2c57826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610a239190611d60565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610a82838383600161150b565b505050565b5f80610a92846114d2565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610ad357610ad28184866116ca565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610b5e57610b125f855f8061150b565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610bdd57600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b610c9a610a6e565b73ffffffffffffffffffffffffffffffffffffffff16610cb8610740565b73ffffffffffffffffffffffffffffffffffffffff1614610d1757610cdb610a6e565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610d0e9190611c55565b60405180910390fd5b565b5f815f01549050919050565b6001815f015f828254019250508190555050565b60605f8203610d7f576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050610e8d565b5f8290505f5b5f8214610dae578080610d9790612177565b915050600a82610da791906121eb565b9150610d85565b5f8167ffffffffffffffff811115610dc957610dc8611de9565b5b6040519080825280601f01601f191660200182016040528015610dfb5781602001600182028036833780820191505090505b5090505b5f8514610e8657600182610e13919061221b565b9150600a85610e22919061224e565b6030610e2e919061227e565b60f81b818381518110610e4457610e436122b1565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a905350600a85610e7f91906121eb565b9450610dff565b8093505050505b919050565b8060065f8481526020019081526020015f209081610eb0919061247b565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce782604051610ee09190611d60565b60405180910390a15050565b610f05828260405180602001604052805f81525061178d565b5050565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361103c57816040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016110339190611c55565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516111289190611af5565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b11156112e0578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02611178610a6e565b8685856040518563ffffffff1660e01b815260040161119a949392919061259c565b6020604051808303815f875af19250505080156111d557506040513d601f19601f820116820180604052508101906111d291906125fa565b60015b611254573d805f8114611203576040519150601f19603f3d011682016040523d82523d5f602084013e611208565b606091505b505f81510361124e57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016112459190611c55565b60405180910390fd5b506112df565b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146112dd57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016112d49190611c55565b60405180910390fd5b505b5b50505050565b60606112f1826109af565b505f60065f8481526020019081526020015f20805461130f90611ff8565b80601f016020809104026020016040519081016040528092919081815260200182805461133b90611ff8565b80156113865780601f1061135d57610100808354040283529160200191611386565b820191905f5260205f20905b81548152906001019060200180831161136957829003601f168201915b505050505090505f6113966117a8565b90505f8151036113aa5781925050506113ec565b5f825111156113de5780826040516020016113c6929190612625565b604051602081830303815290604052925050506113ec565b6113e7846117c8565b925050505b919050565b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806114bb57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806114cb57506114ca8261182e565b5b9050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061154357505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611675575f611552846109af565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156115bc57508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156115cf57506115cd818461083d565b155b1561161157826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016116089190611c55565b60405180910390fd5b811561167357838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6116d5838383611897565b611788575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361174957806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016117409190611d60565b60405180910390fd5b81816040517f177e802f00000000000000000000000000000000000000000000000000000000815260040161177f929190612648565b60405180910390fd5b505050565b6117978383611957565b6117a35f848484611135565b505050565b606060405180606001604052806036815260200161267060369139905090565b60606117d3826109af565b505f6117dd6117a8565b90505f8151116117fb5760405180602001604052805f815250611826565b8061180584610d39565b604051602001611816929190612625565b6040516020818303038152906040525b915050919050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561194e57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061190f575061190e848461083d565b5b8061194d57508273ffffffffffffffffffffffffffffffffffffffff1661193583610a35565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036119c7575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016119be9190611c55565b60405180910390fd5b5f6119d383835f610a87565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611a45575f6040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401611a3c9190611c55565b60405180910390fd5b505050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611a8f81611a5b565b8114611a99575f80fd5b50565b5f81359050611aaa81611a86565b92915050565b5f60208284031215611ac557611ac4611a53565b5b5f611ad284828501611a9c565b91505092915050565b5f8115159050919050565b611aef81611adb565b82525050565b5f602082019050611b085f830184611ae6565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611b45578082015181840152602081019050611b2a565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611b6a82611b0e565b611b748185611b18565b9350611b84818560208601611b28565b611b8d81611b50565b840191505092915050565b5f6020820190508181035f830152611bb08184611b60565b905092915050565b5f819050919050565b611bca81611bb8565b8114611bd4575f80fd5b50565b5f81359050611be581611bc1565b92915050565b5f60208284031215611c0057611bff611a53565b5b5f611c0d84828501611bd7565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611c3f82611c16565b9050919050565b611c4f81611c35565b82525050565b5f602082019050611c685f830184611c46565b92915050565b611c7781611c35565b8114611c81575f80fd5b50565b5f81359050611c9281611c6e565b92915050565b5f8060408385031215611cae57611cad611a53565b5b5f611cbb85828601611c84565b9250506020611ccc85828601611bd7565b9150509250929050565b5f805f60608486031215611ced57611cec611a53565b5b5f611cfa86828701611c84565b9350506020611d0b86828701611c84565b9250506040611d1c86828701611bd7565b9150509250925092565b5f60208284031215611d3b57611d3a611a53565b5b5f611d4884828501611c84565b91505092915050565b611d5a81611bb8565b82525050565b5f602082019050611d735f830184611d51565b92915050565b611d8281611adb565b8114611d8c575f80fd5b50565b5f81359050611d9d81611d79565b92915050565b5f8060408385031215611db957611db8611a53565b5b5f611dc685828601611c84565b9250506020611dd785828601611d8f565b9150509250929050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611e1f82611b50565b810181811067ffffffffffffffff82111715611e3e57611e3d611de9565b5b80604052505050565b5f611e50611a4a565b9050611e5c8282611e16565b919050565b5f67ffffffffffffffff821115611e7b57611e7a611de9565b5b611e8482611b50565b9050602081019050919050565b828183375f83830152505050565b5f611eb1611eac84611e61565b611e47565b905082815260208101848484011115611ecd57611ecc611de5565b5b611ed8848285611e91565b509392505050565b5f82601f830112611ef457611ef3611de1565b5b8135611f04848260208601611e9f565b91505092915050565b5f805f8060808587031215611f2557611f24611a53565b5b5f611f3287828801611c84565b9450506020611f4387828801611c84565b9350506040611f5487828801611bd7565b925050606085013567ffffffffffffffff811115611f7557611f74611a57565b5b611f8187828801611ee0565b91505092959194509250565b5f8060408385031215611fa357611fa2611a53565b5b5f611fb085828601611c84565b9250506020611fc185828601611c84565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061200f57607f821691505b60208210810361202257612021611fcb565b5b50919050565b5f60608201905061203b5f830186611c46565b6120486020830185611d51565b6120556040830184611c46565b949350505050565b7f5265656e7472616e742063616c6c2064657465637465640000000000000000005f82015250565b5f612091601783611b18565b915061209c8261205d565b602082019050919050565b5f6020820190508181035f8301526120be81612085565b9050919050565b5f81905092915050565b5f6120d982611b0e565b6120e381856120c5565b93506120f3818560208601611b28565b80840191505092915050565b7f2e6a736f6e000000000000000000000000000000000000000000000000000000815250565b5f61213082846120cf565b915061213b826120ff565b60058201915081905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61218182611bb8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036121b3576121b261214a565b5b600182019050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6121f582611bb8565b915061220083611bb8565b9250826122105761220f6121be565b5b828204905092915050565b5f61222582611bb8565b915061223083611bb8565b92508282039050818111156122485761224761214a565b5b92915050565b5f61225882611bb8565b915061226383611bb8565b925082612273576122726121be565b5b828206905092915050565b5f61228882611bb8565b915061229383611bb8565b92508282019050808211156122ab576122aa61214a565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261233a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826122ff565b61234486836122ff565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61237f61237a61237584611bb8565b61235c565b611bb8565b9050919050565b5f819050919050565b61239883612365565b6123ac6123a482612386565b84845461230b565b825550505050565b5f90565b6123c06123b4565b6123cb81848461238f565b505050565b5b818110156123ee576123e35f826123b8565b6001810190506123d1565b5050565b601f82111561243357612404816122de565b61240d846122f0565b8101602085101561241c578190505b612430612428856122f0565b8301826123d0565b50505b505050565b5f82821c905092915050565b5f6124535f1984600802612438565b1980831691505092915050565b5f61246b8383612444565b9150826002028217905092915050565b61248482611b0e565b67ffffffffffffffff81111561249d5761249c611de9565b5b6124a78254611ff8565b6124b28282856123f2565b5f60209050601f8311600181146124e3575f84156124d1578287015190505b6124db8582612460565b865550612542565b601f1984166124f1866122de565b5f5b82811015612518578489015182556001820191506020850194506020810190506124f3565b868310156125355784890151612531601f891682612444565b8355505b6001600288020188555050505b505050505050565b5f81519050919050565b5f82825260208201905092915050565b5f61256e8261254a565b6125788185612554565b9350612588818560208601611b28565b61259181611b50565b840191505092915050565b5f6080820190506125af5f830187611c46565b6125bc6020830186611c46565b6125c96040830185611d51565b81810360608301526125db8184612564565b905095945050505050565b5f815190506125f481611a86565b92915050565b5f6020828403121561260f5761260e611a53565b5b5f61261c848285016125e6565b91505092915050565b5f61263082856120cf565b915061263c82846120cf565b91508190509392505050565b5f60408201905061265b5f830185611c46565b6126686020830184611d51565b939250505056fe697066733a2f2f516d61633839735a545347764b6b795961327672786452616b5052456147464a534e4a52525765747a544c51544d2fa2646970667358221220a4156b5470f38791730aa3a95aad0cc004e94be98e5bdcc2d49c088af2d49e4b64736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x360 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2AA JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x40D097C3 EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x222 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x196 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x132 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x1AB0 JUMP JUMPDEST PUSH2 0x37C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x1AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH2 0x38D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x1B98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x1BEB JUMP JUMPDEST PUSH2 0x41C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x1C55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x1C98 JUMP JUMPDEST PUSH2 0x437 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x1CD6 JUMP JUMPDEST PUSH2 0x44D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x1D26 JUMP JUMPDEST PUSH2 0x54C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x204 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x1CD6 JUMP JUMPDEST PUSH2 0x631 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x220 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x1BEB JUMP JUMPDEST PUSH2 0x650 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x1BEB JUMP JUMPDEST PUSH2 0x666 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x1C55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x1D26 JUMP JUMPDEST PUSH2 0x677 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x1D60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28A PUSH2 0x72D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x294 PUSH2 0x740 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x1C55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B2 PUSH2 0x768 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BF SWAP2 SWAP1 PUSH2 0x1B98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DD SWAP2 SWAP1 PUSH2 0x1DA3 JUMP JUMPDEST PUSH2 0x7F8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x1F0D JUMP JUMPDEST PUSH2 0x80E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x315 SWAP2 SWAP1 PUSH2 0x1BEB JUMP JUMPDEST PUSH2 0x82B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x327 SWAP2 SWAP1 PUSH2 0x1B98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x345 SWAP2 SWAP1 PUSH2 0x1F8D JUMP JUMPDEST PUSH2 0x83D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x357 SWAP2 SWAP1 PUSH2 0x1AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x375 SWAP2 SWAP1 PUSH2 0x1D26 JUMP JUMPDEST PUSH2 0x8CB JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH2 0x386 DUP3 PUSH2 0x94F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x39B SWAP1 PUSH2 0x1FF8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3C7 SWAP1 PUSH2 0x1FF8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x412 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3E9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x412 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3F5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x426 DUP3 PUSH2 0x9AF JUMP JUMPDEST POP PUSH2 0x430 DUP3 PUSH2 0xA35 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x449 DUP3 DUP3 PUSH2 0x444 PUSH2 0xA6E JUMP JUMPDEST PUSH2 0xA75 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4BD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B4 SWAP2 SWAP1 PUSH2 0x1C55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x4D0 DUP4 DUP4 PUSH2 0x4CB PUSH2 0xA6E JUMP JUMPDEST PUSH2 0xA87 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x546 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x53D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2028 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x59B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x592 SWAP1 PUSH2 0x20A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x5BD PUSH2 0xC92 JUMP JUMPDEST PUSH0 PUSH2 0x5C8 PUSH1 0x8 PUSH2 0xD19 JUMP JUMPDEST SWAP1 POP PUSH2 0x5D4 PUSH1 0x8 PUSH2 0xD25 JUMP JUMPDEST PUSH0 PUSH2 0x5DE DUP3 PUSH2 0xD39 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5EE SWAP2 SWAP1 PUSH2 0x2125 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x609 DUP3 DUP3 PUSH2 0xE92 JUMP JUMPDEST PUSH2 0x613 DUP4 DUP4 PUSH2 0xEEC JUMP JUMPDEST POP POP PUSH0 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x64B DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x80E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x662 PUSH0 DUP3 PUSH2 0x65D PUSH2 0xA6E JUMP JUMPDEST PUSH2 0xA87 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x670 DUP3 PUSH2 0x9AF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6E8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP2 SWAP1 PUSH2 0x1C55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x735 PUSH2 0xC92 JUMP JUMPDEST PUSH2 0x73E PUSH0 PUSH2 0xF09 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x777 SWAP1 PUSH2 0x1FF8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7A3 SWAP1 PUSH2 0x1FF8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7EE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7C5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7EE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7D1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x80A PUSH2 0x803 PUSH2 0xA6E JUMP JUMPDEST DUP4 DUP4 PUSH2 0xFCC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x819 DUP5 DUP5 DUP5 PUSH2 0x44D JUMP JUMPDEST PUSH2 0x825 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1135 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x836 DUP3 PUSH2 0x12E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8D3 PUSH2 0xC92 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x943 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x93A SWAP2 SWAP1 PUSH2 0x1C55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x94C DUP2 PUSH2 0xF09 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x9A8 JUMPI POP PUSH2 0x9A7 DUP3 PUSH2 0x13F1 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x9BA DUP4 PUSH2 0x14D2 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2C JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA23 SWAP2 SWAP1 PUSH2 0x1D60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA82 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x150B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xA92 DUP5 PUSH2 0x14D2 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAD3 JUMPI PUSH2 0xAD2 DUP2 DUP5 DUP7 PUSH2 0x16CA JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB5E JUMPI PUSH2 0xB12 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x150B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBDD JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xC9A PUSH2 0xA6E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCB8 PUSH2 0x740 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD17 JUMPI PUSH2 0xCDB PUSH2 0xA6E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD0E SWAP2 SWAP1 PUSH2 0x1C55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP3 SUB PUSH2 0xD7F JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0xE8D JUMP JUMPDEST PUSH0 DUP3 SWAP1 POP PUSH0 JUMPDEST PUSH0 DUP3 EQ PUSH2 0xDAE JUMPI DUP1 DUP1 PUSH2 0xD97 SWAP1 PUSH2 0x2177 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0xDA7 SWAP2 SWAP1 PUSH2 0x21EB JUMP JUMPDEST SWAP2 POP PUSH2 0xD85 JUMP JUMPDEST PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDC9 JUMPI PUSH2 0xDC8 PUSH2 0x1DE9 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xDFB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH0 DUP6 EQ PUSH2 0xE86 JUMPI PUSH1 0x1 DUP3 PUSH2 0xE13 SWAP2 SWAP1 PUSH2 0x221B JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0xE22 SWAP2 SWAP1 PUSH2 0x224E JUMP JUMPDEST PUSH1 0x30 PUSH2 0xE2E SWAP2 SWAP1 PUSH2 0x227E JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xE44 JUMPI PUSH2 0xE43 PUSH2 0x22B1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0xE7F SWAP2 SWAP1 PUSH2 0x21EB JUMP JUMPDEST SWAP5 POP PUSH2 0xDFF JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0xEB0 SWAP2 SWAP1 PUSH2 0x247B JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0xEE0 SWAP2 SWAP1 PUSH2 0x1D60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0xF05 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x178D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x103C JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1033 SWAP2 SWAP1 PUSH2 0x1C55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1128 SWAP2 SWAP1 PUSH2 0x1AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x12E0 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1178 PUSH2 0xA6E JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x119A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x259C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x11D5 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11D2 SWAP2 SWAP1 PUSH2 0x25FA JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1254 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1203 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1208 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x124E JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1245 SWAP2 SWAP1 PUSH2 0x1C55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x12DF JUMP JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x12DD JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12D4 SWAP2 SWAP1 PUSH2 0x1C55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x12F1 DUP3 PUSH2 0x9AF JUMP JUMPDEST POP PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0x130F SWAP1 PUSH2 0x1FF8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x133B SWAP1 PUSH2 0x1FF8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1386 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x135D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1386 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1369 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 PUSH2 0x1396 PUSH2 0x17A8 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD SUB PUSH2 0x13AA JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x13EC JUMP JUMPDEST PUSH0 DUP3 MLOAD GT ISZERO PUSH2 0x13DE JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x13C6 SWAP3 SWAP2 SWAP1 PUSH2 0x2625 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x13EC JUMP JUMPDEST PUSH2 0x13E7 DUP5 PUSH2 0x17C8 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x14BB JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x14CB JUMPI POP PUSH2 0x14CA DUP3 PUSH2 0x182E JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1543 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1675 JUMPI PUSH0 PUSH2 0x1552 DUP5 PUSH2 0x9AF JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x15BC JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x15CF JUMPI POP PUSH2 0x15CD DUP2 DUP5 PUSH2 0x83D JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1611 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1608 SWAP2 SWAP1 PUSH2 0x1C55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1673 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x16D5 DUP4 DUP4 DUP4 PUSH2 0x1897 JUMP JUMPDEST PUSH2 0x1788 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1749 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1740 SWAP2 SWAP1 PUSH2 0x1D60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x177F SWAP3 SWAP2 SWAP1 PUSH2 0x2648 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1797 DUP4 DUP4 PUSH2 0x1957 JUMP JUMPDEST PUSH2 0x17A3 PUSH0 DUP5 DUP5 DUP5 PUSH2 0x1135 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2670 PUSH1 0x36 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x17D3 DUP3 PUSH2 0x9AF JUMP JUMPDEST POP PUSH0 PUSH2 0x17DD PUSH2 0x17A8 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x17FB JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1826 JUMP JUMPDEST DUP1 PUSH2 0x1805 DUP5 PUSH2 0xD39 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1816 SWAP3 SWAP2 SWAP1 PUSH2 0x2625 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x194E JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x190F JUMPI POP PUSH2 0x190E DUP5 DUP5 PUSH2 0x83D JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x194D JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1935 DUP4 PUSH2 0xA35 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19C7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19BE SWAP2 SWAP1 PUSH2 0x1C55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x19D3 DUP4 DUP4 PUSH0 PUSH2 0xA87 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A45 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A3C SWAP2 SWAP1 PUSH2 0x1C55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A8F DUP2 PUSH2 0x1A5B JUMP JUMPDEST DUP2 EQ PUSH2 0x1A99 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AAA DUP2 PUSH2 0x1A86 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AC5 JUMPI PUSH2 0x1AC4 PUSH2 0x1A53 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AD2 DUP5 DUP3 DUP6 ADD PUSH2 0x1A9C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AEF DUP2 PUSH2 0x1ADB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B08 PUSH0 DUP4 ADD DUP5 PUSH2 0x1AE6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B45 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1B2A JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B6A DUP3 PUSH2 0x1B0E JUMP JUMPDEST PUSH2 0x1B74 DUP2 DUP6 PUSH2 0x1B18 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B84 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B28 JUMP JUMPDEST PUSH2 0x1B8D DUP2 PUSH2 0x1B50 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BB0 DUP2 DUP5 PUSH2 0x1B60 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BCA DUP2 PUSH2 0x1BB8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BD4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BE5 DUP2 PUSH2 0x1BC1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C00 JUMPI PUSH2 0x1BFF PUSH2 0x1A53 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C0D DUP5 DUP3 DUP6 ADD PUSH2 0x1BD7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C3F DUP3 PUSH2 0x1C16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C4F DUP2 PUSH2 0x1C35 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C68 PUSH0 DUP4 ADD DUP5 PUSH2 0x1C46 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C77 DUP2 PUSH2 0x1C35 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C81 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C92 DUP2 PUSH2 0x1C6E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CAE JUMPI PUSH2 0x1CAD PUSH2 0x1A53 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CBB DUP6 DUP3 DUP7 ADD PUSH2 0x1C84 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CCC DUP6 DUP3 DUP7 ADD PUSH2 0x1BD7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1CED JUMPI PUSH2 0x1CEC PUSH2 0x1A53 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CFA DUP7 DUP3 DUP8 ADD PUSH2 0x1C84 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1D0B DUP7 DUP3 DUP8 ADD PUSH2 0x1C84 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1D1C DUP7 DUP3 DUP8 ADD PUSH2 0x1BD7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D3B JUMPI PUSH2 0x1D3A PUSH2 0x1A53 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D48 DUP5 DUP3 DUP6 ADD PUSH2 0x1C84 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D5A DUP2 PUSH2 0x1BB8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D73 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D51 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D82 DUP2 PUSH2 0x1ADB JUMP JUMPDEST DUP2 EQ PUSH2 0x1D8C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D9D DUP2 PUSH2 0x1D79 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DB9 JUMPI PUSH2 0x1DB8 PUSH2 0x1A53 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DC6 DUP6 DUP3 DUP7 ADD PUSH2 0x1C84 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DD7 DUP6 DUP3 DUP7 ADD PUSH2 0x1D8F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1E1F DUP3 PUSH2 0x1B50 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1E3E JUMPI PUSH2 0x1E3D PUSH2 0x1DE9 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E50 PUSH2 0x1A4A JUMP JUMPDEST SWAP1 POP PUSH2 0x1E5C DUP3 DUP3 PUSH2 0x1E16 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1E7B JUMPI PUSH2 0x1E7A PUSH2 0x1DE9 JUMP JUMPDEST JUMPDEST PUSH2 0x1E84 DUP3 PUSH2 0x1B50 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1EB1 PUSH2 0x1EAC DUP5 PUSH2 0x1E61 JUMP JUMPDEST PUSH2 0x1E47 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1ECD JUMPI PUSH2 0x1ECC PUSH2 0x1DE5 JUMP JUMPDEST JUMPDEST PUSH2 0x1ED8 DUP5 DUP3 DUP6 PUSH2 0x1E91 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1EF4 JUMPI PUSH2 0x1EF3 PUSH2 0x1DE1 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1F04 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1E9F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1F25 JUMPI PUSH2 0x1F24 PUSH2 0x1A53 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F32 DUP8 DUP3 DUP9 ADD PUSH2 0x1C84 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1F43 DUP8 DUP3 DUP9 ADD PUSH2 0x1C84 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1F54 DUP8 DUP3 DUP9 ADD PUSH2 0x1BD7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F75 JUMPI PUSH2 0x1F74 PUSH2 0x1A57 JUMP JUMPDEST JUMPDEST PUSH2 0x1F81 DUP8 DUP3 DUP9 ADD PUSH2 0x1EE0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FA3 JUMPI PUSH2 0x1FA2 PUSH2 0x1A53 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FB0 DUP6 DUP3 DUP7 ADD PUSH2 0x1C84 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1FC1 DUP6 DUP3 DUP7 ADD PUSH2 0x1C84 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x200F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2022 JUMPI PUSH2 0x2021 PUSH2 0x1FCB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x203B PUSH0 DUP4 ADD DUP7 PUSH2 0x1C46 JUMP JUMPDEST PUSH2 0x2048 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1D51 JUMP JUMPDEST PUSH2 0x2055 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1C46 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E742063616C6C206465746563746564000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2091 PUSH1 0x17 DUP4 PUSH2 0x1B18 JUMP JUMPDEST SWAP2 POP PUSH2 0x209C DUP3 PUSH2 0x205D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20BE DUP2 PUSH2 0x2085 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20D9 DUP3 PUSH2 0x1B0E JUMP JUMPDEST PUSH2 0x20E3 DUP2 DUP6 PUSH2 0x20C5 JUMP JUMPDEST SWAP4 POP PUSH2 0x20F3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B28 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x2E6A736F6E000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2130 DUP3 DUP5 PUSH2 0x20CF JUMP JUMPDEST SWAP2 POP PUSH2 0x213B DUP3 PUSH2 0x20FF JUMP JUMPDEST PUSH1 0x5 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2181 DUP3 PUSH2 0x1BB8 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x21B3 JUMPI PUSH2 0x21B2 PUSH2 0x214A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x21F5 DUP3 PUSH2 0x1BB8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2200 DUP4 PUSH2 0x1BB8 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2210 JUMPI PUSH2 0x220F PUSH2 0x21BE JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2225 DUP3 PUSH2 0x1BB8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2230 DUP4 PUSH2 0x1BB8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2248 JUMPI PUSH2 0x2247 PUSH2 0x214A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2258 DUP3 PUSH2 0x1BB8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2263 DUP4 PUSH2 0x1BB8 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2273 JUMPI PUSH2 0x2272 PUSH2 0x21BE JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2288 DUP3 PUSH2 0x1BB8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2293 DUP4 PUSH2 0x1BB8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x22AB JUMPI PUSH2 0x22AA PUSH2 0x214A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x233A PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x22FF JUMP JUMPDEST PUSH2 0x2344 DUP7 DUP4 PUSH2 0x22FF JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x237F PUSH2 0x237A PUSH2 0x2375 DUP5 PUSH2 0x1BB8 JUMP JUMPDEST PUSH2 0x235C JUMP JUMPDEST PUSH2 0x1BB8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2398 DUP4 PUSH2 0x2365 JUMP JUMPDEST PUSH2 0x23AC PUSH2 0x23A4 DUP3 PUSH2 0x2386 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x230B JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x23C0 PUSH2 0x23B4 JUMP JUMPDEST PUSH2 0x23CB DUP2 DUP5 DUP5 PUSH2 0x238F JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x23EE JUMPI PUSH2 0x23E3 PUSH0 DUP3 PUSH2 0x23B8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x23D1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2433 JUMPI PUSH2 0x2404 DUP2 PUSH2 0x22DE JUMP JUMPDEST PUSH2 0x240D DUP5 PUSH2 0x22F0 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x241C JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2430 PUSH2 0x2428 DUP6 PUSH2 0x22F0 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x23D0 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2453 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2438 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x246B DUP4 DUP4 PUSH2 0x2444 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2484 DUP3 PUSH2 0x1B0E JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x249D JUMPI PUSH2 0x249C PUSH2 0x1DE9 JUMP JUMPDEST JUMPDEST PUSH2 0x24A7 DUP3 SLOAD PUSH2 0x1FF8 JUMP JUMPDEST PUSH2 0x24B2 DUP3 DUP3 DUP6 PUSH2 0x23F2 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x24E3 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x24D1 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x24DB DUP6 DUP3 PUSH2 0x2460 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2542 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x24F1 DUP7 PUSH2 0x22DE JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2518 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x24F3 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2535 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2531 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2444 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x256E DUP3 PUSH2 0x254A JUMP JUMPDEST PUSH2 0x2578 DUP2 DUP6 PUSH2 0x2554 JUMP JUMPDEST SWAP4 POP PUSH2 0x2588 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B28 JUMP JUMPDEST PUSH2 0x2591 DUP2 PUSH2 0x1B50 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x25AF PUSH0 DUP4 ADD DUP8 PUSH2 0x1C46 JUMP JUMPDEST PUSH2 0x25BC PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1C46 JUMP JUMPDEST PUSH2 0x25C9 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1D51 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x25DB DUP2 DUP5 PUSH2 0x2564 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x25F4 DUP2 PUSH2 0x1A86 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x260F JUMPI PUSH2 0x260E PUSH2 0x1A53 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x261C DUP5 DUP3 DUP6 ADD PUSH2 0x25E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2630 DUP3 DUP6 PUSH2 0x20CF JUMP JUMPDEST SWAP2 POP PUSH2 0x263C DUP3 DUP5 PUSH2 0x20CF JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x265B PUSH0 DUP4 ADD DUP6 PUSH2 0x1C46 JUMP JUMPDEST PUSH2 0x2668 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D51 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID PUSH10 0x7066733A2F2F516D6163 CODESIZE CODECOPY PUSH20 0x5A545347764B6B795961327672786452616B5052 GASLIMIT PUSH2 0x4746 0x4A MSTORE8 0x4E 0x4A MSTORE MSTORE JUMPI PUSH6 0x747A544C5154 0x4D 0x2F LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG4 ISZERO PUSH12 0x5470F38791730AA3A95AAD0C 0xC0 DIV 0xE9 0x4B 0xE9 DUP15 JUMPDEST 0xDC 0xC2 0xD4 SWAP13 ADDMOD DUP11 CALLCODE 0xD4 SWAP15 0x4B PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "40556:1281:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;41622:212;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;25973:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;27197:160;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;27014:117;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;27869:588;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;41034:304;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;28528:136;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;38173:320;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;25784:122;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;25507:215;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13123:105;;;:::i;:::-;;12448:87;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;26135:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;27429:147;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;28735:211;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;41418:196;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;27647:155;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13383:222;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;41622:212;41761:4;41790:36;41814:11;41790:23;:36::i;:::-;41783:43;;41622:212;;;:::o;25973:93::-;26020:13;26053:5;26046:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25973:93;:::o;27197:160::-;27266:7;27286:22;27300:7;27286:13;:22::i;:::-;;27328:21;27341:7;27328:12;:21::i;:::-;27321:28;;27197:160;;;:::o;27014:117::-;27088:35;27097:2;27101:7;27110:12;:10;:12::i;:::-;27088:8;:35::i;:::-;27014:117;;:::o;27869:588::-;27978:1;27964:16;;:2;:16;;;27960:89;;28034:1;28004:33;;;;;;;;;;;:::i;:::-;;;;;;;;27960:89;28270:21;28294:34;28302:2;28306:7;28315:12;:10;:12::i;:::-;28294:7;:34::i;:::-;28270:58;;28360:4;28343:21;;:13;:21;;;28339:111;;28409:4;28415:7;28424:13;28388:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;28339:111;27949:508;27869:588;;;:::o;41034:304::-;40846:15;;;;;;;;;;;40845:16;40837:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;40918:4;40900:15;;:22;;;;;;;;;;;;;;;;;;12334:13:::1;:11;:13::i;:::-;41107:15:::2;41125:25;:15;:23;:25::i;:::-;41107:43;;41161:27;:15;:25;:27::i;:::-;41199:17;41233:18;:7;:16;:18::i;:::-;41219:41;;;;;;;;:::i;:::-;;;;;;;;;;;;;41199:61;;41271:26;41284:7;41293:3;41271:12;:26::i;:::-;41308:22;41318:2;41322:7;41308:9;:22::i;:::-;41096:242;;40963:5:::0;40945:15;;:23;;;;;;;;;;;;;;;;;;41034:304;:::o;28528:136::-;28617:39;28634:4;28640:2;28644:7;28617:39;;;;;;;;;;;;:16;:39::i;:::-;28528:136;;;:::o;38173:320::-;38443:42;38459:1;38463:7;38472:12;:10;:12::i;:::-;38443:7;:42::i;:::-;;38173:320;:::o;25784:122::-;25849:7;25876:22;25890:7;25876:13;:22::i;:::-;25869:29;;25784:122;;;:::o;25507:215::-;25572:7;25613:1;25596:19;;:5;:19;;;25592:89;;25666:1;25639:30;;;;;;;;;;;:::i;:::-;;;;;;;;25592:89;25698:9;:16;25708:5;25698:16;;;;;;;;;;;;;;;;25691:23;;25507:215;;;:::o;13123:105::-;12334:13;:11;:13::i;:::-;13190:30:::1;13217:1;13190:18;:30::i;:::-;13123:105::o:0;12448:87::-;12494:7;12521:6;;;;;;;;;;;12514:13;;12448:87;:::o;26135:97::-;26184:13;26217:7;26210:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26135:97;:::o;27429:147::-;27516:52;27535:12;:10;:12::i;:::-;27549:8;27559;27516:18;:52::i;:::-;27429:147;;:::o;28735:211::-;28849:31;28862:4;28868:2;28872:7;28849:12;:31::i;:::-;28891:47;28914:4;28920:2;28924:7;28933:4;28891:22;:47::i;:::-;28735:211;;;;:::o;41418:196::-;41545:13;41583:23;41598:7;41583:14;:23::i;:::-;41576:30;;41418:196;;;:::o;27647:155::-;27735:4;27759:18;:25;27778:5;27759:25;;;;;;;;;;;;;;;:35;27785:8;27759:35;;;;;;;;;;;;;;;;;;;;;;;;;27752:42;;27647:155;;;;:::o;13383:222::-;12334:13;:11;:13::i;:::-;13490:1:::1;13470:22;;:8;:22;;::::0;13466:93:::1;;13544:1;13516:31;;;;;;;;;;;:::i;:::-;;;;;;;;13466:93;13569:28;13588:8;13569:18;:28::i;:::-;13383:222:::0;:::o;39308:209::-;39410:4;39123:10;39116:18;;39434:35;;;:11;:35;;;;:75;;;;39473:36;39497:11;39473:23;:36::i;:::-;39434:75;39427:82;;39308:209;;;:::o;36023:247::-;36086:7;36106:13;36122:17;36131:7;36122:8;:17::i;:::-;36106:33;;36171:1;36154:19;;:5;:19;;;36150:90;;36220:7;36197:31;;;;;;;;;;;:::i;:::-;;;;;;;;36150:90;36257:5;36250:12;;;36023:247;;;:::o;29708:129::-;29778:7;29805:15;:24;29821:7;29805:24;;;;;;;;;;;;;;;;;;;;;29798:31;;29708:129;;;:::o;10672:98::-;10725:7;10752:10;10745:17;;10672:98;:::o;34255:122::-;34336:33;34345:2;34349:7;34358:4;34364;34336:8;:33::i;:::-;34255:122;;;:::o;31863:824::-;31949:7;31969:12;31984:17;31993:7;31984:8;:17::i;:::-;31969:32;;32080:1;32064:18;;:4;:18;;;32060:88;;32099:37;32116:4;32122;32128:7;32099:16;:37::i;:::-;32060:88;32211:1;32195:18;;:4;:18;;;32191:263;;32313:48;32330:1;32334:7;32351:1;32355:5;32313:8;:48::i;:::-;32426:1;32407:9;:15;32417:4;32407:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;32191:263;32484:1;32470:16;;:2;:16;;;32466:111;;32549:1;32532:9;:13;32542:2;32532:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;32466:111;32608:2;32589:7;:16;32597:7;32589:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;32647:7;32643:2;32628:27;;32637:4;32628:27;;;;;;;;;;;;32675:4;32668:11;;;31863:824;;;;;:::o;12613:166::-;12684:12;:10;:12::i;:::-;12673:23;;:7;:5;:7::i;:::-;:23;;;12669:103;;12747:12;:10;:12::i;:::-;12720:40;;;;;;;;;;;:::i;:::-;;;;;;;;12669:103;12613:166::o;853:114::-;918:7;945;:14;;;938:21;;853:114;;;:::o;975:127::-;1082:1;1064:7;:14;;;:19;;;;;;;;;;;975:127;:::o;9414:553::-;9470:13;9509:1;9500:5;:10;9496:53;;9527:10;;;;;;;;;;;;;;;;;;;;;9496:53;9569:12;9584:5;9569:20;;9600:14;9625:78;9640:1;9632:4;:9;9625:78;;9658:8;;;;;:::i;:::-;;;;9689:2;9681:10;;;;;:::i;:::-;;;9625:78;;;9723:19;9755:6;9745:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9723:39;;9773:145;9789:1;9780:5;:10;9773:145;;9817:1;9807:11;;;;;:::i;:::-;;;9876:2;9868:5;:10;;;;:::i;:::-;9863:2;:15;;;;:::i;:::-;9850:30;;9833:6;9840;9833:14;;;;;;;;:::i;:::-;;;;;:47;;;;;;;;;;;9904:2;9895:11;;;;;:::i;:::-;;;9773:145;;;9952:6;9938:21;;;;;9414:553;;;;:::o;40323:170::-;40437:9;40415:10;:19;40426:7;40415:19;;;;;;;;;;;:31;;;;;;:::i;:::-;;40462:23;40477:7;40462:23;;;;;;:::i;:::-;;;;;;;;40323:170;;:::o;33721:102::-;33789:26;33799:2;33803:7;33789:26;;;;;;;;;;;;:9;:26::i;:::-;33721:102;;:::o;13765:191::-;13839:16;13858:6;;;;;;;;;;;13839:25;;13884:8;13875:6;;:17;;;;;;;;;;;;;;;;;;13939:8;13908:40;;13929:8;13908:40;;;;;;;;;;;;13828:128;13765:191;:::o;35462:318::-;35590:1;35570:22;;:8;:22;;;35566:93;;35638:8;35616:31;;;;;;;;;;;:::i;:::-;;;;;;;;35566:93;35707:8;35669:18;:25;35688:5;35669:25;;;;;;;;;;;;;;;:35;35695:8;35669:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;35753:8;35731:41;;35746:5;35731:41;;;35763:8;35731:41;;;;;;:::i;:::-;;;;;;;;35462:318;;;:::o;36820:808::-;36954:1;36937:2;:14;;;:18;36933:688;;;36992:2;36976:36;;;37013:12;:10;:12::i;:::-;37027:4;37033:7;37042:4;36976:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;36972:638;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;37307:1;37290:6;:13;:18;37286:309;;37362:2;37340:25;;;;;;;;;;;:::i;:::-;;;;;;;;37286:309;37239:371;36972:638;;;37105:41;;;37095:51;;;:6;:51;;;;37091:132;;37200:2;37178:25;;;;;;;;;;;:::i;:::-;;;;;;;;37091:132;37048:190;36972:638;36933:688;36820:808;;;;:::o;39588:609::-;39661:13;39687:22;39701:7;39687:13;:22::i;:::-;;39722:23;39748:10;:19;39759:7;39748:19;;;;;;;;;;;39722:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;39778:18;39799:10;:8;:10::i;:::-;39778:31;;39907:1;39891:4;39885:18;:23;39881:72;;39932:9;39925:16;;;;;;39881:72;40080:1;40060:9;40054:23;:27;40050:97;;;40119:4;40125:9;40105:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;40098:37;;;;;;40050:97;40166:23;40181:7;40166:14;:23::i;:::-;40159:30;;;;39588:609;;;;:::o;25138:305::-;25240:4;25292:25;25277:40;;;:11;:40;;;;:105;;;;25349:33;25334:48;;;:11;:48;;;;25277:105;:158;;;;25399:36;25423:11;25399:23;:36::i;:::-;25277:158;25257:178;;25138:305;;;:::o;29470:117::-;29536:7;29563;:16;29571:7;29563:16;;;;;;;;;;;;;;;;;;;;;29556:23;;29470:117;;;:::o;34565:678::-;34727:9;:31;;;;34756:1;34740:18;;:4;:18;;;;34727:31;34723:471;;;34775:13;34791:22;34805:7;34791:13;:22::i;:::-;34775:38;;34960:1;34944:18;;:4;:18;;;;:35;;;;;34975:4;34966:13;;:5;:13;;;;34944:35;:69;;;;;34984:29;35001:5;35008:4;34984:16;:29::i;:::-;34983:30;34944:69;34940:144;;;35063:4;35041:27;;;;;;;;;;;:::i;:::-;;;;;;;;34940:144;35104:9;35100:83;;;35159:7;35155:2;35139:28;;35148:5;35139:28;;;;;;;;;;;;35100:83;34760:434;34723:471;35233:2;35206:15;:24;35222:7;35206:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;34565:678;;;;:::o;30877:376::-;30990:38;31004:5;31011:7;31020;30990:13;:38::i;:::-;30985:261;;31066:1;31049:19;;:5;:19;;;31045:190;;31119:7;31096:31;;;;;;;;;;;:::i;:::-;;;;;;;;31045:190;31202:7;31211;31175:44;;;;;;;;;;;;:::i;:::-;;;;;;;;30985:261;30877:376;;;:::o;34050:185::-;34145:18;34151:2;34155:7;34145:5;:18::i;:::-;34174:53;34205:1;34209:2;34213:7;34222:4;34174:22;:53::i;:::-;34050:185;;;:::o;26812:140::-;26855:13;26881:63;;;;;;;;;;;;;;;;;;;26812:140;:::o;26303:260::-;26367:13;26393:22;26407:7;26393:13;:22::i;:::-;;26428:21;26452:10;:8;:10::i;:::-;26428:34;;26504:1;26486:7;26480:21;:25;:75;;;;;;;;;;;;;;;;;26522:7;26531:18;:7;:16;:18::i;:::-;26508:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;26480:75;26473:82;;;26303:260;;;:::o;16903:148::-;16979:4;17018:25;17003:40;;;:11;:40;;;;16996:47;;16903:148;;;:::o;30157:276::-;30260:4;30316:1;30297:21;;:7;:21;;;;:128;;;;;30345:7;30336:16;;:5;:16;;;:52;;;;30356:32;30373:5;30380:7;30356:16;:32::i;:::-;30336:52;:88;;;;30417:7;30392:32;;:21;30405:7;30392:12;:21::i;:::-;:32;;;30336:88;30297:128;30277:148;;30157:276;;;;;:::o;33023:335::-;33105:1;33091:16;;:2;:16;;;33087:89;;33161:1;33131:33;;;;;;;;;;;:::i;:::-;;;;;;;;33087:89;33186:21;33210:32;33218:2;33222:7;33239:1;33210:7;:32::i;:::-;33186:56;;33282:1;33257:27;;:13;:27;;;33253:98;;33336:1;33308:31;;;;;;;;;;;:::i;:::-;;;;;;;;33253:98;33076:282;33023:335;;:::o;7:75:1:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:619::-;4967:6;4975;4983;5032:2;5020:9;5011:7;5007:23;5003:32;5000:119;;;5038:79;;:::i;:::-;5000:119;5158:1;5183:53;5228:7;5219:6;5208:9;5204:22;5183:53;:::i;:::-;5173:63;;5129:117;5285:2;5311:53;5356:7;5347:6;5336:9;5332:22;5311:53;:::i;:::-;5301:63;;5256:118;5413:2;5439:53;5484:7;5475:6;5464:9;5460:22;5439:53;:::i;:::-;5429:63;;5384:118;4890:619;;;;;:::o;5515:329::-;5574:6;5623:2;5611:9;5602:7;5598:23;5594:32;5591:119;;;5629:79;;:::i;:::-;5591:119;5749:1;5774:53;5819:7;5810:6;5799:9;5795:22;5774:53;:::i;:::-;5764:63;;5720:117;5515:329;;;;:::o;5850:118::-;5937:24;5955:5;5937:24;:::i;:::-;5932:3;5925:37;5850:118;;:::o;5974:222::-;6067:4;6105:2;6094:9;6090:18;6082:26;;6118:71;6186:1;6175:9;6171:17;6162:6;6118:71;:::i;:::-;5974:222;;;;:::o;6202:116::-;6272:21;6287:5;6272:21;:::i;:::-;6265:5;6262:32;6252:60;;6308:1;6305;6298:12;6252:60;6202:116;:::o;6324:133::-;6367:5;6405:6;6392:20;6383:29;;6421:30;6445:5;6421:30;:::i;:::-;6324:133;;;;:::o;6463:468::-;6528:6;6536;6585:2;6573:9;6564:7;6560:23;6556:32;6553:119;;;6591:79;;:::i;:::-;6553:119;6711:1;6736:53;6781:7;6772:6;6761:9;6757:22;6736:53;:::i;:::-;6726:63;;6682:117;6838:2;6864:50;6906:7;6897:6;6886:9;6882:22;6864:50;:::i;:::-;6854:60;;6809:115;6463:468;;;;;:::o;6937:117::-;7046:1;7043;7036:12;7060:117;7169:1;7166;7159:12;7183:180;7231:77;7228:1;7221:88;7328:4;7325:1;7318:15;7352:4;7349:1;7342:15;7369:281;7452:27;7474:4;7452:27;:::i;:::-;7444:6;7440:40;7582:6;7570:10;7567:22;7546:18;7534:10;7531:34;7528:62;7525:88;;;7593:18;;:::i;:::-;7525:88;7633:10;7629:2;7622:22;7412:238;7369:281;;:::o;7656:129::-;7690:6;7717:20;;:::i;:::-;7707:30;;7746:33;7774:4;7766:6;7746:33;:::i;:::-;7656:129;;;:::o;7791:307::-;7852:4;7942:18;7934:6;7931:30;7928:56;;;7964:18;;:::i;:::-;7928:56;8002:29;8024:6;8002:29;:::i;:::-;7994:37;;8086:4;8080;8076:15;8068:23;;7791:307;;;:::o;8104:146::-;8201:6;8196:3;8191;8178:30;8242:1;8233:6;8228:3;8224:16;8217:27;8104:146;;;:::o;8256:423::-;8333:5;8358:65;8374:48;8415:6;8374:48;:::i;:::-;8358:65;:::i;:::-;8349:74;;8446:6;8439:5;8432:21;8484:4;8477:5;8473:16;8522:3;8513:6;8508:3;8504:16;8501:25;8498:112;;;8529:79;;:::i;:::-;8498:112;8619:54;8666:6;8661:3;8656;8619:54;:::i;:::-;8339:340;8256:423;;;;;:::o;8698:338::-;8753:5;8802:3;8795:4;8787:6;8783:17;8779:27;8769:122;;8810:79;;:::i;:::-;8769:122;8927:6;8914:20;8952:78;9026:3;9018:6;9011:4;9003:6;8999:17;8952:78;:::i;:::-;8943:87;;8759:277;8698:338;;;;:::o;9042:943::-;9137:6;9145;9153;9161;9210:3;9198:9;9189:7;9185:23;9181:33;9178:120;;;9217:79;;:::i;:::-;9178:120;9337:1;9362:53;9407:7;9398:6;9387:9;9383:22;9362:53;:::i;:::-;9352:63;;9308:117;9464:2;9490:53;9535:7;9526:6;9515:9;9511:22;9490:53;:::i;:::-;9480:63;;9435:118;9592:2;9618:53;9663:7;9654:6;9643:9;9639:22;9618:53;:::i;:::-;9608:63;;9563:118;9748:2;9737:9;9733:18;9720:32;9779:18;9771:6;9768:30;9765:117;;;9801:79;;:::i;:::-;9765:117;9906:62;9960:7;9951:6;9940:9;9936:22;9906:62;:::i;:::-;9896:72;;9691:287;9042:943;;;;;;;:::o;9991:474::-;10059:6;10067;10116:2;10104:9;10095:7;10091:23;10087:32;10084:119;;;10122:79;;:::i;:::-;10084:119;10242:1;10267:53;10312:7;10303:6;10292:9;10288:22;10267:53;:::i;:::-;10257:63;;10213:117;10369:2;10395:53;10440:7;10431:6;10420:9;10416:22;10395:53;:::i;:::-;10385:63;;10340:118;9991:474;;;;;:::o;10471:180::-;10519:77;10516:1;10509:88;10616:4;10613:1;10606:15;10640:4;10637:1;10630:15;10657:320;10701:6;10738:1;10732:4;10728:12;10718:22;;10785:1;10779:4;10775:12;10806:18;10796:81;;10862:4;10854:6;10850:17;10840:27;;10796:81;10924:2;10916:6;10913:14;10893:18;10890:38;10887:84;;10943:18;;:::i;:::-;10887:84;10708:269;10657:320;;;:::o;10983:442::-;11132:4;11170:2;11159:9;11155:18;11147:26;;11183:71;11251:1;11240:9;11236:17;11227:6;11183:71;:::i;:::-;11264:72;11332:2;11321:9;11317:18;11308:6;11264:72;:::i;:::-;11346;11414:2;11403:9;11399:18;11390:6;11346:72;:::i;:::-;10983:442;;;;;;:::o;11431:173::-;11571:25;11567:1;11559:6;11555:14;11548:49;11431:173;:::o;11610:366::-;11752:3;11773:67;11837:2;11832:3;11773:67;:::i;:::-;11766:74;;11849:93;11938:3;11849:93;:::i;:::-;11967:2;11962:3;11958:12;11951:19;;11610:366;;;:::o;11982:419::-;12148:4;12186:2;12175:9;12171:18;12163:26;;12235:9;12229:4;12225:20;12221:1;12210:9;12206:17;12199:47;12263:131;12389:4;12263:131;:::i;:::-;12255:139;;11982:419;;;:::o;12407:148::-;12509:11;12546:3;12531:18;;12407:148;;;;:::o;12561:390::-;12667:3;12695:39;12728:5;12695:39;:::i;:::-;12750:89;12832:6;12827:3;12750:89;:::i;:::-;12743:96;;12848:65;12906:6;12901:3;12894:4;12887:5;12883:16;12848:65;:::i;:::-;12938:6;12933:3;12929:16;12922:23;;12671:280;12561:390;;;;:::o;12957:182::-;13125:7;13120:3;13113:20;12957:182;:::o;13145:539::-;13367:3;13389:95;13480:3;13471:6;13389:95;:::i;:::-;13382:102;;13494:137;13627:3;13494:137;:::i;:::-;13656:1;13651:3;13647:11;13640:18;;13675:3;13668:10;;13145:539;;;;:::o;13690:180::-;13738:77;13735:1;13728:88;13835:4;13832:1;13825:15;13859:4;13856:1;13849:15;13876:233;13915:3;13938:24;13956:5;13938:24;:::i;:::-;13929:33;;13984:66;13977:5;13974:77;13971:103;;14054:18;;:::i;:::-;13971:103;14101:1;14094:5;14090:13;14083:20;;13876:233;;;:::o;14115:180::-;14163:77;14160:1;14153:88;14260:4;14257:1;14250:15;14284:4;14281:1;14274:15;14301:185;14341:1;14358:20;14376:1;14358:20;:::i;:::-;14353:25;;14392:20;14410:1;14392:20;:::i;:::-;14387:25;;14431:1;14421:35;;14436:18;;:::i;:::-;14421:35;14478:1;14475;14471:9;14466:14;;14301:185;;;;:::o;14492:194::-;14532:4;14552:20;14570:1;14552:20;:::i;:::-;14547:25;;14586:20;14604:1;14586:20;:::i;:::-;14581:25;;14630:1;14627;14623:9;14615:17;;14654:1;14648:4;14645:11;14642:37;;;14659:18;;:::i;:::-;14642:37;14492:194;;;;:::o;14692:176::-;14724:1;14741:20;14759:1;14741:20;:::i;:::-;14736:25;;14775:20;14793:1;14775:20;:::i;:::-;14770:25;;14814:1;14804:35;;14819:18;;:::i;:::-;14804:35;14860:1;14857;14853:9;14848:14;;14692:176;;;;:::o;14874:191::-;14914:3;14933:20;14951:1;14933:20;:::i;:::-;14928:25;;14967:20;14985:1;14967:20;:::i;:::-;14962:25;;15010:1;15007;15003:9;14996:16;;15031:3;15028:1;15025:10;15022:36;;;15038:18;;:::i;:::-;15022:36;14874:191;;;;:::o;15071:180::-;15119:77;15116:1;15109:88;15216:4;15213:1;15206:15;15240:4;15237:1;15230:15;15257:141;15306:4;15329:3;15321:11;;15352:3;15349:1;15342:14;15386:4;15383:1;15373:18;15365:26;;15257:141;;;:::o;15404:93::-;15441:6;15488:2;15483;15476:5;15472:14;15468:23;15458:33;;15404:93;;;:::o;15503:107::-;15547:8;15597:5;15591:4;15587:16;15566:37;;15503:107;;;;:::o;15616:393::-;15685:6;15735:1;15723:10;15719:18;15758:97;15788:66;15777:9;15758:97;:::i;:::-;15876:39;15906:8;15895:9;15876:39;:::i;:::-;15864:51;;15948:4;15944:9;15937:5;15933:21;15924:30;;15997:4;15987:8;15983:19;15976:5;15973:30;15963:40;;15692:317;;15616:393;;;;;:::o;16015:60::-;16043:3;16064:5;16057:12;;16015:60;;;:::o;16081:142::-;16131:9;16164:53;16182:34;16191:24;16209:5;16191:24;:::i;:::-;16182:34;:::i;:::-;16164:53;:::i;:::-;16151:66;;16081:142;;;:::o;16229:75::-;16272:3;16293:5;16286:12;;16229:75;;;:::o;16310:269::-;16420:39;16451:7;16420:39;:::i;:::-;16481:91;16530:41;16554:16;16530:41;:::i;:::-;16522:6;16515:4;16509:11;16481:91;:::i;:::-;16475:4;16468:105;16386:193;16310:269;;;:::o;16585:73::-;16630:3;16585:73;:::o;16664:189::-;16741:32;;:::i;:::-;16782:65;16840:6;16832;16826:4;16782:65;:::i;:::-;16717:136;16664:189;;:::o;16859:186::-;16919:120;16936:3;16929:5;16926:14;16919:120;;;16990:39;17027:1;17020:5;16990:39;:::i;:::-;16963:1;16956:5;16952:13;16943:22;;16919:120;;;16859:186;;:::o;17051:543::-;17152:2;17147:3;17144:11;17141:446;;;17186:38;17218:5;17186:38;:::i;:::-;17270:29;17288:10;17270:29;:::i;:::-;17260:8;17256:44;17453:2;17441:10;17438:18;17435:49;;;17474:8;17459:23;;17435:49;17497:80;17553:22;17571:3;17553:22;:::i;:::-;17543:8;17539:37;17526:11;17497:80;:::i;:::-;17156:431;;17141:446;17051:543;;;:::o;17600:117::-;17654:8;17704:5;17698:4;17694:16;17673:37;;17600:117;;;;:::o;17723:169::-;17767:6;17800:51;17848:1;17844:6;17836:5;17833:1;17829:13;17800:51;:::i;:::-;17796:56;17881:4;17875;17871:15;17861:25;;17774:118;17723:169;;;;:::o;17897:295::-;17973:4;18119:29;18144:3;18138:4;18119:29;:::i;:::-;18111:37;;18181:3;18178:1;18174:11;18168:4;18165:21;18157:29;;17897:295;;;;:::o;18197:1395::-;18314:37;18347:3;18314:37;:::i;:::-;18416:18;18408:6;18405:30;18402:56;;;18438:18;;:::i;:::-;18402:56;18482:38;18514:4;18508:11;18482:38;:::i;:::-;18567:67;18627:6;18619;18613:4;18567:67;:::i;:::-;18661:1;18685:4;18672:17;;18717:2;18709:6;18706:14;18734:1;18729:618;;;;19391:1;19408:6;19405:77;;;19457:9;19452:3;19448:19;19442:26;19433:35;;19405:77;19508:67;19568:6;19561:5;19508:67;:::i;:::-;19502:4;19495:81;19364:222;18699:887;;18729:618;18781:4;18777:9;18769:6;18765:22;18815:37;18847:4;18815:37;:::i;:::-;18874:1;18888:208;18902:7;18899:1;18896:14;18888:208;;;18981:9;18976:3;18972:19;18966:26;18958:6;18951:42;19032:1;19024:6;19020:14;19010:24;;19079:2;19068:9;19064:18;19051:31;;18925:4;18922:1;18918:12;18913:17;;18888:208;;;19124:6;19115:7;19112:19;19109:179;;;19182:9;19177:3;19173:19;19167:26;19225:48;19267:4;19259:6;19255:17;19244:9;19225:48;:::i;:::-;19217:6;19210:64;19132:156;19109:179;19334:1;19330;19322:6;19318:14;19314:22;19308:4;19301:36;18736:611;;;18699:887;;18289:1303;;;18197:1395;;:::o;19598:98::-;19649:6;19683:5;19677:12;19667:22;;19598:98;;;:::o;19702:168::-;19785:11;19819:6;19814:3;19807:19;19859:4;19854:3;19850:14;19835:29;;19702:168;;;;:::o;19876:373::-;19962:3;19990:38;20022:5;19990:38;:::i;:::-;20044:70;20107:6;20102:3;20044:70;:::i;:::-;20037:77;;20123:65;20181:6;20176:3;20169:4;20162:5;20158:16;20123:65;:::i;:::-;20213:29;20235:6;20213:29;:::i;:::-;20208:3;20204:39;20197:46;;19966:283;19876:373;;;;:::o;20255:640::-;20450:4;20488:3;20477:9;20473:19;20465:27;;20502:71;20570:1;20559:9;20555:17;20546:6;20502:71;:::i;:::-;20583:72;20651:2;20640:9;20636:18;20627:6;20583:72;:::i;:::-;20665;20733:2;20722:9;20718:18;20709:6;20665:72;:::i;:::-;20784:9;20778:4;20774:20;20769:2;20758:9;20754:18;20747:48;20812:76;20883:4;20874:6;20812:76;:::i;:::-;20804:84;;20255:640;;;;;;;:::o;20901:141::-;20957:5;20988:6;20982:13;20973:22;;21004:32;21030:5;21004:32;:::i;:::-;20901:141;;;;:::o;21048:349::-;21117:6;21166:2;21154:9;21145:7;21141:23;21137:32;21134:119;;;21172:79;;:::i;:::-;21134:119;21292:1;21317:63;21372:7;21363:6;21352:9;21348:22;21317:63;:::i;:::-;21307:73;;21263:127;21048:349;;;;:::o;21403:435::-;21583:3;21605:95;21696:3;21687:6;21605:95;:::i;:::-;21598:102;;21717:95;21808:3;21799:6;21717:95;:::i;:::-;21710:102;;21829:3;21822:10;;21403:435;;;;;:::o;21844:332::-;21965:4;22003:2;21992:9;21988:18;21980:26;;22016:71;22084:1;22073:9;22069:17;22060:6;22016:71;:::i;:::-;22097:72;22165:2;22154:9;22150:18;22141:6;22097:72;:::i;:::-;21844:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1989400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"burn(uint256)": "infinite",
								"getApproved(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"owner()": "2582",
								"ownerOf(uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"safeMint(address)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "923",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 40556,
									"end": 41837,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 40556,
									"end": 41837,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 40556,
									"end": 41837,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 40982,
									"end": 41020,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 40982,
									"end": 41020,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 40982,
									"end": 41020,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 40982,
									"end": 41020,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 40982,
									"end": 41020,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 40982,
									"end": 41020,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 40982,
									"end": 41020,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 40982,
									"end": 41020,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 40982,
									"end": 41020,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 40982,
									"end": 41020,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 40982,
									"end": 41020,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 40627,
									"end": 40637,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 24950,
									"end": 25066,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24950,
									"end": 25066,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24950,
									"end": 25066,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24950,
									"end": 25066,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24950,
									"end": 25066,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24950,
									"end": 25066,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24950,
									"end": 25066,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24950,
									"end": 25066,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24950,
									"end": 25066,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 24950,
									"end": 25066,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24950,
									"end": 25066,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24950,
									"end": 25066,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 24950,
									"end": 25066,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24950,
									"end": 25066,
									"name": "PUSH",
									"source": 0,
									"value": "6537323100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24950,
									"end": 25066,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24950,
									"end": 25066,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24950,
									"end": 25066,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24950,
									"end": 25066,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24950,
									"end": 25066,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24950,
									"end": 25066,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24950,
									"end": 25066,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24950,
									"end": 25066,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24950,
									"end": 25066,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24950,
									"end": 25066,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24950,
									"end": 25066,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24950,
									"end": 25066,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 24950,
									"end": 25066,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24950,
									"end": 25066,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24950,
									"end": 25066,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 24950,
									"end": 25066,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24950,
									"end": 25066,
									"name": "PUSH",
									"source": 0,
									"value": "3732310000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24950,
									"end": 25066,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24950,
									"end": 25066,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24950,
									"end": 25066,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25025,
									"end": 25030,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25017,
									"end": 25022,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25017,
									"end": 25030,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25017,
									"end": 25030,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25017,
									"end": 25030,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 25017,
									"end": 25030,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 25017,
									"end": 25030,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25017,
									"end": 25030,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 25017,
									"end": 25030,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 25017,
									"end": 25030,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 25017,
									"end": 25030,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25017,
									"end": 25030,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25051,
									"end": 25058,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25041,
									"end": 25048,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25041,
									"end": 25058,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25041,
									"end": 25058,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25041,
									"end": 25058,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 25041,
									"end": 25058,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 25041,
									"end": 25058,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25041,
									"end": 25058,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 25041,
									"end": 25058,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 25041,
									"end": 25058,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 25041,
									"end": 25058,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25041,
									"end": 25058,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24950,
									"end": 25066,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24950,
									"end": 25066,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12090,
									"end": 12091,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12066,
									"end": 12092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 12066,
									"end": 12092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 12066,
									"end": 12078,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12066,
									"end": 12092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 12066,
									"end": 12092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 12066,
									"end": 12092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 12062,
									"end": 12159,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 12062,
									"end": 12159,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12144,
									"end": 12145,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12116,
									"end": 12147,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12116,
									"end": 12147,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12116,
									"end": 12147,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12116,
									"end": 12147,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12116,
									"end": 12147,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12116,
									"end": 12147,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12116,
									"end": 12147,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12116,
									"end": 12147,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 12116,
									"end": 12147,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12116,
									"end": 12147,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12116,
									"end": 12147,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 12116,
									"end": 12147,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12116,
									"end": 12147,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 12116,
									"end": 12147,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12116,
									"end": 12147,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12116,
									"end": 12147,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12116,
									"end": 12147,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12116,
									"end": 12147,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12116,
									"end": 12147,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 12116,
									"end": 12147,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12116,
									"end": 12147,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 12062,
									"end": 12159,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 12062,
									"end": 12159,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 12201,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 12188,
									"end": 12200,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 12187,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 12169,
									"end": 12187,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12169,
									"end": 12187,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 12201,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12169,
									"end": 12201,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 12201,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 12201,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 12169,
									"end": 12201,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12017,
									"end": 12209,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 40556,
									"end": 41837,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 40556,
									"end": 41837,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 13765,
									"end": 13956,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 13765,
									"end": 13956,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13839,
									"end": 13855,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13858,
									"end": 13864,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 13858,
									"end": 13864,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13858,
									"end": 13864,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13858,
									"end": 13864,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 13858,
									"end": 13864,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13858,
									"end": 13864,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 13858,
									"end": 13864,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 13858,
									"end": 13864,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13858,
									"end": 13864,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 13858,
									"end": 13864,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 13858,
									"end": 13864,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 13839,
									"end": 13864,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13839,
									"end": 13864,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13884,
									"end": 13892,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13875,
									"end": 13881,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 13875,
									"end": 13881,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13875,
									"end": 13892,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 13875,
									"end": 13892,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 13875,
									"end": 13892,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13875,
									"end": 13892,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 13875,
									"end": 13892,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13875,
									"end": 13892,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 13875,
									"end": 13892,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 13875,
									"end": 13892,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 13875,
									"end": 13892,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 13875,
									"end": 13892,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13875,
									"end": 13892,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 13875,
									"end": 13892,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 13875,
									"end": 13892,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 13875,
									"end": 13892,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 13875,
									"end": 13892,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 13875,
									"end": 13892,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13875,
									"end": 13892,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 13875,
									"end": 13892,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13939,
									"end": 13947,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13908,
									"end": 13948,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 13908,
									"end": 13948,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 13929,
									"end": 13937,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13908,
									"end": 13948,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 13908,
									"end": 13948,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 13908,
									"end": 13948,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 13908,
									"end": 13948,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13908,
									"end": 13948,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 13908,
									"end": 13948,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13908,
									"end": 13948,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 13908,
									"end": 13948,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13908,
									"end": 13948,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 13908,
									"end": 13948,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 13908,
									"end": 13948,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13908,
									"end": 13948,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 13828,
									"end": 13956,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13765,
									"end": 13956,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13765,
									"end": 13956,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "92"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 1,
									"value": "92"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "94"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "96"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 1,
									"value": "96"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 1,
									"value": "94"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "97"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 1,
									"value": "97"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 1,
									"value": "98"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "98"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5271,
									"end": 5278,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5311,
									"end": 5353,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5304,
									"end": 5309,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5300,
									"end": 5354,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5234,
									"end": 5360,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5403,
									"end": 5410,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "105"
								},
								{
									"begin": 5450,
									"end": 5455,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 5432,
									"end": 5456,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "tag",
									"source": 1,
									"value": "105"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5366,
									"end": 5462,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "107"
								},
								{
									"begin": 5573,
									"end": 5578,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 5555,
									"end": 5579,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "tag",
									"source": 1,
									"value": "107"
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5550,
									"end": 5553,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5543,
									"end": 5580,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5468,
									"end": 5586,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5685,
									"end": 5689,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5723,
									"end": 5725,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5712,
									"end": 5721,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5708,
									"end": 5726,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "109"
								},
								{
									"begin": 5804,
									"end": 5805,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5793,
									"end": 5802,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5789,
									"end": 5806,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5780,
									"end": 5786,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 5736,
									"end": 5807,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "tag",
									"source": 1,
									"value": "109"
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5592,
									"end": 5814,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 40556,
									"end": 41837,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 40556,
									"end": 41837,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 40556,
									"end": 41837,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 40556,
									"end": 41837,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 40556,
									"end": 41837,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 40556,
									"end": 41837,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 40556,
									"end": 41837,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 40556,
									"end": 41837,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 40556,
									"end": 41837,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a4156b5470f38791730aa3a95aad0cc004e94be98e5bdcc2d49c088af2d49e4b64736f6c63430008150033",
									".code": [
										{
											"begin": 40556,
											"end": 41837,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "PUSH",
											"source": 0,
											"value": "40D097C3"
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "PUSH",
											"source": 0,
											"value": "42966C68"
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "PUSH",
											"source": 0,
											"value": "81812FC"
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40556,
											"end": 41837,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41622,
											"end": 41834,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 41622,
											"end": 41834,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41622,
											"end": 41834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 41622,
											"end": 41834,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41622,
											"end": 41834,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41622,
											"end": 41834,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 41622,
											"end": 41834,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41622,
											"end": 41834,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41622,
											"end": 41834,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41622,
											"end": 41834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41622,
											"end": 41834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 41622,
											"end": 41834,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41622,
											"end": 41834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41622,
											"end": 41834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 41622,
											"end": 41834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41622,
											"end": 41834,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 41622,
											"end": 41834,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41622,
											"end": 41834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 41622,
											"end": 41834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41622,
											"end": 41834,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 41622,
											"end": 41834,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41622,
											"end": 41834,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41622,
											"end": 41834,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41622,
											"end": 41834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 41622,
											"end": 41834,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41622,
											"end": 41834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41622,
											"end": 41834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 41622,
											"end": 41834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41622,
											"end": 41834,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 41622,
											"end": 41834,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41622,
											"end": 41834,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41622,
											"end": 41834,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41622,
											"end": 41834,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41622,
											"end": 41834,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41622,
											"end": 41834,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41622,
											"end": 41834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41622,
											"end": 41834,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 25973,
											"end": 26066,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25973,
											"end": 26066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25973,
											"end": 26066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 25973,
											"end": 26066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 25973,
											"end": 26066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25973,
											"end": 26066,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 25973,
											"end": 26066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25973,
											"end": 26066,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25973,
											"end": 26066,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25973,
											"end": 26066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 25973,
											"end": 26066,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25973,
											"end": 26066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25973,
											"end": 26066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 25973,
											"end": 26066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25973,
											"end": 26066,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 25973,
											"end": 26066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25973,
											"end": 26066,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25973,
											"end": 26066,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25973,
											"end": 26066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25973,
											"end": 26066,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25973,
											"end": 26066,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25973,
											"end": 26066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25973,
											"end": 26066,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 27197,
											"end": 27357,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 27197,
											"end": 27357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27197,
											"end": 27357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 27197,
											"end": 27357,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27197,
											"end": 27357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27197,
											"end": 27357,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27197,
											"end": 27357,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27197,
											"end": 27357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27197,
											"end": 27357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27197,
											"end": 27357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27197,
											"end": 27357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 27197,
											"end": 27357,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27197,
											"end": 27357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27197,
											"end": 27357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 27197,
											"end": 27357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27197,
											"end": 27357,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 27197,
											"end": 27357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27197,
											"end": 27357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 27197,
											"end": 27357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27197,
											"end": 27357,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 27197,
											"end": 27357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27197,
											"end": 27357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27197,
											"end": 27357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27197,
											"end": 27357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 27197,
											"end": 27357,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27197,
											"end": 27357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27197,
											"end": 27357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 27197,
											"end": 27357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27197,
											"end": 27357,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 27197,
											"end": 27357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27197,
											"end": 27357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27197,
											"end": 27357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27197,
											"end": 27357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27197,
											"end": 27357,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27197,
											"end": 27357,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27197,
											"end": 27357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27197,
											"end": 27357,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 27014,
											"end": 27131,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 27014,
											"end": 27131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27014,
											"end": 27131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27014,
											"end": 27131,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27014,
											"end": 27131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27014,
											"end": 27131,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27014,
											"end": 27131,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27014,
											"end": 27131,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27014,
											"end": 27131,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27014,
											"end": 27131,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27014,
											"end": 27131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 27014,
											"end": 27131,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27014,
											"end": 27131,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27014,
											"end": 27131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 27014,
											"end": 27131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27014,
											"end": 27131,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 27014,
											"end": 27131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27014,
											"end": 27131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 27014,
											"end": 27131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27014,
											"end": 27131,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27014,
											"end": 27131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27014,
											"end": 27131,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 27869,
											"end": 28457,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 27869,
											"end": 28457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27869,
											"end": 28457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 27869,
											"end": 28457,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27869,
											"end": 28457,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27869,
											"end": 28457,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27869,
											"end": 28457,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27869,
											"end": 28457,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27869,
											"end": 28457,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27869,
											"end": 28457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27869,
											"end": 28457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 27869,
											"end": 28457,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27869,
											"end": 28457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27869,
											"end": 28457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 27869,
											"end": 28457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27869,
											"end": 28457,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 27869,
											"end": 28457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27869,
											"end": 28457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 27869,
											"end": 28457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27869,
											"end": 28457,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 27869,
											"end": 28457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27869,
											"end": 28457,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 41034,
											"end": 41338,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 41034,
											"end": 41338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41034,
											"end": 41338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 41034,
											"end": 41338,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41034,
											"end": 41338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41034,
											"end": 41338,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 41034,
											"end": 41338,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41034,
											"end": 41338,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41034,
											"end": 41338,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41034,
											"end": 41338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41034,
											"end": 41338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 41034,
											"end": 41338,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41034,
											"end": 41338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41034,
											"end": 41338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 41034,
											"end": 41338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41034,
											"end": 41338,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 41034,
											"end": 41338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41034,
											"end": 41338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 41034,
											"end": 41338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41034,
											"end": 41338,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 41034,
											"end": 41338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41034,
											"end": 41338,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 28528,
											"end": 28664,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 28528,
											"end": 28664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28528,
											"end": 28664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 28528,
											"end": 28664,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28528,
											"end": 28664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28528,
											"end": 28664,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28528,
											"end": 28664,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28528,
											"end": 28664,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28528,
											"end": 28664,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28528,
											"end": 28664,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28528,
											"end": 28664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 28528,
											"end": 28664,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28528,
											"end": 28664,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28528,
											"end": 28664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 28528,
											"end": 28664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28528,
											"end": 28664,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 28528,
											"end": 28664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28528,
											"end": 28664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 28528,
											"end": 28664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28528,
											"end": 28664,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 28528,
											"end": 28664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28528,
											"end": 28664,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38493,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 38173,
											"end": 38493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 38173,
											"end": 38493,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38173,
											"end": 38493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38493,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38493,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38493,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 38173,
											"end": 38493,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 38173,
											"end": 38493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38493,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 38173,
											"end": 38493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 38173,
											"end": 38493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38493,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 38173,
											"end": 38493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38493,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 25784,
											"end": 25906,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 25784,
											"end": 25906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25784,
											"end": 25906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 25784,
											"end": 25906,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25784,
											"end": 25906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25784,
											"end": 25906,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25784,
											"end": 25906,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25784,
											"end": 25906,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25784,
											"end": 25906,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25784,
											"end": 25906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25784,
											"end": 25906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 25784,
											"end": 25906,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25784,
											"end": 25906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25784,
											"end": 25906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 25784,
											"end": 25906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25784,
											"end": 25906,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 25784,
											"end": 25906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25784,
											"end": 25906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 25784,
											"end": 25906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25784,
											"end": 25906,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 25784,
											"end": 25906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25784,
											"end": 25906,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25784,
											"end": 25906,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25784,
											"end": 25906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 25784,
											"end": 25906,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25784,
											"end": 25906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25784,
											"end": 25906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 25784,
											"end": 25906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25784,
											"end": 25906,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 25784,
											"end": 25906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25784,
											"end": 25906,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25784,
											"end": 25906,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25784,
											"end": 25906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25784,
											"end": 25906,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25784,
											"end": 25906,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25784,
											"end": 25906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25784,
											"end": 25906,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 25507,
											"end": 25722,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 25507,
											"end": 25722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25507,
											"end": 25722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 25507,
											"end": 25722,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25507,
											"end": 25722,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25507,
											"end": 25722,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25507,
											"end": 25722,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25507,
											"end": 25722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25507,
											"end": 25722,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25507,
											"end": 25722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25507,
											"end": 25722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 25507,
											"end": 25722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25507,
											"end": 25722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25507,
											"end": 25722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 25507,
											"end": 25722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25507,
											"end": 25722,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 25507,
											"end": 25722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25507,
											"end": 25722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 25507,
											"end": 25722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25507,
											"end": 25722,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 25507,
											"end": 25722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25507,
											"end": 25722,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25507,
											"end": 25722,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25507,
											"end": 25722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 25507,
											"end": 25722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25507,
											"end": 25722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25507,
											"end": 25722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 25507,
											"end": 25722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25507,
											"end": 25722,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 25507,
											"end": 25722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25507,
											"end": 25722,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25507,
											"end": 25722,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25507,
											"end": 25722,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25507,
											"end": 25722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25507,
											"end": 25722,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25507,
											"end": 25722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25507,
											"end": 25722,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13123,
											"end": 13228,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 13123,
											"end": 13228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13123,
											"end": 13228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 13123,
											"end": 13228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 13123,
											"end": 13228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13123,
											"end": 13228,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 13123,
											"end": 13228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13123,
											"end": 13228,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 12448,
											"end": 12535,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 12448,
											"end": 12535,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12448,
											"end": 12535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 12448,
											"end": 12535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 12448,
											"end": 12535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12448,
											"end": 12535,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 12448,
											"end": 12535,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12448,
											"end": 12535,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12448,
											"end": 12535,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12448,
											"end": 12535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 12448,
											"end": 12535,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12448,
											"end": 12535,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12448,
											"end": 12535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 12448,
											"end": 12535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12448,
											"end": 12535,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 12448,
											"end": 12535,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12448,
											"end": 12535,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12448,
											"end": 12535,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12448,
											"end": 12535,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12448,
											"end": 12535,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12448,
											"end": 12535,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12448,
											"end": 12535,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12448,
											"end": 12535,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26232,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 26135,
											"end": 26232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 26135,
											"end": 26232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 26135,
											"end": 26232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26232,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 26135,
											"end": 26232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26232,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26135,
											"end": 26232,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 26135,
											"end": 26232,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 26135,
											"end": 26232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26232,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 26135,
											"end": 26232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26232,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26135,
											"end": 26232,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26232,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26232,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26232,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26232,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 27429,
											"end": 27576,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 27429,
											"end": 27576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27429,
											"end": 27576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 27429,
											"end": 27576,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27429,
											"end": 27576,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27429,
											"end": 27576,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27429,
											"end": 27576,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27429,
											"end": 27576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27429,
											"end": 27576,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27429,
											"end": 27576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27429,
											"end": 27576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 27429,
											"end": 27576,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27429,
											"end": 27576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27429,
											"end": 27576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 27429,
											"end": 27576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27429,
											"end": 27576,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 27429,
											"end": 27576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27429,
											"end": 27576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 27429,
											"end": 27576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27429,
											"end": 27576,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 27429,
											"end": 27576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27429,
											"end": 27576,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 28735,
											"end": 28946,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 28735,
											"end": 28946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28735,
											"end": 28946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 28735,
											"end": 28946,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28735,
											"end": 28946,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28735,
											"end": 28946,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28735,
											"end": 28946,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28735,
											"end": 28946,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28735,
											"end": 28946,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28735,
											"end": 28946,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28735,
											"end": 28946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 28735,
											"end": 28946,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28735,
											"end": 28946,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28735,
											"end": 28946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 28735,
											"end": 28946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28735,
											"end": 28946,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 28735,
											"end": 28946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28735,
											"end": 28946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 28735,
											"end": 28946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28735,
											"end": 28946,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 28735,
											"end": 28946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28735,
											"end": 28946,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 41418,
											"end": 41614,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 41418,
											"end": 41614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41418,
											"end": 41614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 41418,
											"end": 41614,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41418,
											"end": 41614,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41418,
											"end": 41614,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 41418,
											"end": 41614,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41418,
											"end": 41614,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41418,
											"end": 41614,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41418,
											"end": 41614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41418,
											"end": 41614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 41418,
											"end": 41614,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41418,
											"end": 41614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41418,
											"end": 41614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 41418,
											"end": 41614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41418,
											"end": 41614,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 41418,
											"end": 41614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41418,
											"end": 41614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 41418,
											"end": 41614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41418,
											"end": 41614,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 41418,
											"end": 41614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41418,
											"end": 41614,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41418,
											"end": 41614,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41418,
											"end": 41614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 41418,
											"end": 41614,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41418,
											"end": 41614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41418,
											"end": 41614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 41418,
											"end": 41614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41418,
											"end": 41614,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 41418,
											"end": 41614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41418,
											"end": 41614,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41418,
											"end": 41614,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41418,
											"end": 41614,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41418,
											"end": 41614,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41418,
											"end": 41614,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41418,
											"end": 41614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41418,
											"end": 41614,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27802,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 27647,
											"end": 27802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 27647,
											"end": 27802,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27647,
											"end": 27802,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27802,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27802,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27802,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27802,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 27647,
											"end": 27802,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 27647,
											"end": 27802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27802,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 27647,
											"end": 27802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 27647,
											"end": 27802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27802,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 27647,
											"end": 27802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27802,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27647,
											"end": 27802,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 27647,
											"end": 27802,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 27647,
											"end": 27802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27802,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 27647,
											"end": 27802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27802,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27647,
											"end": 27802,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27802,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27802,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27802,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27802,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13383,
											"end": 13605,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13383,
											"end": 13605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13383,
											"end": 13605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 13383,
											"end": 13605,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13383,
											"end": 13605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13383,
											"end": 13605,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13383,
											"end": 13605,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13383,
											"end": 13605,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13383,
											"end": 13605,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13383,
											"end": 13605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13383,
											"end": 13605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 13383,
											"end": 13605,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13383,
											"end": 13605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13383,
											"end": 13605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 13383,
											"end": 13605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13383,
											"end": 13605,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 13383,
											"end": 13605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13383,
											"end": 13605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 13383,
											"end": 13605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13383,
											"end": 13605,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 13383,
											"end": 13605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13383,
											"end": 13605,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 41622,
											"end": 41834,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 41622,
											"end": 41834,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41761,
											"end": 41765,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41790,
											"end": 41826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 41814,
											"end": 41825,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41790,
											"end": 41813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 41790,
											"end": 41826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41790,
											"end": 41826,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 41790,
											"end": 41826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41783,
											"end": 41826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41783,
											"end": 41826,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41622,
											"end": 41834,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41622,
											"end": 41834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41622,
											"end": 41834,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41622,
											"end": 41834,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25973,
											"end": 26066,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 25973,
											"end": 26066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26020,
											"end": 26033,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 26053,
											"end": 26058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 26046,
											"end": 26058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 26046,
											"end": 26058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26046,
											"end": 26058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25973,
											"end": 26066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25973,
											"end": 26066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27197,
											"end": 27357,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 27197,
											"end": 27357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27266,
											"end": 27273,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27286,
											"end": 27308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 27300,
											"end": 27307,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27286,
											"end": 27299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 27286,
											"end": 27308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27286,
											"end": 27308,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 27286,
											"end": 27308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27286,
											"end": 27308,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27328,
											"end": 27349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 27341,
											"end": 27348,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27328,
											"end": 27340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 27328,
											"end": 27349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27328,
											"end": 27349,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 27328,
											"end": 27349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27321,
											"end": 27349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27321,
											"end": 27349,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27197,
											"end": 27357,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27197,
											"end": 27357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27197,
											"end": 27357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27197,
											"end": 27357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27014,
											"end": 27131,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 27014,
											"end": 27131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27088,
											"end": 27123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 27097,
											"end": 27099,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27101,
											"end": 27108,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27110,
											"end": 27122,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 27110,
											"end": 27120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 27110,
											"end": 27122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27110,
											"end": 27122,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 27110,
											"end": 27122,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27088,
											"end": 27096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 27088,
											"end": 27123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27088,
											"end": 27123,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 27088,
											"end": 27123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27014,
											"end": 27131,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27014,
											"end": 27131,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27014,
											"end": 27131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27869,
											"end": 28457,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 27869,
											"end": 28457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27978,
											"end": 27979,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27964,
											"end": 27980,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27964,
											"end": 27980,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27964,
											"end": 27966,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27964,
											"end": 27980,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27964,
											"end": 27980,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27964,
											"end": 27980,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27960,
											"end": 28049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 27960,
											"end": 28049,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28034,
											"end": 28035,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28004,
											"end": 28037,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28004,
											"end": 28037,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28004,
											"end": 28037,
											"name": "PUSH",
											"source": 0,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28004,
											"end": 28037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28004,
											"end": 28037,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28004,
											"end": 28037,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28004,
											"end": 28037,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28004,
											"end": 28037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 28004,
											"end": 28037,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28004,
											"end": 28037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28004,
											"end": 28037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 28004,
											"end": 28037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28004,
											"end": 28037,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 28004,
											"end": 28037,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28004,
											"end": 28037,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28004,
											"end": 28037,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28004,
											"end": 28037,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28004,
											"end": 28037,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28004,
											"end": 28037,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28004,
											"end": 28037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28004,
											"end": 28037,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27960,
											"end": 28049,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 27960,
											"end": 28049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28270,
											"end": 28291,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28294,
											"end": 28328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 28302,
											"end": 28304,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28306,
											"end": 28313,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28315,
											"end": 28327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 28315,
											"end": 28325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 28315,
											"end": 28327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28315,
											"end": 28327,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 28315,
											"end": 28327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28294,
											"end": 28301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 28294,
											"end": 28328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28294,
											"end": 28328,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 28294,
											"end": 28328,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28270,
											"end": 28328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28270,
											"end": 28328,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28360,
											"end": 28364,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28343,
											"end": 28364,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28343,
											"end": 28364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28343,
											"end": 28356,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28343,
											"end": 28364,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28343,
											"end": 28364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28343,
											"end": 28364,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28339,
											"end": 28450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 28339,
											"end": 28450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28409,
											"end": 28413,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28415,
											"end": 28422,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28424,
											"end": 28437,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28388,
											"end": 28438,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28388,
											"end": 28438,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28388,
											"end": 28438,
											"name": "PUSH",
											"source": 0,
											"value": "64283D7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28388,
											"end": 28438,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28388,
											"end": 28438,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28388,
											"end": 28438,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28388,
											"end": 28438,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28388,
											"end": 28438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 28388,
											"end": 28438,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 28388,
											"end": 28438,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28388,
											"end": 28438,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28388,
											"end": 28438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28388,
											"end": 28438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 28388,
											"end": 28438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28388,
											"end": 28438,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 28388,
											"end": 28438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28388,
											"end": 28438,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28388,
											"end": 28438,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28388,
											"end": 28438,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28388,
											"end": 28438,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28388,
											"end": 28438,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28388,
											"end": 28438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28388,
											"end": 28438,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28339,
											"end": 28450,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 28339,
											"end": 28450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27949,
											"end": 28457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27869,
											"end": 28457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27869,
											"end": 28457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27869,
											"end": 28457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27869,
											"end": 28457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41034,
											"end": 41338,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 41034,
											"end": 41338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40846,
											"end": 40861,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 40846,
											"end": 40861,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40846,
											"end": 40861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40846,
											"end": 40861,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40846,
											"end": 40861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40846,
											"end": 40861,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 40846,
											"end": 40861,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 40846,
											"end": 40861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40846,
											"end": 40861,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 40846,
											"end": 40861,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 40846,
											"end": 40861,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40845,
											"end": 40861,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40837,
											"end": 40889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 40837,
											"end": 40889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40837,
											"end": 40889,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40837,
											"end": 40889,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40837,
											"end": 40889,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 40837,
											"end": 40889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40837,
											"end": 40889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40837,
											"end": 40889,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40837,
											"end": 40889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40837,
											"end": 40889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 40837,
											"end": 40889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40837,
											"end": 40889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 40837,
											"end": 40889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40837,
											"end": 40889,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 40837,
											"end": 40889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40837,
											"end": 40889,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40837,
											"end": 40889,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40837,
											"end": 40889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40837,
											"end": 40889,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40837,
											"end": 40889,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40837,
											"end": 40889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40837,
											"end": 40889,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40837,
											"end": 40889,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 40837,
											"end": 40889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40918,
											"end": 40922,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 40900,
											"end": 40915,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 40900,
											"end": 40915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40900,
											"end": 40922,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 40900,
											"end": 40922,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40922,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40922,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40922,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40922,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 40900,
											"end": 40922,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40922,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40922,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40922,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40922,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40922,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40922,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40922,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40922,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40922,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12347,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 12334,
											"end": 12345,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 12334,
											"end": 12347,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12347,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 12334,
											"end": 12347,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41107,
											"end": 41122,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41125,
											"end": 41150,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 41125,
											"end": 41140,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 41125,
											"end": 41148,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 41125,
											"end": 41150,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41125,
											"end": 41150,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 41125,
											"end": 41150,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41107,
											"end": 41150,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41107,
											"end": 41150,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41161,
											"end": 41188,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 41161,
											"end": 41176,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 41161,
											"end": 41186,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 41161,
											"end": 41188,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41161,
											"end": 41188,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 41161,
											"end": 41188,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41199,
											"end": 41216,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41233,
											"end": 41251,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 41233,
											"end": 41240,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41233,
											"end": 41249,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 41233,
											"end": 41251,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41233,
											"end": 41251,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 41233,
											"end": 41251,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41219,
											"end": 41260,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41219,
											"end": 41260,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41219,
											"end": 41260,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41219,
											"end": 41260,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41219,
											"end": 41260,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 41219,
											"end": 41260,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41219,
											"end": 41260,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41219,
											"end": 41260,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 41219,
											"end": 41260,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41219,
											"end": 41260,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 41219,
											"end": 41260,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41219,
											"end": 41260,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41219,
											"end": 41260,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41219,
											"end": 41260,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41219,
											"end": 41260,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41219,
											"end": 41260,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41219,
											"end": 41260,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41219,
											"end": 41260,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41219,
											"end": 41260,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41219,
											"end": 41260,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41219,
											"end": 41260,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41219,
											"end": 41260,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41219,
											"end": 41260,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41199,
											"end": 41260,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41199,
											"end": 41260,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41271,
											"end": 41297,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 41284,
											"end": 41291,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41293,
											"end": 41296,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41271,
											"end": 41283,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 41271,
											"end": 41297,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41271,
											"end": 41297,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 41271,
											"end": 41297,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41308,
											"end": 41330,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 41318,
											"end": 41320,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41322,
											"end": 41329,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41308,
											"end": 41317,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 41308,
											"end": 41330,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41308,
											"end": 41330,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 41308,
											"end": 41330,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41096,
											"end": 41338,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41096,
											"end": 41338,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40963,
											"end": 40968,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40945,
											"end": 40960,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 40945,
											"end": 40960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40945,
											"end": 40968,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 40945,
											"end": 40968,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 40945,
											"end": 40968,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40945,
											"end": 40968,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40945,
											"end": 40968,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40945,
											"end": 40968,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 40945,
											"end": 40968,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 40945,
											"end": 40968,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 40945,
											"end": 40968,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40945,
											"end": 40968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40945,
											"end": 40968,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40945,
											"end": 40968,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40945,
											"end": 40968,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40945,
											"end": 40968,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 40945,
											"end": 40968,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 40945,
											"end": 40968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40945,
											"end": 40968,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 40945,
											"end": 40968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41034,
											"end": 41338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41034,
											"end": 41338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28528,
											"end": 28664,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 28528,
											"end": 28664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28617,
											"end": 28656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 28634,
											"end": 28638,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28640,
											"end": 28642,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28644,
											"end": 28651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28617,
											"end": 28656,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28617,
											"end": 28656,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28617,
											"end": 28656,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28617,
											"end": 28656,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28617,
											"end": 28656,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28617,
											"end": 28656,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28617,
											"end": 28656,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28617,
											"end": 28656,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28617,
											"end": 28656,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28617,
											"end": 28656,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28617,
											"end": 28656,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28617,
											"end": 28656,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28617,
											"end": 28633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 28617,
											"end": 28656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28617,
											"end": 28656,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 28617,
											"end": 28656,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28528,
											"end": 28664,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28528,
											"end": 28664,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28528,
											"end": 28664,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28528,
											"end": 28664,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38493,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 38173,
											"end": 38493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38443,
											"end": 38485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 38459,
											"end": 38460,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38463,
											"end": 38470,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38472,
											"end": 38484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 38472,
											"end": 38482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 38472,
											"end": 38484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38472,
											"end": 38484,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 38472,
											"end": 38484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38443,
											"end": 38450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 38443,
											"end": 38485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38443,
											"end": 38485,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 38443,
											"end": 38485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38443,
											"end": 38485,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25784,
											"end": 25906,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 25784,
											"end": 25906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25849,
											"end": 25856,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25876,
											"end": 25898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 25890,
											"end": 25897,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25876,
											"end": 25889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 25876,
											"end": 25898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25876,
											"end": 25898,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 25876,
											"end": 25898,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25869,
											"end": 25898,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25869,
											"end": 25898,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25784,
											"end": 25906,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25784,
											"end": 25906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25784,
											"end": 25906,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25784,
											"end": 25906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25507,
											"end": 25722,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 25507,
											"end": 25722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25572,
											"end": 25579,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25613,
											"end": 25614,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25596,
											"end": 25615,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25596,
											"end": 25615,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25596,
											"end": 25601,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25596,
											"end": 25615,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25596,
											"end": 25615,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25596,
											"end": 25615,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25592,
											"end": 25681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 25592,
											"end": 25681,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25666,
											"end": 25667,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25639,
											"end": 25669,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25639,
											"end": 25669,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25639,
											"end": 25669,
											"name": "PUSH",
											"source": 0,
											"value": "89C62B6400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25639,
											"end": 25669,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25639,
											"end": 25669,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25639,
											"end": 25669,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25639,
											"end": 25669,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25639,
											"end": 25669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 25639,
											"end": 25669,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25639,
											"end": 25669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25639,
											"end": 25669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 25639,
											"end": 25669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25639,
											"end": 25669,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 25639,
											"end": 25669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25639,
											"end": 25669,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25639,
											"end": 25669,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25639,
											"end": 25669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25639,
											"end": 25669,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25639,
											"end": 25669,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25639,
											"end": 25669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25639,
											"end": 25669,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25592,
											"end": 25681,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 25592,
											"end": 25681,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25698,
											"end": 25707,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 25698,
											"end": 25714,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25708,
											"end": 25713,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25698,
											"end": 25714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25698,
											"end": 25714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25698,
											"end": 25714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25698,
											"end": 25714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25698,
											"end": 25714,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25698,
											"end": 25714,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25698,
											"end": 25714,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25698,
											"end": 25714,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25698,
											"end": 25714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25698,
											"end": 25714,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25698,
											"end": 25714,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25698,
											"end": 25714,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25698,
											"end": 25714,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25698,
											"end": 25714,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25698,
											"end": 25714,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25698,
											"end": 25714,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25691,
											"end": 25714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25691,
											"end": 25714,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25507,
											"end": 25722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25507,
											"end": 25722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25507,
											"end": 25722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25507,
											"end": 25722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13123,
											"end": 13228,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 13123,
											"end": 13228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 12334,
											"end": 12345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 12334,
											"end": 12347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12347,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 12334,
											"end": 12347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13190,
											"end": 13220,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 13217,
											"end": 13218,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13190,
											"end": 13208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 13190,
											"end": 13220,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13190,
											"end": 13220,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 13190,
											"end": 13220,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13123,
											"end": 13228,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12448,
											"end": 12535,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 12448,
											"end": 12535,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12494,
											"end": 12501,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12521,
											"end": 12527,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 12521,
											"end": 12527,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12521,
											"end": 12527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12521,
											"end": 12527,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12521,
											"end": 12527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12521,
											"end": 12527,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12521,
											"end": 12527,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 12521,
											"end": 12527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12521,
											"end": 12527,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12521,
											"end": 12527,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12521,
											"end": 12527,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12514,
											"end": 12527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12514,
											"end": 12527,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12448,
											"end": 12535,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12448,
											"end": 12535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26232,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 26135,
											"end": 26232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26184,
											"end": 26197,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 26217,
											"end": 26224,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 26210,
											"end": 26224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 26210,
											"end": 26224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26210,
											"end": 26224,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27429,
											"end": 27576,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 27429,
											"end": 27576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27516,
											"end": 27568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 27535,
											"end": 27547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 27535,
											"end": 27545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 27535,
											"end": 27547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27547,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 27535,
											"end": 27547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27549,
											"end": 27557,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27559,
											"end": 27567,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27516,
											"end": 27534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 27516,
											"end": 27568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27516,
											"end": 27568,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 27516,
											"end": 27568,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27429,
											"end": 27576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27429,
											"end": 27576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27429,
											"end": 27576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28735,
											"end": 28946,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 28735,
											"end": 28946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28849,
											"end": 28880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 28862,
											"end": 28866,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28868,
											"end": 28870,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28872,
											"end": 28879,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28849,
											"end": 28861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 28849,
											"end": 28880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28849,
											"end": 28880,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 28849,
											"end": 28880,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28891,
											"end": 28938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 28914,
											"end": 28918,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28920,
											"end": 28922,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28924,
											"end": 28931,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28933,
											"end": 28937,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28891,
											"end": 28913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 28891,
											"end": 28938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28891,
											"end": 28938,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 28891,
											"end": 28938,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28735,
											"end": 28946,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28735,
											"end": 28946,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28735,
											"end": 28946,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28735,
											"end": 28946,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28735,
											"end": 28946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41418,
											"end": 41614,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 41418,
											"end": 41614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41545,
											"end": 41558,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 41583,
											"end": 41606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 41598,
											"end": 41605,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41583,
											"end": 41597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 41583,
											"end": 41606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41583,
											"end": 41606,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 41583,
											"end": 41606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41576,
											"end": 41606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41576,
											"end": 41606,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41418,
											"end": 41614,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41418,
											"end": 41614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41418,
											"end": 41614,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41418,
											"end": 41614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27802,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 27647,
											"end": 27802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27735,
											"end": 27739,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27759,
											"end": 27777,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 27759,
											"end": 27784,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27778,
											"end": 27783,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27759,
											"end": 27784,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27759,
											"end": 27784,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27759,
											"end": 27784,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27759,
											"end": 27784,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27759,
											"end": 27784,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27759,
											"end": 27784,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27759,
											"end": 27784,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27759,
											"end": 27784,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27759,
											"end": 27784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27759,
											"end": 27784,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27759,
											"end": 27784,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27759,
											"end": 27784,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27759,
											"end": 27784,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27759,
											"end": 27784,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27759,
											"end": 27784,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27759,
											"end": 27794,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27785,
											"end": 27793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27759,
											"end": 27794,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27759,
											"end": 27794,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27759,
											"end": 27794,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27759,
											"end": 27794,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27759,
											"end": 27794,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27759,
											"end": 27794,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27759,
											"end": 27794,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27759,
											"end": 27794,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27759,
											"end": 27794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27759,
											"end": 27794,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27759,
											"end": 27794,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27759,
											"end": 27794,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27759,
											"end": 27794,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27759,
											"end": 27794,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27759,
											"end": 27794,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27759,
											"end": 27794,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27759,
											"end": 27794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27759,
											"end": 27794,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27759,
											"end": 27794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27759,
											"end": 27794,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 27759,
											"end": 27794,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 27759,
											"end": 27794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27759,
											"end": 27794,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 27759,
											"end": 27794,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 27759,
											"end": 27794,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27752,
											"end": 27794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27752,
											"end": 27794,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27802,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27802,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27802,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27802,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27647,
											"end": 27802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13383,
											"end": 13605,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 13383,
											"end": 13605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 12334,
											"end": 12345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 12334,
											"end": 12347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12334,
											"end": 12347,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 12334,
											"end": 12347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13490,
											"end": 13491,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13470,
											"end": 13492,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13470,
											"end": 13492,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13470,
											"end": 13478,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13470,
											"end": 13492,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13470,
											"end": 13492,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13470,
											"end": 13492,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13466,
											"end": 13559,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 13466,
											"end": 13559,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13544,
											"end": 13545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13516,
											"end": 13547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13516,
											"end": 13547,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13516,
											"end": 13547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13516,
											"end": 13547,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13516,
											"end": 13547,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13516,
											"end": 13547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13516,
											"end": 13547,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13516,
											"end": 13547,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 13516,
											"end": 13547,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13516,
											"end": 13547,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13516,
											"end": 13547,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 13516,
											"end": 13547,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13516,
											"end": 13547,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 13516,
											"end": 13547,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13516,
											"end": 13547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13516,
											"end": 13547,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13516,
											"end": 13547,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13516,
											"end": 13547,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13516,
											"end": 13547,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13516,
											"end": 13547,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13516,
											"end": 13547,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13466,
											"end": 13559,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 13466,
											"end": 13559,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13569,
											"end": 13597,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 13588,
											"end": 13596,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13569,
											"end": 13587,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 13569,
											"end": 13597,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13569,
											"end": 13597,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 13569,
											"end": 13597,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13383,
											"end": 13605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13383,
											"end": 13605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39308,
											"end": 39517,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 39308,
											"end": 39517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39410,
											"end": 39414,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39123,
											"end": 39133,
											"name": "PUSH",
											"source": 0,
											"value": "49064906"
										},
										{
											"begin": 39116,
											"end": 39134,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 39116,
											"end": 39134,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 39434,
											"end": 39469,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39434,
											"end": 39469,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 39434,
											"end": 39469,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39434,
											"end": 39445,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39434,
											"end": 39469,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39434,
											"end": 39469,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 39434,
											"end": 39469,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39434,
											"end": 39469,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39434,
											"end": 39509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39434,
											"end": 39509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 39434,
											"end": 39509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39434,
											"end": 39509,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39473,
											"end": 39509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 39497,
											"end": 39508,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39473,
											"end": 39496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 39473,
											"end": 39509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39473,
											"end": 39509,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 39473,
											"end": 39509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39434,
											"end": 39509,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 39434,
											"end": 39509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39427,
											"end": 39509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39427,
											"end": 39509,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39308,
											"end": 39517,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39308,
											"end": 39517,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39308,
											"end": 39517,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39308,
											"end": 39517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36023,
											"end": 36270,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 36023,
											"end": 36270,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36086,
											"end": 36093,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36106,
											"end": 36119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36122,
											"end": 36139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 36131,
											"end": 36138,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36122,
											"end": 36130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 36122,
											"end": 36139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36122,
											"end": 36139,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 36122,
											"end": 36139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36106,
											"end": 36139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36106,
											"end": 36139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36171,
											"end": 36172,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36154,
											"end": 36173,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36154,
											"end": 36173,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36154,
											"end": 36159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36154,
											"end": 36173,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36154,
											"end": 36173,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36154,
											"end": 36173,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36150,
											"end": 36240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 36150,
											"end": 36240,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36220,
											"end": 36227,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36197,
											"end": 36228,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36197,
											"end": 36228,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36197,
											"end": 36228,
											"name": "PUSH",
											"source": 0,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 36197,
											"end": 36228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36197,
											"end": 36228,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36197,
											"end": 36228,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36197,
											"end": 36228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36197,
											"end": 36228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 36197,
											"end": 36228,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36197,
											"end": 36228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36197,
											"end": 36228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 36197,
											"end": 36228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36197,
											"end": 36228,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 36197,
											"end": 36228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36197,
											"end": 36228,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36197,
											"end": 36228,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36197,
											"end": 36228,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36197,
											"end": 36228,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36197,
											"end": 36228,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36197,
											"end": 36228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36197,
											"end": 36228,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36150,
											"end": 36240,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 36150,
											"end": 36240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36257,
											"end": 36262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36250,
											"end": 36262,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36250,
											"end": 36262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36250,
											"end": 36262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36023,
											"end": 36270,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36023,
											"end": 36270,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36023,
											"end": 36270,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36023,
											"end": 36270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29708,
											"end": 29837,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 29708,
											"end": 29837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29785,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29805,
											"end": 29820,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29805,
											"end": 29829,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29821,
											"end": 29828,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29805,
											"end": 29829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29805,
											"end": 29829,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29805,
											"end": 29829,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29805,
											"end": 29829,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29805,
											"end": 29829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29805,
											"end": 29829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29805,
											"end": 29829,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29805,
											"end": 29829,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29805,
											"end": 29829,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29805,
											"end": 29829,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29805,
											"end": 29829,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29805,
											"end": 29829,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29805,
											"end": 29829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29805,
											"end": 29829,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29805,
											"end": 29829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29805,
											"end": 29829,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29805,
											"end": 29829,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29805,
											"end": 29829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29805,
											"end": 29829,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 29805,
											"end": 29829,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29805,
											"end": 29829,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29798,
											"end": 29829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29798,
											"end": 29829,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29708,
											"end": 29837,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29708,
											"end": 29837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29708,
											"end": 29837,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29708,
											"end": 29837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10672,
											"end": 10770,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 10672,
											"end": 10770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10725,
											"end": 10732,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10752,
											"end": 10762,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10745,
											"end": 10762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10745,
											"end": 10762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10672,
											"end": 10770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10672,
											"end": 10770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34255,
											"end": 34377,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 34255,
											"end": 34377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34336,
											"end": 34369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 34345,
											"end": 34347,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34349,
											"end": 34356,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34358,
											"end": 34362,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34364,
											"end": 34368,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 34336,
											"end": 34344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 34336,
											"end": 34369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34336,
											"end": 34369,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 34336,
											"end": 34369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34255,
											"end": 34377,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34255,
											"end": 34377,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34255,
											"end": 34377,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34255,
											"end": 34377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31863,
											"end": 32687,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 31863,
											"end": 32687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31949,
											"end": 31956,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31969,
											"end": 31981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31984,
											"end": 32001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 31993,
											"end": 32000,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31984,
											"end": 31992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 31984,
											"end": 32001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31984,
											"end": 32001,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 31984,
											"end": 32001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31969,
											"end": 32001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31969,
											"end": 32001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32080,
											"end": 32081,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32064,
											"end": 32082,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32064,
											"end": 32082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32064,
											"end": 32068,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32064,
											"end": 32082,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32064,
											"end": 32082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32064,
											"end": 32082,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 32060,
											"end": 32148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 32060,
											"end": 32148,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32099,
											"end": 32136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 32116,
											"end": 32120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32122,
											"end": 32126,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32128,
											"end": 32135,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 32099,
											"end": 32115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 32099,
											"end": 32136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32099,
											"end": 32136,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 32099,
											"end": 32136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32060,
											"end": 32148,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 32060,
											"end": 32148,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32211,
											"end": 32212,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32195,
											"end": 32213,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32195,
											"end": 32213,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32195,
											"end": 32199,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32195,
											"end": 32213,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32195,
											"end": 32213,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32195,
											"end": 32213,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 32191,
											"end": 32454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 32191,
											"end": 32454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32313,
											"end": 32361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 32330,
											"end": 32331,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32334,
											"end": 32341,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32351,
											"end": 32352,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32355,
											"end": 32360,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32313,
											"end": 32321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 32313,
											"end": 32361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32313,
											"end": 32361,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 32313,
											"end": 32361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32426,
											"end": 32427,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32407,
											"end": 32416,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 32407,
											"end": 32422,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32417,
											"end": 32421,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32407,
											"end": 32422,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32407,
											"end": 32422,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32407,
											"end": 32422,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32407,
											"end": 32422,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32407,
											"end": 32422,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32407,
											"end": 32422,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32407,
											"end": 32422,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32407,
											"end": 32422,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32407,
											"end": 32422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32407,
											"end": 32422,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32407,
											"end": 32422,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32407,
											"end": 32422,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32407,
											"end": 32422,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32407,
											"end": 32422,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32407,
											"end": 32422,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32407,
											"end": 32422,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32407,
											"end": 32427,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32407,
											"end": 32427,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32407,
											"end": 32427,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32407,
											"end": 32427,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32407,
											"end": 32427,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32407,
											"end": 32427,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32407,
											"end": 32427,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32407,
											"end": 32427,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32407,
											"end": 32427,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32407,
											"end": 32427,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32407,
											"end": 32427,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32191,
											"end": 32454,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 32191,
											"end": 32454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32485,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32470,
											"end": 32486,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32470,
											"end": 32486,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32470,
											"end": 32472,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32470,
											"end": 32486,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32470,
											"end": 32486,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32470,
											"end": 32486,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 32466,
											"end": 32577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 32466,
											"end": 32577,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32549,
											"end": 32550,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32532,
											"end": 32541,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 32532,
											"end": 32545,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32542,
											"end": 32544,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 32532,
											"end": 32545,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32532,
											"end": 32545,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32532,
											"end": 32545,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32532,
											"end": 32545,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32532,
											"end": 32545,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32532,
											"end": 32545,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32532,
											"end": 32545,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32532,
											"end": 32545,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32532,
											"end": 32545,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32532,
											"end": 32545,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32532,
											"end": 32545,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32532,
											"end": 32545,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32532,
											"end": 32545,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32532,
											"end": 32545,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32532,
											"end": 32545,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32532,
											"end": 32545,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32532,
											"end": 32550,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32532,
											"end": 32550,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32532,
											"end": 32550,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32532,
											"end": 32550,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32532,
											"end": 32550,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32532,
											"end": 32550,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32532,
											"end": 32550,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32532,
											"end": 32550,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32532,
											"end": 32550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32532,
											"end": 32550,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32532,
											"end": 32550,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32466,
											"end": 32577,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 32466,
											"end": 32577,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32608,
											"end": 32610,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32589,
											"end": 32596,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 32589,
											"end": 32605,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32597,
											"end": 32604,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 32589,
											"end": 32605,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32589,
											"end": 32605,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32589,
											"end": 32605,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32589,
											"end": 32605,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32589,
											"end": 32605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32589,
											"end": 32605,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32589,
											"end": 32605,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32589,
											"end": 32605,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32589,
											"end": 32605,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32589,
											"end": 32605,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32589,
											"end": 32605,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32589,
											"end": 32605,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32589,
											"end": 32610,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 32589,
											"end": 32610,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 32589,
											"end": 32610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32589,
											"end": 32610,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32589,
											"end": 32610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32589,
											"end": 32610,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32589,
											"end": 32610,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 32589,
											"end": 32610,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 32589,
											"end": 32610,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32589,
											"end": 32610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32589,
											"end": 32610,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32589,
											"end": 32610,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32589,
											"end": 32610,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32589,
											"end": 32610,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 32589,
											"end": 32610,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 32589,
											"end": 32610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32589,
											"end": 32610,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32589,
											"end": 32610,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32647,
											"end": 32654,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32643,
											"end": 32645,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32628,
											"end": 32655,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32628,
											"end": 32655,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32637,
											"end": 32641,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32628,
											"end": 32655,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32628,
											"end": 32655,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32628,
											"end": 32655,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 32628,
											"end": 32655,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32628,
											"end": 32655,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32628,
											"end": 32655,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32628,
											"end": 32655,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32628,
											"end": 32655,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32628,
											"end": 32655,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32628,
											"end": 32655,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32628,
											"end": 32655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32628,
											"end": 32655,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 32675,
											"end": 32679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32668,
											"end": 32679,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32668,
											"end": 32679,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32668,
											"end": 32679,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31863,
											"end": 32687,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 31863,
											"end": 32687,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31863,
											"end": 32687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31863,
											"end": 32687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31863,
											"end": 32687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31863,
											"end": 32687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12613,
											"end": 12779,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 12613,
											"end": 12779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12684,
											"end": 12696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 12684,
											"end": 12694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 12684,
											"end": 12696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12684,
											"end": 12696,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 12684,
											"end": 12696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12673,
											"end": 12696,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12673,
											"end": 12696,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12673,
											"end": 12680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 12673,
											"end": 12678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 12673,
											"end": 12680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12673,
											"end": 12680,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 12673,
											"end": 12680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12673,
											"end": 12696,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12673,
											"end": 12696,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12673,
											"end": 12696,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12669,
											"end": 12772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 12669,
											"end": 12772,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12747,
											"end": 12759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 12747,
											"end": 12757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 12747,
											"end": 12759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12747,
											"end": 12759,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 12747,
											"end": 12759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12720,
											"end": 12760,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12720,
											"end": 12760,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12720,
											"end": 12760,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12720,
											"end": 12760,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12720,
											"end": 12760,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12720,
											"end": 12760,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12720,
											"end": 12760,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12720,
											"end": 12760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 12720,
											"end": 12760,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12720,
											"end": 12760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12720,
											"end": 12760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 12720,
											"end": 12760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12720,
											"end": 12760,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 12720,
											"end": 12760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12720,
											"end": 12760,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12720,
											"end": 12760,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12720,
											"end": 12760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12720,
											"end": 12760,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12720,
											"end": 12760,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12720,
											"end": 12760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12720,
											"end": 12760,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12669,
											"end": 12772,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 12669,
											"end": 12772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12613,
											"end": 12779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 853,
											"end": 967,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 853,
											"end": 967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 918,
											"end": 925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 945,
											"end": 952,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 945,
											"end": 959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 945,
											"end": 959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 945,
											"end": 959,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 938,
											"end": 959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 938,
											"end": 959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 853,
											"end": 967,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 853,
											"end": 967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 853,
											"end": 967,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 853,
											"end": 967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 975,
											"end": 1102,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 975,
											"end": 1102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1083,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1064,
											"end": 1071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1064,
											"end": 1078,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1064,
											"end": 1078,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1064,
											"end": 1078,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1064,
											"end": 1083,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1064,
											"end": 1083,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1064,
											"end": 1083,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1064,
											"end": 1083,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1064,
											"end": 1083,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1064,
											"end": 1083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1064,
											"end": 1083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1064,
											"end": 1083,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1064,
											"end": 1083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1064,
											"end": 1083,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1064,
											"end": 1083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 975,
											"end": 1102,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 975,
											"end": 1102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9414,
											"end": 9967,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 9414,
											"end": 9967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9470,
											"end": 9483,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 9509,
											"end": 9510,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9500,
											"end": 9505,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9500,
											"end": 9510,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9496,
											"end": 9549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 9496,
											"end": 9549,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9527,
											"end": 9537,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9527,
											"end": 9537,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9527,
											"end": 9537,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9527,
											"end": 9537,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9527,
											"end": 9537,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9527,
											"end": 9537,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9527,
											"end": 9537,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9527,
											"end": 9537,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9527,
											"end": 9537,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9527,
											"end": 9537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9527,
											"end": 9537,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9527,
											"end": 9537,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9527,
											"end": 9537,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9527,
											"end": 9537,
											"name": "PUSH",
											"source": 0,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9527,
											"end": 9537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9527,
											"end": 9537,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9527,
											"end": 9537,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9527,
											"end": 9537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9527,
											"end": 9537,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9527,
											"end": 9537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 9527,
											"end": 9537,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9496,
											"end": 9549,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 9496,
											"end": 9549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9569,
											"end": 9581,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9584,
											"end": 9589,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9569,
											"end": 9589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9569,
											"end": 9589,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9625,
											"end": 9703,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 9625,
											"end": 9703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9640,
											"end": 9641,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9632,
											"end": 9636,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9632,
											"end": 9641,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9625,
											"end": 9703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 9625,
											"end": 9703,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9666,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9666,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9666,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 9658,
											"end": 9666,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9666,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 9658,
											"end": 9666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9666,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 9658,
											"end": 9666,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9666,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9666,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9666,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9689,
											"end": 9691,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 9681,
											"end": 9691,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 9681,
											"end": 9691,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 9681,
											"end": 9691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9691,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 9681,
											"end": 9691,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9691,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9691,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9625,
											"end": 9703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 9625,
											"end": 9703,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9625,
											"end": 9703,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 9625,
											"end": 9703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9723,
											"end": 9742,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9755,
											"end": 9761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 9745,
											"end": 9762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9723,
											"end": 9762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9723,
											"end": 9762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9773,
											"end": 9918,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 9773,
											"end": 9918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9789,
											"end": 9790,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9780,
											"end": 9785,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9780,
											"end": 9790,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9773,
											"end": 9918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 9773,
											"end": 9918,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9817,
											"end": 9818,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9807,
											"end": 9818,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9807,
											"end": 9818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 9807,
											"end": 9818,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9807,
											"end": 9818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9807,
											"end": 9818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 9807,
											"end": 9818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9807,
											"end": 9818,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 9807,
											"end": 9818,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9807,
											"end": 9818,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9807,
											"end": 9818,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9876,
											"end": 9878,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 9868,
											"end": 9873,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9868,
											"end": 9878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 9868,
											"end": 9878,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9868,
											"end": 9878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9868,
											"end": 9878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 9868,
											"end": 9878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9868,
											"end": 9878,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 9868,
											"end": 9878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9863,
											"end": 9865,
											"name": "PUSH",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 9863,
											"end": 9878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 9863,
											"end": 9878,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9863,
											"end": 9878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9863,
											"end": 9878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 9863,
											"end": 9878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9863,
											"end": 9878,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 9863,
											"end": 9878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9850,
											"end": 9880,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 9850,
											"end": 9880,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 9833,
											"end": 9839,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9840,
											"end": 9846,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9833,
											"end": 9847,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9833,
											"end": 9847,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9833,
											"end": 9847,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9833,
											"end": 9847,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9833,
											"end": 9847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 9833,
											"end": 9847,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9833,
											"end": 9847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 9833,
											"end": 9847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 9833,
											"end": 9847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9833,
											"end": 9847,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 9833,
											"end": 9847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9833,
											"end": 9847,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 9833,
											"end": 9847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9833,
											"end": 9847,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9833,
											"end": 9847,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9833,
											"end": 9847,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9833,
											"end": 9880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9833,
											"end": 9880,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9833,
											"end": 9880,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9833,
											"end": 9880,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9833,
											"end": 9880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9833,
											"end": 9880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9833,
											"end": 9880,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9833,
											"end": 9880,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 9833,
											"end": 9880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9833,
											"end": 9880,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 9833,
											"end": 9880,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9906,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 9895,
											"end": 9906,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9895,
											"end": 9906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 9895,
											"end": 9906,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9895,
											"end": 9906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9895,
											"end": 9906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 9895,
											"end": 9906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9895,
											"end": 9906,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 9895,
											"end": 9906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9895,
											"end": 9906,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 9895,
											"end": 9906,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9773,
											"end": 9918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 9773,
											"end": 9918,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9773,
											"end": 9918,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 9773,
											"end": 9918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9952,
											"end": 9958,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9938,
											"end": 9959,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 9938,
											"end": 9959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9938,
											"end": 9959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9938,
											"end": 9959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9938,
											"end": 9959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9414,
											"end": 9967,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 9414,
											"end": 9967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9414,
											"end": 9967,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9414,
											"end": 9967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9414,
											"end": 9967,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9414,
											"end": 9967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40323,
											"end": 40493,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 40323,
											"end": 40493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40437,
											"end": 40446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40425,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 40415,
											"end": 40434,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40426,
											"end": 40433,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40434,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40434,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40434,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40415,
											"end": 40434,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40434,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40434,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40434,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40434,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40415,
											"end": 40434,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40434,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40415,
											"end": 40434,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 40415,
											"end": 40446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 40415,
											"end": 40446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40446,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 40415,
											"end": 40446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40446,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40462,
											"end": 40485,
											"name": "PUSH",
											"source": 0,
											"value": "F8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7"
										},
										{
											"begin": 40477,
											"end": 40484,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40462,
											"end": 40485,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40462,
											"end": 40485,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40462,
											"end": 40485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 40462,
											"end": 40485,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40462,
											"end": 40485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40462,
											"end": 40485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 40462,
											"end": 40485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40462,
											"end": 40485,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 40462,
											"end": 40485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40462,
											"end": 40485,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40462,
											"end": 40485,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40462,
											"end": 40485,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40462,
											"end": 40485,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40462,
											"end": 40485,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40462,
											"end": 40485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40462,
											"end": 40485,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 40323,
											"end": 40493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40323,
											"end": 40493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40323,
											"end": 40493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33721,
											"end": 33823,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 33721,
											"end": 33823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33789,
											"end": 33815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 33799,
											"end": 33801,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33803,
											"end": 33810,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33789,
											"end": 33815,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33789,
											"end": 33815,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33789,
											"end": 33815,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33789,
											"end": 33815,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33789,
											"end": 33815,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33789,
											"end": 33815,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33789,
											"end": 33815,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33789,
											"end": 33815,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33789,
											"end": 33815,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33789,
											"end": 33815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33789,
											"end": 33815,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33789,
											"end": 33815,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33789,
											"end": 33798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 33789,
											"end": 33815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33789,
											"end": 33815,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 33789,
											"end": 33815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33721,
											"end": 33823,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33721,
											"end": 33823,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33721,
											"end": 33823,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13765,
											"end": 13956,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 13765,
											"end": 13956,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13839,
											"end": 13855,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13858,
											"end": 13864,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 13858,
											"end": 13864,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13858,
											"end": 13864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13858,
											"end": 13864,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13858,
											"end": 13864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13858,
											"end": 13864,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13858,
											"end": 13864,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 13858,
											"end": 13864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13858,
											"end": 13864,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13858,
											"end": 13864,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13858,
											"end": 13864,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13839,
											"end": 13864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13839,
											"end": 13864,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13884,
											"end": 13892,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13875,
											"end": 13881,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 13875,
											"end": 13881,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13875,
											"end": 13892,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13875,
											"end": 13892,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 13875,
											"end": 13892,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13875,
											"end": 13892,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13875,
											"end": 13892,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13875,
											"end": 13892,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13875,
											"end": 13892,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13875,
											"end": 13892,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 13875,
											"end": 13892,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13875,
											"end": 13892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13875,
											"end": 13892,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13875,
											"end": 13892,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13875,
											"end": 13892,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13875,
											"end": 13892,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13875,
											"end": 13892,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 13875,
											"end": 13892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13875,
											"end": 13892,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13875,
											"end": 13892,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13939,
											"end": 13947,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13908,
											"end": 13948,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13908,
											"end": 13948,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13929,
											"end": 13937,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13908,
											"end": 13948,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13908,
											"end": 13948,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13908,
											"end": 13948,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 13908,
											"end": 13948,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13908,
											"end": 13948,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13908,
											"end": 13948,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13908,
											"end": 13948,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13908,
											"end": 13948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13908,
											"end": 13948,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13908,
											"end": 13948,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13908,
											"end": 13948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13908,
											"end": 13948,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 13828,
											"end": 13956,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13765,
											"end": 13956,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13765,
											"end": 13956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35462,
											"end": 35780,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 35462,
											"end": 35780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35590,
											"end": 35591,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35570,
											"end": 35592,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35570,
											"end": 35592,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35570,
											"end": 35578,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35570,
											"end": 35592,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35570,
											"end": 35592,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35570,
											"end": 35592,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35566,
											"end": 35659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 35566,
											"end": 35659,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35638,
											"end": 35646,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35616,
											"end": 35647,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35616,
											"end": 35647,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35616,
											"end": 35647,
											"name": "PUSH",
											"source": 0,
											"value": "5B08BA1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 35616,
											"end": 35647,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35616,
											"end": 35647,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35616,
											"end": 35647,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35616,
											"end": 35647,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35616,
											"end": 35647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 35616,
											"end": 35647,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35616,
											"end": 35647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35616,
											"end": 35647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 35616,
											"end": 35647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35616,
											"end": 35647,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 35616,
											"end": 35647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35616,
											"end": 35647,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35616,
											"end": 35647,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35616,
											"end": 35647,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35616,
											"end": 35647,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35616,
											"end": 35647,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35616,
											"end": 35647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35616,
											"end": 35647,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35566,
											"end": 35659,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 35566,
											"end": 35659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35707,
											"end": 35715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35669,
											"end": 35687,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 35669,
											"end": 35694,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35688,
											"end": 35693,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35669,
											"end": 35694,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35669,
											"end": 35694,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35669,
											"end": 35694,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35669,
											"end": 35694,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35669,
											"end": 35694,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35669,
											"end": 35694,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35669,
											"end": 35694,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35669,
											"end": 35694,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35669,
											"end": 35694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35669,
											"end": 35694,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35669,
											"end": 35694,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35669,
											"end": 35694,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35669,
											"end": 35694,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35669,
											"end": 35694,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35669,
											"end": 35694,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35669,
											"end": 35704,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35695,
											"end": 35703,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35669,
											"end": 35704,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35669,
											"end": 35704,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35669,
											"end": 35704,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35669,
											"end": 35704,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35669,
											"end": 35704,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35669,
											"end": 35704,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35669,
											"end": 35704,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35669,
											"end": 35704,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35669,
											"end": 35704,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35669,
											"end": 35704,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35669,
											"end": 35704,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35669,
											"end": 35704,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35669,
											"end": 35704,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35669,
											"end": 35704,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35669,
											"end": 35704,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35669,
											"end": 35704,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35669,
											"end": 35715,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 35669,
											"end": 35715,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 35669,
											"end": 35715,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35669,
											"end": 35715,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35669,
											"end": 35715,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35669,
											"end": 35715,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 35669,
											"end": 35715,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 35669,
											"end": 35715,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 35669,
											"end": 35715,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35669,
											"end": 35715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35669,
											"end": 35715,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35669,
											"end": 35715,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35669,
											"end": 35715,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35669,
											"end": 35715,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 35669,
											"end": 35715,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 35669,
											"end": 35715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35669,
											"end": 35715,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 35669,
											"end": 35715,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35753,
											"end": 35761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35731,
											"end": 35772,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35731,
											"end": 35772,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35746,
											"end": 35751,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35731,
											"end": 35772,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35731,
											"end": 35772,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35731,
											"end": 35772,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 35763,
											"end": 35771,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35731,
											"end": 35772,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35731,
											"end": 35772,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35731,
											"end": 35772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 35731,
											"end": 35772,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35731,
											"end": 35772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35731,
											"end": 35772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 35731,
											"end": 35772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35731,
											"end": 35772,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 35731,
											"end": 35772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35731,
											"end": 35772,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35731,
											"end": 35772,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35731,
											"end": 35772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35731,
											"end": 35772,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35731,
											"end": 35772,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35731,
											"end": 35772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35731,
											"end": 35772,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 35462,
											"end": 35780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35462,
											"end": 35780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35462,
											"end": 35780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35462,
											"end": 35780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36820,
											"end": 37628,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 36820,
											"end": 37628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36954,
											"end": 36955,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36937,
											"end": 36939,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36937,
											"end": 36951,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36937,
											"end": 36951,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36937,
											"end": 36951,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 36937,
											"end": 36955,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 36933,
											"end": 37621,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36933,
											"end": 37621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 36933,
											"end": 37621,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36992,
											"end": 36994,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36976,
											"end": 37012,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36976,
											"end": 37012,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36976,
											"end": 37012,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 37013,
											"end": 37025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 37013,
											"end": 37023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 37013,
											"end": 37025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37013,
											"end": 37025,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 37013,
											"end": 37025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37027,
											"end": 37031,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 37033,
											"end": 37040,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 37042,
											"end": 37046,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 36976,
											"end": 37047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 36976,
											"end": 37047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 36976,
											"end": 37047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36972,
											"end": 37610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 36972,
											"end": 37610,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36972,
											"end": 37610,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 36972,
											"end": 37610,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36972,
											"end": 37610,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36972,
											"end": 37610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36972,
											"end": 37610,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 36972,
											"end": 37610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 36972,
											"end": 37610,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36972,
											"end": 37610,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36972,
											"end": 37610,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36972,
											"end": 37610,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36972,
											"end": 37610,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36972,
											"end": 37610,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 36972,
											"end": 37610,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 36972,
											"end": 37610,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 36972,
											"end": 37610,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 36972,
											"end": 37610,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36972,
											"end": 37610,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36972,
											"end": 37610,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36972,
											"end": 37610,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36972,
											"end": 37610,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36972,
											"end": 37610,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36972,
											"end": 37610,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 36972,
											"end": 37610,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36972,
											"end": 37610,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36972,
											"end": 37610,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 36972,
											"end": 37610,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36972,
											"end": 37610,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36972,
											"end": 37610,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36972,
											"end": 37610,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36972,
											"end": 37610,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 36972,
											"end": 37610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 36972,
											"end": 37610,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36972,
											"end": 37610,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 36972,
											"end": 37610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36972,
											"end": 37610,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 36972,
											"end": 37610,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36972,
											"end": 37610,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36972,
											"end": 37610,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 36972,
											"end": 37610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36972,
											"end": 37610,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37307,
											"end": 37308,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37290,
											"end": 37296,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37290,
											"end": 37303,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37290,
											"end": 37308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37286,
											"end": 37595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 37286,
											"end": 37595,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37362,
											"end": 37364,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37340,
											"end": 37365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37340,
											"end": 37365,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37340,
											"end": 37365,
											"name": "PUSH",
											"source": 0,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 37340,
											"end": 37365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37340,
											"end": 37365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37340,
											"end": 37365,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37340,
											"end": 37365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37340,
											"end": 37365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 37340,
											"end": 37365,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37340,
											"end": 37365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37340,
											"end": 37365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 37340,
											"end": 37365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37340,
											"end": 37365,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 37340,
											"end": 37365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37340,
											"end": 37365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37340,
											"end": 37365,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37340,
											"end": 37365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37340,
											"end": 37365,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37340,
											"end": 37365,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37340,
											"end": 37365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37340,
											"end": 37365,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37286,
											"end": 37595,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 37286,
											"end": 37595,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37239,
											"end": 37610,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36972,
											"end": 37610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 36972,
											"end": 37610,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36972,
											"end": 37610,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 36972,
											"end": 37610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37105,
											"end": 37146,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 37105,
											"end": 37146,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 37105,
											"end": 37146,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 37095,
											"end": 37146,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37095,
											"end": 37146,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 37095,
											"end": 37146,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37095,
											"end": 37101,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37095,
											"end": 37146,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37095,
											"end": 37146,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 37095,
											"end": 37146,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37095,
											"end": 37146,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37091,
											"end": 37223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 37091,
											"end": 37223,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37200,
											"end": 37202,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37178,
											"end": 37203,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37178,
											"end": 37203,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37178,
											"end": 37203,
											"name": "PUSH",
											"source": 0,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 37178,
											"end": 37203,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37178,
											"end": 37203,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37178,
											"end": 37203,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37178,
											"end": 37203,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37178,
											"end": 37203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 37178,
											"end": 37203,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37178,
											"end": 37203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37178,
											"end": 37203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 37178,
											"end": 37203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37178,
											"end": 37203,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 37178,
											"end": 37203,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37178,
											"end": 37203,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37178,
											"end": 37203,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37178,
											"end": 37203,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37178,
											"end": 37203,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37178,
											"end": 37203,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37178,
											"end": 37203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37178,
											"end": 37203,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37091,
											"end": 37223,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 37091,
											"end": 37223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37048,
											"end": 37238,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36972,
											"end": 37610,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 36972,
											"end": 37610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36933,
											"end": 37621,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 36933,
											"end": 37621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36820,
											"end": 37628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36820,
											"end": 37628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36820,
											"end": 37628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36820,
											"end": 37628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36820,
											"end": 37628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39588,
											"end": 40197,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 39588,
											"end": 40197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39661,
											"end": 39674,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 39687,
											"end": 39709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 39701,
											"end": 39708,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39687,
											"end": 39700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 39687,
											"end": 39709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39687,
											"end": 39709,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 39687,
											"end": 39709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39687,
											"end": 39709,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39745,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39748,
											"end": 39758,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 39748,
											"end": 39767,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39759,
											"end": 39766,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39748,
											"end": 39767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39748,
											"end": 39767,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39748,
											"end": 39767,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39748,
											"end": 39767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39748,
											"end": 39767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39748,
											"end": 39767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39748,
											"end": 39767,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39748,
											"end": 39767,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39748,
											"end": 39767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39748,
											"end": 39767,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39748,
											"end": 39767,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 39722,
											"end": 39767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 39722,
											"end": 39767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39722,
											"end": 39767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39778,
											"end": 39796,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39799,
											"end": 39809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 39799,
											"end": 39807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 39799,
											"end": 39809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39799,
											"end": 39809,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 39799,
											"end": 39809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39778,
											"end": 39809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39778,
											"end": 39809,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39907,
											"end": 39908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39891,
											"end": 39895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39885,
											"end": 39903,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39885,
											"end": 39908,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39881,
											"end": 39953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 39881,
											"end": 39953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39932,
											"end": 39941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39925,
											"end": 39941,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39925,
											"end": 39941,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39925,
											"end": 39941,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39925,
											"end": 39941,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39925,
											"end": 39941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 39925,
											"end": 39941,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39881,
											"end": 39953,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 39881,
											"end": 39953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40080,
											"end": 40081,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40060,
											"end": 40069,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40054,
											"end": 40077,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40054,
											"end": 40081,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 40050,
											"end": 40147,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40050,
											"end": 40147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 40050,
											"end": 40147,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40119,
											"end": 40123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40125,
											"end": 40134,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40105,
											"end": 40135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40105,
											"end": 40135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40105,
											"end": 40135,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40105,
											"end": 40135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40105,
											"end": 40135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 40105,
											"end": 40135,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 40105,
											"end": 40135,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40105,
											"end": 40135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40105,
											"end": 40135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 40105,
											"end": 40135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40105,
											"end": 40135,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 40105,
											"end": 40135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40105,
											"end": 40135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40105,
											"end": 40135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40105,
											"end": 40135,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40105,
											"end": 40135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40105,
											"end": 40135,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40105,
											"end": 40135,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40105,
											"end": 40135,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40105,
											"end": 40135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40105,
											"end": 40135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40105,
											"end": 40135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40105,
											"end": 40135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40105,
											"end": 40135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40098,
											"end": 40135,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 40098,
											"end": 40135,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40098,
											"end": 40135,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40098,
											"end": 40135,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40098,
											"end": 40135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 40098,
											"end": 40135,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40050,
											"end": 40147,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 40050,
											"end": 40147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40166,
											"end": 40189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 40181,
											"end": 40188,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 40166,
											"end": 40180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 40166,
											"end": 40189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40166,
											"end": 40189,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 40166,
											"end": 40189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40159,
											"end": 40189,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 40159,
											"end": 40189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40159,
											"end": 40189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40159,
											"end": 40189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39588,
											"end": 40197,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 39588,
											"end": 40197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39588,
											"end": 40197,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39588,
											"end": 40197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39588,
											"end": 40197,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39588,
											"end": 40197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25138,
											"end": 25443,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 25138,
											"end": 25443,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25240,
											"end": 25244,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25292,
											"end": 25317,
											"name": "PUSH",
											"source": 0,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25277,
											"end": 25317,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25277,
											"end": 25317,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 25277,
											"end": 25317,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25277,
											"end": 25288,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25277,
											"end": 25317,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25277,
											"end": 25317,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 25277,
											"end": 25317,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25277,
											"end": 25317,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25277,
											"end": 25382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25277,
											"end": 25382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 25277,
											"end": 25382,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25277,
											"end": 25382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25349,
											"end": 25382,
											"name": "PUSH",
											"source": 0,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25334,
											"end": 25382,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25334,
											"end": 25382,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 25334,
											"end": 25382,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25334,
											"end": 25345,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25334,
											"end": 25382,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25334,
											"end": 25382,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 25334,
											"end": 25382,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25334,
											"end": 25382,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25277,
											"end": 25382,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 25277,
											"end": 25382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25277,
											"end": 25435,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25277,
											"end": 25435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 25277,
											"end": 25435,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25277,
											"end": 25435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25399,
											"end": 25435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 25423,
											"end": 25434,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25399,
											"end": 25422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 25399,
											"end": 25435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25399,
											"end": 25435,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 25399,
											"end": 25435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25277,
											"end": 25435,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 25277,
											"end": 25435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25257,
											"end": 25435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25257,
											"end": 25435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25138,
											"end": 25443,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25138,
											"end": 25443,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25138,
											"end": 25443,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25138,
											"end": 25443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29470,
											"end": 29587,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 29470,
											"end": 29587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29536,
											"end": 29543,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29563,
											"end": 29570,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 29563,
											"end": 29579,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29571,
											"end": 29578,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29563,
											"end": 29579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29563,
											"end": 29579,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29563,
											"end": 29579,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29563,
											"end": 29579,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29563,
											"end": 29579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29563,
											"end": 29579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29563,
											"end": 29579,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29563,
											"end": 29579,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29563,
											"end": 29579,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29563,
											"end": 29579,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29563,
											"end": 29579,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29563,
											"end": 29579,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29563,
											"end": 29579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29563,
											"end": 29579,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29563,
											"end": 29579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29563,
											"end": 29579,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29563,
											"end": 29579,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29563,
											"end": 29579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29563,
											"end": 29579,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 29563,
											"end": 29579,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29563,
											"end": 29579,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29556,
											"end": 29579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29556,
											"end": 29579,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29470,
											"end": 29587,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29470,
											"end": 29587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29470,
											"end": 29587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29470,
											"end": 29587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34565,
											"end": 35243,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 34565,
											"end": 35243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34727,
											"end": 34736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34727,
											"end": 34758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34727,
											"end": 34758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 34727,
											"end": 34758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34727,
											"end": 34758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34756,
											"end": 34757,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34740,
											"end": 34758,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34740,
											"end": 34758,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34744,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34758,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34740,
											"end": 34758,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34758,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34727,
											"end": 34758,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 34727,
											"end": 34758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34723,
											"end": 35194,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34723,
											"end": 35194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 34723,
											"end": 35194,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34775,
											"end": 34788,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34791,
											"end": 34813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 34805,
											"end": 34812,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34791,
											"end": 34804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 34791,
											"end": 34813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34791,
											"end": 34813,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 34791,
											"end": 34813,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34775,
											"end": 34813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34775,
											"end": 34813,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34960,
											"end": 34961,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34944,
											"end": 34962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34944,
											"end": 34962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34944,
											"end": 34948,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34944,
											"end": 34962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34944,
											"end": 34962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34944,
											"end": 34962,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34944,
											"end": 34962,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34944,
											"end": 34979,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34944,
											"end": 34979,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34944,
											"end": 34979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 34944,
											"end": 34979,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34944,
											"end": 34979,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 34979,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34966,
											"end": 34979,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34966,
											"end": 34979,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34966,
											"end": 34971,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34966,
											"end": 34979,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34966,
											"end": 34979,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34966,
											"end": 34979,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34966,
											"end": 34979,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34944,
											"end": 34979,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 34944,
											"end": 34979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34944,
											"end": 35013,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34944,
											"end": 35013,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34944,
											"end": 35013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 34944,
											"end": 35013,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34944,
											"end": 35013,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34984,
											"end": 35013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 35001,
											"end": 35006,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35008,
											"end": 35012,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34984,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 34984,
											"end": 35013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34984,
											"end": 35013,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 34984,
											"end": 35013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34983,
											"end": 35013,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34944,
											"end": 35013,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 34944,
											"end": 35013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34940,
											"end": 35084,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34940,
											"end": 35084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 34940,
											"end": 35084,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35063,
											"end": 35067,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35041,
											"end": 35068,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35041,
											"end": 35068,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35041,
											"end": 35068,
											"name": "PUSH",
											"source": 0,
											"value": "A9FBF51F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 35041,
											"end": 35068,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35041,
											"end": 35068,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35041,
											"end": 35068,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35041,
											"end": 35068,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35041,
											"end": 35068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 35041,
											"end": 35068,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35041,
											"end": 35068,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35041,
											"end": 35068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 35041,
											"end": 35068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35041,
											"end": 35068,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 35041,
											"end": 35068,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35041,
											"end": 35068,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35041,
											"end": 35068,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35041,
											"end": 35068,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35041,
											"end": 35068,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35041,
											"end": 35068,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35041,
											"end": 35068,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35041,
											"end": 35068,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34940,
											"end": 35084,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 34940,
											"end": 35084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35104,
											"end": 35113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35100,
											"end": 35183,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35100,
											"end": 35183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 35100,
											"end": 35183,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35159,
											"end": 35166,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35155,
											"end": 35157,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35139,
											"end": 35167,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35139,
											"end": 35167,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35148,
											"end": 35153,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35139,
											"end": 35167,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35139,
											"end": 35167,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35139,
											"end": 35167,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 35139,
											"end": 35167,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35139,
											"end": 35167,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35139,
											"end": 35167,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35139,
											"end": 35167,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35139,
											"end": 35167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35139,
											"end": 35167,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35139,
											"end": 35167,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35139,
											"end": 35167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35139,
											"end": 35167,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 35100,
											"end": 35183,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 35100,
											"end": 35183,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34760,
											"end": 35194,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34723,
											"end": 35194,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 34723,
											"end": 35194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35233,
											"end": 35235,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35206,
											"end": 35221,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35206,
											"end": 35230,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35222,
											"end": 35229,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35206,
											"end": 35230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35206,
											"end": 35230,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35206,
											"end": 35230,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35206,
											"end": 35230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35206,
											"end": 35230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35206,
											"end": 35230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35206,
											"end": 35230,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35206,
											"end": 35230,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35206,
											"end": 35230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35206,
											"end": 35230,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35206,
											"end": 35230,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35206,
											"end": 35230,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35206,
											"end": 35235,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 35206,
											"end": 35235,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 35206,
											"end": 35235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35206,
											"end": 35235,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35206,
											"end": 35235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35206,
											"end": 35235,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35206,
											"end": 35235,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 35206,
											"end": 35235,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 35206,
											"end": 35235,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35206,
											"end": 35235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35206,
											"end": 35235,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35206,
											"end": 35235,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35206,
											"end": 35235,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35206,
											"end": 35235,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 35206,
											"end": 35235,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 35206,
											"end": 35235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35206,
											"end": 35235,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 35206,
											"end": 35235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34565,
											"end": 35243,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34565,
											"end": 35243,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34565,
											"end": 35243,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34565,
											"end": 35243,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34565,
											"end": 35243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30877,
											"end": 31253,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 30877,
											"end": 31253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 31004,
											"end": 31009,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31011,
											"end": 31018,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31020,
											"end": 31027,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 30990,
											"end": 31028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "tag",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30985,
											"end": 31246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 30985,
											"end": 31246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31066,
											"end": 31067,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31049,
											"end": 31068,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31049,
											"end": 31068,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31049,
											"end": 31054,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31049,
											"end": 31068,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31049,
											"end": 31068,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31049,
											"end": 31068,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31045,
											"end": 31235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 31045,
											"end": 31235,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31119,
											"end": 31126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31096,
											"end": 31127,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31096,
											"end": 31127,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31096,
											"end": 31127,
											"name": "PUSH",
											"source": 0,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31096,
											"end": 31127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31096,
											"end": 31127,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31096,
											"end": 31127,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31096,
											"end": 31127,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31096,
											"end": 31127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 31096,
											"end": 31127,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31096,
											"end": 31127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31096,
											"end": 31127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 31096,
											"end": 31127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31096,
											"end": 31127,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 31096,
											"end": 31127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31096,
											"end": 31127,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31096,
											"end": 31127,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31096,
											"end": 31127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31096,
											"end": 31127,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31096,
											"end": 31127,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31096,
											"end": 31127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31096,
											"end": 31127,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31045,
											"end": 31235,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 31045,
											"end": 31235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31202,
											"end": 31209,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31211,
											"end": 31218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31175,
											"end": 31219,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31175,
											"end": 31219,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31175,
											"end": 31219,
											"name": "PUSH",
											"source": 0,
											"value": "177E802F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31175,
											"end": 31219,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31175,
											"end": 31219,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31175,
											"end": 31219,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31175,
											"end": 31219,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31175,
											"end": 31219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 31175,
											"end": 31219,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31175,
											"end": 31219,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31175,
											"end": 31219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31175,
											"end": 31219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 31175,
											"end": 31219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31175,
											"end": 31219,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 31175,
											"end": 31219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31175,
											"end": 31219,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31175,
											"end": 31219,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31175,
											"end": 31219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31175,
											"end": 31219,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31175,
											"end": 31219,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31175,
											"end": 31219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31175,
											"end": 31219,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30985,
											"end": 31246,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 30985,
											"end": 31246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30877,
											"end": 31253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30877,
											"end": 31253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30877,
											"end": 31253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30877,
											"end": 31253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34050,
											"end": 34235,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 34050,
											"end": 34235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34145,
											"end": 34163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 34151,
											"end": 34153,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34155,
											"end": 34162,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34145,
											"end": 34150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 34145,
											"end": 34163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34145,
											"end": 34163,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 34145,
											"end": 34163,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34174,
											"end": 34227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 34205,
											"end": 34206,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34209,
											"end": 34211,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34213,
											"end": 34220,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34222,
											"end": 34226,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34174,
											"end": 34196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 34174,
											"end": 34227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34174,
											"end": 34227,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 34174,
											"end": 34227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34050,
											"end": 34235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34050,
											"end": 34235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34050,
											"end": 34235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34050,
											"end": 34235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26812,
											"end": 26952,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 26812,
											"end": 26952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26855,
											"end": 26868,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 26881,
											"end": 26944,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26881,
											"end": 26944,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26881,
											"end": 26944,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26881,
											"end": 26944,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 26881,
											"end": 26944,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26881,
											"end": 26944,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26881,
											"end": 26944,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26881,
											"end": 26944,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26881,
											"end": 26944,
											"name": "PUSH",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 26881,
											"end": 26944,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26881,
											"end": 26944,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26881,
											"end": 26944,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26881,
											"end": 26944,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26881,
											"end": 26944,
											"name": "PUSH data",
											"source": 0,
											"value": "1250311F865916C0C48EC18BE7711C5B67F23674D6E827435103B8B03CF0BA32"
										},
										{
											"begin": 26881,
											"end": 26944,
											"name": "PUSH",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 26881,
											"end": 26944,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26881,
											"end": 26944,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 26881,
											"end": 26944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26881,
											"end": 26944,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26812,
											"end": 26952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26812,
											"end": 26952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26303,
											"end": 26563,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 26303,
											"end": 26563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26380,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 26393,
											"end": 26415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 26407,
											"end": 26414,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26393,
											"end": 26406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 26393,
											"end": 26415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26393,
											"end": 26415,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 26393,
											"end": 26415,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26393,
											"end": 26415,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26428,
											"end": 26449,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26452,
											"end": 26462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 26452,
											"end": 26460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 26452,
											"end": 26462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26452,
											"end": 26462,
											"name": "tag",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 26452,
											"end": 26462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26428,
											"end": 26462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26428,
											"end": 26462,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26504,
											"end": 26505,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26486,
											"end": 26493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26480,
											"end": 26501,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26480,
											"end": 26505,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 26480,
											"end": 26555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 26480,
											"end": 26555,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26480,
											"end": 26555,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26480,
											"end": 26555,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26480,
											"end": 26555,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26480,
											"end": 26555,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26480,
											"end": 26555,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26480,
											"end": 26555,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26480,
											"end": 26555,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26480,
											"end": 26555,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26480,
											"end": 26555,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26480,
											"end": 26555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26480,
											"end": 26555,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26480,
											"end": 26555,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26480,
											"end": 26555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 26480,
											"end": 26555,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26480,
											"end": 26555,
											"name": "tag",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 26480,
											"end": 26555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26522,
											"end": 26529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26531,
											"end": 26549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 26531,
											"end": 26538,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26531,
											"end": 26547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 26531,
											"end": 26549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26531,
											"end": 26549,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 26531,
											"end": 26549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26508,
											"end": 26550,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26508,
											"end": 26550,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26508,
											"end": 26550,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26508,
											"end": 26550,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26508,
											"end": 26550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 26508,
											"end": 26550,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26508,
											"end": 26550,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26508,
											"end": 26550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26508,
											"end": 26550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 26508,
											"end": 26550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26508,
											"end": 26550,
											"name": "tag",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 26508,
											"end": 26550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26508,
											"end": 26550,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26508,
											"end": 26550,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26508,
											"end": 26550,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26508,
											"end": 26550,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26508,
											"end": 26550,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26508,
											"end": 26550,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26508,
											"end": 26550,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26508,
											"end": 26550,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26508,
											"end": 26550,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26508,
											"end": 26550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26508,
											"end": 26550,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26508,
											"end": 26550,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26480,
											"end": 26555,
											"name": "tag",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 26480,
											"end": 26555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26473,
											"end": 26555,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26473,
											"end": 26555,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26473,
											"end": 26555,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26303,
											"end": 26563,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26303,
											"end": 26563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26303,
											"end": 26563,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26303,
											"end": 26563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16903,
											"end": 17051,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 16903,
											"end": 17051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16979,
											"end": 16983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17018,
											"end": 17043,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17003,
											"end": 17043,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17003,
											"end": 17043,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 17003,
											"end": 17043,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17003,
											"end": 17014,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17003,
											"end": 17043,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17003,
											"end": 17043,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 17003,
											"end": 17043,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17003,
											"end": 17043,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16996,
											"end": 17043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16996,
											"end": 17043,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16903,
											"end": 17051,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16903,
											"end": 17051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16903,
											"end": 17051,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16903,
											"end": 17051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30157,
											"end": 30433,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 30157,
											"end": 30433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30260,
											"end": 30264,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30316,
											"end": 30317,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30297,
											"end": 30318,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30297,
											"end": 30318,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30297,
											"end": 30304,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30297,
											"end": 30318,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30297,
											"end": 30318,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30297,
											"end": 30318,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30297,
											"end": 30318,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30297,
											"end": 30425,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30297,
											"end": 30425,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30297,
											"end": 30425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 30297,
											"end": 30425,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30297,
											"end": 30425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30345,
											"end": 30352,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30352,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30336,
											"end": 30352,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30341,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30352,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30336,
											"end": 30352,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30352,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 30336,
											"end": 30388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30356,
											"end": 30388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 30373,
											"end": 30378,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30380,
											"end": 30387,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30356,
											"end": 30372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 30356,
											"end": 30388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30356,
											"end": 30388,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 30356,
											"end": 30388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30388,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 30336,
											"end": 30388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30424,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 30336,
											"end": 30424,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30424,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30417,
											"end": 30424,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30392,
											"end": 30424,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30392,
											"end": 30424,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30392,
											"end": 30413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 30405,
											"end": 30412,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30392,
											"end": 30404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 30392,
											"end": 30413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30392,
											"end": 30413,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 30392,
											"end": 30413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30392,
											"end": 30424,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30392,
											"end": 30424,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30392,
											"end": 30424,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30424,
											"name": "tag",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 30336,
											"end": 30424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30297,
											"end": 30425,
											"name": "tag",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 30297,
											"end": 30425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30277,
											"end": 30425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30277,
											"end": 30425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30157,
											"end": 30433,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 30157,
											"end": 30433,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30157,
											"end": 30433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30157,
											"end": 30433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30157,
											"end": 30433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30157,
											"end": 30433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33023,
											"end": 33358,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 33023,
											"end": 33358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33105,
											"end": 33106,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33091,
											"end": 33107,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33091,
											"end": 33107,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33091,
											"end": 33093,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33091,
											"end": 33107,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33091,
											"end": 33107,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33091,
											"end": 33107,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33087,
											"end": 33176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 33087,
											"end": 33176,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33161,
											"end": 33162,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33131,
											"end": 33164,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33131,
											"end": 33164,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33131,
											"end": 33164,
											"name": "PUSH",
											"source": 0,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 33131,
											"end": 33164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33131,
											"end": 33164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33131,
											"end": 33164,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33131,
											"end": 33164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33131,
											"end": 33164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 33131,
											"end": 33164,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33131,
											"end": 33164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33131,
											"end": 33164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 33131,
											"end": 33164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33131,
											"end": 33164,
											"name": "tag",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 33131,
											"end": 33164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33131,
											"end": 33164,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33131,
											"end": 33164,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33131,
											"end": 33164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33131,
											"end": 33164,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33131,
											"end": 33164,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33131,
											"end": 33164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33131,
											"end": 33164,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33087,
											"end": 33176,
											"name": "tag",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 33087,
											"end": 33176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33186,
											"end": 33207,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33210,
											"end": 33242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 33218,
											"end": 33220,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33222,
											"end": 33229,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33239,
											"end": 33240,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33210,
											"end": 33217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 33210,
											"end": 33242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33210,
											"end": 33242,
											"name": "tag",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 33210,
											"end": 33242,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33186,
											"end": 33242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33186,
											"end": 33242,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33282,
											"end": 33283,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33257,
											"end": 33284,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33257,
											"end": 33284,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33257,
											"end": 33270,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33257,
											"end": 33284,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33257,
											"end": 33284,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33257,
											"end": 33284,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33253,
											"end": 33351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 33253,
											"end": 33351,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33336,
											"end": 33337,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33308,
											"end": 33339,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33308,
											"end": 33339,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33308,
											"end": 33339,
											"name": "PUSH",
											"source": 0,
											"value": "73C6AC6E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 33308,
											"end": 33339,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33308,
											"end": 33339,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33308,
											"end": 33339,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33308,
											"end": 33339,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33308,
											"end": 33339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 33308,
											"end": 33339,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33308,
											"end": 33339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33308,
											"end": 33339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 33308,
											"end": 33339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33308,
											"end": 33339,
											"name": "tag",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 33308,
											"end": 33339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33308,
											"end": 33339,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33308,
											"end": 33339,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33308,
											"end": 33339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33308,
											"end": 33339,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33308,
											"end": 33339,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33308,
											"end": 33339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33308,
											"end": 33339,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33253,
											"end": 33351,
											"name": "tag",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 33253,
											"end": 33351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33076,
											"end": 33358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33023,
											"end": 33358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33023,
											"end": 33358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33023,
											"end": 33358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "406"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 1,
											"value": "406"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "407"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 1,
											"value": "407"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "412"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 1,
											"value": "412"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "tag",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "418"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 1967,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 1,
											"value": "418"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2038,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 2044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "tag",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2146,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "tag",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 2274,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "tag",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "422"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 2329,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "tag",
											"source": 1,
											"value": "422"
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2444,
											"end": 2460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 2409,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "tag",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 2499,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "tag",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2490,
											"end": 2529,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2535,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2731,
											"end": 2751,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2712,
											"end": 2729,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2705,
											"end": 2752,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 2769,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "tag",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "tag",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2897,
											"end": 2904,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2931,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "tag",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 3034,
											"end": 3039,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 3016,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "tag",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3009,
											"end": 3014,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3006,
											"end": 3041,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3053,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3045,
											"end": 3057,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "tag",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 3065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "tag",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3122,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3142,
											"end": 3162,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 3198,
											"end": 3203,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 3171,
											"end": 3204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "tag",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3275,
											"end": 3281,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3326,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3303,
											"end": 3310,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3322,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3295,
											"end": 3327,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 3330,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "tag",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "tag",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3451,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3511,
											"end": 3517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 3475,
											"end": 3528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "tag",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3421,
											"end": 3538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "tag",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3588,
											"end": 3595,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3670,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3621,
											"end": 3626,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3617,
											"end": 3671,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "tag",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 3767,
											"end": 3772,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 3749,
											"end": 3773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "tag",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "tag",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 3890,
											"end": 3895,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 3872,
											"end": 3896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "tag",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3870,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3860,
											"end": 3897,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3785,
											"end": 3903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4006,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4042,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4029,
											"end": 4038,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 4121,
											"end": 4122,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4119,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4106,
											"end": 4123,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4097,
											"end": 4103,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 4053,
											"end": 4124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "tag",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 4131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "tag",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 4228,
											"end": 4233,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 4210,
											"end": 4234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "tag",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4200,
											"end": 4235,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4249,
											"end": 4250,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4239,
											"end": 4251,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "tag",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "tag",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4311,
											"end": 4316,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4355,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4336,
											"end": 4356,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 4392,
											"end": 4397,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 4365,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "tag",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4486,
											"end": 4492,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4535,
											"end": 4537,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4523,
											"end": 4532,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4514,
											"end": 4521,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4533,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4538,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 4541,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "tag",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "tag",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4662,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 4731,
											"end": 4738,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4722,
											"end": 4728,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4707,
											"end": 4729,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 4686,
											"end": 4739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "tag",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4632,
											"end": 4749,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4790,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 4859,
											"end": 4866,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4850,
											"end": 4856,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4848,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4835,
											"end": 4857,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 4814,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "tag",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4877,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4967,
											"end": 4973,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4975,
											"end": 4981,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4983,
											"end": 4989,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5032,
											"end": 5034,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5020,
											"end": 5029,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5018,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5007,
											"end": 5030,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5035,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "455"
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 5038,
											"end": 5117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "tag",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "tag",
											"source": 1,
											"value": "455"
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5158,
											"end": 5159,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 5228,
											"end": 5235,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5219,
											"end": 5225,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5208,
											"end": 5217,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 5183,
											"end": 5236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "tag",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5173,
											"end": 5236,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5173,
											"end": 5236,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5246,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5285,
											"end": 5287,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "458"
										},
										{
											"begin": 5356,
											"end": 5363,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5347,
											"end": 5353,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5336,
											"end": 5345,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5332,
											"end": 5354,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 5311,
											"end": 5364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "tag",
											"source": 1,
											"value": "458"
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5301,
											"end": 5364,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5301,
											"end": 5364,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5256,
											"end": 5374,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5413,
											"end": 5415,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 5484,
											"end": 5491,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5481,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5464,
											"end": 5473,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5460,
											"end": 5482,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 5439,
											"end": 5492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "tag",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5429,
											"end": 5492,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5429,
											"end": 5492,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5384,
											"end": 5502,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 5509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5574,
											"end": 5580,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5623,
											"end": 5625,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5611,
											"end": 5620,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5602,
											"end": 5609,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5598,
											"end": 5621,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5594,
											"end": 5626,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "462"
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 5629,
											"end": 5708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "tag",
											"source": 1,
											"value": "462"
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "tag",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5749,
											"end": 5750,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 5819,
											"end": 5826,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5810,
											"end": 5816,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5808,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5795,
											"end": 5817,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 5774,
											"end": 5827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "tag",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5764,
											"end": 5827,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5764,
											"end": 5827,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5720,
											"end": 5837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "tag",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 5955,
											"end": 5960,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 5937,
											"end": 5961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "tag",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5932,
											"end": 5935,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5925,
											"end": 5962,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5850,
											"end": 5968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6067,
											"end": 6071,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6105,
											"end": 6107,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6094,
											"end": 6103,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6090,
											"end": 6108,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 6186,
											"end": 6187,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6175,
											"end": 6184,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6171,
											"end": 6188,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6162,
											"end": 6168,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 6118,
											"end": 6189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "tag",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5974,
											"end": 6196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "tag",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 6287,
											"end": 6292,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 6272,
											"end": 6293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "tag",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6270,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6262,
											"end": 6294,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6308,
											"end": 6309,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6305,
											"end": 6306,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6298,
											"end": 6310,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "tag",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6202,
											"end": 6318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "tag",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6372,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6405,
											"end": 6411,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6412,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 6383,
											"end": 6412,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6383,
											"end": 6412,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 6445,
											"end": 6450,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 6421,
											"end": 6451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "tag",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6324,
											"end": 6457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6528,
											"end": 6534,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6536,
											"end": 6542,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6585,
											"end": 6587,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6573,
											"end": 6582,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6564,
											"end": 6571,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6560,
											"end": 6583,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6556,
											"end": 6588,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 6591,
											"end": 6670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "tag",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "tag",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6711,
											"end": 6712,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "476"
										},
										{
											"begin": 6781,
											"end": 6788,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6772,
											"end": 6778,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6761,
											"end": 6770,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6757,
											"end": 6779,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 6736,
											"end": 6789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "tag",
											"source": 1,
											"value": "476"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6682,
											"end": 6799,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6838,
											"end": 6840,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "477"
										},
										{
											"begin": 6906,
											"end": 6913,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6897,
											"end": 6903,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6895,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6882,
											"end": 6904,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 6864,
											"end": 6914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "tag",
											"source": 1,
											"value": "477"
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6854,
											"end": 6914,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6854,
											"end": 6914,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6809,
											"end": 6924,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6463,
											"end": 6931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6937,
											"end": 7054,
											"name": "tag",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 6937,
											"end": 7054,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7046,
											"end": 7047,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7043,
											"end": 7044,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7036,
											"end": 7048,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7060,
											"end": 7177,
											"name": "tag",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 7060,
											"end": 7177,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7169,
											"end": 7170,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7166,
											"end": 7167,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7159,
											"end": 7171,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7183,
											"end": 7363,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 7183,
											"end": 7363,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7231,
											"end": 7308,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7228,
											"end": 7229,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7221,
											"end": 7309,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7328,
											"end": 7332,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 7325,
											"end": 7326,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7318,
											"end": 7333,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7352,
											"end": 7356,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7349,
											"end": 7350,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7342,
											"end": 7357,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "tag",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 7474,
											"end": 7478,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 7452,
											"end": 7479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "tag",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7444,
											"end": 7450,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7440,
											"end": 7480,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7588,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7570,
											"end": 7580,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7567,
											"end": 7589,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7546,
											"end": 7564,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7534,
											"end": 7544,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7531,
											"end": 7565,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7528,
											"end": 7590,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "483"
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "484"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 7593,
											"end": 7611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "tag",
											"source": 1,
											"value": "484"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "tag",
											"source": 1,
											"value": "483"
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7633,
											"end": 7643,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7629,
											"end": 7631,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7644,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7412,
											"end": 7650,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7369,
											"end": 7650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "tag",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7690,
											"end": 7696,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "486"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 7717,
											"end": 7737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "tag",
											"source": 1,
											"value": "486"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7707,
											"end": 7737,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7707,
											"end": 7737,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "487"
										},
										{
											"begin": 7774,
											"end": 7778,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7766,
											"end": 7772,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 7746,
											"end": 7779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "tag",
											"source": 1,
											"value": "487"
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7656,
											"end": 7785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "tag",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7852,
											"end": 7856,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7942,
											"end": 7960,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7934,
											"end": 7940,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7931,
											"end": 7961,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "489"
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "490"
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 7964,
											"end": 7982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "tag",
											"source": 1,
											"value": "490"
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "tag",
											"source": 1,
											"value": "489"
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "491"
										},
										{
											"begin": 8024,
											"end": 8030,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 8002,
											"end": 8031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "tag",
											"source": 1,
											"value": "491"
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7994,
											"end": 8031,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7994,
											"end": 8031,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8086,
											"end": 8090,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8080,
											"end": 8084,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8091,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8068,
											"end": 8091,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8068,
											"end": 8091,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 8098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "tag",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8201,
											"end": 8207,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8196,
											"end": 8199,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8191,
											"end": 8194,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8178,
											"end": 8208,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 8242,
											"end": 8243,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8233,
											"end": 8239,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8228,
											"end": 8231,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8224,
											"end": 8240,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8217,
											"end": 8244,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8104,
											"end": 8250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "tag",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8333,
											"end": 8338,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "495"
										},
										{
											"begin": 8415,
											"end": 8421,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 8374,
											"end": 8422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "tag",
											"source": 1,
											"value": "495"
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 8358,
											"end": 8423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "tag",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8349,
											"end": 8423,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8349,
											"end": 8423,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8446,
											"end": 8452,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8439,
											"end": 8444,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8432,
											"end": 8453,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8484,
											"end": 8488,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8477,
											"end": 8482,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8473,
											"end": 8489,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8522,
											"end": 8525,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8513,
											"end": 8519,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8508,
											"end": 8511,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8504,
											"end": 8520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8501,
											"end": 8526,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 8529,
											"end": 8608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "tag",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "tag",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "498"
										},
										{
											"begin": 8666,
											"end": 8672,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8661,
											"end": 8664,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8656,
											"end": 8659,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 8619,
											"end": 8673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "tag",
											"source": 1,
											"value": "498"
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8339,
											"end": 8679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8256,
											"end": 8679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "tag",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8753,
											"end": 8758,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8802,
											"end": 8805,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8795,
											"end": 8799,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 8787,
											"end": 8793,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8783,
											"end": 8800,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8779,
											"end": 8806,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "500"
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "501"
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 8810,
											"end": 8889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "tag",
											"source": 1,
											"value": "501"
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "tag",
											"source": 1,
											"value": "500"
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8927,
											"end": 8933,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8914,
											"end": 8934,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "502"
										},
										{
											"begin": 9026,
											"end": 9029,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9018,
											"end": 9024,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9011,
											"end": 9015,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9003,
											"end": 9009,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8999,
											"end": 9016,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 8952,
											"end": 9030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "tag",
											"source": 1,
											"value": "502"
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8943,
											"end": 9030,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8943,
											"end": 9030,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8759,
											"end": 9036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8698,
											"end": 9036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9137,
											"end": 9143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9145,
											"end": 9151,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9153,
											"end": 9159,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9167,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9210,
											"end": 9213,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 9198,
											"end": 9207,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9189,
											"end": 9196,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9185,
											"end": 9208,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9181,
											"end": 9214,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "505"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 9217,
											"end": 9296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "tag",
											"source": 1,
											"value": "505"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "tag",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9337,
											"end": 9338,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 9407,
											"end": 9414,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9398,
											"end": 9404,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9387,
											"end": 9396,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 9383,
											"end": 9405,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 9362,
											"end": 9415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "tag",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9308,
											"end": 9425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9464,
											"end": 9466,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "507"
										},
										{
											"begin": 9535,
											"end": 9542,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9526,
											"end": 9532,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9515,
											"end": 9524,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 9511,
											"end": 9533,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 9490,
											"end": 9543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "tag",
											"source": 1,
											"value": "507"
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9480,
											"end": 9543,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 9480,
											"end": 9543,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9435,
											"end": 9553,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 9663,
											"end": 9670,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9654,
											"end": 9660,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9643,
											"end": 9652,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 9639,
											"end": 9661,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 9618,
											"end": 9671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "tag",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9608,
											"end": 9671,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9608,
											"end": 9671,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9563,
											"end": 9681,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9748,
											"end": 9750,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9737,
											"end": 9746,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9733,
											"end": 9751,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9720,
											"end": 9752,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 9779,
											"end": 9797,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9771,
											"end": 9777,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9768,
											"end": 9798,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "509"
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 9801,
											"end": 9880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "tag",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "tag",
											"source": 1,
											"value": "509"
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "511"
										},
										{
											"begin": 9960,
											"end": 9967,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9951,
											"end": 9957,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9940,
											"end": 9949,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9958,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 9906,
											"end": 9968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "tag",
											"source": 1,
											"value": "511"
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9691,
											"end": 9978,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10059,
											"end": 10065,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10067,
											"end": 10073,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10116,
											"end": 10118,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10104,
											"end": 10113,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10095,
											"end": 10102,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10091,
											"end": 10114,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10087,
											"end": 10119,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "514"
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 10122,
											"end": 10201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "tag",
											"source": 1,
											"value": "514"
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "tag",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10242,
											"end": 10243,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "515"
										},
										{
											"begin": 10312,
											"end": 10319,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10303,
											"end": 10309,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10292,
											"end": 10301,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10288,
											"end": 10310,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 10267,
											"end": 10320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "tag",
											"source": 1,
											"value": "515"
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10257,
											"end": 10320,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10257,
											"end": 10320,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10213,
											"end": 10330,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10369,
											"end": 10371,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "516"
										},
										{
											"begin": 10440,
											"end": 10447,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10431,
											"end": 10437,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10420,
											"end": 10429,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10416,
											"end": 10438,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 10395,
											"end": 10448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "tag",
											"source": 1,
											"value": "516"
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10385,
											"end": 10448,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10385,
											"end": 10448,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10340,
											"end": 10458,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9991,
											"end": 10465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10471,
											"end": 10651,
											"name": "tag",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 10471,
											"end": 10651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10519,
											"end": 10596,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10516,
											"end": 10517,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10509,
											"end": 10597,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10616,
											"end": 10620,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 10613,
											"end": 10614,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10606,
											"end": 10621,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10640,
											"end": 10644,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10637,
											"end": 10638,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10630,
											"end": 10645,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10701,
											"end": 10707,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10738,
											"end": 10739,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 10732,
											"end": 10736,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10728,
											"end": 10740,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10718,
											"end": 10740,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10718,
											"end": 10740,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10785,
											"end": 10786,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10779,
											"end": 10783,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10775,
											"end": 10787,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10806,
											"end": 10824,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "519"
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10862,
											"end": 10866,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 10854,
											"end": 10860,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10850,
											"end": 10867,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10840,
											"end": 10867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10840,
											"end": 10867,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "tag",
											"source": 1,
											"value": "519"
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10924,
											"end": 10926,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10916,
											"end": 10922,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10913,
											"end": 10927,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10893,
											"end": 10911,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10890,
											"end": 10928,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "520"
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "521"
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 10943,
											"end": 10961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "tag",
											"source": 1,
											"value": "521"
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "tag",
											"source": 1,
											"value": "520"
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10708,
											"end": 10977,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10657,
											"end": 10977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10983,
											"end": 11425,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 10983,
											"end": 11425,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11132,
											"end": 11136,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11170,
											"end": 11172,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11159,
											"end": 11168,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11155,
											"end": 11173,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11147,
											"end": 11173,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11147,
											"end": 11173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11183,
											"end": 11254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "523"
										},
										{
											"begin": 11251,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11240,
											"end": 11249,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11236,
											"end": 11253,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11227,
											"end": 11233,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11183,
											"end": 11254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 11183,
											"end": 11254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11183,
											"end": 11254,
											"name": "tag",
											"source": 1,
											"value": "523"
										},
										{
											"begin": 11183,
											"end": 11254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11264,
											"end": 11336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "524"
										},
										{
											"begin": 11332,
											"end": 11334,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11321,
											"end": 11330,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11317,
											"end": 11335,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11308,
											"end": 11314,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11264,
											"end": 11336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 11264,
											"end": 11336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11264,
											"end": 11336,
											"name": "tag",
											"source": 1,
											"value": "524"
										},
										{
											"begin": 11264,
											"end": 11336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11346,
											"end": 11418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "525"
										},
										{
											"begin": 11414,
											"end": 11416,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11403,
											"end": 11412,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11399,
											"end": 11417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11390,
											"end": 11396,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11346,
											"end": 11418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 11346,
											"end": 11418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11346,
											"end": 11418,
											"name": "tag",
											"source": 1,
											"value": "525"
										},
										{
											"begin": 11346,
											"end": 11418,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10983,
											"end": 11425,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10983,
											"end": 11425,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10983,
											"end": 11425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10983,
											"end": 11425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10983,
											"end": 11425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10983,
											"end": 11425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10983,
											"end": 11425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11431,
											"end": 11604,
											"name": "tag",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 11431,
											"end": 11604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11571,
											"end": 11596,
											"name": "PUSH",
											"source": 1,
											"value": "5265656E7472616E742063616C6C206465746563746564000000000000000000"
										},
										{
											"begin": 11567,
											"end": 11568,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11559,
											"end": 11565,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11555,
											"end": 11569,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11548,
											"end": 11597,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11431,
											"end": 11604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11431,
											"end": 11604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11610,
											"end": 11976,
											"name": "tag",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 11610,
											"end": 11976,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11752,
											"end": 11755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11773,
											"end": 11840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "528"
										},
										{
											"begin": 11837,
											"end": 11839,
											"name": "PUSH",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 11832,
											"end": 11835,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11773,
											"end": 11840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 11773,
											"end": 11840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11773,
											"end": 11840,
											"name": "tag",
											"source": 1,
											"value": "528"
										},
										{
											"begin": 11773,
											"end": 11840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11766,
											"end": 11840,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11766,
											"end": 11840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11849,
											"end": 11942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "529"
										},
										{
											"begin": 11938,
											"end": 11941,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11849,
											"end": 11942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 11849,
											"end": 11942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11849,
											"end": 11942,
											"name": "tag",
											"source": 1,
											"value": "529"
										},
										{
											"begin": 11849,
											"end": 11942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11967,
											"end": 11969,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11962,
											"end": 11965,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11958,
											"end": 11970,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11951,
											"end": 11970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11951,
											"end": 11970,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11610,
											"end": 11976,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11610,
											"end": 11976,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11610,
											"end": 11976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11610,
											"end": 11976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11982,
											"end": 12401,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 11982,
											"end": 12401,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12148,
											"end": 12152,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12186,
											"end": 12188,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12175,
											"end": 12184,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12171,
											"end": 12189,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12163,
											"end": 12189,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12163,
											"end": 12189,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12235,
											"end": 12244,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12229,
											"end": 12233,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12225,
											"end": 12245,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12221,
											"end": 12222,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12210,
											"end": 12219,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12206,
											"end": 12223,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12199,
											"end": 12246,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12263,
											"end": 12394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "531"
										},
										{
											"begin": 12389,
											"end": 12393,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12263,
											"end": 12394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 12263,
											"end": 12394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12263,
											"end": 12394,
											"name": "tag",
											"source": 1,
											"value": "531"
										},
										{
											"begin": 12263,
											"end": 12394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12255,
											"end": 12394,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12255,
											"end": 12394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11982,
											"end": 12401,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11982,
											"end": 12401,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11982,
											"end": 12401,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11982,
											"end": 12401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12407,
											"end": 12555,
											"name": "tag",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 12407,
											"end": 12555,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12509,
											"end": 12520,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12546,
											"end": 12549,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12531,
											"end": 12549,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12531,
											"end": 12549,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12407,
											"end": 12555,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12407,
											"end": 12555,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12407,
											"end": 12555,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12407,
											"end": 12555,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12407,
											"end": 12555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12561,
											"end": 12951,
											"name": "tag",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 12561,
											"end": 12951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12667,
											"end": 12670,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12695,
											"end": 12734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "534"
										},
										{
											"begin": 12728,
											"end": 12733,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12695,
											"end": 12734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 12695,
											"end": 12734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12695,
											"end": 12734,
											"name": "tag",
											"source": 1,
											"value": "534"
										},
										{
											"begin": 12695,
											"end": 12734,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12750,
											"end": 12839,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "535"
										},
										{
											"begin": 12832,
											"end": 12838,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12827,
											"end": 12830,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12750,
											"end": 12839,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 12750,
											"end": 12839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12750,
											"end": 12839,
											"name": "tag",
											"source": 1,
											"value": "535"
										},
										{
											"begin": 12750,
											"end": 12839,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12743,
											"end": 12839,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 12743,
											"end": 12839,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12848,
											"end": 12913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "536"
										},
										{
											"begin": 12906,
											"end": 12912,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12901,
											"end": 12904,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12894,
											"end": 12898,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12887,
											"end": 12892,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12883,
											"end": 12899,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12848,
											"end": 12913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 12848,
											"end": 12913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12848,
											"end": 12913,
											"name": "tag",
											"source": 1,
											"value": "536"
										},
										{
											"begin": 12848,
											"end": 12913,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12938,
											"end": 12944,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12933,
											"end": 12936,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12929,
											"end": 12945,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12922,
											"end": 12945,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12922,
											"end": 12945,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12671,
											"end": 12951,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12561,
											"end": 12951,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12561,
											"end": 12951,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12561,
											"end": 12951,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12561,
											"end": 12951,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12561,
											"end": 12951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12957,
											"end": 13139,
											"name": "tag",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 12957,
											"end": 13139,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13125,
											"end": 13132,
											"name": "PUSH",
											"source": 1,
											"value": "2E6A736F6E000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13120,
											"end": 13123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13113,
											"end": 13133,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12957,
											"end": 13139,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12957,
											"end": 13139,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13145,
											"end": 13684,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 13145,
											"end": 13684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13367,
											"end": 13370,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13389,
											"end": 13484,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "539"
										},
										{
											"begin": 13480,
											"end": 13483,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13471,
											"end": 13477,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13389,
											"end": 13484,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 13389,
											"end": 13484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13389,
											"end": 13484,
											"name": "tag",
											"source": 1,
											"value": "539"
										},
										{
											"begin": 13389,
											"end": 13484,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13382,
											"end": 13484,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13382,
											"end": 13484,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13494,
											"end": 13631,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "540"
										},
										{
											"begin": 13627,
											"end": 13630,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13494,
											"end": 13631,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 13494,
											"end": 13631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13494,
											"end": 13631,
											"name": "tag",
											"source": 1,
											"value": "540"
										},
										{
											"begin": 13494,
											"end": 13631,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13656,
											"end": 13657,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 13651,
											"end": 13654,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13647,
											"end": 13658,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13640,
											"end": 13658,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13640,
											"end": 13658,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13675,
											"end": 13678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13668,
											"end": 13678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13668,
											"end": 13678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13145,
											"end": 13684,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13145,
											"end": 13684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13145,
											"end": 13684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13145,
											"end": 13684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13145,
											"end": 13684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13690,
											"end": 13870,
											"name": "tag",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 13690,
											"end": 13870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13738,
											"end": 13815,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13735,
											"end": 13736,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13728,
											"end": 13816,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13835,
											"end": 13839,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 13832,
											"end": 13833,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13825,
											"end": 13840,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13859,
											"end": 13863,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13856,
											"end": 13857,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13849,
											"end": 13864,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13876,
											"end": 14109,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 13876,
											"end": 14109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13915,
											"end": 13918,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13938,
											"end": 13962,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "543"
										},
										{
											"begin": 13956,
											"end": 13961,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13938,
											"end": 13962,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 13938,
											"end": 13962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13938,
											"end": 13962,
											"name": "tag",
											"source": 1,
											"value": "543"
										},
										{
											"begin": 13938,
											"end": 13962,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13929,
											"end": 13962,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13929,
											"end": 13962,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13984,
											"end": 14050,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13977,
											"end": 13982,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13974,
											"end": 14051,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13971,
											"end": 14074,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "544"
										},
										{
											"begin": 13971,
											"end": 14074,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14054,
											"end": 14072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "545"
										},
										{
											"begin": 14054,
											"end": 14072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 14054,
											"end": 14072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14054,
											"end": 14072,
											"name": "tag",
											"source": 1,
											"value": "545"
										},
										{
											"begin": 14054,
											"end": 14072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13971,
											"end": 14074,
											"name": "tag",
											"source": 1,
											"value": "544"
										},
										{
											"begin": 13971,
											"end": 14074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14101,
											"end": 14102,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 14094,
											"end": 14099,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14090,
											"end": 14103,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14083,
											"end": 14103,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14083,
											"end": 14103,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13876,
											"end": 14109,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13876,
											"end": 14109,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13876,
											"end": 14109,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13876,
											"end": 14109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14115,
											"end": 14295,
											"name": "tag",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 14115,
											"end": 14295,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14163,
											"end": 14240,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14160,
											"end": 14161,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14153,
											"end": 14241,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14260,
											"end": 14264,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 14257,
											"end": 14258,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14250,
											"end": 14265,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14284,
											"end": 14288,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 14281,
											"end": 14282,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14274,
											"end": 14289,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 14301,
											"end": 14486,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 14301,
											"end": 14486,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14341,
											"end": 14342,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14358,
											"end": 14378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "548"
										},
										{
											"begin": 14376,
											"end": 14377,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14358,
											"end": 14378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 14358,
											"end": 14378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14358,
											"end": 14378,
											"name": "tag",
											"source": 1,
											"value": "548"
										},
										{
											"begin": 14358,
											"end": 14378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14353,
											"end": 14378,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14353,
											"end": 14378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14392,
											"end": 14412,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "549"
										},
										{
											"begin": 14410,
											"end": 14411,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14392,
											"end": 14412,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 14392,
											"end": 14412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14392,
											"end": 14412,
											"name": "tag",
											"source": 1,
											"value": "549"
										},
										{
											"begin": 14392,
											"end": 14412,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14387,
											"end": 14412,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14387,
											"end": 14412,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14431,
											"end": 14432,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14421,
											"end": 14456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 14421,
											"end": 14456,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14436,
											"end": 14454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "551"
										},
										{
											"begin": 14436,
											"end": 14454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 14436,
											"end": 14454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14436,
											"end": 14454,
											"name": "tag",
											"source": 1,
											"value": "551"
										},
										{
											"begin": 14436,
											"end": 14454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14421,
											"end": 14456,
											"name": "tag",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 14421,
											"end": 14456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14478,
											"end": 14479,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14475,
											"end": 14476,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14471,
											"end": 14480,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 14466,
											"end": 14480,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14466,
											"end": 14480,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14301,
											"end": 14486,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14301,
											"end": 14486,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14301,
											"end": 14486,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14301,
											"end": 14486,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14301,
											"end": 14486,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14492,
											"end": 14686,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 14492,
											"end": 14686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14532,
											"end": 14536,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14552,
											"end": 14572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 14570,
											"end": 14571,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14552,
											"end": 14572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 14552,
											"end": 14572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14552,
											"end": 14572,
											"name": "tag",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 14552,
											"end": 14572,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14547,
											"end": 14572,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14547,
											"end": 14572,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14586,
											"end": 14606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "554"
										},
										{
											"begin": 14604,
											"end": 14605,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14586,
											"end": 14606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 14586,
											"end": 14606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14586,
											"end": 14606,
											"name": "tag",
											"source": 1,
											"value": "554"
										},
										{
											"begin": 14586,
											"end": 14606,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14581,
											"end": 14606,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14581,
											"end": 14606,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14630,
											"end": 14631,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14627,
											"end": 14628,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14623,
											"end": 14632,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14615,
											"end": 14632,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14615,
											"end": 14632,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14654,
											"end": 14655,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14648,
											"end": 14652,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14645,
											"end": 14656,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 14642,
											"end": 14679,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14642,
											"end": 14679,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "555"
										},
										{
											"begin": 14642,
											"end": 14679,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14659,
											"end": 14677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 14659,
											"end": 14677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 14659,
											"end": 14677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14659,
											"end": 14677,
											"name": "tag",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 14659,
											"end": 14677,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14642,
											"end": 14679,
											"name": "tag",
											"source": 1,
											"value": "555"
										},
										{
											"begin": 14642,
											"end": 14679,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14492,
											"end": 14686,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14492,
											"end": 14686,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14492,
											"end": 14686,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14492,
											"end": 14686,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14492,
											"end": 14686,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14692,
											"end": 14868,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 14692,
											"end": 14868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14724,
											"end": 14725,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14741,
											"end": 14761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "558"
										},
										{
											"begin": 14759,
											"end": 14760,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14741,
											"end": 14761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 14741,
											"end": 14761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14741,
											"end": 14761,
											"name": "tag",
											"source": 1,
											"value": "558"
										},
										{
											"begin": 14741,
											"end": 14761,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14736,
											"end": 14761,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14736,
											"end": 14761,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14775,
											"end": 14795,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "559"
										},
										{
											"begin": 14793,
											"end": 14794,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14775,
											"end": 14795,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 14775,
											"end": 14795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14775,
											"end": 14795,
											"name": "tag",
											"source": 1,
											"value": "559"
										},
										{
											"begin": 14775,
											"end": 14795,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14770,
											"end": 14795,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14770,
											"end": 14795,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14814,
											"end": 14815,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14804,
											"end": 14839,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "560"
										},
										{
											"begin": 14804,
											"end": 14839,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14819,
											"end": 14837,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "561"
										},
										{
											"begin": 14819,
											"end": 14837,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 14819,
											"end": 14837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14819,
											"end": 14837,
											"name": "tag",
											"source": 1,
											"value": "561"
										},
										{
											"begin": 14819,
											"end": 14837,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14804,
											"end": 14839,
											"name": "tag",
											"source": 1,
											"value": "560"
										},
										{
											"begin": 14804,
											"end": 14839,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14860,
											"end": 14861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14857,
											"end": 14858,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14853,
											"end": 14862,
											"name": "MOD",
											"source": 1
										},
										{
											"begin": 14848,
											"end": 14862,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14848,
											"end": 14862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14692,
											"end": 14868,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14692,
											"end": 14868,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14692,
											"end": 14868,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14692,
											"end": 14868,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14692,
											"end": 14868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14874,
											"end": 15065,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 14874,
											"end": 15065,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14914,
											"end": 14917,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14933,
											"end": 14953,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "563"
										},
										{
											"begin": 14951,
											"end": 14952,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14933,
											"end": 14953,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 14933,
											"end": 14953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14933,
											"end": 14953,
											"name": "tag",
											"source": 1,
											"value": "563"
										},
										{
											"begin": 14933,
											"end": 14953,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14928,
											"end": 14953,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14928,
											"end": 14953,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14967,
											"end": 14987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "564"
										},
										{
											"begin": 14985,
											"end": 14986,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14967,
											"end": 14987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 14967,
											"end": 14987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14967,
											"end": 14987,
											"name": "tag",
											"source": 1,
											"value": "564"
										},
										{
											"begin": 14967,
											"end": 14987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14962,
											"end": 14987,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14962,
											"end": 14987,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15010,
											"end": 15011,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15007,
											"end": 15008,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15003,
											"end": 15012,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14996,
											"end": 15012,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14996,
											"end": 15012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15031,
											"end": 15034,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15028,
											"end": 15029,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15025,
											"end": 15035,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 15022,
											"end": 15058,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15022,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "565"
										},
										{
											"begin": 15022,
											"end": 15058,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15038,
											"end": 15056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "566"
										},
										{
											"begin": 15038,
											"end": 15056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 15038,
											"end": 15056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15038,
											"end": 15056,
											"name": "tag",
											"source": 1,
											"value": "566"
										},
										{
											"begin": 15038,
											"end": 15056,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15022,
											"end": 15058,
											"name": "tag",
											"source": 1,
											"value": "565"
										},
										{
											"begin": 15022,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14874,
											"end": 15065,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14874,
											"end": 15065,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14874,
											"end": 15065,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14874,
											"end": 15065,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14874,
											"end": 15065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15071,
											"end": 15251,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 15071,
											"end": 15251,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15119,
											"end": 15196,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15116,
											"end": 15117,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15109,
											"end": 15197,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15216,
											"end": 15220,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 15213,
											"end": 15214,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15206,
											"end": 15221,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15240,
											"end": 15244,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 15237,
											"end": 15238,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15230,
											"end": 15245,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15257,
											"end": 15398,
											"name": "tag",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 15257,
											"end": 15398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15306,
											"end": 15310,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15329,
											"end": 15332,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15321,
											"end": 15332,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15321,
											"end": 15332,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15352,
											"end": 15355,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15349,
											"end": 15350,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15342,
											"end": 15356,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15386,
											"end": 15390,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15383,
											"end": 15384,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15373,
											"end": 15391,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 15365,
											"end": 15391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15365,
											"end": 15391,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15257,
											"end": 15398,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15257,
											"end": 15398,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15257,
											"end": 15398,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15257,
											"end": 15398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15404,
											"end": 15497,
											"name": "tag",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 15404,
											"end": 15497,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15441,
											"end": 15447,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15488,
											"end": 15490,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15483,
											"end": 15485,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 15476,
											"end": 15481,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15472,
											"end": 15486,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15468,
											"end": 15491,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 15458,
											"end": 15491,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15458,
											"end": 15491,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15404,
											"end": 15497,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15404,
											"end": 15497,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15404,
											"end": 15497,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15404,
											"end": 15497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15503,
											"end": 15610,
											"name": "tag",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 15503,
											"end": 15610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15547,
											"end": 15555,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15597,
											"end": 15602,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15591,
											"end": 15595,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15587,
											"end": 15603,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 15566,
											"end": 15603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15566,
											"end": 15603,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15503,
											"end": 15610,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15503,
											"end": 15610,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15503,
											"end": 15610,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15503,
											"end": 15610,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15503,
											"end": 15610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15616,
											"end": 16009,
											"name": "tag",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 15616,
											"end": 16009,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15685,
											"end": 15691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15735,
											"end": 15736,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 15723,
											"end": 15733,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15719,
											"end": 15737,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 15758,
											"end": 15855,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "572"
										},
										{
											"begin": 15788,
											"end": 15854,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15777,
											"end": 15786,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15758,
											"end": 15855,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 15758,
											"end": 15855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15758,
											"end": 15855,
											"name": "tag",
											"source": 1,
											"value": "572"
										},
										{
											"begin": 15758,
											"end": 15855,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15876,
											"end": 15915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "573"
										},
										{
											"begin": 15906,
											"end": 15914,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 15895,
											"end": 15904,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15876,
											"end": 15915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 15876,
											"end": 15915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15876,
											"end": 15915,
											"name": "tag",
											"source": 1,
											"value": "573"
										},
										{
											"begin": 15876,
											"end": 15915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15864,
											"end": 15915,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 15864,
											"end": 15915,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15948,
											"end": 15952,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15944,
											"end": 15953,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 15937,
											"end": 15942,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15933,
											"end": 15954,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15924,
											"end": 15954,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 15924,
											"end": 15954,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15997,
											"end": 16001,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15987,
											"end": 15995,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 15983,
											"end": 16002,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15976,
											"end": 15981,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15973,
											"end": 16003,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 15963,
											"end": 16003,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15963,
											"end": 16003,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15692,
											"end": 16009,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15692,
											"end": 16009,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15616,
											"end": 16009,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 15616,
											"end": 16009,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15616,
											"end": 16009,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15616,
											"end": 16009,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15616,
											"end": 16009,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15616,
											"end": 16009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16015,
											"end": 16075,
											"name": "tag",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 16015,
											"end": 16075,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16043,
											"end": 16046,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16064,
											"end": 16069,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16057,
											"end": 16069,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16057,
											"end": 16069,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16015,
											"end": 16075,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16015,
											"end": 16075,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16015,
											"end": 16075,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16015,
											"end": 16075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16081,
											"end": 16223,
											"name": "tag",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 16081,
											"end": 16223,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16131,
											"end": 16140,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16164,
											"end": 16217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "576"
										},
										{
											"begin": 16182,
											"end": 16216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "577"
										},
										{
											"begin": 16191,
											"end": 16215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "578"
										},
										{
											"begin": 16209,
											"end": 16214,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16191,
											"end": 16215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 16191,
											"end": 16215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16191,
											"end": 16215,
											"name": "tag",
											"source": 1,
											"value": "578"
										},
										{
											"begin": 16191,
											"end": 16215,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16182,
											"end": 16216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 16182,
											"end": 16216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16182,
											"end": 16216,
											"name": "tag",
											"source": 1,
											"value": "577"
										},
										{
											"begin": 16182,
											"end": 16216,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16164,
											"end": 16217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 16164,
											"end": 16217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16164,
											"end": 16217,
											"name": "tag",
											"source": 1,
											"value": "576"
										},
										{
											"begin": 16164,
											"end": 16217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16151,
											"end": 16217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16151,
											"end": 16217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16081,
											"end": 16223,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16081,
											"end": 16223,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16081,
											"end": 16223,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16081,
											"end": 16223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16229,
											"end": 16304,
											"name": "tag",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 16229,
											"end": 16304,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16272,
											"end": 16275,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16293,
											"end": 16298,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16286,
											"end": 16298,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16286,
											"end": 16298,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16229,
											"end": 16304,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16229,
											"end": 16304,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16229,
											"end": 16304,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16229,
											"end": 16304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16310,
											"end": 16579,
											"name": "tag",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 16310,
											"end": 16579,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16420,
											"end": 16459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "581"
										},
										{
											"begin": 16451,
											"end": 16458,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16420,
											"end": 16459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 16420,
											"end": 16459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16420,
											"end": 16459,
											"name": "tag",
											"source": 1,
											"value": "581"
										},
										{
											"begin": 16420,
											"end": 16459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16481,
											"end": 16572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "582"
										},
										{
											"begin": 16530,
											"end": 16571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "583"
										},
										{
											"begin": 16554,
											"end": 16570,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16530,
											"end": 16571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 16530,
											"end": 16571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16530,
											"end": 16571,
											"name": "tag",
											"source": 1,
											"value": "583"
										},
										{
											"begin": 16530,
											"end": 16571,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16522,
											"end": 16528,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16515,
											"end": 16519,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16509,
											"end": 16520,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 16481,
											"end": 16572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 16481,
											"end": 16572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16481,
											"end": 16572,
											"name": "tag",
											"source": 1,
											"value": "582"
										},
										{
											"begin": 16481,
											"end": 16572,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16475,
											"end": 16479,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16468,
											"end": 16573,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 16386,
											"end": 16579,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16310,
											"end": 16579,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16310,
											"end": 16579,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16310,
											"end": 16579,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16310,
											"end": 16579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16585,
											"end": 16658,
											"name": "tag",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 16585,
											"end": 16658,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16630,
											"end": 16633,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16585,
											"end": 16658,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16585,
											"end": 16658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16664,
											"end": 16853,
											"name": "tag",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 16664,
											"end": 16853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16741,
											"end": 16773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "586"
										},
										{
											"begin": 16741,
											"end": 16773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 16741,
											"end": 16773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16741,
											"end": 16773,
											"name": "tag",
											"source": 1,
											"value": "586"
										},
										{
											"begin": 16741,
											"end": 16773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16782,
											"end": 16847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "587"
										},
										{
											"begin": 16840,
											"end": 16846,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16832,
											"end": 16838,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16826,
											"end": 16830,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16782,
											"end": 16847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 16782,
											"end": 16847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16782,
											"end": 16847,
											"name": "tag",
											"source": 1,
											"value": "587"
										},
										{
											"begin": 16782,
											"end": 16847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16717,
											"end": 16853,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16664,
											"end": 16853,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16664,
											"end": 16853,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16664,
											"end": 16853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16859,
											"end": 17045,
											"name": "tag",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 16859,
											"end": 17045,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16919,
											"end": 17039,
											"name": "tag",
											"source": 1,
											"value": "589"
										},
										{
											"begin": 16919,
											"end": 17039,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16936,
											"end": 16939,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16929,
											"end": 16934,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16926,
											"end": 16940,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 16919,
											"end": 17039,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16919,
											"end": 17039,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "591"
										},
										{
											"begin": 16919,
											"end": 17039,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16990,
											"end": 17029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "592"
										},
										{
											"begin": 17027,
											"end": 17028,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17020,
											"end": 17025,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16990,
											"end": 17029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 16990,
											"end": 17029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16990,
											"end": 17029,
											"name": "tag",
											"source": 1,
											"value": "592"
										},
										{
											"begin": 16990,
											"end": 17029,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 16964,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 16956,
											"end": 16961,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16952,
											"end": 16965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16943,
											"end": 16965,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16943,
											"end": 16965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16919,
											"end": 17039,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "589"
										},
										{
											"begin": 16919,
											"end": 17039,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16919,
											"end": 17039,
											"name": "tag",
											"source": 1,
											"value": "591"
										},
										{
											"begin": 16919,
											"end": 17039,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16859,
											"end": 17045,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16859,
											"end": 17045,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16859,
											"end": 17045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17051,
											"end": 17594,
											"name": "tag",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 17051,
											"end": 17594,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17152,
											"end": 17154,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 17147,
											"end": 17150,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17144,
											"end": 17155,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 17141,
											"end": 17587,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17141,
											"end": 17587,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "594"
										},
										{
											"begin": 17141,
											"end": 17587,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17186,
											"end": 17224,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "595"
										},
										{
											"begin": 17218,
											"end": 17223,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17186,
											"end": 17224,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 17186,
											"end": 17224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17186,
											"end": 17224,
											"name": "tag",
											"source": 1,
											"value": "595"
										},
										{
											"begin": 17186,
											"end": 17224,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17270,
											"end": 17299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "596"
										},
										{
											"begin": 17288,
											"end": 17298,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17270,
											"end": 17299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 17270,
											"end": 17299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17270,
											"end": 17299,
											"name": "tag",
											"source": 1,
											"value": "596"
										},
										{
											"begin": 17270,
											"end": 17299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17260,
											"end": 17268,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17256,
											"end": 17300,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17453,
											"end": 17455,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17441,
											"end": 17451,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17438,
											"end": 17456,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 17435,
											"end": 17484,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17435,
											"end": 17484,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "597"
										},
										{
											"begin": 17435,
											"end": 17484,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17474,
											"end": 17482,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17459,
											"end": 17482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17459,
											"end": 17482,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17435,
											"end": 17484,
											"name": "tag",
											"source": 1,
											"value": "597"
										},
										{
											"begin": 17435,
											"end": 17484,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17497,
											"end": 17577,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "598"
										},
										{
											"begin": 17553,
											"end": 17575,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "599"
										},
										{
											"begin": 17571,
											"end": 17574,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17553,
											"end": 17575,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 17553,
											"end": 17575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17553,
											"end": 17575,
											"name": "tag",
											"source": 1,
											"value": "599"
										},
										{
											"begin": 17553,
											"end": 17575,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17543,
											"end": 17551,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17539,
											"end": 17576,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17526,
											"end": 17537,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17497,
											"end": 17577,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 17497,
											"end": 17577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17497,
											"end": 17577,
											"name": "tag",
											"source": 1,
											"value": "598"
										},
										{
											"begin": 17497,
											"end": 17577,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17156,
											"end": 17587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17156,
											"end": 17587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17141,
											"end": 17587,
											"name": "tag",
											"source": 1,
											"value": "594"
										},
										{
											"begin": 17141,
											"end": 17587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17051,
											"end": 17594,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17051,
											"end": 17594,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17051,
											"end": 17594,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17051,
											"end": 17594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17600,
											"end": 17717,
											"name": "tag",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 17600,
											"end": 17717,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17654,
											"end": 17662,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17704,
											"end": 17709,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17698,
											"end": 17702,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17694,
											"end": 17710,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 17673,
											"end": 17710,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17673,
											"end": 17710,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17600,
											"end": 17717,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17600,
											"end": 17717,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17600,
											"end": 17717,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17600,
											"end": 17717,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17600,
											"end": 17717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17723,
											"end": 17892,
											"name": "tag",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 17723,
											"end": 17892,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17767,
											"end": 17773,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17800,
											"end": 17851,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "602"
										},
										{
											"begin": 17848,
											"end": 17849,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17844,
											"end": 17850,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 17836,
											"end": 17841,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17833,
											"end": 17834,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 17829,
											"end": 17842,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 17800,
											"end": 17851,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 17800,
											"end": 17851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17800,
											"end": 17851,
											"name": "tag",
											"source": 1,
											"value": "602"
										},
										{
											"begin": 17800,
											"end": 17851,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17796,
											"end": 17852,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 17881,
											"end": 17885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17875,
											"end": 17879,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17871,
											"end": 17886,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17861,
											"end": 17886,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17861,
											"end": 17886,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17774,
											"end": 17892,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17723,
											"end": 17892,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17723,
											"end": 17892,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17723,
											"end": 17892,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17723,
											"end": 17892,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17723,
											"end": 17892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17897,
											"end": 18192,
											"name": "tag",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 17897,
											"end": 18192,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17973,
											"end": 17977,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18119,
											"end": 18148,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "604"
										},
										{
											"begin": 18144,
											"end": 18147,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18138,
											"end": 18142,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18119,
											"end": 18148,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 18119,
											"end": 18148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18119,
											"end": 18148,
											"name": "tag",
											"source": 1,
											"value": "604"
										},
										{
											"begin": 18119,
											"end": 18148,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18111,
											"end": 18148,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18111,
											"end": 18148,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18181,
											"end": 18184,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18178,
											"end": 18179,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 18174,
											"end": 18185,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 18168,
											"end": 18172,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18165,
											"end": 18186,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 18157,
											"end": 18186,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18157,
											"end": 18186,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17897,
											"end": 18192,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17897,
											"end": 18192,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17897,
											"end": 18192,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17897,
											"end": 18192,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17897,
											"end": 18192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18197,
											"end": 19592,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 18197,
											"end": 19592,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18314,
											"end": 18351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "606"
										},
										{
											"begin": 18347,
											"end": 18350,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18314,
											"end": 18351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 18314,
											"end": 18351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18314,
											"end": 18351,
											"name": "tag",
											"source": 1,
											"value": "606"
										},
										{
											"begin": 18314,
											"end": 18351,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18416,
											"end": 18434,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18408,
											"end": 18414,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18405,
											"end": 18435,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 18402,
											"end": 18458,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18402,
											"end": 18458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "607"
										},
										{
											"begin": 18402,
											"end": 18458,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18438,
											"end": 18456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "608"
										},
										{
											"begin": 18438,
											"end": 18456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 18438,
											"end": 18456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18438,
											"end": 18456,
											"name": "tag",
											"source": 1,
											"value": "608"
										},
										{
											"begin": 18438,
											"end": 18456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18402,
											"end": 18458,
											"name": "tag",
											"source": 1,
											"value": "607"
										},
										{
											"begin": 18402,
											"end": 18458,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18482,
											"end": 18520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "609"
										},
										{
											"begin": 18514,
											"end": 18518,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18508,
											"end": 18519,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 18482,
											"end": 18520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 18482,
											"end": 18520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18482,
											"end": 18520,
											"name": "tag",
											"source": 1,
											"value": "609"
										},
										{
											"begin": 18482,
											"end": 18520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18567,
											"end": 18634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "610"
										},
										{
											"begin": 18627,
											"end": 18633,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18619,
											"end": 18625,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18613,
											"end": 18617,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 18567,
											"end": 18634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 18567,
											"end": 18634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18567,
											"end": 18634,
											"name": "tag",
											"source": 1,
											"value": "610"
										},
										{
											"begin": 18567,
											"end": 18634,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18661,
											"end": 18662,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18685,
											"end": 18689,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18672,
											"end": 18689,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18672,
											"end": 18689,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18717,
											"end": 18719,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 18709,
											"end": 18715,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18706,
											"end": 18720,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 18734,
											"end": 18735,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 18729,
											"end": 19347,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18729,
											"end": 19347,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18729,
											"end": 19347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "612"
										},
										{
											"begin": 18729,
											"end": 19347,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19391,
											"end": 19392,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19408,
											"end": 19414,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 19405,
											"end": 19482,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19405,
											"end": 19482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "613"
										},
										{
											"begin": 19405,
											"end": 19482,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19457,
											"end": 19466,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19452,
											"end": 19455,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 19448,
											"end": 19467,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19442,
											"end": 19468,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 19433,
											"end": 19468,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19433,
											"end": 19468,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19405,
											"end": 19482,
											"name": "tag",
											"source": 1,
											"value": "613"
										},
										{
											"begin": 19405,
											"end": 19482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19508,
											"end": 19575,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "614"
										},
										{
											"begin": 19568,
											"end": 19574,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 19561,
											"end": 19566,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19508,
											"end": 19575,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 19508,
											"end": 19575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19508,
											"end": 19575,
											"name": "tag",
											"source": 1,
											"value": "614"
										},
										{
											"begin": 19508,
											"end": 19575,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19502,
											"end": 19506,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 19495,
											"end": 19576,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 19364,
											"end": 19586,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18699,
											"end": 19586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "611"
										},
										{
											"begin": 18699,
											"end": 19586,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18729,
											"end": 19347,
											"name": "tag",
											"source": 1,
											"value": "612"
										},
										{
											"begin": 18729,
											"end": 19347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18781,
											"end": 18785,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 18777,
											"end": 18786,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 18769,
											"end": 18775,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 18765,
											"end": 18787,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18815,
											"end": 18852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "615"
										},
										{
											"begin": 18847,
											"end": 18851,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 18815,
											"end": 18852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 18815,
											"end": 18852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18815,
											"end": 18852,
											"name": "tag",
											"source": 1,
											"value": "615"
										},
										{
											"begin": 18815,
											"end": 18852,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18874,
											"end": 18875,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18888,
											"end": 19096,
											"name": "tag",
											"source": 1,
											"value": "616"
										},
										{
											"begin": 18888,
											"end": 19096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18902,
											"end": 18909,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18899,
											"end": 18900,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18896,
											"end": 18910,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 18888,
											"end": 19096,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18888,
											"end": 19096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "618"
										},
										{
											"begin": 18888,
											"end": 19096,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18981,
											"end": 18990,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 18976,
											"end": 18979,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 18972,
											"end": 18991,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18966,
											"end": 18992,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18958,
											"end": 18964,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18951,
											"end": 18993,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 19032,
											"end": 19033,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 19024,
											"end": 19030,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19020,
											"end": 19034,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19010,
											"end": 19034,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19010,
											"end": 19034,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19079,
											"end": 19081,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19068,
											"end": 19077,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 19064,
											"end": 19082,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19051,
											"end": 19082,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 19051,
											"end": 19082,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18925,
											"end": 18929,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18922,
											"end": 18923,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18918,
											"end": 18930,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18913,
											"end": 18930,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18913,
											"end": 18930,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18888,
											"end": 19096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "616"
										},
										{
											"begin": 18888,
											"end": 19096,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18888,
											"end": 19096,
											"name": "tag",
											"source": 1,
											"value": "618"
										},
										{
											"begin": 18888,
											"end": 19096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19124,
											"end": 19130,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 19115,
											"end": 19122,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19112,
											"end": 19131,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 19109,
											"end": 19288,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19109,
											"end": 19288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "619"
										},
										{
											"begin": 19109,
											"end": 19288,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19182,
											"end": 19191,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 19177,
											"end": 19180,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 19173,
											"end": 19192,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19167,
											"end": 19193,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 19225,
											"end": 19273,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "620"
										},
										{
											"begin": 19267,
											"end": 19271,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 19259,
											"end": 19265,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 19255,
											"end": 19272,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19244,
											"end": 19253,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19225,
											"end": 19273,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 19225,
											"end": 19273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19225,
											"end": 19273,
											"name": "tag",
											"source": 1,
											"value": "620"
										},
										{
											"begin": 19225,
											"end": 19273,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19217,
											"end": 19223,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19210,
											"end": 19274,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 19132,
											"end": 19288,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19109,
											"end": 19288,
											"name": "tag",
											"source": 1,
											"value": "619"
										},
										{
											"begin": 19109,
											"end": 19288,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19334,
											"end": 19335,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 19330,
											"end": 19331,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 19322,
											"end": 19328,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 19318,
											"end": 19332,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 19314,
											"end": 19336,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19308,
											"end": 19312,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 19301,
											"end": 19337,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 18736,
											"end": 19347,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18736,
											"end": 19347,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18736,
											"end": 19347,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18699,
											"end": 19586,
											"name": "tag",
											"source": 1,
											"value": "611"
										},
										{
											"begin": 18699,
											"end": 19586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18699,
											"end": 19586,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18289,
											"end": 19592,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18289,
											"end": 19592,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18289,
											"end": 19592,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18197,
											"end": 19592,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18197,
											"end": 19592,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18197,
											"end": 19592,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19598,
											"end": 19696,
											"name": "tag",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 19598,
											"end": 19696,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19649,
											"end": 19655,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19683,
											"end": 19688,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19677,
											"end": 19689,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 19667,
											"end": 19689,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19667,
											"end": 19689,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19598,
											"end": 19696,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19598,
											"end": 19696,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19598,
											"end": 19696,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19598,
											"end": 19696,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19702,
											"end": 19870,
											"name": "tag",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 19702,
											"end": 19870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19785,
											"end": 19796,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19819,
											"end": 19825,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19814,
											"end": 19817,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19807,
											"end": 19826,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19859,
											"end": 19863,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19854,
											"end": 19857,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19850,
											"end": 19864,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19835,
											"end": 19864,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19835,
											"end": 19864,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19702,
											"end": 19870,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 19702,
											"end": 19870,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19702,
											"end": 19870,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19702,
											"end": 19870,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19702,
											"end": 19870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19876,
											"end": 20249,
											"name": "tag",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 19876,
											"end": 20249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19962,
											"end": 19965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19990,
											"end": 20028,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "624"
										},
										{
											"begin": 20022,
											"end": 20027,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19990,
											"end": 20028,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 19990,
											"end": 20028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19990,
											"end": 20028,
											"name": "tag",
											"source": 1,
											"value": "624"
										},
										{
											"begin": 19990,
											"end": 20028,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20044,
											"end": 20114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "625"
										},
										{
											"begin": 20107,
											"end": 20113,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20102,
											"end": 20105,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 20044,
											"end": 20114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 20044,
											"end": 20114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20044,
											"end": 20114,
											"name": "tag",
											"source": 1,
											"value": "625"
										},
										{
											"begin": 20044,
											"end": 20114,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20037,
											"end": 20114,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 20037,
											"end": 20114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20123,
											"end": 20188,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "626"
										},
										{
											"begin": 20181,
											"end": 20187,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20176,
											"end": 20179,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 20169,
											"end": 20173,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20162,
											"end": 20167,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 20158,
											"end": 20174,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20123,
											"end": 20188,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 20123,
											"end": 20188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20123,
											"end": 20188,
											"name": "tag",
											"source": 1,
											"value": "626"
										},
										{
											"begin": 20123,
											"end": 20188,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20213,
											"end": 20242,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "627"
										},
										{
											"begin": 20235,
											"end": 20241,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20213,
											"end": 20242,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 20213,
											"end": 20242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20213,
											"end": 20242,
											"name": "tag",
											"source": 1,
											"value": "627"
										},
										{
											"begin": 20213,
											"end": 20242,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20208,
											"end": 20211,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 20204,
											"end": 20243,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20197,
											"end": 20243,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20197,
											"end": 20243,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19966,
											"end": 20249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19876,
											"end": 20249,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 19876,
											"end": 20249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19876,
											"end": 20249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19876,
											"end": 20249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19876,
											"end": 20249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20255,
											"end": 20895,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 20255,
											"end": 20895,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20450,
											"end": 20454,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20488,
											"end": 20491,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 20477,
											"end": 20486,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20473,
											"end": 20492,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20465,
											"end": 20492,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20465,
											"end": 20492,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20502,
											"end": 20573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "629"
										},
										{
											"begin": 20570,
											"end": 20571,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20559,
											"end": 20568,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20555,
											"end": 20572,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20546,
											"end": 20552,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 20502,
											"end": 20573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 20502,
											"end": 20573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20502,
											"end": 20573,
											"name": "tag",
											"source": 1,
											"value": "629"
										},
										{
											"begin": 20502,
											"end": 20573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20583,
											"end": 20655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "630"
										},
										{
											"begin": 20651,
											"end": 20653,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20640,
											"end": 20649,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20636,
											"end": 20654,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20627,
											"end": 20633,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 20583,
											"end": 20655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 20583,
											"end": 20655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20583,
											"end": 20655,
											"name": "tag",
											"source": 1,
											"value": "630"
										},
										{
											"begin": 20583,
											"end": 20655,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20665,
											"end": 20737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "631"
										},
										{
											"begin": 20733,
											"end": 20735,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20722,
											"end": 20731,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20718,
											"end": 20736,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20709,
											"end": 20715,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 20665,
											"end": 20737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 20665,
											"end": 20737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20665,
											"end": 20737,
											"name": "tag",
											"source": 1,
											"value": "631"
										},
										{
											"begin": 20665,
											"end": 20737,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20784,
											"end": 20793,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20778,
											"end": 20782,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20774,
											"end": 20794,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 20769,
											"end": 20771,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 20758,
											"end": 20767,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20754,
											"end": 20772,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20747,
											"end": 20795,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20812,
											"end": 20888,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "632"
										},
										{
											"begin": 20883,
											"end": 20887,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20874,
											"end": 20880,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 20812,
											"end": 20888,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 20812,
											"end": 20888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20812,
											"end": 20888,
											"name": "tag",
											"source": 1,
											"value": "632"
										},
										{
											"begin": 20812,
											"end": 20888,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20804,
											"end": 20888,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20804,
											"end": 20888,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20255,
											"end": 20895,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 20255,
											"end": 20895,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 20255,
											"end": 20895,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20255,
											"end": 20895,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20255,
											"end": 20895,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20255,
											"end": 20895,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20255,
											"end": 20895,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20255,
											"end": 20895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20901,
											"end": 21042,
											"name": "tag",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 20901,
											"end": 21042,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20957,
											"end": 20962,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20988,
											"end": 20994,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20982,
											"end": 20995,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20973,
											"end": 20995,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20973,
											"end": 20995,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21004,
											"end": 21036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "634"
										},
										{
											"begin": 21030,
											"end": 21035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21004,
											"end": 21036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 21004,
											"end": 21036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21004,
											"end": 21036,
											"name": "tag",
											"source": 1,
											"value": "634"
										},
										{
											"begin": 21004,
											"end": 21036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20901,
											"end": 21042,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 20901,
											"end": 21042,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20901,
											"end": 21042,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20901,
											"end": 21042,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20901,
											"end": 21042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21048,
											"end": 21397,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 21048,
											"end": 21397,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21117,
											"end": 21123,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21166,
											"end": 21168,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21154,
											"end": 21163,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21145,
											"end": 21152,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 21141,
											"end": 21164,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 21137,
											"end": 21169,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 21134,
											"end": 21253,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 21134,
											"end": 21253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "636"
										},
										{
											"begin": 21134,
											"end": 21253,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 21172,
											"end": 21251,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "637"
										},
										{
											"begin": 21172,
											"end": 21251,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 21172,
											"end": 21251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21172,
											"end": 21251,
											"name": "tag",
											"source": 1,
											"value": "637"
										},
										{
											"begin": 21172,
											"end": 21251,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21134,
											"end": 21253,
											"name": "tag",
											"source": 1,
											"value": "636"
										},
										{
											"begin": 21134,
											"end": 21253,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21292,
											"end": 21293,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21317,
											"end": 21380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "638"
										},
										{
											"begin": 21372,
											"end": 21379,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 21363,
											"end": 21369,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21352,
											"end": 21361,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 21348,
											"end": 21370,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21317,
											"end": 21380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 21317,
											"end": 21380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21317,
											"end": 21380,
											"name": "tag",
											"source": 1,
											"value": "638"
										},
										{
											"begin": 21317,
											"end": 21380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21307,
											"end": 21380,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21307,
											"end": 21380,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21263,
											"end": 21390,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21048,
											"end": 21397,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 21048,
											"end": 21397,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21048,
											"end": 21397,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21048,
											"end": 21397,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21048,
											"end": 21397,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21403,
											"end": 21838,
											"name": "tag",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 21403,
											"end": 21838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21583,
											"end": 21586,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21605,
											"end": 21700,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "640"
										},
										{
											"begin": 21696,
											"end": 21699,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21687,
											"end": 21693,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 21605,
											"end": 21700,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 21605,
											"end": 21700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21605,
											"end": 21700,
											"name": "tag",
											"source": 1,
											"value": "640"
										},
										{
											"begin": 21605,
											"end": 21700,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21598,
											"end": 21700,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21598,
											"end": 21700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21717,
											"end": 21812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "641"
										},
										{
											"begin": 21808,
											"end": 21811,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21799,
											"end": 21805,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 21717,
											"end": 21812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 21717,
											"end": 21812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21717,
											"end": 21812,
											"name": "tag",
											"source": 1,
											"value": "641"
										},
										{
											"begin": 21717,
											"end": 21812,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21710,
											"end": 21812,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21710,
											"end": 21812,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21829,
											"end": 21832,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21822,
											"end": 21832,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21822,
											"end": 21832,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21403,
											"end": 21838,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 21403,
											"end": 21838,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 21403,
											"end": 21838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21403,
											"end": 21838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21403,
											"end": 21838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21403,
											"end": 21838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21844,
											"end": 22176,
											"name": "tag",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 21844,
											"end": 22176,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21965,
											"end": 21969,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22003,
											"end": 22005,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 21992,
											"end": 22001,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21988,
											"end": 22006,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21980,
											"end": 22006,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21980,
											"end": 22006,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22016,
											"end": 22087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "643"
										},
										{
											"begin": 22084,
											"end": 22085,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22073,
											"end": 22082,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22069,
											"end": 22086,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22060,
											"end": 22066,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 22016,
											"end": 22087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 22016,
											"end": 22087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22016,
											"end": 22087,
											"name": "tag",
											"source": 1,
											"value": "643"
										},
										{
											"begin": 22016,
											"end": 22087,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22097,
											"end": 22169,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "644"
										},
										{
											"begin": 22165,
											"end": 22167,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22154,
											"end": 22163,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22150,
											"end": 22168,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22141,
											"end": 22147,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 22097,
											"end": 22169,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 22097,
											"end": 22169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22097,
											"end": 22169,
											"name": "tag",
											"source": 1,
											"value": "644"
										},
										{
											"begin": 22097,
											"end": 22169,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21844,
											"end": 22176,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 21844,
											"end": 22176,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 21844,
											"end": 22176,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21844,
											"end": 22176,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21844,
											"end": 22176,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21844,
											"end": 22176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									],
									".data": {
										"1250311F865916C0C48EC18BE7711C5B67F23674D6E827435103B8B03CF0BA32": "697066733a2f2f516d61633839735a545347764b6b795961327672786452616b5052456147464a534e4a52525765747a544c51544d2f"
									}
								}
							},
							"sourceList": [
								"erc721Flat.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"renounceOwnership()": "715018a6",
							"safeMint(address)": "40d097c3",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"safeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721Flat.sol\":\"myerc721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc721Flat.sol\":{\"keccak256\":\"0x5b956dc5af8ab9e234898e3d61394478611cee8011379a005db0e5efdef579da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38203483954bcb4d14167960f546c6e865cc30a8f1e2d56e253fe4151d831b04\",\"dweb:/ipfs/QmWgs7v7PUsq8Lo6zEkYxePqSqvYVsPWTXjyFhGfN9h63x\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 649,
								"contract": "erc721Flat.sol:myerc721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 651,
								"contract": "erc721Flat.sol:myerc721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 655,
								"contract": "erc721Flat.sol:myerc721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 659,
								"contract": "erc721Flat.sol:myerc721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 663,
								"contract": "erc721Flat.sol:myerc721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 669,
								"contract": "erc721Flat.sol:myerc721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1513,
								"contract": "erc721Flat.sol:myerc721",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							},
							{
								"astId": 284,
								"contract": "erc721Flat.sol:myerc721",
								"label": "_owner",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 1632,
								"contract": "erc721Flat.sol:myerc721",
								"label": "_tokenIdCounter",
								"offset": 0,
								"slot": "8",
								"type": "t_struct(Counter)5_storage"
							},
							{
								"astId": 1634,
								"contract": "erc721Flat.sol:myerc721",
								"label": "reentrancyGuard",
								"offset": 0,
								"slot": "9",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Counter)5_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 4,
										"contract": "erc721Flat.sol:myerc721",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"erc721Flat.sol": {
				"ast": {
					"absolutePath": "erc721Flat.sol",
					"exportedSymbols": {
						"Context": [
							278
						],
						"Counters": [
							32
						],
						"ERC165": [
							473
						],
						"ERC721": [
							1470
						],
						"ERC721Burnable": [
							1494
						],
						"ERC721URIStorage": [
							1611
						],
						"IERC1155Errors": [
							168
						],
						"IERC165": [
							451
						],
						"IERC20Errors": [
							73
						],
						"IERC4906": [
							607
						],
						"IERC721": [
							587
						],
						"IERC721Errors": [
							121
						],
						"IERC721Metadata": [
							632
						],
						"IERC721Receiver": [
							440
						],
						"Math": [
							180
						],
						"Ownable": [
							423
						],
						"Strings": [
							266
						],
						"myerc721": [
							1735
						]
					},
					"id": 1736,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "147:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Counters",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "174:266:0",
								"text": " @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 32,
							"linearizedBaseContracts": [
								32
							],
							"name": "Counters",
							"nameLocation": "450:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 5,
									"members": [
										{
											"constant": false,
											"id": 4,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "817:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 5,
											"src": "809:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "809:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "473:7:0",
									"nodeType": "StructDefinition",
									"scope": 32,
									"src": "466:379:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "927:40:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 13,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "945:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 14,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "953:6:0",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 4,
													"src": "945:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 12,
												"id": 15,
												"nodeType": "Return",
												"src": "938:21:0"
											}
										]
									},
									"id": 17,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "862:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "886:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "870:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 7,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 6,
														"name": "Counter",
														"nameLocations": [
															"870:7:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 5,
														"src": "870:7:0"
													},
													"referencedDeclaration": 5,
													"src": "870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "869:25:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "918:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "918:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "917:9:0"
									},
									"scope": 32,
									"src": "853:114:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1028:74:0",
										"statements": [
											{
												"id": 29,
												"nodeType": "UncheckedBlock",
												"src": "1039:56:0",
												"statements": [
													{
														"expression": {
															"id": 27,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 23,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "1064:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 25,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1072:6:0",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4,
																"src": "1064:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 26,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1082:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1064:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 28,
														"nodeType": "ExpressionStatement",
														"src": "1064:19:0"
													}
												]
											}
										]
									},
									"id": 31,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "984:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1010:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "994:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 19,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 18,
														"name": "Counter",
														"nameLocations": [
															"994:7:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 5,
														"src": "994:7:0"
													},
													"referencedDeclaration": 5,
													"src": "994:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:25:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1028:0:0"
									},
									"scope": 32,
									"src": "975:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1736,
							"src": "442:663:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 33,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "1258:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 34,
								"nodeType": "StructuredDocumentation",
								"src": "1285:142:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 73,
							"linearizedBaseContracts": [
								73
							],
							"name": "IERC20Errors",
							"nameLocation": "1439:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "1459:314:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 43,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "1785:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1818:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "1810:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1810:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1834:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "1826:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1826:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1851:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "1843:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1843:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1809:49:0"
									},
									"src": "1779:80:0"
								},
								{
									"documentation": {
										"id": 44,
										"nodeType": "StructuredDocumentation",
										"src": "1867:155:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 48,
									"name": "ERC20InvalidSender",
									"nameLocation": "2034:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2061:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "2053:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2053:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2052:16:0"
									},
									"src": "2028:41:0"
								},
								{
									"documentation": {
										"id": 49,
										"nodeType": "StructuredDocumentation",
										"src": "2077:162:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 53,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "2251:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "2280:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "2272:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2272:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2271:18:0"
									},
									"src": "2245:45:0"
								},
								{
									"documentation": {
										"id": 54,
										"nodeType": "StructuredDocumentation",
										"src": "2298:350:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 62,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "2660:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2695:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2687:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2687:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "2712:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2704:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 57,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "2731:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2723:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 59,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2723:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2686:52:0"
									},
									"src": "2654:85:0"
								},
								{
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2747:177:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 67,
									"name": "ERC20InvalidApprover",
									"nameLocation": "2936:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "2965:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2957:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2957:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2956:18:0"
									},
									"src": "2930:45:0"
								},
								{
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "2983:198:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 72,
									"name": "ERC20InvalidSpender",
									"nameLocation": "3193:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "3213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3212:17:0"
									},
									"src": "3187:43:0"
								}
							],
							"scope": 1736,
							"src": "1429:1804:0",
							"usedErrors": [
								43,
								48,
								53,
								62,
								67,
								72
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 74,
								"nodeType": "StructuredDocumentation",
								"src": "3237:144:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 121,
							"linearizedBaseContracts": [
								121
							],
							"name": "IERC721Errors",
							"nameLocation": "3393:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "3414:223:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 79,
									"name": "ERC721InvalidOwner",
									"nameLocation": "3649:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3676:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "3668:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 76,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3668:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3667:15:0"
									},
									"src": "3643:40:0"
								},
								{
									"documentation": {
										"id": 80,
										"nodeType": "StructuredDocumentation",
										"src": "3691:135:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 84,
									"name": "ERC721NonexistentToken",
									"nameLocation": "3838:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3869:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "3861:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3861:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3860:17:0"
									},
									"src": "3832:46:0"
								},
								{
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "3886:294:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 93,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "4192:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4221:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "4213:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4237:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "4229:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4229:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4254:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "4246:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4246:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4212:48:0"
									},
									"src": "4186:75:0"
								},
								{
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "4269:155:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 98,
									"name": "ERC721InvalidSender",
									"nameLocation": "4436:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4464:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "4456:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4456:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4455:16:0"
									},
									"src": "4430:42:0"
								},
								{
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "4480:162:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 103,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "4654:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "4684:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "4676:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4675:18:0"
									},
									"src": "4648:46:0"
								},
								{
									"documentation": {
										"id": 104,
										"nodeType": "StructuredDocumentation",
										"src": "4702:251:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 110,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "4965:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5000:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4992:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4992:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5018:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "5010:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5010:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4991:35:0"
									},
									"src": "4959:68:0"
								},
								{
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "5035:177:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 115,
									"name": "ERC721InvalidApprover",
									"nameLocation": "5224:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5254:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "5246:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5246:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5245:18:0"
									},
									"src": "5218:46:0"
								},
								{
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "5272:200:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 120,
									"name": "ERC721InvalidOperator",
									"nameLocation": "5484:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5514:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "5506:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5506:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5505:18:0"
									},
									"src": "5478:46:0"
								}
							],
							"scope": 1736,
							"src": "3383:2144:0",
							"usedErrors": [
								79,
								84,
								93,
								98,
								103,
								110,
								115,
								120
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 122,
								"nodeType": "StructuredDocumentation",
								"src": "5531:146:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 168,
							"linearizedBaseContracts": [
								168
							],
							"name": "IERC1155Errors",
							"nameLocation": "5689:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "5711:367:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 133,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "6090:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "6125:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "6117:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6117:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "6141:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "6133:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6133:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "6158:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "6150:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6150:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6174:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "6166:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6166:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6116:66:0"
									},
									"src": "6084:99:0"
								},
								{
									"documentation": {
										"id": 134,
										"nodeType": "StructuredDocumentation",
										"src": "6191:155:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 138,
									"name": "ERC1155InvalidSender",
									"nameLocation": "6358:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "6387:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "6379:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6379:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6378:16:0"
									},
									"src": "6352:43:0"
								},
								{
									"documentation": {
										"id": 139,
										"nodeType": "StructuredDocumentation",
										"src": "6403:162:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 143,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "6577:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "6608:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "6600:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:18:0"
									},
									"src": "6571:47:0"
								},
								{
									"documentation": {
										"id": 144,
										"nodeType": "StructuredDocumentation",
										"src": "6626:260:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 150,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "6898:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6935:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "6927:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6927:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6953:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "6945:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6926:33:0"
									},
									"src": "6892:68:0"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "6968:177:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 155,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "7157:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "7188:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "7180:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7180:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7179:18:0"
									},
									"src": "7151:47:0"
								},
								{
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "7206:200:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 160,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "7418:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7449:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "7441:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7441:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7440:18:0"
									},
									"src": "7412:47:0"
								},
								{
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "7467:285:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 167,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "7764:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "7798:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "7790:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7790:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "7817:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "7809:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7809:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7789:41:0"
									},
									"src": "7758:73:0"
								}
							],
							"scope": 1736,
							"src": "5679:2155:0",
							"usedErrors": [
								133,
								138,
								143,
								150,
								155,
								160,
								167
							],
							"usedEvents": []
						},
						{
							"id": 169,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "7981:23:0"
						},
						{
							"id": 170,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "8227:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 171,
								"nodeType": "StructuredDocumentation",
								"src": "8254:75:0",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 180,
							"linearizedBaseContracts": [
								180
							],
							"name": "Math",
							"nameLocation": "8339:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "8351:52:0",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 174,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "8415:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8435:2:0"
									},
									"src": "8409:29:0"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 179,
									"members": [
										{
											"id": 175,
											"name": "Floor",
											"nameLocation": "8471:5:0",
											"nodeType": "EnumValue",
											"src": "8471:5:0"
										},
										{
											"id": 176,
											"name": "Ceil",
											"nameLocation": "8515:4:0",
											"nodeType": "EnumValue",
											"src": "8515:4:0"
										},
										{
											"id": 177,
											"name": "Trunc",
											"nameLocation": "8558:5:0",
											"nodeType": "EnumValue",
											"src": "8558:5:0"
										},
										{
											"id": 178,
											"name": "Expand",
											"nameLocation": "8589:6:0",
											"nodeType": "EnumValue",
											"src": "8589:6:0"
										}
									],
									"name": "Rounding",
									"nameLocation": "8451:8:0",
									"nodeType": "EnumDefinition",
									"src": "8446:174:0"
								}
							],
							"scope": 1736,
							"src": "8331:585:0",
							"usedErrors": [
								174
							],
							"usedEvents": []
						},
						{
							"id": 181,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "9047:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 182,
								"nodeType": "StructuredDocumentation",
								"src": "9078:36:0",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 266,
							"linearizedBaseContracts": [
								266
							],
							"name": "Strings",
							"nameLocation": "9124:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "9146:83:0",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 189,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "9241:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9278:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "9270:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9270:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "9293:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "9285:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9285:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9269:31:0"
									},
									"src": "9235:66:0"
								},
								{
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "9485:482:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 197,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "9500:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9509:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9500:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 203,
												"nodeType": "IfStatement",
												"src": "9496:53:0",
												"trueBody": {
													"id": 202,
													"nodeType": "Block",
													"src": "9512:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 200,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9534:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 196,
															"id": 201,
															"nodeType": "Return",
															"src": "9527:10:0"
														}
													]
												}
											},
											{
												"assignments": [
													205
												],
												"declarations": [
													{
														"constant": false,
														"id": 205,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "9577:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 264,
														"src": "9569:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 204,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9569:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 207,
												"initialValue": {
													"id": 206,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 192,
													"src": "9584:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9569:20:0"
											},
											{
												"assignments": [
													209
												],
												"declarations": [
													{
														"constant": false,
														"id": 209,
														"mutability": "mutable",
														"name": "digits",
														"nameLocation": "9608:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 264,
														"src": "9600:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 208,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9600:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 210,
												"nodeType": "VariableDeclarationStatement",
												"src": "9600:14:0"
											},
											{
												"body": {
													"id": 221,
													"nodeType": "Block",
													"src": "9643:60:0",
													"statements": [
														{
															"expression": {
																"id": 215,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "9658:8:0",
																"subExpression": {
																	"id": 214,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 209,
																	"src": "9658:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 216,
															"nodeType": "ExpressionStatement",
															"src": "9658:8:0"
														},
														{
															"expression": {
																"id": 219,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 217,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 205,
																	"src": "9681:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 218,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9689:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "9681:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 220,
															"nodeType": "ExpressionStatement",
															"src": "9681:10:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 211,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "9632:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 212,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9640:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9632:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 222,
												"nodeType": "WhileStatement",
												"src": "9625:78:0"
											},
											{
												"assignments": [
													224
												],
												"declarations": [
													{
														"constant": false,
														"id": 224,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "9736:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 264,
														"src": "9723:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 223,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "9723:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 229,
												"initialValue": {
													"arguments": [
														{
															"id": 227,
															"name": "digits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 209,
															"src": "9755:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 226,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "9745:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 225,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "9749:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9745:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9723:39:0"
											},
											{
												"body": {
													"id": 257,
													"nodeType": "Block",
													"src": "9792:126:0",
													"statements": [
														{
															"expression": {
																"id": 235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 233,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 209,
																	"src": "9807:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9817:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9807:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 236,
															"nodeType": "ExpressionStatement",
															"src": "9807:11:0"
														},
														{
															"expression": {
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 237,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "9833:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 239,
																	"indexExpression": {
																		"id": 238,
																		"name": "digits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 209,
																		"src": "9840:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "9833:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 248,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 244,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9863:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 247,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 245,
																							"name": "value",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 192,
																							"src": "9868:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "%",
																						"rightExpression": {
																							"hexValue": "3130",
																							"id": 246,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "9876:2:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_10_by_1",
																								"typeString": "int_const 10"
																							},
																							"value": "10"
																						},
																						"src": "9868:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9863:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 243,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "9857:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 242,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "9857:5:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 249,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9857:22:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 241,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9850:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 240,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "9850:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9850:30:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "9833:47:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 252,
															"nodeType": "ExpressionStatement",
															"src": "9833:47:0"
														},
														{
															"expression": {
																"id": 255,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 253,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 192,
																	"src": "9895:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 254,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9904:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "9895:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 256,
															"nodeType": "ExpressionStatement",
															"src": "9895:11:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 230,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "9780:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 231,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9789:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9780:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 258,
												"nodeType": "WhileStatement",
												"src": "9773:145:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 261,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "9952:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 260,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9945:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 259,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "9945:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9945:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 196,
												"id": 263,
												"nodeType": "Return",
												"src": "9938:21:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "9309:92:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "9423:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9440:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "9432:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9432:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9431:15:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "9470:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 194,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9470:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9469:15:0"
									},
									"scope": 266,
									"src": "9414:553:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1736,
							"src": "9116:858:0",
							"usedErrors": [
								189
							],
							"usedEvents": []
						},
						{
							"id": 267,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "10105:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 268,
								"nodeType": "StructuredDocumentation",
								"src": "10132:505:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 278,
							"linearizedBaseContracts": [
								278
							],
							"name": "Context",
							"nameLocation": "10657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 276,
										"nodeType": "Block",
										"src": "10734:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 273,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "10752:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "10756:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "10752:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 272,
												"id": 275,
												"nodeType": "Return",
												"src": "10745:17:0"
											}
										]
									},
									"id": 277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "10681:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10691:2:0"
									},
									"returnParameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "10725:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10725:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10724:9:0"
									},
									"scope": 278,
									"src": "10672:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1736,
							"src": "10639:136:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 279,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "10908:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 281,
										"name": "Context",
										"nameLocations": [
											"11466:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 278,
										"src": "11466:7:0"
									},
									"id": 282,
									"nodeType": "InheritanceSpecifier",
									"src": "11466:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 280,
								"nodeType": "StructuredDocumentation",
								"src": "10937:498:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 423,
							"linearizedBaseContracts": [
								423,
								278
							],
							"name": "Ownable",
							"nameLocation": "11455:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 284,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "11497:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 423,
									"src": "11481:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 283,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "11481:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 285,
										"nodeType": "StructuredDocumentation",
										"src": "11512:87:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 289,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "11611:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "11646:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "11638:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11638:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11637:17:0"
									},
									"src": "11605:50:0"
								},
								{
									"documentation": {
										"id": 290,
										"nodeType": "StructuredDocumentation",
										"src": "11663:84:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 294,
									"name": "OwnableInvalidOwner",
									"nameLocation": "11759:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11787:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "11779:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11779:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11778:15:0"
									},
									"src": "11753:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 300,
									"name": "OwnershipTransferred",
									"nameLocation": "11808:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "11845:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "11829:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11829:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 298,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "11876:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "11860:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11828:57:0"
									},
									"src": "11802:84:0"
								},
								{
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "12051:158:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 306,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "12066:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 309,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12090:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12082:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 307,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12082:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 310,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12082:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12066:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 320,
												"nodeType": "IfStatement",
												"src": "12062:97:0",
												"trueBody": {
													"id": 319,
													"nodeType": "Block",
													"src": "12094:65:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 315,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12144:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 314,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12136:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 313,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12136:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 316,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12136:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 312,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 294,
																	"src": "12116:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 317,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12116:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 318,
															"nodeType": "RevertStatement",
															"src": "12109:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 322,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 303,
															"src": "12188:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 321,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 422,
														"src": "12169:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12169:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "12169:32:0"
											}
										]
									},
									"documentation": {
										"id": 301,
										"nodeType": "StructuredDocumentation",
										"src": "11894:117:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 326,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "12037:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "12029:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12028:22:0"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12051:0:0"
									},
									"scope": 423,
									"src": "12017:192:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "12323:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 329,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 360,
														"src": "12334:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12334:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 331,
												"nodeType": "ExpressionStatement",
												"src": "12334:13:0"
											},
											{
												"id": 332,
												"nodeType": "PlaceholderStatement",
												"src": "12358:1:0"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "12217:79:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 334,
									"name": "onlyOwner",
									"nameLocation": "12311:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12320:2:0"
									},
									"src": "12302:65:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 342,
										"nodeType": "Block",
										"src": "12503:32:0",
										"statements": [
											{
												"expression": {
													"id": 340,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 284,
													"src": "12521:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 339,
												"id": 341,
												"nodeType": "Return",
												"src": "12514:13:0"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "12375:67:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 343,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "12457:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12462:2:0"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "12494:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12494:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12493:9:0"
									},
									"scope": 423,
									"src": "12448:87:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "12658:121:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 347,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 343,
															"src": "12673:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12673:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 349,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 277,
															"src": "12684:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 350,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12684:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12673:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "12669:103:0",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "12698:74:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 353,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 277,
																			"src": "12747:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12747:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 352,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 289,
																	"src": "12720:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12720:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "12713:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 344,
										"nodeType": "StructuredDocumentation",
										"src": "12543:64:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "12622:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12633:2:0"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12658:0:0"
									},
									"scope": 423,
									"src": "12613:166:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 373,
										"nodeType": "Block",
										"src": "13179:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 369,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13217:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 368,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13209:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 367,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13209:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13209:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 366,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 422,
														"src": "13190:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13190:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 372,
												"nodeType": "ExpressionStatement",
												"src": "13190:30:0"
											}
										]
									},
									"documentation": {
										"id": 361,
										"nodeType": "StructuredDocumentation",
										"src": "12787:330:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 374,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 364,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 363,
												"name": "onlyOwner",
												"nameLocations": [
													"13169:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 334,
												"src": "13169:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "13169:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "13132:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13149:2:0"
									},
									"returnParameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13179:0:0"
									},
									"scope": 423,
									"src": "13123:105:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 401,
										"nodeType": "Block",
										"src": "13455:150:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 382,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 377,
														"src": "13470:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 385,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13490:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13482:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 383,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "13482:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 386,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13482:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13470:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 396,
												"nodeType": "IfStatement",
												"src": "13466:93:0",
												"trueBody": {
													"id": 395,
													"nodeType": "Block",
													"src": "13494:65:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 391,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13544:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 390,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "13536:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 389,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "13536:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13536:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 388,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 294,
																	"src": "13516:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 393,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13516:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 394,
															"nodeType": "RevertStatement",
															"src": "13509:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 398,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "13588:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 397,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 422,
														"src": "13569:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13569:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 400,
												"nodeType": "ExpressionStatement",
												"src": "13569:28:0"
											}
										]
									},
									"documentation": {
										"id": 375,
										"nodeType": "StructuredDocumentation",
										"src": "13236:141:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 402,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 380,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 379,
												"name": "onlyOwner",
												"nameLocations": [
													"13445:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 334,
												"src": "13445:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "13445:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "13392:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "13418:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "13410:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13410:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13409:18:0"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13455:0:0"
									},
									"scope": 423,
									"src": "13383:222:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "13828:128:0",
										"statements": [
											{
												"assignments": [
													409
												],
												"declarations": [
													{
														"constant": false,
														"id": 409,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "13847:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 421,
														"src": "13839:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 408,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "13839:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 411,
												"initialValue": {
													"id": 410,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 284,
													"src": "13858:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13839:25:0"
											},
											{
												"expression": {
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 412,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "13875:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 413,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "13884:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13875:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 415,
												"nodeType": "ExpressionStatement",
												"src": "13875:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 417,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "13929:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 418,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "13939:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 416,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "13908:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13908:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 420,
												"nodeType": "EmitStatement",
												"src": "13903:45:0"
											}
										]
									},
									"documentation": {
										"id": 403,
										"nodeType": "StructuredDocumentation",
										"src": "13613:146:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "13774:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "13801:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "13793:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13793:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13792:18:0"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13828:0:0"
									},
									"scope": 423,
									"src": "13765:191:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1736,
							"src": "11437:2522:0",
							"usedErrors": [
								289,
								294
							],
							"usedEvents": [
								300
							]
						},
						{
							"id": 424,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "14120:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 425,
								"nodeType": "StructuredDocumentation",
								"src": "14147:156:0",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 440,
							"linearizedBaseContracts": [
								440
							],
							"name": "IERC721Receiver",
							"nameLocation": "14315:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 426,
										"nodeType": "StructuredDocumentation",
										"src": "14338:509:0",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 439,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "14862:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "14897:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "14889:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14924:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "14916:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14916:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14947:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "14939:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14939:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14980:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "14965:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 433,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14965:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14878:113:0"
									},
									"returnParameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "15010:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 436,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "15010:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15009:8:0"
									},
									"scope": 440,
									"src": "14853:165:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1736,
							"src": "14305:716:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 441,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "15180:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 442,
								"nodeType": "StructuredDocumentation",
								"src": "15207:287:0",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 451,
							"linearizedBaseContracts": [
								451
							],
							"name": "IERC165",
							"nameLocation": "15506:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "15521:347:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 450,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "15883:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "15908:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "15901:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 444,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "15901:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15900:20:0"
									},
									"returnParameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "15944:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 447,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15944:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15943:6:0"
									},
									"scope": 451,
									"src": "15874:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1736,
							"src": "15496:457:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 452,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "16094:23:0"
						},
						{
							"id": 453,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "16276:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 455,
										"name": "IERC165",
										"nameLocations": [
											"16824:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 451,
										"src": "16824:7:0"
									},
									"id": 456,
									"nodeType": "InheritanceSpecifier",
									"src": "16824:7:0"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 454,
								"nodeType": "StructuredDocumentation",
								"src": "16305:489:0",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 473,
							"linearizedBaseContracts": [
								473,
								451
							],
							"name": "ERC165",
							"nameLocation": "16814:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										450
									],
									"body": {
										"id": 471,
										"nodeType": "Block",
										"src": "16985:66:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 464,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "17003:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 466,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 451,
																	"src": "17023:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$451_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$451_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 465,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "17018:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17018:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$451",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 468,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "17032:11:0",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "17018:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "17003:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 463,
												"id": 470,
												"nodeType": "Return",
												"src": "16996:47:0"
											}
										]
									},
									"documentation": {
										"id": 457,
										"nodeType": "StructuredDocumentation",
										"src": "16839:58:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 472,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "16912:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "16937:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "16930:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 458,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "16930:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16929:20:0"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "16979:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 461,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16979:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16978:6:0"
									},
									"scope": 473,
									"src": "16903:148:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1736,
							"src": "16796:258:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 474,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "17199:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 476,
										"name": "IERC165",
										"nameLocations": [
											"17320:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 451,
										"src": "17320:7:0"
									},
									"id": 477,
									"nodeType": "InheritanceSpecifier",
									"src": "17320:7:0"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 475,
								"nodeType": "StructuredDocumentation",
								"src": "17228:69:0",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 587,
							"linearizedBaseContracts": [
								587,
								451
							],
							"name": "IERC721",
							"nameLocation": "17309:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 478,
										"nodeType": "StructuredDocumentation",
										"src": "17335:90:0",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 486,
									"name": "Transfer",
									"nameLocation": "17437:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "17462:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "17446:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17446:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17484:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "17468:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17468:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "17504:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "17488:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17445:67:0"
									},
									"src": "17431:82:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 487,
										"nodeType": "StructuredDocumentation",
										"src": "17521:96:0",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 495,
									"name": "Approval",
									"nameLocation": "17629:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "17654:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "17638:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17638:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 491,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "17677:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "17661:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17661:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "17703:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "17687:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17687:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17637:74:0"
									},
									"src": "17623:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 496,
										"nodeType": "StructuredDocumentation",
										"src": "17720:119:0",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 504,
									"name": "ApprovalForAll",
									"nameLocation": "17851:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "17882:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "17866:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17866:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 500,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "17905:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "17889:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 502,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "17920:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "17915:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 501,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17915:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17865:64:0"
									},
									"src": "17845:85:0"
								},
								{
									"documentation": {
										"id": 505,
										"nodeType": "StructuredDocumentation",
										"src": "17938:78:0",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 512,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "18031:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "18049:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "18041:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18041:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18040:15:0"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "18087:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "18079:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18079:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18078:17:0"
									},
									"scope": 587,
									"src": "18022:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 513,
										"nodeType": "StructuredDocumentation",
										"src": "18104:137:0",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 520,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "18256:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "18272:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "18264:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18264:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18263:17:0"
									},
									"returnParameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "18312:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "18304:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18304:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18303:15:0"
									},
									"scope": 587,
									"src": "18247:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 521,
										"nodeType": "StructuredDocumentation",
										"src": "18327:578:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 532,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "18920:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "18945:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "18937:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18937:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "18959:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "18951:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18951:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "18971:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "18963:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18963:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "18995:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "18980:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 528,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18980:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18936:64:0"
									},
									"returnParameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19009:0:0"
									},
									"scope": 587,
									"src": "18911:99:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 533,
										"nodeType": "StructuredDocumentation",
										"src": "19018:720:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 542,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "19753:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "19778:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "19770:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19770:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "19792:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "19784:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "19804:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "19796:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19796:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19769:43:0"
									},
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19821:0:0"
									},
									"scope": 587,
									"src": "19744:78:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "19830:747:0",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 552,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "20592:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "20613:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "20605:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20605:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "20627:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "20619:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20619:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "20639:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "20631:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20631:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20604:43:0"
									},
									"returnParameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20656:0:0"
									},
									"scope": 587,
									"src": "20583:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 553,
										"nodeType": "StructuredDocumentation",
										"src": "20665:464:0",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 560,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "21144:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "21160:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "21152:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 554,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21152:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "21172:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "21164:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21164:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21151:29:0"
									},
									"returnParameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21189:0:0"
									},
									"scope": 587,
									"src": "21135:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 561,
										"nodeType": "StructuredDocumentation",
										"src": "21198:324:0",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 568,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "21537:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "21563:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "21555:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21555:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "21578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "21573:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 564,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "21573:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21554:33:0"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21596:0:0"
									},
									"scope": 587,
									"src": "21528:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 569,
										"nodeType": "StructuredDocumentation",
										"src": "21605:145:0",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 576,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "21765:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "21785:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "21777:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21777:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21776:17:0"
									},
									"returnParameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "21825:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "21817:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21817:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21816:18:0"
									},
									"scope": 587,
									"src": "21756:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 577,
										"nodeType": "StructuredDocumentation",
										"src": "21843:142:0",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 586,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "22000:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "22025:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "22017:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22017:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "22040:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "22032:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22032:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22016:33:0"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "22073:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 583,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "22073:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22072:6:0"
									},
									"scope": 587,
									"src": "21991:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1736,
							"src": "17299:4783:0",
							"usedErrors": [],
							"usedEvents": [
								486,
								495,
								504
							]
						},
						{
							"id": 588,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "22223:23:0"
						},
						{
							"id": 589,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "22391:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 591,
										"name": "IERC165",
										"nameLocations": [
											"22490:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 451,
										"src": "22490:7:0"
									},
									"id": 592,
									"nodeType": "InheritanceSpecifier",
									"src": "22490:7:0"
								},
								{
									"baseName": {
										"id": 593,
										"name": "IERC721",
										"nameLocations": [
											"22499:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 587,
										"src": "22499:7:0"
									},
									"id": 594,
									"nodeType": "InheritanceSpecifier",
									"src": "22499:7:0"
								}
							],
							"canonicalName": "IERC4906",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 590,
								"nodeType": "StructuredDocumentation",
								"src": "22422:46:0",
								"text": "@title EIP-721 Metadata Update Extension"
							},
							"fullyImplemented": false,
							"id": 607,
							"linearizedBaseContracts": [
								607,
								587,
								451
							],
							"name": "IERC4906",
							"nameLocation": "22478:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "22514:203:0",
										"text": "@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."
									},
									"eventSelector": "f8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7",
									"id": 599,
									"name": "MetadataUpdate",
									"nameLocation": "22729:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"indexed": false,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "22752:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "22744:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22744:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22743:18:0"
									},
									"src": "22723:39:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 600,
										"nodeType": "StructuredDocumentation",
										"src": "22770:214:0",
										"text": "@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."
									},
									"eventSelector": "6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c",
									"id": 606,
									"name": "BatchMetadataUpdate",
									"nameLocation": "22996:19:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"indexed": false,
												"mutability": "mutable",
												"name": "_fromTokenId",
												"nameLocation": "23024:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "23016:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"indexed": false,
												"mutability": "mutable",
												"name": "_toTokenId",
												"nameLocation": "23046:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "23038:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23038:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23015:42:0"
									},
									"src": "22990:68:0"
								}
							],
							"scope": 1736,
							"src": "22468:593:0",
							"usedErrors": [],
							"usedEvents": [
								486,
								495,
								504,
								599,
								606
							]
						},
						{
							"id": 608,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "23244:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 610,
										"name": "IERC721",
										"nameLocations": [
											"23440:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 587,
										"src": "23440:7:0"
									},
									"id": 611,
									"nodeType": "InheritanceSpecifier",
									"src": "23440:7:0"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 609,
								"nodeType": "StructuredDocumentation",
								"src": "23273:136:0",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 632,
							"linearizedBaseContracts": [
								632,
								587,
								451
							],
							"name": "IERC721Metadata",
							"nameLocation": "23421:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "23455:60:0",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 617,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "23530:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23534:2:0"
									},
									"returnParameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "23560:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 614,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "23560:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23559:15:0"
									},
									"scope": 632,
									"src": "23521:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 618,
										"nodeType": "StructuredDocumentation",
										"src": "23583:62:0",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 623,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "23660:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23666:2:0"
									},
									"returnParameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "23692:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 620,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "23692:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23691:15:0"
									},
									"scope": 632,
									"src": "23651:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 624,
										"nodeType": "StructuredDocumentation",
										"src": "23715:92:0",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 631,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "23822:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "23839:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "23831:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23831:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23830:17:0"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "23871:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 628,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "23871:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23870:15:0"
									},
									"scope": 632,
									"src": "23813:73:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1736,
							"src": "23411:478:0",
							"usedErrors": [],
							"usedEvents": [
								486,
								495,
								504
							]
						},
						{
							"id": 633,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "24032:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 635,
										"name": "Context",
										"nameLocations": [
											"24353:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 278,
										"src": "24353:7:0"
									},
									"id": 636,
									"nodeType": "InheritanceSpecifier",
									"src": "24353:7:0"
								},
								{
									"baseName": {
										"id": 637,
										"name": "ERC165",
										"nameLocations": [
											"24362:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 473,
										"src": "24362:6:0"
									},
									"id": 638,
									"nodeType": "InheritanceSpecifier",
									"src": "24362:6:0"
								},
								{
									"baseName": {
										"id": 639,
										"name": "IERC721",
										"nameLocations": [
											"24370:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 587,
										"src": "24370:7:0"
									},
									"id": 640,
									"nodeType": "InheritanceSpecifier",
									"src": "24370:7:0"
								},
								{
									"baseName": {
										"id": 641,
										"name": "IERC721Metadata",
										"nameLocations": [
											"24379:15:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 632,
										"src": "24379:15:0"
									},
									"id": 642,
									"nodeType": "InheritanceSpecifier",
									"src": "24379:15:0"
								},
								{
									"baseName": {
										"id": 643,
										"name": "IERC721Errors",
										"nameLocations": [
											"24396:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 121,
										"src": "24396:13:0"
									},
									"id": 644,
									"nodeType": "InheritanceSpecifier",
									"src": "24396:13:0"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 634,
								"nodeType": "StructuredDocumentation",
								"src": "24073:250:0",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1470,
							"linearizedBaseContracts": [
								1470,
								121,
								632,
								587,
								473,
								451,
								278
							],
							"name": "ERC721",
							"nameLocation": "24343:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 647,
									"libraryName": {
										"id": 645,
										"name": "Strings",
										"nameLocations": [
											"24423:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 266,
										"src": "24423:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "24417:26:0",
									"typeName": {
										"id": 646,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "24435:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 649,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "24485:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 1470,
									"src": "24470:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 648,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "24470:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 651,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "24535:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1470,
									"src": "24520:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 650,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "24520:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 655,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "24595:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1470,
									"src": "24551:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 654,
										"keyName": "tokenId",
										"keyNameLocation": "24567:7:0",
										"keyType": {
											"id": 652,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "24559:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "24551:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 653,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "24578:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 659,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "24653:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1470,
									"src": "24611:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 658,
										"keyName": "owner",
										"keyNameLocation": "24627:5:0",
										"keyType": {
											"id": 656,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "24619:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "24611:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 657,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "24636:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 663,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "24715:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1470,
									"src": "24671:59:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 662,
										"keyName": "tokenId",
										"keyNameLocation": "24687:7:0",
										"keyType": {
											"id": 660,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "24679:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "24671:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 661,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "24698:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 669,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "24807:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 1470,
									"src": "24739:86:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 668,
										"keyName": "owner",
										"keyNameLocation": "24755:5:0",
										"keyType": {
											"id": 664,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "24747:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "24739:59:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 667,
											"keyName": "operator",
											"keyNameLocation": "24780:8:0",
											"keyType": {
												"id": 665,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "24772:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "24764:33:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 666,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "24792:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 685,
										"nodeType": "Block",
										"src": "25006:60:0",
										"statements": [
											{
												"expression": {
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 677,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 649,
														"src": "25017:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 678,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "25025:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "25017:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 680,
												"nodeType": "ExpressionStatement",
												"src": "25017:13:0"
											},
											{
												"expression": {
													"id": 683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 681,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 651,
														"src": "25041:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 682,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 674,
														"src": "25051:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "25041:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 684,
												"nodeType": "ExpressionStatement",
												"src": "25041:17:0"
											}
										]
									},
									"documentation": {
										"id": 670,
										"nodeType": "StructuredDocumentation",
										"src": "24834:110:0",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 686,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "24976:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "24962:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 671,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "24962:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "24997:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "24983:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 673,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "24983:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24961:44:0"
									},
									"returnParameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25006:0:0"
									},
									"scope": 1470,
									"src": "24950:116:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										450,
										472
									],
									"body": {
										"id": 716,
										"nodeType": "Block",
										"src": "25246:197:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 709,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 697,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 689,
																"src": "25277:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 699,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 587,
																			"src": "25297:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$587_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$587_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 698,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "25292:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 700,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "25292:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$587",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 701,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "25306:11:0",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "25292:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "25277:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 708,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 703,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 689,
																"src": "25334:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 705,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 632,
																			"src": "25354:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$632_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$632_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 704,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "25349:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 706,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "25349:21:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$632",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 707,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "25371:11:0",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "25349:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "25334:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "25277:105:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 712,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 689,
																"src": "25423:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 710,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "25399:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1470_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "25405:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 472,
															"src": "25399:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 713,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25399:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "25277:158:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 696,
												"id": 715,
												"nodeType": "Return",
												"src": "25257:178:0"
											}
										]
									},
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "25074:58:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "25147:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 693,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 691,
												"name": "ERC165",
												"nameLocations": [
													"25214:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 473,
												"src": "25214:6:0"
											},
											{
												"id": 692,
												"name": "IERC165",
												"nameLocations": [
													"25222:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 451,
												"src": "25222:7:0"
											}
										],
										"src": "25205:25:0"
									},
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "25172:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "25165:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 688,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "25165:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25164:20:0"
									},
									"returnParameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "25240:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 694,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "25240:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25239:6:0"
									},
									"scope": 1470,
									"src": "25138:305:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										512
									],
									"body": {
										"id": 744,
										"nodeType": "Block",
										"src": "25581:141:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 725,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "25596:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25613:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 727,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "25605:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 726,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "25605:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 729,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25605:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "25596:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 739,
												"nodeType": "IfStatement",
												"src": "25592:89:0",
												"trueBody": {
													"id": 738,
													"nodeType": "Block",
													"src": "25617:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 734,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25666:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 733,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "25658:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 732,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "25658:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 735,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "25658:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 731,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 79,
																	"src": "25639:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 736,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25639:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 737,
															"nodeType": "RevertStatement",
															"src": "25632:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 740,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 659,
														"src": "25698:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 742,
													"indexExpression": {
														"id": 741,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "25708:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "25698:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 724,
												"id": 743,
												"nodeType": "Return",
												"src": "25691:23:0"
											}
										]
									},
									"documentation": {
										"id": 718,
										"nodeType": "StructuredDocumentation",
										"src": "25451:50:0",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 745,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "25516:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "25534:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "25526:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25526:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25525:15:0"
									},
									"returnParameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "25572:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25572:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25571:9:0"
									},
									"scope": 1470,
									"src": "25507:215:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										520
									],
									"body": {
										"id": 757,
										"nodeType": "Block",
										"src": "25858:48:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 754,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "25890:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 753,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1406,
														"src": "25876:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25876:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 752,
												"id": 756,
												"nodeType": "Return",
												"src": "25869:29:0"
											}
										]
									},
									"documentation": {
										"id": 746,
										"nodeType": "StructuredDocumentation",
										"src": "25730:48:0",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 758,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "25793:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "25809:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "25801:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25801:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25800:17:0"
									},
									"returnParameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "25849:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 750,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25849:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25848:9:0"
									},
									"scope": 1470,
									"src": "25784:122:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										617
									],
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "26035:31:0",
										"statements": [
											{
												"expression": {
													"id": 764,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 649,
													"src": "26053:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 763,
												"id": 765,
												"nodeType": "Return",
												"src": "26046:12:0"
											}
										]
									},
									"documentation": {
										"id": 759,
										"nodeType": "StructuredDocumentation",
										"src": "25914:53:0",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "25982:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25986:2:0"
									},
									"returnParameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "26020:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 761,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "26020:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26019:15:0"
									},
									"scope": 1470,
									"src": "25973:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										623
									],
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "26199:33:0",
										"statements": [
											{
												"expression": {
													"id": 773,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 651,
													"src": "26217:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 772,
												"id": 774,
												"nodeType": "Return",
												"src": "26210:14:0"
											}
										]
									},
									"documentation": {
										"id": 768,
										"nodeType": "StructuredDocumentation",
										"src": "26074:55:0",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "26144:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26150:2:0"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "26184:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 770,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "26184:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26183:15:0"
									},
									"scope": 1470,
									"src": "26135:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										631
									],
									"body": {
										"id": 811,
										"nodeType": "Block",
										"src": "26382:181:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 785,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 779,
															"src": "26407:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 784,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1406,
														"src": "26393:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26393:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 787,
												"nodeType": "ExpressionStatement",
												"src": "26393:22:0"
											},
											{
												"assignments": [
													789
												],
												"declarations": [
													{
														"constant": false,
														"id": 789,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "26442:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 811,
														"src": "26428:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 788,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "26428:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 792,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 790,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 821,
														"src": "26452:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26452:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26428:34:0"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 799,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 795,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 789,
																		"src": "26486:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 794,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "26480:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 793,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "26480:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 796,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26480:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "26495:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "26480:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 798,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26504:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "26480:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 808,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "26553:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "26480:75:0",
													"trueExpression": {
														"arguments": [
															{
																"id": 803,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 789,
																"src": "26522:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 804,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 779,
																		"src": "26531:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 805,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "26539:8:0",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 265,
																	"src": "26531:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 806,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26531:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 801,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "26508:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 800,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "26508:6:0",
																	"typeDescriptions": {}
																}
															},
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "26515:6:0",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "26508:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 807,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "26508:42:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 783,
												"id": 810,
												"nodeType": "Return",
												"src": "26473:82:0"
											}
										]
									},
									"documentation": {
										"id": 777,
										"nodeType": "StructuredDocumentation",
										"src": "26240:57:0",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 812,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "26312:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "26329:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "26321:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26321:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26320:17:0"
									},
									"returnParameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "26367:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 781,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "26367:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26366:15:0"
									},
									"scope": 1470,
									"src": "26303:260:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 820,
										"nodeType": "Block",
										"src": "26870:82:0",
										"statements": [
											{
												"expression": {
													"hexValue": "697066733a2f2f516d61633839735a545347764b6b795961327672786452616b5052456147464a534e4a52525765747a544c51544d2f",
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "26888:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_1250311f865916c0c48ec18be7711c5b67f23674d6e827435103b8b03cf0ba32",
														"typeString": "literal_string \"ipfs://Qmac89sZTSGvKkyYa2vrxdRakPREaGFJSNJRRWetzTLQTM/\""
													},
													"value": "ipfs://Qmac89sZTSGvKkyYa2vrxdRakPREaGFJSNJRRWetzTLQTM/"
												},
												"functionReturnParameters": 817,
												"id": 819,
												"nodeType": "Return",
												"src": "26881:63:0"
											}
										]
									},
									"documentation": {
										"id": 813,
										"nodeType": "StructuredDocumentation",
										"src": "26571:235:0",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 821,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "26821:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26829:2:0"
									},
									"returnParameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "26855:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 815,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "26855:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26854:15:0"
									},
									"scope": 1470,
									"src": "26812:140:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										560
									],
									"body": {
										"id": 836,
										"nodeType": "Block",
										"src": "27077:54:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 830,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "27097:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 831,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "27101:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 832,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 277,
																"src": "27110:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27110:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 829,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1274,
															1340
														],
														"referencedDeclaration": 1274,
														"src": "27088:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27088:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 835,
												"nodeType": "ExpressionStatement",
												"src": "27088:35:0"
											}
										]
									},
									"documentation": {
										"id": 822,
										"nodeType": "StructuredDocumentation",
										"src": "26960:48:0",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 837,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "27023:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "27039:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "27031:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 823,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27031:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "27051:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "27043:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27043:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27030:29:0"
									},
									"returnParameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27077:0:0"
									},
									"scope": 1470,
									"src": "27014:117:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										576
									],
									"body": {
										"id": 853,
										"nodeType": "Block",
										"src": "27275:82:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 846,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "27300:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 845,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1406,
														"src": "27286:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27286:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 848,
												"nodeType": "ExpressionStatement",
												"src": "27286:22:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 850,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "27341:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 849,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1003,
														"src": "27328:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27328:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 844,
												"id": 852,
												"nodeType": "Return",
												"src": "27321:28:0"
											}
										]
									},
									"documentation": {
										"id": 838,
										"nodeType": "StructuredDocumentation",
										"src": "27139:52:0",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "27206:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "27226:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "27218:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27218:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27217:17:0"
									},
									"returnParameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "27266:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 842,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27266:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27265:9:0"
									},
									"scope": 1470,
									"src": "27197:160:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										568
									],
									"body": {
										"id": 869,
										"nodeType": "Block",
										"src": "27505:71:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 863,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 277,
																"src": "27535:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27535:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 865,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 857,
															"src": "27549:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 866,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 859,
															"src": "27559:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 862,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1377,
														"src": "27516:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27516:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 868,
												"nodeType": "ExpressionStatement",
												"src": "27516:52:0"
											}
										]
									},
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "27365:58:0",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "27438:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "27464:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "27456:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27456:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "27479:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "27474:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 858,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "27474:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27455:33:0"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27505:0:0"
									},
									"scope": 1470,
									"src": "27429:147:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										586
									],
									"body": {
										"id": 886,
										"nodeType": "Block",
										"src": "27741:61:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 880,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "27759:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 882,
														"indexExpression": {
															"id": 881,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "27778:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "27759:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 884,
													"indexExpression": {
														"id": 883,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 875,
														"src": "27785:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "27759:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 879,
												"id": 885,
												"nodeType": "Return",
												"src": "27752:42:0"
											}
										]
									},
									"documentation": {
										"id": 871,
										"nodeType": "StructuredDocumentation",
										"src": "27584:57:0",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 887,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "27656:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "27681:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "27673:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27673:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "27696:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "27688:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 874,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27688:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27672:33:0"
									},
									"returnParameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "27735:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 877,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "27735:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27734:6:0"
									},
									"scope": 1470,
									"src": "27647:155:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										552
									],
									"body": {
										"id": 932,
										"nodeType": "Block",
										"src": "27949:508:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 897,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 892,
														"src": "27964:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 900,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "27978:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 899,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "27970:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 898,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "27970:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 901,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27970:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "27964:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 911,
												"nodeType": "IfStatement",
												"src": "27960:89:0",
												"trueBody": {
													"id": 910,
													"nodeType": "Block",
													"src": "27982:67:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 906,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28034:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 905,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "28026:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 904,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "28026:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 907,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "28026:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 903,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 103,
																	"src": "28004:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 908,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28004:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 909,
															"nodeType": "RevertStatement",
															"src": "27997:40:0"
														}
													]
												}
											},
											{
												"assignments": [
													913
												],
												"declarations": [
													{
														"constant": false,
														"id": 913,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "28278:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 932,
														"src": "28270:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 912,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "28270:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 920,
												"initialValue": {
													"arguments": [
														{
															"id": 915,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 892,
															"src": "28302:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 916,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "28306:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 917,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 277,
																"src": "28315:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28315:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 914,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1166,
														"src": "28294:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28294:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28270:58:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 921,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 913,
														"src": "28343:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 922,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 890,
														"src": "28360:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "28343:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 931,
												"nodeType": "IfStatement",
												"src": "28339:111:0",
												"trueBody": {
													"id": 930,
													"nodeType": "Block",
													"src": "28366:84:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 925,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 890,
																		"src": "28409:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 926,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 894,
																		"src": "28415:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 927,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 913,
																		"src": "28424:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 924,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 93,
																	"src": "28388:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (address,uint256,address) pure"
																	}
																},
																"id": 928,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28388:50:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 929,
															"nodeType": "RevertStatement",
															"src": "28381:57:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 888,
										"nodeType": "StructuredDocumentation",
										"src": "27810:53:0",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 933,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "27878:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "27899:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "27891:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 889,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "27913:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "27905:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 891,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27905:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "27925:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "27917:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27917:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27890:43:0"
									},
									"returnParameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27949:0:0"
									},
									"scope": 1470,
									"src": "27869:588:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										542
									],
									"body": {
										"id": 950,
										"nodeType": "Block",
										"src": "28606:58:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 944,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 936,
															"src": "28634:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 945,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 938,
															"src": "28640:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 946,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "28644:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 947,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28653:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 943,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 977,
														"src": "28617:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28617:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 949,
												"nodeType": "ExpressionStatement",
												"src": "28617:39:0"
											}
										]
									},
									"documentation": {
										"id": 934,
										"nodeType": "StructuredDocumentation",
										"src": "28465:57:0",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 951,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "28537:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "28562:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "28554:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 935,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28554:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "28576:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "28568:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28568:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "28588:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "28580:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28580:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28553:43:0"
									},
									"returnParameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28606:0:0"
									},
									"scope": 1470,
									"src": "28528:136:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										532
									],
									"body": {
										"id": 976,
										"nodeType": "Block",
										"src": "28838:108:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 964,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "28862:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 965,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "28868:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 966,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "28872:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 963,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 933,
														"src": "28849:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28849:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 968,
												"nodeType": "ExpressionStatement",
												"src": "28849:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 970,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "28914:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 971,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "28920:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 972,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "28924:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 973,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 960,
															"src": "28933:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 969,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1469,
														"src": "28891:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28891:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 975,
												"nodeType": "ExpressionStatement",
												"src": "28891:47:0"
											}
										]
									},
									"documentation": {
										"id": 952,
										"nodeType": "StructuredDocumentation",
										"src": "28672:57:0",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 977,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "28744:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "28769:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "28761:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 953,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28761:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "28783:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "28775:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 955,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "28795:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "28787:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 957,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28787:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "28817:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "28804:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 959,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "28804:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28760:62:0"
									},
									"returnParameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28838:0:0"
									},
									"scope": 1470,
									"src": "28735:211:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 989,
										"nodeType": "Block",
										"src": "29545:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 985,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 655,
														"src": "29563:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 987,
													"indexExpression": {
														"id": 986,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "29571:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "29563:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 984,
												"id": 988,
												"nodeType": "Return",
												"src": "29556:23:0"
											}
										]
									},
									"documentation": {
										"id": 978,
										"nodeType": "StructuredDocumentation",
										"src": "28954:510:0",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 990,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "29479:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "29496:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "29488:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29487:17:0"
									},
									"returnParameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "29536:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 982,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29536:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29535:9:0"
									},
									"scope": 1470,
									"src": "29470:117:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1002,
										"nodeType": "Block",
										"src": "29787:50:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 998,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "29805:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 1000,
													"indexExpression": {
														"id": 999,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 993,
														"src": "29821:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "29805:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 997,
												"id": 1001,
												"nodeType": "Return",
												"src": "29798:31:0"
											}
										]
									},
									"documentation": {
										"id": 991,
										"nodeType": "StructuredDocumentation",
										"src": "29595:107:0",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 1003,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "29717:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "29738:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "29730:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29730:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29729:17:0"
									},
									"returnParameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "29778:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 995,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29778:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29777:9:0"
									},
									"scope": 1470,
									"src": "29708:129:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1038,
										"nodeType": "Block",
										"src": "30266:167:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1020,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1015,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "30297:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1018,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30316:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1017,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "30308:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1016,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "30308:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1019,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30308:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "30297:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1034,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1023,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1021,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1006,
																			"src": "30336:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 1022,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1008,
																			"src": "30345:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "30336:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 1025,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1006,
																				"src": "30373:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1026,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1008,
																				"src": "30380:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1024,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 887,
																			"src": "30356:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1027,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "30356:32:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "30336:52:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1033,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1030,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1010,
																				"src": "30405:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1029,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1003,
																			"src": "30392:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 1031,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "30392:21:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 1032,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1008,
																		"src": "30417:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "30392:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "30336:88:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1035,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "30335:90:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "30297:128:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1014,
												"id": 1037,
												"nodeType": "Return",
												"src": "30277:148:0"
											}
										]
									},
									"documentation": {
										"id": 1004,
										"nodeType": "StructuredDocumentation",
										"src": "29845:306:0",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 1039,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "30166:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "30188:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "30180:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1005,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30180:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "30203:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "30195:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1007,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30195:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "30220:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "30212:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30212:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30179:49:0"
									},
									"returnParameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "30260:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1012,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "30260:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30259:6:0"
									},
									"scope": 1470,
									"src": "30157:276:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1075,
										"nodeType": "Block",
										"src": "30974:279:0",
										"statements": [
											{
												"condition": {
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "30989:39:0",
													"subExpression": {
														"arguments": [
															{
																"id": 1050,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1042,
																"src": "31004:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1051,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1044,
																"src": "31011:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1052,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1046,
																"src": "31020:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1049,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "30990:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 1053,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30990:38:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1074,
												"nodeType": "IfStatement",
												"src": "30985:261:0",
												"trueBody": {
													"id": 1073,
													"nodeType": "Block",
													"src": "31030:216:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1060,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1055,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1042,
																	"src": "31049:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1058,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "31066:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1057,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "31058:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1056,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "31058:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1059,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "31058:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "31049:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1071,
																"nodeType": "Block",
																"src": "31149:86:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1067,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1044,
																					"src": "31202:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1068,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1046,
																					"src": "31211:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1066,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 110,
																				"src": "31175:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256) pure"
																				}
																			},
																			"id": 1069,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "31175:44:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1070,
																		"nodeType": "RevertStatement",
																		"src": "31168:51:0"
																	}
																]
															},
															"id": 1072,
															"nodeType": "IfStatement",
															"src": "31045:190:0",
															"trueBody": {
																"id": 1065,
																"nodeType": "Block",
																"src": "31070:73:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1062,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1046,
																					"src": "31119:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1061,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 84,
																				"src": "31096:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) pure"
																				}
																			},
																			"id": 1063,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "31096:31:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1064,
																		"nodeType": "RevertStatement",
																		"src": "31089:38:0"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1040,
										"nodeType": "StructuredDocumentation",
										"src": "30441:430:0",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 1076,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "30886:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "30911:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "30903:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1041,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30903:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "30926:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "30918:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1043,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30918:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "30943:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "30935:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1045,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30935:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30902:49:0"
									},
									"returnParameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30974:0:0"
									},
									"scope": 1470,
									"src": "30877:376:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1165,
										"nodeType": "Block",
										"src": "31958:729:0",
										"statements": [
											{
												"assignments": [
													1089
												],
												"declarations": [
													{
														"constant": false,
														"id": 1089,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "31977:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1165,
														"src": "31969:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1088,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "31969:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1093,
												"initialValue": {
													"arguments": [
														{
															"id": 1091,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "31993:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1090,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 990,
														"src": "31984:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31984:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31969:32:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1094,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1083,
														"src": "32064:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1097,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "32080:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1096,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "32072:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1095,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "32072:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1098,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32072:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "32064:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1107,
												"nodeType": "IfStatement",
												"src": "32060:88:0",
												"trueBody": {
													"id": 1106,
													"nodeType": "Block",
													"src": "32084:64:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1101,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1089,
																		"src": "32116:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1102,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1083,
																		"src": "32122:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1103,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1081,
																		"src": "32128:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1100,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1076,
																	"src": "32099:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 1104,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32099:37:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1105,
															"nodeType": "ExpressionStatement",
															"src": "32099:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1108,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1089,
														"src": "32195:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1111,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "32211:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1110,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "32203:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1109,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "32203:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1112,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32203:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "32195:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1135,
												"nodeType": "IfStatement",
												"src": "32191:263:0",
												"trueBody": {
													"id": 1134,
													"nodeType": "Block",
													"src": "32215:239:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1117,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "32330:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1116,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "32322:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1115,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "32322:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1118,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "32322:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1119,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1081,
																		"src": "32334:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1122,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "32351:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1121,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "32343:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1120,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "32343:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "32343:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 1124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32355:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1114,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1274,
																		1340
																	],
																	"referencedDeclaration": 1340,
																	"src": "32313:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 1125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32313:48:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1126,
															"nodeType": "ExpressionStatement",
															"src": "32313:48:0"
														},
														{
															"id": 1133,
															"nodeType": "UncheckedBlock",
															"src": "32378:65:0",
															"statements": [
																{
																	"expression": {
																		"id": 1131,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 1127,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 659,
																				"src": "32407:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1129,
																			"indexExpression": {
																				"id": 1128,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1089,
																				"src": "32417:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "32407:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1130,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "32426:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "32407:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1132,
																	"nodeType": "ExpressionStatement",
																	"src": "32407:20:0"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1136,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1079,
														"src": "32470:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1139,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "32484:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1138,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "32476:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1137,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "32476:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1140,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32476:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "32470:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1150,
												"nodeType": "IfStatement",
												"src": "32466:111:0",
												"trueBody": {
													"id": 1149,
													"nodeType": "Block",
													"src": "32488:89:0",
													"statements": [
														{
															"id": 1148,
															"nodeType": "UncheckedBlock",
															"src": "32503:63:0",
															"statements": [
																{
																	"expression": {
																		"id": 1146,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 1142,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 659,
																				"src": "32532:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1144,
																			"indexExpression": {
																				"id": 1143,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1079,
																				"src": "32542:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "32532:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1145,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "32549:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "32532:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1147,
																	"nodeType": "ExpressionStatement",
																	"src": "32532:18:0"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 1155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1151,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 655,
															"src": "32589:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1153,
														"indexExpression": {
															"id": 1152,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "32597:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "32589:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1154,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1079,
														"src": "32608:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "32589:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1156,
												"nodeType": "ExpressionStatement",
												"src": "32589:21:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1158,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "32637:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1159,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1079,
															"src": "32643:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1160,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "32647:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1157,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 486,
														"src": "32628:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32628:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1162,
												"nodeType": "EmitStatement",
												"src": "32623:32:0"
											},
											{
												"expression": {
													"id": 1163,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1089,
													"src": "32675:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1087,
												"id": 1164,
												"nodeType": "Return",
												"src": "32668:11:0"
											}
										]
									},
									"documentation": {
										"id": 1077,
										"nodeType": "StructuredDocumentation",
										"src": "31265:592:0",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 1166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "31872:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "31888:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1166,
												"src": "31880:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1078,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31880:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "31900:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1166,
												"src": "31892:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31892:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "31917:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1166,
												"src": "31909:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1082,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31909:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31879:43:0"
									},
									"returnParameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1166,
												"src": "31949:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1085,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31949:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31948:9:0"
									},
									"scope": 1470,
									"src": "31863:824:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1215,
										"nodeType": "Block",
										"src": "33076:282:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1174,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1169,
														"src": "33091:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1177,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33105:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1176,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "33097:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1175,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "33097:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1178,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33097:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "33091:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1188,
												"nodeType": "IfStatement",
												"src": "33087:89:0",
												"trueBody": {
													"id": 1187,
													"nodeType": "Block",
													"src": "33109:67:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1183,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "33161:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1182,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "33153:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1181,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "33153:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "33153:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1180,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 103,
																	"src": "33131:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33131:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1186,
															"nodeType": "RevertStatement",
															"src": "33124:40:0"
														}
													]
												}
											},
											{
												"assignments": [
													1190
												],
												"declarations": [
													{
														"constant": false,
														"id": 1190,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "33194:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 1215,
														"src": "33186:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1189,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "33186:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1199,
												"initialValue": {
													"arguments": [
														{
															"id": 1192,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "33218:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1193,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1171,
															"src": "33222:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33239:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1195,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "33231:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1194,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "33231:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1197,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33231:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1191,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1166,
														"src": "33210:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33210:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33186:56:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1200,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1190,
														"src": "33257:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1203,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33282:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1202,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "33274:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1201,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "33274:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1204,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33274:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "33257:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1214,
												"nodeType": "IfStatement",
												"src": "33253:98:0",
												"trueBody": {
													"id": 1213,
													"nodeType": "Block",
													"src": "33286:65:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1209,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "33336:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1208,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "33328:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1207,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "33328:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "33328:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1206,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 98,
																	"src": "33308:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1211,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33308:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1212,
															"nodeType": "RevertStatement",
															"src": "33301:38:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1167,
										"nodeType": "StructuredDocumentation",
										"src": "32695:322:0",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 1216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "33032:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "33046:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "33038:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33038:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "33058:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "33050:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33050:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33037:29:0"
									},
									"returnParameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33076:0:0"
									},
									"scope": 1470,
									"src": "33023:335:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1230,
										"nodeType": "Block",
										"src": "33778:45:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1225,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1219,
															"src": "33799:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1226,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1221,
															"src": "33803:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1227,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33812:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1224,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1231,
															1257
														],
														"referencedDeclaration": 1257,
														"src": "33789:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 1228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33789:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1229,
												"nodeType": "ExpressionStatement",
												"src": "33789:26:0"
											}
										]
									},
									"documentation": {
										"id": 1217,
										"nodeType": "StructuredDocumentation",
										"src": "33366:349:0",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "33730:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "33748:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "33740:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33740:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "33760:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "33752:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33752:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33739:29:0"
									},
									"returnParameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33778:0:0"
									},
									"scope": 1470,
									"src": "33721:102:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1256,
										"nodeType": "Block",
										"src": "34134:101:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1242,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "34151:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1243,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1236,
															"src": "34155:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1241,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1216,
														"src": "34145:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34145:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1245,
												"nodeType": "ExpressionStatement",
												"src": "34145:18:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1249,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "34205:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "34197:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1247,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "34197:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34197:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1251,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "34209:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1252,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1236,
															"src": "34213:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1253,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1238,
															"src": "34222:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1246,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1469,
														"src": "34174:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34174:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1255,
												"nodeType": "ExpressionStatement",
												"src": "34174:53:0"
											}
										]
									},
									"documentation": {
										"id": 1232,
										"nodeType": "StructuredDocumentation",
										"src": "33831:213:0",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "34059:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "34077:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "34069:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34069:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "34089:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "34081:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34081:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "34111:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "34098:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1237,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "34098:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34068:48:0"
									},
									"returnParameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34134:0:0"
									},
									"scope": 1470,
									"src": "34050:185:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1273,
										"nodeType": "Block",
										"src": "34325:52:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1267,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1259,
															"src": "34345:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1268,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1261,
															"src": "34349:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1269,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1263,
															"src": "34358:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1270,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34364:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1266,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1274,
															1340
														],
														"referencedDeclaration": 1340,
														"src": "34336:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 1271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34336:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1272,
												"nodeType": "ExpressionStatement",
												"src": "34336:33:0"
											}
										]
									},
									"id": 1274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "34264:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "34281:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "34273:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34273:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "34293:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "34285:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34285:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "34310:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "34302:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34302:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34272:43:0"
									},
									"returnParameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34325:0:0"
									},
									"scope": 1470,
									"src": "34255:122:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1339,
										"nodeType": "Block",
										"src": "34659:584:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1286,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1283,
														"src": "34727:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1292,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1287,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1281,
															"src": "34740:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "34756:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "34748:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1288,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "34748:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1291,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34748:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "34740:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "34727:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1332,
												"nodeType": "IfStatement",
												"src": "34723:471:0",
												"trueBody": {
													"id": 1331,
													"nodeType": "Block",
													"src": "34760:434:0",
													"statements": [
														{
															"assignments": [
																1295
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1295,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "34783:5:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1331,
																	"src": "34775:13:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1294,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "34775:7:0",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1299,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1297,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1279,
																		"src": "34805:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1296,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1406,
																	"src": "34791:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1298,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34791:22:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "34775:38:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1315,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1305,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1300,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1281,
																			"src": "34944:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1303,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "34960:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1302,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "34952:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1301,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "34952:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1304,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "34952:10:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "34944:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1306,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1295,
																			"src": "34966:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1307,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1281,
																			"src": "34975:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "34966:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "34944:35:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "34983:30:0",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1311,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1295,
																				"src": "35001:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1312,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1281,
																				"src": "35008:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1310,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 887,
																			"src": "34984:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1313,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "34984:29:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "34944:69:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1321,
															"nodeType": "IfStatement",
															"src": "34940:144:0",
															"trueBody": {
																"id": 1320,
																"nodeType": "Block",
																"src": "35015:69:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1317,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1281,
																					"src": "35063:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1316,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 115,
																				"src": "35041:21:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1318,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "35041:27:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1319,
																		"nodeType": "RevertStatement",
																		"src": "35034:34:0"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 1322,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1283,
																"src": "35104:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1330,
															"nodeType": "IfStatement",
															"src": "35100:83:0",
															"trueBody": {
																"id": 1329,
																"nodeType": "Block",
																"src": "35115:68:0",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1324,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1295,
																					"src": "35148:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1325,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1277,
																					"src": "35155:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1326,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1279,
																					"src": "35159:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1323,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 495,
																				"src": "35139:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1327,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "35139:28:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1328,
																		"nodeType": "EmitStatement",
																		"src": "35134:33:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1333,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "35206:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1335,
														"indexExpression": {
															"id": 1334,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1279,
															"src": "35222:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "35206:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1336,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1277,
														"src": "35233:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "35206:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1338,
												"nodeType": "ExpressionStatement",
												"src": "35206:29:0"
											}
										]
									},
									"documentation": {
										"id": 1275,
										"nodeType": "StructuredDocumentation",
										"src": "34385:174:0",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "34574:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "34591:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "34583:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34583:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "34603:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "34595:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34595:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "34620:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "34612:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34612:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "34631:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "34626:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1282,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "34626:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34582:59:0"
									},
									"returnParameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34659:0:0"
									},
									"scope": 1470,
									"src": "34565:678:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1376,
										"nodeType": "Block",
										"src": "35555:225:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1350,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1345,
														"src": "35570:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1353,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "35590:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1352,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "35582:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1351,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "35582:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1354,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "35582:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "35570:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1361,
												"nodeType": "IfStatement",
												"src": "35566:93:0",
												"trueBody": {
													"id": 1360,
													"nodeType": "Block",
													"src": "35594:65:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1357,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1345,
																		"src": "35638:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1356,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 120,
																	"src": "35616:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "35616:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1359,
															"nodeType": "RevertStatement",
															"src": "35609:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1362,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 669,
																"src": "35669:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1365,
															"indexExpression": {
																"id": 1363,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1343,
																"src": "35688:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "35669:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1366,
														"indexExpression": {
															"id": 1364,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1345,
															"src": "35695:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "35669:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1367,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1347,
														"src": "35707:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "35669:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1369,
												"nodeType": "ExpressionStatement",
												"src": "35669:46:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1371,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1343,
															"src": "35746:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1372,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1345,
															"src": "35753:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1373,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1347,
															"src": "35763:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1370,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "35731:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35731:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1375,
												"nodeType": "EmitStatement",
												"src": "35726:46:0"
											}
										]
									},
									"documentation": {
										"id": 1341,
										"nodeType": "StructuredDocumentation",
										"src": "35251:205:0",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1377,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "35471:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "35498:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "35490:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35490:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "35513:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "35505:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35505:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "35528:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "35523:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1346,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "35523:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35489:48:0"
									},
									"returnParameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35555:0:0"
									},
									"scope": 1470,
									"src": "35462:318:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1405,
										"nodeType": "Block",
										"src": "36095:175:0",
										"statements": [
											{
												"assignments": [
													1386
												],
												"declarations": [
													{
														"constant": false,
														"id": 1386,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "36114:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1405,
														"src": "36106:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1385,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "36106:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1390,
												"initialValue": {
													"arguments": [
														{
															"id": 1388,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1380,
															"src": "36131:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1387,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 990,
														"src": "36122:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36122:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "36106:33:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1391,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1386,
														"src": "36154:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "36171:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "36163:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "36163:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "36163:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "36154:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1402,
												"nodeType": "IfStatement",
												"src": "36150:90:0",
												"trueBody": {
													"id": 1401,
													"nodeType": "Block",
													"src": "36175:65:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1398,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1380,
																		"src": "36220:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1397,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 84,
																	"src": "36197:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "36197:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1400,
															"nodeType": "RevertStatement",
															"src": "36190:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1403,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1386,
													"src": "36257:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1384,
												"id": 1404,
												"nodeType": "Return",
												"src": "36250:12:0"
											}
										]
									},
									"documentation": {
										"id": 1378,
										"nodeType": "StructuredDocumentation",
										"src": "35788:229:0",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1406,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "36032:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "36054:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "36046:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36046:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36045:17:0"
									},
									"returnParameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1383,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "36086:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36086:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36085:9:0"
									},
									"scope": 1470,
									"src": "36023:247:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1468,
										"nodeType": "Block",
										"src": "36922:706:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1418,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1411,
																"src": "36937:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "36940:4:0",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "36937:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "36945:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "36937:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1421,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "36954:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "36937:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1467,
												"nodeType": "IfStatement",
												"src": "36933:688:0",
												"trueBody": {
													"id": 1466,
													"nodeType": "Block",
													"src": "36957:664:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1447,
																		"nodeType": "Block",
																		"src": "37072:166:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1440,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1436,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1434,
																						"src": "37095:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1437,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 440,
																								"src": "37105:15:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$440_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1438,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "37121:16:0",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 439,
																							"src": "37105:32:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1439,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "37138:8:0",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "37105:41:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "37095:51:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1446,
																				"nodeType": "IfStatement",
																				"src": "37091:132:0",
																				"trueBody": {
																					"id": 1445,
																					"nodeType": "Block",
																					"src": "37148:75:0",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1442,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1411,
																										"src": "37200:2:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1441,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 103,
																									"src": "37178:21:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1443,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "37178:25:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1444,
																							"nodeType": "RevertStatement",
																							"src": "37171:32:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1448,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1435,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1434,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "37064:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1448,
																				"src": "37057:13:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1433,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "37057:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "37056:15:0"
																	},
																	"src": "37048:190:0"
																},
																{
																	"block": {
																		"id": 1463,
																		"nodeType": "Block",
																		"src": "37267:343:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1455,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1452,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1450,
																							"src": "37290:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1453,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "37297:6:0",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "37290:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1454,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "37307:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "37290:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1461,
																					"nodeType": "Block",
																					"src": "37391:204:0",
																					"statements": []
																				},
																				"id": 1462,
																				"nodeType": "IfStatement",
																				"src": "37286:309:0",
																				"trueBody": {
																					"id": 1460,
																					"nodeType": "Block",
																					"src": "37310:75:0",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1457,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1411,
																										"src": "37362:2:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1456,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 103,
																									"src": "37340:21:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1458,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "37340:25:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1459,
																							"nodeType": "RevertStatement",
																							"src": "37333:32:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1464,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1451,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1450,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "37259:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1464,
																				"src": "37246:19:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1449,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "37246:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "37245:21:0"
																	},
																	"src": "37239:371:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1427,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 277,
																			"src": "37013:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1428,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "37013:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1429,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1409,
																		"src": "37027:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1430,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1413,
																		"src": "37033:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1431,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1415,
																		"src": "37042:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1424,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1411,
																				"src": "36992:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1423,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 440,
																			"src": "36976:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$440_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "36976:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$440",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1426,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "36996:16:0",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 439,
																	"src": "36976:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "36976:71:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1465,
															"nodeType": "TryStatement",
															"src": "36972:638:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1407,
										"nodeType": "StructuredDocumentation",
										"src": "36278:536:0",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1469,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "36829:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "36860:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "36852:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36852:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "36874:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "36866:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36866:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "36886:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "36878:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36878:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "36908:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "36895:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1414,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "36895:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36851:62:0"
									},
									"returnParameters": {
										"id": 1417,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36922:0:0"
									},
									"scope": 1470,
									"src": "36820:808:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1736,
							"src": "24325:13306:0",
							"usedErrors": [
								79,
								84,
								93,
								98,
								103,
								110,
								115,
								120
							],
							"usedEvents": [
								486,
								495,
								504
							]
						},
						{
							"id": 1471,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "37812:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1473,
										"name": "Context",
										"nameLocations": [
											"37976:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 278,
										"src": "37976:7:0"
									},
									"id": 1474,
									"nodeType": "InheritanceSpecifier",
									"src": "37976:7:0"
								},
								{
									"baseName": {
										"id": 1475,
										"name": "ERC721",
										"nameLocations": [
											"37985:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1470,
										"src": "37985:6:0"
									},
									"id": 1476,
									"nodeType": "InheritanceSpecifier",
									"src": "37985:6:0"
								}
							],
							"canonicalName": "ERC721Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1472,
								"nodeType": "StructuredDocumentation",
								"src": "37843:95:0",
								"text": " @title ERC721 Burnable Token\n @dev ERC721 Token that can be burned (destroyed)."
							},
							"fullyImplemented": true,
							"id": 1494,
							"linearizedBaseContracts": [
								1494,
								1470,
								121,
								632,
								587,
								473,
								451,
								278
							],
							"name": "ERC721Burnable",
							"nameLocation": "37958:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1492,
										"nodeType": "Block",
										"src": "38221:272:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "38459:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1484,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "38451:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1483,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "38451:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1486,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "38451:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1487,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1479,
															"src": "38463:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1488,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 277,
																"src": "38472:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "38472:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1482,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1166,
														"src": "38443:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38443:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1491,
												"nodeType": "ExpressionStatement",
												"src": "38443:42:0"
											}
										]
									},
									"documentation": {
										"id": 1477,
										"nodeType": "StructuredDocumentation",
										"src": "37999:168:0",
										"text": " @dev Burns `tokenId`. See {ERC721-_burn}.\n Requirements:\n - The caller must own `tokenId` or be an approved operator."
									},
									"functionSelector": "42966c68",
									"id": 1493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "38182:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "38195:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "38187:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38187:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38186:17:0"
									},
									"returnParameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38221:0:0"
									},
									"scope": 1494,
									"src": "38173:320:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								}
							],
							"scope": 1736,
							"src": "37940:556:0",
							"usedErrors": [
								79,
								84,
								93,
								98,
								103,
								110,
								115,
								120
							],
							"usedEvents": [
								486,
								495,
								504
							]
						},
						{
							"id": 1495,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "38681:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1497,
										"name": "IERC4906",
										"nameLocations": [
											"38827:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 607,
										"src": "38827:8:0"
									},
									"id": 1498,
									"nodeType": "InheritanceSpecifier",
									"src": "38827:8:0"
								},
								{
									"baseName": {
										"id": 1499,
										"name": "ERC721",
										"nameLocations": [
											"38837:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1470,
										"src": "38837:6:0"
									},
									"id": 1500,
									"nodeType": "InheritanceSpecifier",
									"src": "38837:6:0"
								}
							],
							"canonicalName": "ERC721URIStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1496,
								"nodeType": "StructuredDocumentation",
								"src": "38716:71:0",
								"text": " @dev ERC721 token with storage based token URI management."
							},
							"fullyImplemented": true,
							"id": 1611,
							"linearizedBaseContracts": [
								1611,
								1470,
								121,
								632,
								607,
								587,
								473,
								451,
								278
							],
							"name": "ERC721URIStorage",
							"nameLocation": "38807:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1503,
									"libraryName": {
										"id": 1501,
										"name": "Strings",
										"nameLocations": [
											"38857:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 266,
										"src": "38857:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "38851:26:0",
									"typeName": {
										"id": 1502,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "38869:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 1509,
									"mutability": "constant",
									"name": "ERC4906_INTERFACE_ID",
									"nameLocation": "39093:20:0",
									"nodeType": "VariableDeclaration",
									"scope": 1611,
									"src": "39069:65:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 1504,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "39069:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "30783439303634393036",
												"id": 1507,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "39123:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												},
												"value": "0x49064906"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												}
											],
											"id": 1506,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "39116:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes4_$",
												"typeString": "type(bytes4)"
											},
											"typeName": {
												"id": 1505,
												"name": "bytes4",
												"nodeType": "ElementaryTypeName",
												"src": "39116:6:0",
												"typeDescriptions": {}
											}
										},
										"id": 1508,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "39116:18:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1513,
									"mutability": "mutable",
									"name": "_tokenURIs",
									"nameLocation": "39226:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 1611,
									"src": "39183:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 1512,
										"keyName": "tokenId",
										"keyNameLocation": "39199:7:0",
										"keyType": {
											"id": 1510,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "39191:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "39183:34:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1511,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "39210:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										450,
										717
									],
									"body": {
										"id": 1533,
										"nodeType": "Block",
										"src": "39416:101:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1526,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1524,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1516,
															"src": "39434:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1525,
															"name": "ERC4906_INTERFACE_ID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1509,
															"src": "39449:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "39434:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1529,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1516,
																"src": "39497:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1527,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "39473:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1611_$",
																	"typeString": "type(contract super ERC721URIStorage)"
																}
															},
															"id": 1528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "39479:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 717,
															"src": "39473:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1530,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "39473:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "39434:75:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1523,
												"id": 1532,
												"nodeType": "Return",
												"src": "39427:82:0"
											}
										]
									},
									"documentation": {
										"id": 1514,
										"nodeType": "StructuredDocumentation",
										"src": "39245:57:0",
										"text": " @dev See {IERC165-supportsInterface}"
									},
									"functionSelector": "01ffc9a7",
									"id": 1534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "39317:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1520,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1518,
												"name": "ERC721",
												"nameLocations": [
													"39384:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1470,
												"src": "39384:6:0"
											},
											{
												"id": 1519,
												"name": "IERC165",
												"nameLocations": [
													"39392:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 451,
												"src": "39392:7:0"
											}
										],
										"src": "39375:25:0"
									},
									"parameters": {
										"id": 1517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "39342:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "39335:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1515,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "39335:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39334:20:0"
									},
									"returnParameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "39410:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1521,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "39410:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39409:6:0"
									},
									"scope": 1611,
									"src": "39308:209:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										812
									],
									"body": {
										"id": 1590,
										"nodeType": "Block",
										"src": "39676:521:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1544,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1537,
															"src": "39701:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1543,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1406,
														"src": "39687:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39687:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1546,
												"nodeType": "ExpressionStatement",
												"src": "39687:22:0"
											},
											{
												"assignments": [
													1548
												],
												"declarations": [
													{
														"constant": false,
														"id": 1548,
														"mutability": "mutable",
														"name": "_tokenURI",
														"nameLocation": "39736:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 1590,
														"src": "39722:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1547,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "39722:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1552,
												"initialValue": {
													"baseExpression": {
														"id": 1549,
														"name": "_tokenURIs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1513,
														"src": "39748:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
															"typeString": "mapping(uint256 => string storage ref)"
														}
													},
													"id": 1551,
													"indexExpression": {
														"id": 1550,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1537,
														"src": "39759:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "39748:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "39722:45:0"
											},
											{
												"assignments": [
													1554
												],
												"declarations": [
													{
														"constant": false,
														"id": 1554,
														"mutability": "mutable",
														"name": "base",
														"nameLocation": "39792:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1590,
														"src": "39778:18:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1553,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "39778:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1557,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1555,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 821,
														"src": "39799:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39799:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "39778:31:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1560,
																	"name": "base",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1554,
																	"src": "39891:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1559,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "39885:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1558,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "39885:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "39885:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1562,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "39897:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "39885:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1563,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "39907:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "39885:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1568,
												"nodeType": "IfStatement",
												"src": "39881:72:0",
												"trueBody": {
													"id": 1567,
													"nodeType": "Block",
													"src": "39910:43:0",
													"statements": [
														{
															"expression": {
																"id": 1565,
																"name": "_tokenURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1548,
																"src": "39932:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1542,
															"id": 1566,
															"nodeType": "Return",
															"src": "39925:16:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1571,
																	"name": "_tokenURI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1548,
																	"src": "40060:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1570,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "40054:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1569,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "40054:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "40054:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1573,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "40071:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "40054:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1574,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "40080:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "40054:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1584,
												"nodeType": "IfStatement",
												"src": "40050:97:0",
												"trueBody": {
													"id": 1583,
													"nodeType": "Block",
													"src": "40083:64:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1579,
																		"name": "base",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1554,
																		"src": "40119:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"id": 1580,
																		"name": "_tokenURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1548,
																		"src": "40125:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1577,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "40105:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																			"typeString": "type(string storage pointer)"
																		},
																		"typeName": {
																			"id": 1576,
																			"name": "string",
																			"nodeType": "ElementaryTypeName",
																			"src": "40105:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "40112:6:0",
																	"memberName": "concat",
																	"nodeType": "MemberAccess",
																	"src": "40105:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																		"typeString": "function () pure returns (string memory)"
																	}
																},
																"id": 1581,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "40105:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1542,
															"id": 1582,
															"nodeType": "Return",
															"src": "40098:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1587,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1537,
															"src": "40181:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1585,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "40166:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1611_$",
																"typeString": "type(contract super ERC721URIStorage)"
															}
														},
														"id": 1586,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "40172:8:0",
														"memberName": "tokenURI",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 812,
														"src": "40166:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) view returns (string memory)"
														}
													},
													"id": 1588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40166:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1542,
												"id": 1589,
												"nodeType": "Return",
												"src": "40159:30:0"
											}
										]
									},
									"documentation": {
										"id": 1535,
										"nodeType": "StructuredDocumentation",
										"src": "39525:57:0",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 1591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "39597:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1539,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "39643:8:0"
									},
									"parameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "39614:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "39606:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39606:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39605:17:0"
									},
									"returnParameters": {
										"id": 1542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "39661:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1540,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "39661:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39660:15:0"
									},
									"scope": 1611,
									"src": "39588:609:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1609,
										"nodeType": "Block",
										"src": "40404:89:0",
										"statements": [
											{
												"expression": {
													"id": 1603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1599,
															"name": "_tokenURIs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1513,
															"src": "40415:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 1601,
														"indexExpression": {
															"id": 1600,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1594,
															"src": "40426:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "40415:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1602,
														"name": "_tokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1596,
														"src": "40437:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "40415:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1604,
												"nodeType": "ExpressionStatement",
												"src": "40415:31:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1606,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1594,
															"src": "40477:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1605,
														"name": "MetadataUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "40462:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40462:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1608,
												"nodeType": "EmitStatement",
												"src": "40457:28:0"
											}
										]
									},
									"documentation": {
										"id": 1592,
										"nodeType": "StructuredDocumentation",
										"src": "40205:112:0",
										"text": " @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {MetadataUpdate}."
									},
									"id": 1610,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setTokenURI",
									"nameLocation": "40332:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "40353:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "40345:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40345:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "_tokenURI",
												"nameLocation": "40376:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "40362:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1595,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "40362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40344:42:0"
									},
									"returnParameters": {
										"id": 1598,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40404:0:0"
									},
									"scope": 1611,
									"src": "40323:170:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1736,
							"src": "38789:1707:0",
							"usedErrors": [
								79,
								84,
								93,
								98,
								103,
								110,
								115,
								120
							],
							"usedEvents": [
								486,
								495,
								504,
								599,
								606
							]
						},
						{
							"id": 1612,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "40529:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1613,
										"name": "ERC721",
										"nameLocations": [
											"40577:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1470,
										"src": "40577:6:0"
									},
									"id": 1614,
									"nodeType": "InheritanceSpecifier",
									"src": "40577:6:0"
								},
								{
									"baseName": {
										"id": 1615,
										"name": "ERC721URIStorage",
										"nameLocations": [
											"40585:16:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1611,
										"src": "40585:16:0"
									},
									"id": 1616,
									"nodeType": "InheritanceSpecifier",
									"src": "40585:16:0"
								},
								{
									"baseName": {
										"id": 1617,
										"name": "ERC721Burnable",
										"nameLocations": [
											"40603:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1494,
										"src": "40603:14:0"
									},
									"id": 1618,
									"nodeType": "InheritanceSpecifier",
									"src": "40603:14:0"
								},
								{
									"arguments": [
										{
											"expression": {
												"id": 1620,
												"name": "msg",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967281,
												"src": "40627:3:0",
												"typeDescriptions": {
													"typeIdentifier": "t_magic_message",
													"typeString": "msg"
												}
											},
											"id": 1621,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberLocation": "40631:6:0",
											"memberName": "sender",
											"nodeType": "MemberAccess",
											"src": "40627:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									],
									"baseName": {
										"id": 1619,
										"name": "Ownable",
										"nameLocations": [
											"40619:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 423,
										"src": "40619:7:0"
									},
									"id": 1622,
									"nodeType": "InheritanceSpecifier",
									"src": "40619:19:0"
								}
							],
							"canonicalName": "myerc721",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1735,
							"linearizedBaseContracts": [
								1735,
								423,
								1494,
								1611,
								1470,
								121,
								632,
								607,
								587,
								473,
								451,
								278
							],
							"name": "myerc721",
							"nameLocation": "40565:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1626,
									"libraryName": {
										"id": 1623,
										"name": "Counters",
										"nameLocations": [
											"40652:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 32,
										"src": "40652:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "40646:36:0",
									"typeName": {
										"id": 1625,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1624,
											"name": "Counters.Counter",
											"nameLocations": [
												"40665:8:0",
												"40674:7:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 5,
											"src": "40665:16:0"
										},
										"referencedDeclaration": 5,
										"src": "40665:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"global": false,
									"id": 1629,
									"libraryName": {
										"id": 1627,
										"name": "Strings",
										"nameLocations": [
											"40694:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 266,
										"src": "40694:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "40688:26:0",
									"typeName": {
										"id": 1628,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "40706:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 1632,
									"mutability": "mutable",
									"name": "_tokenIdCounter",
									"nameLocation": "40745:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1735,
									"src": "40720:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$5_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 1631,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1630,
											"name": "Counters.Counter",
											"nameLocations": [
												"40720:8:0",
												"40729:7:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 5,
											"src": "40720:16:0"
										},
										"referencedDeclaration": 5,
										"src": "40720:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1634,
									"mutability": "mutable",
									"name": "reentrancyGuard",
									"nameLocation": "40780:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1735,
									"src": "40767:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1633,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "40767:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1651,
										"nodeType": "Block",
										"src": "40826:150:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1638,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "40845:16:0",
															"subExpression": {
																"id": 1637,
																"name": "reentrancyGuard",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1634,
																"src": "40846:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e742063616c6c206465746563746564",
															"id": 1639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "40863:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48aa738ac532b148333561b892fe987b033109920314b49ab0b9845e80f27229",
																"typeString": "literal_string \"Reentrant call detected\""
															},
															"value": "Reentrant call detected"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48aa738ac532b148333561b892fe987b033109920314b49ab0b9845e80f27229",
																"typeString": "literal_string \"Reentrant call detected\""
															}
														],
														"id": 1636,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "40837:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40837:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1641,
												"nodeType": "ExpressionStatement",
												"src": "40837:52:0"
											},
											{
												"expression": {
													"id": 1644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1642,
														"name": "reentrancyGuard",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1634,
														"src": "40900:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1643,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "40918:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "40900:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1645,
												"nodeType": "ExpressionStatement",
												"src": "40900:22:0"
											},
											{
												"id": 1646,
												"nodeType": "PlaceholderStatement",
												"src": "40933:1:0"
											},
											{
												"expression": {
													"id": 1649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1647,
														"name": "reentrancyGuard",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1634,
														"src": "40945:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1648,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "40963:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "40945:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1650,
												"nodeType": "ExpressionStatement",
												"src": "40945:23:0"
											}
										]
									},
									"id": 1652,
									"name": "nonReentrant",
									"nameLocation": "40811:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1635,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40823:2:0"
									},
									"src": "40802:174:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1659,
										"nodeType": "Block",
										"src": "41018:2:0",
										"statements": []
									},
									"id": 1660,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "65373231",
													"id": 1655,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "41003:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_ad398a47f5c63e1fa8917a2676e8ccef23d3c3438b3240aed4e92fb1d01da2e2",
														"typeString": "literal_string \"e721\""
													},
													"value": "e721"
												},
												{
													"hexValue": "373231",
													"id": 1656,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "41011:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_635814804cee0f8ed626c2c8ee800ea42af8b7219219e6f8cf460b66abbc5c69",
														"typeString": "literal_string \"721\""
													},
													"value": "721"
												}
											],
											"id": 1657,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1654,
												"name": "ERC721",
												"nameLocations": [
													"40996:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1470,
												"src": "40996:6:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "40996:21:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1653,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40993:2:0"
									},
									"returnParameters": {
										"id": 1658,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "41018:0:0"
									},
									"scope": 1735,
									"src": "40982:38:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1701,
										"nodeType": "Block",
										"src": "41096:242:0",
										"statements": [
											{
												"assignments": [
													1670
												],
												"declarations": [
													{
														"constant": false,
														"id": 1670,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "41115:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1701,
														"src": "41107:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1669,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "41107:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1674,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1671,
															"name": "_tokenIdCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1632,
															"src": "41125:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$5_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 1672,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "41141:7:0",
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 17,
														"src": "41125:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$5_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$5_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 1673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41125:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "41107:43:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1675,
															"name": "_tokenIdCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1632,
															"src": "41161:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$5_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 1677,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "41177:9:0",
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 31,
														"src": "41161:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$5_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$5_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 1678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41161:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1679,
												"nodeType": "ExpressionStatement",
												"src": "41161:27:0"
											},
											{
												"assignments": [
													1681
												],
												"declarations": [
													{
														"constant": false,
														"id": 1681,
														"mutability": "mutable",
														"name": "uri",
														"nameLocation": "41213:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 1701,
														"src": "41199:17:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1680,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "41199:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1690,
												"initialValue": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 1685,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1670,
																	"src": "41233:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1686,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "41241:8:0",
																"memberName": "toString",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 265,
																"src": "41233:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "41233:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"hexValue": "2e6a736f6e",
															"id": 1688,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "41252:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
																"typeString": "literal_string \".json\""
															},
															"value": ".json"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
																"typeString": "literal_string \".json\""
															}
														],
														"expression": {
															"id": 1683,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "41219:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1682,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "41219:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 1684,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "41226:6:0",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "41219:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41219:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "41199:61:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1692,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1670,
															"src": "41284:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1693,
															"name": "uri",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1681,
															"src": "41293:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1691,
														"name": "_setTokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1610,
														"src": "41271:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 1694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41271:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1695,
												"nodeType": "ExpressionStatement",
												"src": "41271:26:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1697,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1662,
															"src": "41318:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1698,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1670,
															"src": "41322:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1696,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1231,
															1257
														],
														"referencedDeclaration": 1231,
														"src": "41308:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41308:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1700,
												"nodeType": "ExpressionStatement",
												"src": "41308:22:0"
											}
										]
									},
									"functionSelector": "40d097c3",
									"id": 1702,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1665,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1664,
												"name": "nonReentrant",
												"nameLocations": [
													"41073:12:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1652,
												"src": "41073:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "41073:12:0"
										},
										{
											"id": 1667,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1666,
												"name": "onlyOwner",
												"nameLocations": [
													"41086:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 334,
												"src": "41086:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "41086:9:0"
										}
									],
									"name": "safeMint",
									"nameLocation": "41043:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1662,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "41060:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1702,
												"src": "41052:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41052:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41051:12:0"
									},
									"returnParameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "41096:0:0"
									},
									"scope": 1735,
									"src": "41034:304:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										812,
										1591
									],
									"body": {
										"id": 1717,
										"nodeType": "Block",
										"src": "41565:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1714,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1704,
															"src": "41598:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1712,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "41583:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_myerc721_$1735_$",
																"typeString": "type(contract super myerc721)"
															}
														},
														"id": 1713,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "41589:8:0",
														"memberName": "tokenURI",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1591,
														"src": "41583:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) view returns (string memory)"
														}
													},
													"id": 1715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41583:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1711,
												"id": 1716,
												"nodeType": "Return",
												"src": "41576:30:0"
											}
										]
									},
									"functionSelector": "c87b56dd",
									"id": 1718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "41427:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1708,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1706,
												"name": "ERC721",
												"nameLocations": [
													"41501:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1470,
												"src": "41501:6:0"
											},
											{
												"id": 1707,
												"name": "ERC721URIStorage",
												"nameLocations": [
													"41509:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1611,
												"src": "41509:16:0"
											}
										],
										"src": "41492:34:0"
									},
									"parameters": {
										"id": 1705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "41444:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "41436:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41436:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41435:17:0"
									},
									"returnParameters": {
										"id": 1711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1710,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "41545:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1709,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "41545:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41544:15:0"
									},
									"scope": 1735,
									"src": "41418:196:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										717,
										1534
									],
									"body": {
										"id": 1733,
										"nodeType": "Block",
										"src": "41772:62:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1730,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1720,
															"src": "41814:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"expression": {
															"id": 1728,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "41790:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_myerc721_$1735_$",
																"typeString": "type(contract super myerc721)"
															}
														},
														"id": 1729,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "41796:17:0",
														"memberName": "supportsInterface",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1534,
														"src": "41790:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
															"typeString": "function (bytes4) view returns (bool)"
														}
													},
													"id": 1731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41790:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1727,
												"id": 1732,
												"nodeType": "Return",
												"src": "41783:43:0"
											}
										]
									},
									"functionSelector": "01ffc9a7",
									"id": 1734,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "41631:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1724,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1722,
												"name": "ERC721",
												"nameLocations": [
													"41717:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1470,
												"src": "41717:6:0"
											},
											{
												"id": 1723,
												"name": "ERC721URIStorage",
												"nameLocations": [
													"41725:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1611,
												"src": "41725:16:0"
											}
										],
										"src": "41708:34:0"
									},
									"parameters": {
										"id": 1721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "41656:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1734,
												"src": "41649:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1719,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "41649:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41648:20:0"
									},
									"returnParameters": {
										"id": 1727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1734,
												"src": "41761:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "41761:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41760:6:0"
									},
									"scope": 1735,
									"src": "41622:212:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1736,
							"src": "40556:1281:0",
							"usedErrors": [
								79,
								84,
								93,
								98,
								103,
								110,
								115,
								120,
								289,
								294
							],
							"usedEvents": [
								300,
								486,
								495,
								504,
								599,
								606
							]
						}
					],
					"src": "147:41692:0"
				},
				"id": 0
			}
		}
	}
}